[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"    /** The deadline of the task. **/","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"     * The class constructor, which utilizes the superclass","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"     * constructor.","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"     * @param by the deadline of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"nealetham"},"content":"        if (by.trim().matches(\"(\\\\d{4})-(\\\\d{2})-(\\\\d{2}) (\\\\d{2}):(\\\\d{2})\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"            String preDate \u003d by.split(\" \", 2)[0];","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"            String preTime \u003d by.split(\" \", 2)[1];","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"nealetham"},"content":"            String[] dates \u003d preDate.split(\"-\", 3);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"nealetham"},"content":"            String[] time \u003d preTime.split(\":\", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"            LocalDateTime deadline \u003d LocalDateTime.of(Integer.parseInt(dates[0]), Integer.parseInt(dates[1]),","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"nealetham"},"content":"                    Integer.parseInt(dates[2]), Integer.parseInt(time[0]), Integer.parseInt(time[1]));","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"            this.by \u003d deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"Invalid Date Format (YYYY-MM-DD HH:MM required).\");","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"     * Formats the deadline to be displayed as MONTH DATE YEAR i.e. MARCH 19 2022.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"nealetham"},"content":"     * @return String of the deadline to be displayed.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"nealetham"},"content":"    public String formatTime() {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"nealetham"},"content":"        if (this.by.getMinute() \u003c 10) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"nealetham"},"content":"            String minute \u003d String.format(\"%02d\", this.by.getMinute());","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"nealetham"},"content":"            String s \u003d String.format(\"%s %s %s %s:%s\", this.by.getMonth(), this.by.getDayOfMonth(),","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"nealetham"},"content":"                    this.by.getYear(), this.by.getHour(), minute);","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"nealetham"},"content":"            return s;","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"nealetham"},"content":"        String s \u003d String.format(\"%s %s %s %s:%s\", this.by.getMonth(), this.by.getDayOfMonth(),","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"nealetham"},"content":"                this.by.getYear(), this.by.getHour(), this.by.getMinute());","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"nealetham"},"content":"        return s;","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"nealetham"},"content":"     * Formats and outputs the string representation of a Deadline viable for writing","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"nealetham"},"content":"     * into text file.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"nealetham"},"content":"     * @return formatted txt file string representation of a Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"nealetham"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"nealetham"},"content":"    public String formatFileText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"nealetham"},"content":"        String s \u003d String.format(\"D | %s | %s | %s\\n\", super.getStatusIcon(), this.description, this.by);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"nealetham"},"content":"        return s;","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"nealetham"},"content":"     * Overrides the toString method of the superclass to add","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"nealetham"},"content":"     * the additional [D] tag.","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"nealetham"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"nealetham"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"nealetham"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"nealetham"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + formatTime() + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"nealetham"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"nealetham":66}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"     * Prints the string representation of all tasks that has been","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"     * added to the arraylist via the Task toString method.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"     * @param inputList","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"nealetham"},"content":"    public static void printList(ArrayList\u003cTask\u003e inputList) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"        Task[] inputArray \u003d inputList.toArray(new Task[inputList.size()]);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"nealetham"},"content":"        for (int i \u003d 1; i \u003c\u003d inputArray.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"nealetham"},"content":"            String item \u003d String.format(\"%s. %s\", i, inputArray[i-1].toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"nealetham"},"content":"            System.out.println(item);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"nealetham"},"content":"     * Marks the task as completed via the index of the task on the","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"     * arraylist. The method throws a DukeException if the","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"     * task is found to be non-existent.","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"     * @param parts","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"     * @param inputList","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"     * @throws DukeException thrown if there is no such task.","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"nealetham"},"content":"    public static void markTask(String[] parts, ArrayList\u003cTask\u003e inputList) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"nealetham"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"Please specify the index of the task (i.e. mark 2).\");","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"nealetham"},"content":"        } else if (Integer.parseInt(parts[1]) \u003d\u003d 0 || Integer.parseInt(parts[1]) \u003e inputList.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"There is no such task!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"nealetham"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"nealetham"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"nealetham"},"content":"            Task task \u003d inputList.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"nealetham"},"content":"            System.out.println(task.markAsDone());","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"nealetham"},"content":"            writeToFile(\"./data\", inputList);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"nealetham"},"content":"     * Removes the task from the arraylist. The method throws a DukeException if the","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"nealetham"},"content":"     * task is found to be non-existent.","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"nealetham"},"content":"     * @param parts","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"nealetham"},"content":"     * @param inputList","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"nealetham"},"content":"     * @throws DukeException thrown if there is no such task.","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"nealetham"},"content":"     public static void deleteTask(String[] parts, ArrayList\u003cTask\u003e inputList) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"nealetham"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"Please specify the index of the task (i.e. delete 2).\");","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"nealetham"},"content":"        } else if (Integer.parseInt(parts[1]) \u003d\u003d 0 || Integer.parseInt(parts[1]) \u003e inputList.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"There is no such task!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"nealetham"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"nealetham"},"content":"            int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"nealetham"},"content":"            Task task \u003d inputList.get(index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"nealetham"},"content":"            inputList.remove(index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"nealetham"},"content":"            String output \u003d String.format(\"Noted, I\u0027ve removed this task:\\n%s\\nNow you have %s tasks in the list.\",","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"nealetham"},"content":"                    task.toString(),","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"nealetham"},"content":"                    inputList.size());","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"nealetham"},"content":"            System.out.println(output);","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"nealetham"},"content":"            writeToFile(\"./data\", inputList);","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"nealetham"},"content":"     }","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"nealetham"},"content":"     * Adds the task to arraylist, and formats a String representation","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"nealetham"},"content":"     * that is to be printed along with the task representation and size of list.","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"nealetham"},"content":"     * @param task","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"nealetham"},"content":"     * @param inputList","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"nealetham"},"content":"    public static void taskAdd(Task task, ArrayList\u003cTask\u003e inputList) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"nealetham"},"content":"        inputList.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"nealetham"},"content":"        String output \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\",","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"nealetham"},"content":"                task.toString(),","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"nealetham"},"content":"                inputList.size());","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"nealetham"},"content":"        System.out.println(output);","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"nealetham"},"content":"        writeToFile(\"./data\", inputList);","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"nealetham"},"content":"     * Abstracts the creation of a todo object, with exception handling.","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"nealetham"},"content":"     * @param input","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"nealetham"},"content":"     * @return Todo object","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"nealetham"},"content":"     * @throws DukeException thrown if there is no description.","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"nealetham"},"content":"    public static Todo createTodo(String input) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"nealetham"},"content":"        String[] taskType \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"nealetham"},"content":"        if (taskType.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"nealetham"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"nealetham"},"content":"            Todo todo \u003d new Todo(taskType[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"nealetham"},"content":"            return todo;","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"nealetham"},"content":"     * Abstracts the creation of a Deadline object, with exception handling.","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"nealetham"},"content":"     * @param input","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"nealetham"},"content":"     * @return Deadline object","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"nealetham"},"content":"     * @throws DukeException thrown if there is no description or /by field.","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"nealetham"},"content":"    public static Deadline createDeadline(String input) throws DukeException{","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"nealetham"},"content":"        String[] taskType \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"nealetham"},"content":"        if (taskType.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"nealetham"},"content":"        } else if (taskType[1].split(\"/by \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"The /by field cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"nealetham"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"nealetham"},"content":"            String[] taskBy \u003d taskType[1].split(\"/by \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"nealetham"},"content":"            Deadline deadline \u003d new Deadline(taskBy[0], taskBy[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"nealetham"},"content":"            return deadline;","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"nealetham"},"content":"     * Abstracts the creation of a Event object, with exception handling.","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"nealetham"},"content":"     * @param input","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"nealetham"},"content":"     * @return Event object","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"nealetham"},"content":"     * @throws DukeException thrown if there is no description or /at field","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"nealetham"},"content":"    public static Event createEvent(String input) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"nealetham"},"content":"        String[] taskType \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"nealetham"},"content":"        if (taskType.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"nealetham"},"content":"        } else if (taskType[1].split(\"/at \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"nealetham"},"content":"            throw new DukeException(\"The /at field cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"nealetham"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"nealetham"},"content":"            String[] taskBy \u003d taskType[1].split(\"/at \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"nealetham"},"content":"            Event event \u003d new Event(taskBy[0], taskBy[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"nealetham"},"content":"            return event;","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"nealetham"},"content":"     * Writes all events on the ArrayList to a txt File. The directory and file","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"nealetham"},"content":"     * is created if it does not exist.","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"nealetham"},"content":"     * @param filePath","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"nealetham"},"content":"     * @param inputList","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"nealetham"},"content":"    public static void writeToFile(String filePath, ArrayList\u003cTask\u003e inputList)  {","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"nealetham"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"nealetham"},"content":"            File dir \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"nealetham"},"content":"            if (!dir.exists()) dir.mkdirs();","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"nealetham"},"content":"            File textFile \u003d new File(filePath + \"/duke.txt\");","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"nealetham"},"content":"            textFile.createNewFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"nealetham"},"content":"            FileWriter fw \u003d new FileWriter(textFile);","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"nealetham"},"content":"            for (int i \u003d 0; i \u003c inputList.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"nealetham"},"content":"                String fileTextInput \u003d inputList.get(i).formatFileText();","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"nealetham"},"content":"                fw.write(fileTextInput);","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"nealetham"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"nealetham"},"content":"            fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"nealetham"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"nealetham"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"nealetham"},"content":"     * Reads all tasks in file and adds them to an ArrayList. Throws a","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"nealetham"},"content":"     * FileNotFoundException if no such file exists.","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"nealetham"},"content":"     * @param filePath","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"nealetham"},"content":"     * @return ArrayList with all saved tasks added","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"nealetham"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"nealetham"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"nealetham"},"content":"    public static ArrayList\u003cTask\u003e readFile(String filePath) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"nealetham"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"nealetham"},"content":"        ArrayList\u003cTask\u003e arrayInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"nealetham"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"nealetham"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"nealetham"},"content":"            String[] task \u003d s.nextLine().split(\" \\\\| \",-1);","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"nealetham"},"content":"            switch (task[0]) {","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"nealetham"},"content":"                case \"T\": // create event task","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"nealetham"},"content":"                    String taskString \u003d String.format(\"todo %s\", task[2]);","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"nealetham"},"content":"                    Todo newTodo \u003d createTodo(taskString);","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"nealetham"},"content":"                    if (task[1] \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"nealetham"},"content":"                        newTodo.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"nealetham"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"nealetham"},"content":"                    arrayInput.add(newTodo);","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"nealetham"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"nealetham"},"content":"                case \"D\": // create deadline task","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"nealetham"},"content":"                    String deadlineString \u003d String.format(\"deadline %s/by %s\", task[2], task[3]);","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"nealetham"},"content":"                    Deadline newDeadline \u003d createDeadline(deadlineString);","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"nealetham"},"content":"                    if (task[1] \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"nealetham"},"content":"                        newDeadline.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"nealetham"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"nealetham"},"content":"                    arrayInput.add(newDeadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"nealetham"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"nealetham"},"content":"                case \"E\": // create event task","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"nealetham"},"content":"                    String eventString \u003d String.format(\"event %s/at %s\", task[2], task[3]);","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"nealetham"},"content":"                    Event newEvent \u003d createEvent(eventString);","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"nealetham"},"content":"                    if (task[1] \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"nealetham"},"content":"                        newEvent.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"nealetham"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"nealetham"},"content":"                    arrayInput.add(newEvent);","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"nealetham"},"content":"                    break;","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"nealetham"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"nealetham"},"content":"        return arrayInput;","lastModifiedDate":"2022-08-21"},{"lineNumber":204,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":205,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"nealetham"},"content":"        ArrayList\u003cTask\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":209,"author":{"gitId":"nealetham"},"content":"        try { // file found","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"nealetham"},"content":"            inputList \u003d readFile(\"./data/duke.txt\");","lastModifiedDate":"2022-08-21"},{"lineNumber":211,"author":{"gitId":"nealetham"},"content":"        } catch (FileNotFoundException e){ // no such file","lastModifiedDate":"2022-08-21"},{"lineNumber":212,"author":{"gitId":"nealetham"},"content":"            inputList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"nealetham"},"content":"        } catch (DukeException e) { // will not reach here","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"nealetham"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":215,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":217,"author":{"gitId":"nealetham"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":218,"author":{"gitId":"nealetham"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-17"},{"lineNumber":219,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":220,"author":{"gitId":"nealetham"},"content":"        String input \u003d myObj.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":221,"author":{"gitId":"nealetham"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":222,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":223,"author":{"gitId":"nealetham"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":224,"author":{"gitId":"nealetham"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":225,"author":{"gitId":"nealetham"},"content":"                printList(inputList);","lastModifiedDate":"2022-08-17"},{"lineNumber":226,"author":{"gitId":"nealetham"},"content":"            } else if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":227,"author":{"gitId":"nealetham"},"content":"                try {","lastModifiedDate":"2022-08-17"},{"lineNumber":228,"author":{"gitId":"nealetham"},"content":"                    markTask(parts, inputList);","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"nealetham"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":230,"author":{"gitId":"nealetham"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"nealetham"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":232,"author":{"gitId":"nealetham"},"content":"            } else if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":233,"author":{"gitId":"nealetham"},"content":"                try {","lastModifiedDate":"2022-08-18"},{"lineNumber":234,"author":{"gitId":"nealetham"},"content":"                    Task todo \u003d createTodo(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":235,"author":{"gitId":"nealetham"},"content":"                    taskAdd(todo, inputList);","lastModifiedDate":"2022-08-17"},{"lineNumber":236,"author":{"gitId":"nealetham"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":237,"author":{"gitId":"nealetham"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":238,"author":{"gitId":"nealetham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"nealetham"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":240,"author":{"gitId":"nealetham"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"nealetham"},"content":"            } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":242,"author":{"gitId":"nealetham"},"content":"                try {","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"nealetham"},"content":"                    Deadline deadline \u003d createDeadline(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":244,"author":{"gitId":"nealetham"},"content":"                    taskAdd(deadline, inputList);","lastModifiedDate":"2022-08-17"},{"lineNumber":245,"author":{"gitId":"nealetham"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"nealetham"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"nealetham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":248,"author":{"gitId":"nealetham"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":249,"author":{"gitId":"nealetham"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"nealetham"},"content":"            } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":251,"author":{"gitId":"nealetham"},"content":"                try {","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"nealetham"},"content":"                    Event event \u003d createEvent(input);","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"nealetham"},"content":"                    taskAdd(event, inputList);","lastModifiedDate":"2022-08-17"},{"lineNumber":254,"author":{"gitId":"nealetham"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":255,"author":{"gitId":"nealetham"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":256,"author":{"gitId":"nealetham"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":257,"author":{"gitId":"nealetham"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":258,"author":{"gitId":"nealetham"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":259,"author":{"gitId":"nealetham"},"content":"            } else if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":260,"author":{"gitId":"nealetham"},"content":"                try {","lastModifiedDate":"2022-08-18"},{"lineNumber":261,"author":{"gitId":"nealetham"},"content":"                    deleteTask(parts, inputList);","lastModifiedDate":"2022-08-18"},{"lineNumber":262,"author":{"gitId":"nealetham"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":263,"author":{"gitId":"nealetham"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":264,"author":{"gitId":"nealetham"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":265,"author":{"gitId":"nealetham"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":266,"author":{"gitId":"nealetham"},"content":"                System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":267,"author":{"gitId":"nealetham"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":268,"author":{"gitId":"nealetham"},"content":"            input \u003d myObj.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":269,"author":{"gitId":"nealetham"},"content":"            parts \u003d input.split(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":270,"author":{"gitId":"nealetham"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":271,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":272,"author":{"gitId":"nealetham"},"content":"        myObj.close();","lastModifiedDate":"2022-08-17"},{"lineNumber":273,"author":{"gitId":"nealetham"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nealetham":271,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"     * The class constructor for a DukeException.","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"     * @param message","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nealetham":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"    /** The time of the event. **/","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"     * The class constructor, which utilizes the superclass","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"     * constructor.","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"     * @param at the time of the event","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"     * Formats and outputs the string representation of an Event viable for writing","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"nealetham"},"content":"     * into text file.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"nealetham"},"content":"     * @return formatted txt file string representation of an Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"nealetham"},"content":"    public String formatFileText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"        String s \u003d String.format(\"E | %s | %s | %s\\n\", super.getStatusIcon(), this.description, this.at);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"        return s;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"     * Overrides the toString method of the superclass to add","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"     * the additional [E] tag.","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"nealetham"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"nealetham"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"nealetham"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"nealetham"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"nealetham":36}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"    /** The title or description of a task. **/","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"    /** Indicates if a task is completed or not. **/","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"     * The class constructor for a Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"     * Retrieves the isDone field of a Task and outputs the","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"nealetham"},"content":"     * corresponding status icon via a ternary operator.","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"nealetham"},"content":"     * @return a \"X\" or \" \" if task is completed or not respectively.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"nealetham"},"content":"        return (isDone ? \"X\" : \"O\"); // mark done task with X","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"     * Sets the isDone field of a Task to true and outputs the","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"     * corresponding formatted text with the task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"     * @return a String to indicate the task has been marked done.","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"    public String markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"nealetham"},"content":"        this.isDone \u003d true; // mark task as true","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"nealetham"},"content":"        String result \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"nealetham"},"content":"        return result;","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"nealetham"},"content":"     * Retrieves the description of a task.","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"nealetham"},"content":"     * @return description of task.","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"nealetham"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"nealetham"},"content":"        return this.description; // get description of task","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"nealetham"},"content":"     * Formats and outputs the string representation of a Task via","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"nealetham"},"content":"     * getStatusIcon() and getDescription().","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"nealetham"},"content":"     * @return formatted string representation of a Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"nealetham"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"nealetham"},"content":"        String outputString \u003d String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"nealetham"},"content":"        return outputString;","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"nealetham"},"content":"     * Formats and outputs the string representation of a Task viable for writing","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"nealetham"},"content":"     * into text file.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"nealetham"},"content":"     * @return formatted txt file string representation of a Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"nealetham"},"content":"    public String formatFileText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"nealetham"},"content":"        String s \u003d String.format(\"Task | %s | %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"nealetham"},"content":"        return s;","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"nealetham"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"nealetham":63}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"     * The class constructor, which utilizes the superclass","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"     * constructor.","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"nealetham"},"content":"     * Overrides the toString method of the superclass to add","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"nealetham"},"content":"     * the additional [T] tag.","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"nealetham"},"content":"     * @return String representation of this task.","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"nealetham"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"nealetham"},"content":"    public String formatFileText() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"nealetham"},"content":"        String s \u003d String.format(\"T | %s | %s\\n\", super.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"nealetham"},"content":"        return s;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"nealetham"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"nealetham"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"nealetham"},"content":"     * Formats and outputs the string representation of Todo Task viable for writing","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"nealetham"},"content":"     * into text file.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"nealetham"},"content":"     * @return formatted txt file string representation of a Todo.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"nealetham"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"nealetham"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"nealetham"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"nealetham"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"nealetham"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"nealetham"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"nealetham":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nealetham"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"nealetham"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nealetham"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nealetham"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nealetham"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nealetham"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nealetham"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nealetham"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nealetham":8}}]

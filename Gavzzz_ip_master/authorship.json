[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"# DukeProMax","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\"Always give your 100% in everything, except when donating blood\" - some dude","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"DukeProMax allows you to store your daily tasks so you can always give your 100% on a day to day basis. It is","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"- SUPER easy to use","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"- USER Friendly","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"- SUPER Fast to use","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"# SUS for short :+1:","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"1. Download it from [here](https://github.com/Gavzzz/ip)","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"2. Double-click it.","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"3. Chat with it to add you tasks","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"4. Let it manage your tasks for you","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"The best part? It is absolutely ","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"# FREE!!","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"Features include but not limited to ","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"- [x] Managing tasks","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"- [x] Managing events","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"- [x] Finding tasks ","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"- [ ] More extensions coming soon","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"So what are you waiting for???","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"# USE IT NOW!!!!","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Gavzzz":34}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"Gavzzz":18}},{"path":"database/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"T | 0 |  borrow","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"# User Guide for DukeMaxPro","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"### Add Tasks","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"Add up to 3 different types of tasks!","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"[todo]","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"A todo task denoted by [T]","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"input format: \"todo\" + task description","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"[deadline]","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"A deadline task denoted by [D]","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"A deadline task with a deadline to be input, denoted by [D]","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"Input format: \"deadline\" + task description + \"/by\" + deadline","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"[Event]","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"An event task with a time of event, denoted by [E]","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"Input format: \"event\" + task description + \"/at\" + time of event","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"### Mark / Unmark tasks as done","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"Marks tasks as done with an \"X\" or undone without an \"X\" and with an empty box [ ]","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"to keep track of task completion.","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"### View task list","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"Displays the entire task list","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"### Detect duplicates","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"Detects duplicate tasks inside the task lists and alerts the user about which ","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"task is duplicated and how many tasks are duplicated","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"### `list` - Displays current task list","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"Example of usage: ","lastModifiedDate":"2022-09-21"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"`list`","lastModifiedDate":"2022-09-21"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"Expected outcome:","lastModifiedDate":"2022-09-21"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"[T][X] Borrow book","lastModifiedDate":"2022-09-21"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"[D][ ] Return Book (by: Monday 2pm)","lastModifiedDate":"2022-09-21"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"[E][ ] Meeting (at: Monday 2pm-4pm)","lastModifiedDate":"2022-09-21"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"### `todo` - Adds a todo task to the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"`todo`","lastModifiedDate":"2022-09-21"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"[T][X] Borrow book","lastModifiedDate":"2022-09-21"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"### `deadline` - Adds a deadline task to the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"Example of usage: ","lastModifiedDate":"2022-09-21"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"`deadline`","lastModifiedDate":"2022-09-21"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"Expected outcome:","lastModifiedDate":"2022-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"[D][ ] Return Book (by: Monday 2pm)","lastModifiedDate":"2022-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"### `event` - Adds a event task to the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"Example of usage: ","lastModifiedDate":"2022-09-21"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"`event`","lastModifiedDate":"2022-09-21"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":97,"author":{"gitId":"Gavzzz"},"content":"Expected outcome:","lastModifiedDate":"2022-09-21"},{"lineNumber":98,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":99,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"[E][ ] Meeting (at: Monday 2pm-4pm)","lastModifiedDate":"2022-09-21"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":102,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":103,"author":{"gitId":"Gavzzz"},"content":"### `mark` - Marks a task as done in the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":104,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":105,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":106,"author":{"gitId":"Gavzzz"},"content":"Example of usage: ","lastModifiedDate":"2022-09-21"},{"lineNumber":107,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":108,"author":{"gitId":"Gavzzz"},"content":"`mark 1`","lastModifiedDate":"2022-09-21"},{"lineNumber":109,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":110,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":111,"author":{"gitId":"Gavzzz"},"content":"Expected outcome:","lastModifiedDate":"2022-09-21"},{"lineNumber":112,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":113,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":114,"author":{"gitId":"Gavzzz"},"content":"[E][X] Meeting (at: Monday 2pm-4pm)","lastModifiedDate":"2022-09-21"},{"lineNumber":115,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":116,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":117,"author":{"gitId":"Gavzzz"},"content":"### `unmark` - Unarks a task as not done in the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":118,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":119,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":120,"author":{"gitId":"Gavzzz"},"content":"Example of usage: ","lastModifiedDate":"2022-09-21"},{"lineNumber":121,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":122,"author":{"gitId":"Gavzzz"},"content":"`unmark 1`","lastModifiedDate":"2022-09-21"},{"lineNumber":123,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":124,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":125,"author":{"gitId":"Gavzzz"},"content":"Expected outcome:","lastModifiedDate":"2022-09-21"},{"lineNumber":126,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":127,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":128,"author":{"gitId":"Gavzzz"},"content":"[E][ ] Meeting (at: Monday 2pm-4pm)","lastModifiedDate":"2022-09-21"},{"lineNumber":129,"author":{"gitId":"Gavzzz"},"content":"```","lastModifiedDate":"2022-09-21"},{"lineNumber":130,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":131,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":132,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":133,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":134,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":135,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"-":19,"Gavzzz":116}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"/* Inspiration taken from Bag Devesh Kumar and Zizheng ip to solve some prevalent issues","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"public class Duke {","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"    private Storage storage;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"    private Ui ui;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    public Duke() {","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"        this.storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/database/duke.txt\");","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"            tasks.list();","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"                ArrayList\u003cString\u003e data \u003d tasks.bye();","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"                storage.save(data);","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"                return ui.printBye();","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"            } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"                return Parser.parse(input, tasks, ui, storage);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"            return e.getMessage();","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":42}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"    private String message;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"        super(message);","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"     * Returns the message of the exception.","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"     * @return Message of the exception.","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"        return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":18}},{"path":"src/main/java/duke/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"        super(message);","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"Gavzzz":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":" * Parser to parse user inputs","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":" *","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":" * @author Gavin Cho","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":" * @version CS2103T AY22/23 Sem 1","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"public class Parser {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"     * Parses the input with the tasks, ui and storage","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"     * @param tasks TaskList of which input is to be stored","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"     * @param ui Ui needed for the input","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"     * @param storage Storage needed for the input","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"     * @return True if program should continue, false otherwise","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException If the user input is invalid","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public static String parse(String input, TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"            throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"        if (!isValidCommand(input)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"            throw new DukeException(\"Sorry! I don\u0027t Understand what you are saying.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"                return tasks.list();","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"                return tasks.delete(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"                return tasks.find(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"                return tasks.unmarkTask(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"                return tasks.markTask(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"                return tasks.deadline(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"                return tasks.event(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"                return tasks.todo(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"tag\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"                return tasks.tag(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"            } else if (input.startsWith(\"listtag\")) {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"                return tasks.listTags(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"            } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"     * Returns true if input is within scope of the Keywords.","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"     * @return True if input is within scope of the program, false otherwise.","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"    public static boolean isValidCommand(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"        return (input.startsWith(\"list\") || input.startsWith(\"mark\") || input.startsWith(\"unmark\") || input.startsWith(\"deadline\")","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"                || input.startsWith(\"event\") || input.startsWith(\"todo\") || input.startsWith(\"delete\") || input.startsWith(\"find\")","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"                || input.startsWith(\"tag\") || input.startsWith(\"listtags\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":64}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.io.File;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":" * Storage is used to handle data saved.","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"public class Storage {","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    private final String filePath;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"     * Constructs Storage.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"     * @param filePath filepath containing input from previous session.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"     * Loads the list containing input from previous session.","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     * @return List containing input from previous session.","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"     * @throws FileNotFoundException If file does not exist.","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    public ArrayList\u003cString\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"            String in \u003d s.nextLine();","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"            list.add(in);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        s.close();","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        return list;","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"     * Saves the input for next session.","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"     * @param list List of input to be saved for next session.","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"    public void save(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"            new File(filePath).getParentFile().mkdirs();","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"            FileWriter fw \u003d new FileWriter(System.getProperty(\"user.dir\") +","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"                    \"/database/duke.txt\");","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"            for (String tasks : list) {","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"                fw.write(String.format(\"%s%n\", tasks));","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"            fw.close();","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"            System.out.println(\"Oops: \" + e.getMessage());","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"public class TaskList {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"    private int size;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"     * Constructs the TaskList.","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    public TaskList() {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"        this.size \u003d 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"     * Constructs the TaskList with previous inputs.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"     * @param dataList Previous input data.","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    public TaskList(ArrayList\u003cString\u003e dataList) {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"        for (String data : dataList) {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            tasks.add(Task.loadTask(data));","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"        this.size \u003d tasks.size();","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"     * Saves the TaskList after user input bye.","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"     * @return ArrayList of the input that has been saved.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"    public ArrayList\u003cString\u003e bye() {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"        return saveTasks();","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"     * Saves the TaskList.","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"     * @return ArrayList of the input that has been saved.","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    public ArrayList\u003cString\u003e saveTasks() {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"            list.add(task.saveTask());","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        return list;","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"     * Marks a task.","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"    public String markTask(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        char n \u003d input.charAt(5);","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        int number \u003d Character.getNumericValue(n) - 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"        assert number \u003e\u003d 0 : \"index should be \u003e\u003d 0\";","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"        Task t \u003d tasks.get(number);","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"        t.mark();","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"        String line1 \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"        String line2 \u003d t.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"        String mark \u003d line1 + \"\\n\" + line2;","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"        return mark;","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"     * Unmarks a task.","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"    public String unmarkTask(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"        char n \u003d input.charAt(7);","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"        int number \u003d Character.getNumericValue(n) - 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"        assert number \u003e\u003d 0 : \"index should be \u003e\u003d 0\";","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"        Task t \u003d tasks.get(number);","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"        t.markAsNotDone();","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"        String line1 \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"        String line2 \u003d t.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"        String unmark \u003d line1 + \"\\n\" + line2;","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"        return unmark;","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"     * Lists the inputs of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"Gavzzz"},"content":"    public String list() {","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"Gavzzz"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"Gavzzz"},"content":"        String list \u003d \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"Gavzzz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"Gavzzz"},"content":"            String newLine \u003d count + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"Gavzzz"},"content":"            list +\u003d newLine;","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"Gavzzz"},"content":"            count +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"Gavzzz"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"Gavzzz"},"content":"            String empty \u003d \"Your list is empty.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"Gavzzz"},"content":"            return empty;","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"Gavzzz"},"content":"            return list;","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"Gavzzz"},"content":"     * Deletes a task.","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"Gavzzz"},"content":"    public String delete(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"Gavzzz"},"content":"        char n \u003d input.charAt(7);","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"Gavzzz"},"content":"        int number \u003d Character.getNumericValue(n) - 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"Gavzzz"},"content":"        assert number \u003e\u003d 0 : \"index should be 0 or larger\";","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"Gavzzz"},"content":"        String line1 \u003d \"I\u0027ve removed this task:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"Gavzzz"},"content":"        String line2 \u003d \"  \" + tasks.get(number).toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"Gavzzz"},"content":"        tasks.remove(number);","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"Gavzzz"},"content":"        size -\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"Gavzzz"},"content":"        String line3 \u003d \"Now you have \" + size + \" tasks in the list\";","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"Gavzzz"},"content":"        String message \u003d line1 + \"\\n\" + line2 + \"\\n\" + line3;","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"Gavzzz"},"content":"        return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"Gavzzz"},"content":"     * Returns a message for deadline input.","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"Gavzzz"},"content":"     * @param in Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException An exception unique to duke.Duke.","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"Gavzzz"},"content":"    public String deadline(String in) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"Gavzzz"},"content":"        String deadLine \u003d in.replaceFirst(\"deadline\", \"\");","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"Gavzzz"},"content":"        if (deadLine.trim().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"Gavzzz"},"content":"            throw new DukeException(\"Yo! The description of a deadline cannot be empty!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"Gavzzz"},"content":"            return addDeadline(deadLine);","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"Gavzzz"},"content":"     * Adds a deadline event to the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"Gavzzz"},"content":"     * @param deadLine Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"Gavzzz"},"content":"    public String addDeadline(String deadLine) {","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"Gavzzz"},"content":"        String[] result \u003d deadLine.split(\"/by \", 2);","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"Gavzzz"},"content":"        String desc \u003d result[0];","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"Gavzzz"},"content":"        String by \u003d result[1];","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"Gavzzz"},"content":"        Deadline d \u003d new Deadline(desc, LocalDate.parse(by));","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"Gavzzz"},"content":"        tasks.add(d);","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"Gavzzz"},"content":"        size +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"Gavzzz"},"content":"        String line1 \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"Gavzzz"},"content":"        String line2 \u003d \"  \" + d.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"Gavzzz"},"content":"        String line3 \u003d \"Now you have \" + size + \" tasks in the list\";","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"Gavzzz"},"content":"        String message \u003d line1 + \"\\n\" + line2 + \"\\n\" + line3;","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"Gavzzz"},"content":"        return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"Gavzzz"},"content":"     * Returns a message for event input.","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException An exception unique to duke.Duke.","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"Gavzzz"},"content":"    public String event(String input) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"Gavzzz"},"content":"        String event \u003d input.replaceFirst(\"event\", \"\");","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"Gavzzz"},"content":"        if (event.trim().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"Gavzzz"},"content":"            throw new DukeException(\"Yo! The description of an event cannot be empty.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"Gavzzz"},"content":"            return addEvent(event);","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"Gavzzz"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"Gavzzz"},"content":"     * @param event Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":190,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"Gavzzz"},"content":"    public String addEvent(String event) {","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"Gavzzz"},"content":"        String[] result \u003d event.split(\"/at \", 2);","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"Gavzzz"},"content":"        String desc \u003d result[0];","lastModifiedDate":"2022-10-17"},{"lineNumber":194,"author":{"gitId":"Gavzzz"},"content":"        String by \u003d result[1];","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"Gavzzz"},"content":"        Event e \u003d new Event(desc, LocalDate.parse(by));","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"Gavzzz"},"content":"        tasks.add(e);","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"Gavzzz"},"content":"        size +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":198,"author":{"gitId":"Gavzzz"},"content":"        String line1 \u003d \"I\u0027ve added this task:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":199,"author":{"gitId":"Gavzzz"},"content":"        String line2 \u003d \"  \" + e.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":200,"author":{"gitId":"Gavzzz"},"content":"        String line3 \u003d \"Now you have \" + size + \" tasks in the list\";","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"Gavzzz"},"content":"        String message \u003d line1 + \"\\n\" + line2 + \"\\n\" + line3;","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"Gavzzz"},"content":"        return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":205,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":206,"author":{"gitId":"Gavzzz"},"content":"     * Adds a to-do task to the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":207,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":208,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":209,"author":{"gitId":"Gavzzz"},"content":"     * @return message for user","lastModifiedDate":"2022-10-17"},{"lineNumber":210,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException An exception unique to duke.Duke.","lastModifiedDate":"2022-10-17"},{"lineNumber":211,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":212,"author":{"gitId":"Gavzzz"},"content":"    public String todo(String input) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":213,"author":{"gitId":"Gavzzz"},"content":"        String todo \u003d input.replaceFirst(\"todo\", \"\");","lastModifiedDate":"2022-10-17"},{"lineNumber":214,"author":{"gitId":"Gavzzz"},"content":"        if (todo.trim().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":215,"author":{"gitId":"Gavzzz"},"content":"            throw new DukeException(\"Yo! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":216,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":217,"author":{"gitId":"Gavzzz"},"content":"            Todo t \u003d new Todo(todo);","lastModifiedDate":"2022-10-17"},{"lineNumber":218,"author":{"gitId":"Gavzzz"},"content":"            tasks.add(t);","lastModifiedDate":"2022-10-17"},{"lineNumber":219,"author":{"gitId":"Gavzzz"},"content":"            size +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":220,"author":{"gitId":"Gavzzz"},"content":"            String line1 \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":221,"author":{"gitId":"Gavzzz"},"content":"            String line2 \u003d \"  \" + t.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":222,"author":{"gitId":"Gavzzz"},"content":"            String line3 \u003d \"Now you have \" + size + \" tasks in the list\";","lastModifiedDate":"2022-10-17"},{"lineNumber":223,"author":{"gitId":"Gavzzz"},"content":"            String message \u003d line1 + \"\\n\" + line2 + \"\\n\" + line3;","lastModifiedDate":"2022-10-17"},{"lineNumber":224,"author":{"gitId":"Gavzzz"},"content":"            return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":225,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":226,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":227,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":228,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":229,"author":{"gitId":"Gavzzz"},"content":"     * Finds tasks in list.","lastModifiedDate":"2022-10-17"},{"lineNumber":230,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":231,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":232,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":233,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException If there is an error in the input.","lastModifiedDate":"2022-10-17"},{"lineNumber":234,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":235,"author":{"gitId":"Gavzzz"},"content":"    public String find(String input) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":236,"author":{"gitId":"Gavzzz"},"content":"        String toBeFound \u003d input.replaceFirst(\"find\", \"\");","lastModifiedDate":"2022-10-17"},{"lineNumber":237,"author":{"gitId":"Gavzzz"},"content":"        if (toBeFound.trim().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":238,"author":{"gitId":"Gavzzz"},"content":"            throw new DukeException(\"Yo! The description of the task you want cannot be empty.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":239,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":240,"author":{"gitId":"Gavzzz"},"content":"            assert toBeFound.length() \u003e 0 : \"The keywords should not be empty\";","lastModifiedDate":"2022-10-17"},{"lineNumber":241,"author":{"gitId":"Gavzzz"},"content":"            int count \u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":242,"author":{"gitId":"Gavzzz"},"content":"            String find \u003d \"Here is the task that you are looking for in your list:\" + \"\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":243,"author":{"gitId":"Gavzzz"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-10-17"},{"lineNumber":244,"author":{"gitId":"Gavzzz"},"content":"                if (task.getDescription().contains(toBeFound.trim())) {","lastModifiedDate":"2022-10-17"},{"lineNumber":245,"author":{"gitId":"Gavzzz"},"content":"                    String newLine \u003d count + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":246,"author":{"gitId":"Gavzzz"},"content":"                    count +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":247,"author":{"gitId":"Gavzzz"},"content":"                    find +\u003d newLine;","lastModifiedDate":"2022-10-17"},{"lineNumber":248,"author":{"gitId":"Gavzzz"},"content":"                }","lastModifiedDate":"2022-10-17"},{"lineNumber":249,"author":{"gitId":"Gavzzz"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":250,"author":{"gitId":"Gavzzz"},"content":"            return find;","lastModifiedDate":"2022-10-17"},{"lineNumber":251,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":252,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":253,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":254,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":255,"author":{"gitId":"Gavzzz"},"content":"    public boolean isValidTaskNumber(int input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":256,"author":{"gitId":"Gavzzz"},"content":"        if (input \u003e 0 \u0026\u0026 input \u003c tasks.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":257,"author":{"gitId":"Gavzzz"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":258,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":259,"author":{"gitId":"Gavzzz"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":260,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":261,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":262,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":263,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":264,"author":{"gitId":"Gavzzz"},"content":"     * Tags a task in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":265,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":266,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":267,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":268,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException If there is an error in the input.","lastModifiedDate":"2022-10-17"},{"lineNumber":269,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":270,"author":{"gitId":"Gavzzz"},"content":"    public String tag(String input) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":271,"author":{"gitId":"Gavzzz"},"content":"        String tag \u003d input.replaceFirst(\"tag\", \"\");","lastModifiedDate":"2022-10-17"},{"lineNumber":272,"author":{"gitId":"Gavzzz"},"content":"        if (tag.trim().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":273,"author":{"gitId":"Gavzzz"},"content":"            throw new DukeException(\"Yo! The description of your tag cannot be empty.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":274,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":275,"author":{"gitId":"Gavzzz"},"content":"            return addTag(tag.trim());","lastModifiedDate":"2022-10-17"},{"lineNumber":276,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":277,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":278,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":279,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":280,"author":{"gitId":"Gavzzz"},"content":"     * Adds a tag to a task.","lastModifiedDate":"2022-10-17"},{"lineNumber":281,"author":{"gitId":"Gavzzz"},"content":"     * @param tag Input of user.","lastModifiedDate":"2022-10-17"},{"lineNumber":282,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":283,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":284,"author":{"gitId":"Gavzzz"},"content":"    public String addTag(String tag) {","lastModifiedDate":"2022-10-17"},{"lineNumber":285,"author":{"gitId":"Gavzzz"},"content":"        char n \u003d tag.charAt(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":286,"author":{"gitId":"Gavzzz"},"content":"        int number \u003d Character.getNumericValue(n) - 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":287,"author":{"gitId":"Gavzzz"},"content":"        assert number \u003e\u003d 0 : \"Index should be more or equal to 0\";","lastModifiedDate":"2022-10-17"},{"lineNumber":288,"author":{"gitId":"Gavzzz"},"content":"        Task task \u003d tasks.get(number);","lastModifiedDate":"2022-10-17"},{"lineNumber":289,"author":{"gitId":"Gavzzz"},"content":"        String[] result \u003d tag.split(\"#\", 2);","lastModifiedDate":"2022-10-17"},{"lineNumber":290,"author":{"gitId":"Gavzzz"},"content":"        String desc \u003d result[1];","lastModifiedDate":"2022-10-17"},{"lineNumber":291,"author":{"gitId":"Gavzzz"},"content":"        task.tagWith(desc);","lastModifiedDate":"2022-10-17"},{"lineNumber":292,"author":{"gitId":"Gavzzz"},"content":"        String line1 \u003d \"Got it. I\u0027ve tagged this task:\";","lastModifiedDate":"2022-10-17"},{"lineNumber":293,"author":{"gitId":"Gavzzz"},"content":"        String line2 \u003d \"  \" + task.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":294,"author":{"gitId":"Gavzzz"},"content":"        String line3 \u003d \"with #\" + desc;","lastModifiedDate":"2022-10-17"},{"lineNumber":295,"author":{"gitId":"Gavzzz"},"content":"        String message \u003d line1 + \"\\n\" + line2 + \"\\n\" + line3;","lastModifiedDate":"2022-10-17"},{"lineNumber":296,"author":{"gitId":"Gavzzz"},"content":"        return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":297,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":298,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":299,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":300,"author":{"gitId":"Gavzzz"},"content":"     * Lists the tags for a task.","lastModifiedDate":"2022-10-17"},{"lineNumber":301,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":302,"author":{"gitId":"Gavzzz"},"content":"     * @param input Input of user.","lastModifiedDate":"2022-10-17"},{"lineNumber":303,"author":{"gitId":"Gavzzz"},"content":"     * @return Message for user.","lastModifiedDate":"2022-10-17"},{"lineNumber":304,"author":{"gitId":"Gavzzz"},"content":"     * @throws DukeException If there is an error in the input.","lastModifiedDate":"2022-10-17"},{"lineNumber":305,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":306,"author":{"gitId":"Gavzzz"},"content":"    public String listTags(String input) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":307,"author":{"gitId":"Gavzzz"},"content":"        char n \u003d input.charAt(8);","lastModifiedDate":"2022-10-17"},{"lineNumber":308,"author":{"gitId":"Gavzzz"},"content":"        int number \u003d Character.getNumericValue(n) - 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":309,"author":{"gitId":"Gavzzz"},"content":"        assert number \u003e\u003d 0 : \"Index should be more or equal to 0\";","lastModifiedDate":"2022-10-17"},{"lineNumber":310,"author":{"gitId":"Gavzzz"},"content":"        Task task \u003d tasks.get(number);","lastModifiedDate":"2022-10-17"},{"lineNumber":311,"author":{"gitId":"Gavzzz"},"content":"        return task.listTheTags();","lastModifiedDate":"2022-10-17"},{"lineNumber":312,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":313,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":313}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"public class Ui {","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"    public Ui() {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    public String printBye() {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"       return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":21}},{"path":"src/main/java/duke/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":" * An exception for when an unknown command is entered with user-facing messages that sound like Drake.","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    private String message;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"     * Constructor with the Drake-sounding exception for an unknown command.","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"        super(\"Oops! I don\u0027t know what that means!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"     * Returns the message of the exception.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"     * @return Message of the exception.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"        return message;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":25}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.gui;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"    private void flip() {","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"        db.flip();","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        return db;","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Gavzzz":57}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.gui;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"public class Launcher {","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Gavzzz":10}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.gui;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import duke.*;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    public Main() {}","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"            stage.setTitle(\"DukeProMax\");","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"            stage.show();","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Gavzzz":36}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.gui;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import duke.*;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"        String logo \u003d \"MyDuke\";","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"        String welcome \u003d \"Hello from\\n\" + \"DUKEPROMAX!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"                DialogBox.getDukeDialog(welcome, dukeImage)","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        );","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"         * Creates two dialog boxes, one echoing user input and the other containing duke\u0027s reply and then appends them to","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"         * the dialog container.","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"         */","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"    @FXML","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"Gavzzz":72}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"    protected final LocalDate by;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"        super(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"        super(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"     * Formats the time to a string.","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"     * @param time time of the Deadline.","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     * @return String notation of the time.","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    public String formatTime(LocalDate time) {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"     * Shows the Deadline task description and the date it is due by.","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"     * @return String with the Deadline task description and date it is due by.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatTime(by) + \")\";","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"    public String saveTask() {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"        return String.format(\"D | %s | %s\", super.saveTask(), by);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":49}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"public class Event extends Task {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"    protected final LocalDate at;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"        super(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    public Event(String description, boolean isDone, LocalDate at) {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"        super(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public String formatTime(LocalDate time) {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"     * Shows the Event task description and the date it occurs at.","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"     * @return String with the Event task description and the date it occurs at.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formatTime(at) + \")\";","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    public String saveTask() {","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"        return String.format(\"E | %s | %s\", super.saveTask(), at);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":41}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"public class Task {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"    protected ArrayList\u003cString\u003e tags;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"    protected String description;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"    public Task(String description) {","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"     * Gets the status of the task.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"     * @return The status of the task.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"     * Marks task as done.","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    public void mark() {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Gavzzz"},"content":"     * Marks task as not done.","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Gavzzz"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Gavzzz"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Gavzzz"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Gavzzz"},"content":"     * @return Description of the task.","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Gavzzz"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Gavzzz"},"content":"        return this.description;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Gavzzz"},"content":"     * Loads the task.","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Gavzzz"},"content":"     * @param data the data to be loaded","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Gavzzz"},"content":"     * @return Tasks that have been loaded","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Gavzzz"},"content":"    public static Task loadTask(String data) {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Gavzzz"},"content":"        String[] input \u003d data.split( \" \\\\| \", 4);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Gavzzz"},"content":"        char c \u003d input[0].charAt(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Gavzzz"},"content":"        boolean isDone \u003d input[1].equals(\"1\");","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Gavzzz"},"content":"        String description \u003d input[2];","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Gavzzz"},"content":"        LocalDate time \u003d input.length \u003d\u003d 3 ? LocalDate.parse(input[2]) : null;","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Gavzzz"},"content":"        if (c \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Gavzzz"},"content":"            return new Deadline(description, isDone, time);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Gavzzz"},"content":"        } else if (c \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Gavzzz"},"content":"            return new Event(description, isDone, time);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Gavzzz"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Gavzzz"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"Gavzzz"},"content":"    public void tagWith(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"Gavzzz"},"content":"        tags.add(input);","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"Gavzzz"},"content":"    public String listTheTags() {","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"Gavzzz"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"Gavzzz"},"content":"        String list \u003d \"Here are the tags of this task:\" + \"\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"Gavzzz"},"content":"        for (String tag : tags) {","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"Gavzzz"},"content":"            String newLine \u003d count + \". \" + \"#\" + tag + \"\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"Gavzzz"},"content":"            list +\u003d newLine;","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"Gavzzz"},"content":"            count +\u003d 1;","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"Gavzzz"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"Gavzzz"},"content":"        return list;","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"Gavzzz"},"content":"     * Saves the task","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"Gavzzz"},"content":"     * @return The string message of the saved task","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"Gavzzz"},"content":"    public String saveTask() {","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"Gavzzz"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"Gavzzz"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":96}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"        super(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"        super(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"     * Shows the todo task description.","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"     * @return String with the todo task description.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"    public String saveTask() {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"        return String.format(\"T | %s\", super.saveTask());","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Gavzzz":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Gavzzz":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Gavzzz":19}},{"path":"src/test/java/duke/commands/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gavzzz"},"content":"package duke.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"Gavzzz"},"content":"import duke.TaskList;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"Gavzzz"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"Gavzzz"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Gavzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"Gavzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"Gavzzz"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"Gavzzz"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"Gavzzz"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"Gavzzz"},"content":"    public void add() {","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"        Task tempTask \u003d new Todo(\"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"Gavzzz"},"content":"        tasks.add(tempTask);","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"Gavzzz"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"Gavzzz"},"content":"    @Test","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"Gavzzz"},"content":"    public void isValidTaskNumbertest() {","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"Gavzzz"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Gavzzz"},"content":"        assertFalse(taskList.isValidTaskNumber(10));","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"Gavzzz"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"Gavzzz"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"Gavzzz"},"content":"","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"Gavzzz":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Gavzzz"},"content":"REM run the program, feed temp from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Gavzzz"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Gavzzz":2}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"# seedu.duke.Duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"3. After that, locate the `src/main/java/seedu.duke.Duke.java` file, right-click it, and choose `Run seedu.duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"seanflyyy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":5,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"T , 0 , borrow book","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"E , 0 , project meeting , 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"E , 0 , do lab , 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"T , 0 , borrow book","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"D , 0 , return book , 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"T , 0 , borrow book","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"T , 0 , borrow book","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":7}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 seedu.duke.command could be found in your PATH.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"@rem Get seedu.duke.command-line arguments, handling Windows variants","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"seanflyyy"},"content":"@rem Slurp the seedu.duke.command line arguments.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"seanflyyy"},"content":"@rem Setup the seedu.duke.command line","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"seanflyyy":4,"-":99}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":" * The Duke class is the core of the entire program.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":" * This is where all the commands are first read.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Duke object.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     * @param filePath The file path of the file to be read from and written to.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     * Executes the program.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"    public void run() {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"            } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"                ui.showLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"seanflyyy":55,"-":3}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":" * A class which extends from the Command abstract class.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":" * A AddCommand object can be used to handle the creation of Task objects.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"    /*  The type of the task, whether it is a deadline, event or a todo. */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    protected String typeOfTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"    /* The description of the task or what the task is. */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    protected String description;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    /* When the task is supposed to be due. */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"    protected String deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * Creates a AddCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"     * @param typeOfTask The type of task, whether it is a deadline, event or a todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task or what the task is.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"    public AddCommand(String typeOfTask, String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"     * Creates a AddCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"     * @param typeOfTask The type of task, whether it is a deadline, event or a deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task or what the task is.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"     * @param deadline The deadline or due date of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"    public AddCommand(String typeOfTask, String description, String deadline) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"     * Creates a deadline, event or a todo object based on the typeOfTask.","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"     * This object is then added to the TaskList and the relevant messages are printed out.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"seanflyyy"},"content":"        Task task \u003d new Task(\"null\");","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"seanflyyy"},"content":"        if (typeOfTask.equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"seanflyyy"},"content":"            task \u003d new Deadline(description, deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"seanflyyy"},"content":"        } else if (typeOfTask.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"seanflyyy"},"content":"            task \u003d new Event(description, deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"seanflyyy"},"content":"        } else if (typeOfTask.equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"seanflyyy"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"seanflyyy"},"content":"        ui.addTask(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"seanflyyy"},"content":"        ui.displayNumberOfTasks(tasks.getNumberOfTasks());","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"seanflyyy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":74}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" * An abstract class Command which has the execute method and isExit functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"    /* A boolean determining whether to exit the program. */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Command object.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     * @param isExit","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"     * Returns a boolean of whether the Command object isExit is true.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"     * @return A boolean specifying whether the Command object isExit is true.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":39}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" * A class which extends from the Command abstract class.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":" * A DeleteCommand object can be used to delete a given task based on the index.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"    /* The index of the task based on the output of ListCommand.execute(...). */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"    protected int indexOfTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"     * @param indexOfTask The task\u0027s index based on the output of the ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"    public DeleteCommand(int indexOfTask) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"        this.indexOfTask \u003d indexOfTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     * Deletes a task from the TaskList object.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     * The output is then printed through ui.deleteTask method.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"        Task task \u003d tasks.deleteTask(indexOfTask);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"        ui.deleteTask(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"        ui.displayNumberOfTasks(tasks.getNumberOfTasks());","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":40}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" * A class which extends from the Command abstract class.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" * A ExitCommand object can be used to exit the program.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"     * Creates a ExitCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"        super(true);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"     * Outputs the Goodbye message when triggered.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":29}},{"path":"src/main/java/seedu/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" * A FindCommand class which extends the Command class.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"    /* The keyword to search the tasks for */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    protected String keyword;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     * @param keyword The keyword to search for in the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     * Displays the matching tasks based on this.keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"        ui.displayMatchingTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"        tasks.displayMatchingTasks(keyword);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":35}},{"path":"src/main/java/seedu/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" * A class which extends from the Command abstract class.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" * A InvalidCommand object can be used to display to the user whether the given command is valid.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"     * Creates a InvalidCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    public InvalidCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"     * Displays an error to the user that it cannot recognise what the user just sent.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"        ui.showError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":29}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" * A class which extends from the Command abstract class.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" * A ListCommand object can be used to list all the items in a TaskList object.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"     * Prints out all the items in the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"        ui.showList(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":29}},{"path":"src/main/java/seedu/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":" * A class which extends from the Command abstract class.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":" * A MarkCommand object can be used to mark tasks as done or not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    /* Whether to mark the object the task. */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"    protected boolean toMark;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    /* Index of the item on the list to mark. */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"    protected int index;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     * Creates a MarkCommand object.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * @param mark The string of whether it is mark or unmark.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * @param index The index of the item to mark based on the output of the ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    public MarkCommand(String mark, String index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"        super(false);","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"        this.toMark \u003d Objects.equals(mark, \"mark\");","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"        this.index \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"     * Marks a task as done or not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"     * Printing out hte appropriate UI when the task has been marked successfully.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks The tasks object containing all the tasks and CRUD methods to modify the tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"     * @param ui The Ui object capable of displaying user interface.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"     * @param storage The storage object capable of doing write, load, open functionality.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"        if (this.toMark) {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"            Task task \u003d tasks.markTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"            ui.showMarkStatus(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"            Task task \u003d tasks.unmarkTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"            ui.showUnmarkStatus(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":50}},{"path":"src/main/java/seedu/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":" * A custom class to handle any exceptions thrown by the Duke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"     * Creates a DukeException object.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"     * @param message The error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     * The toString method to display the output when DukeException.toString() is called.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"        return \"OOPS!! \" + getMessage();","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"seanflyyy":24}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.FindCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.InvalidCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":" * The parser class handles the parsing of a user input into a Command object that the program can handle.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     * Returns a Command object based on the argument fullCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * @param fullCommand The user input.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"        if (Objects.equals(commands[0], \"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"        } else if (Objects.equals(commands[0], \"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"        } else if (Objects.equals(commands[0], \"unmark\") || Objects.equals(commands[0], \"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"                return new MarkCommand(commands[0], commands[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"                throw new DukeException(\"An index must be provided for mark or unmark commands.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"        } else if (Objects.equals(commands[0], \"deadline\") || Objects.equals(commands[0], \"event\")","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"                || Objects.equals(commands[0], \"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"            if (Objects.equals(commands[0], \"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"                    String[] taskDetails \u003d commands[1].split(\" /by \");","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"                    return new AddCommand(commands[0], taskDetails[0], taskDetails[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"                    throw new DukeException(\"The description or date time of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"            } else if (Objects.equals(commands[0], \"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"                    String[] taskDetails \u003d commands[1].split(\" /at \");","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"                    return new AddCommand(commands[0], taskDetails[0], taskDetails[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"                    throw new DukeException(\"The description or date time of an event cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"            } else if (Objects.equals(commands[0], \"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"                    return new AddCommand(commands[0], commands[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"seanflyyy"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"seanflyyy"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"seanflyyy"},"content":"        } else if (Objects.equals(commands[0], \"find\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"seanflyyy"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"seanflyyy"},"content":"                return new FindCommand(commands[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"seanflyyy"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"seanflyyy"},"content":"                throw new DukeException(\"There needs to be a keyword specified\");","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"seanflyyy"},"content":"        } else if (Objects.equals(commands[0], \"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"            return new DeleteCommand(Integer.parseInt(commands[1]));","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"seanflyyy"},"content":"        return new InvalidCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":73}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":" * The Storage class handles the creation of a file specified by the duke.txt file.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    /* The filepath that the file should be created or read from. */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"    protected String filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Storage object.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     * @param filePath The filePath of whether the file should be created or read from.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"     * Returns an ArrayList Task after reading the contents of the file specified by the filePath variable.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"        // Reused from https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"        // Reused from https://www.w3schools.com/java/java_files_read.asp","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"            File directory \u003d new File(\"./data\");","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"            System.out.println(directory.exists());","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"                directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"            File myObj \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"                return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"                return readFile(myObj, tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"seanflyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"seanflyyy"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"seanflyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"seanflyyy"},"content":"        return null;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"seanflyyy"},"content":"     * Saves the data from the TaskList object into a file specified by the filePath.","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"    public void writeToFile(TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"seanflyyy"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"seanflyyy"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"seanflyyy"},"content":"            ArrayList\u003cTask\u003e data \u003d tasks.getAllTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"seanflyyy"},"content":"            for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"seanflyyy"},"content":"                myWriter.write(data.get(i).toFileString() + System.getProperty(\"line.separator\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"seanflyyy"},"content":"            myWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"seanflyyy"},"content":"            System.out.println(\"Successfully wrote to the file.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"seanflyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"seanflyyy"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"seanflyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"seanflyyy"},"content":"     * Returns an ArrayList Task object after reading the contents of the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"seanflyyy"},"content":"     * @param myObj A file object.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks An array with which the contents of the file read would be written to.","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"seanflyyy"},"content":"     * @return An ArrayList containing the tasks read from file.","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"seanflyyy"},"content":"     * @throws DukeException If there is an error found when reading the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"seanflyyy"},"content":"    private ArrayList\u003cTask\u003e readFile(File myObj, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"seanflyyy"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"seanflyyy"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"seanflyyy"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"seanflyyy"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"seanflyyy"},"content":"                String[] output \u003d data.split(\" , \", 0);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"seanflyyy"},"content":"                boolean isDone \u003d Integer.parseInt(output[1]) \u003d\u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"seanflyyy"},"content":"                if (Objects.equals(output[0], \"E\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"seanflyyy"},"content":"                    tasks.add(new Event(output[2], output[3], isDone));","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"seanflyyy"},"content":"                } else if (Objects.equals(output[0], \"D\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"seanflyyy"},"content":"                    tasks.add(new Deadline(output[2], output[3], isDone));","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"seanflyyy"},"content":"                } else if (Objects.equals(output[0], \"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"seanflyyy"},"content":"                    tasks.add(new ToDo(output[2], isDone));","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"seanflyyy"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"seanflyyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"seanflyyy"},"content":"            throw new DukeException(\"An error occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"seanflyyy"},"content":"        return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":111}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":" * A Deadline class which specifies a deadline Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"    /* When the task is due. */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"    protected LocalDate dateAndTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     * @param dateAndTime The specific deadline of when the task is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    public Deadline(String description, String dateAndTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"        this.dateAndTime \u003d LocalDate.parse(dateAndTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     * @param dateAndTime The specific deadline of when the task is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     * @param isDone Whether the task has been completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"    public Deadline(String description, String dateAndTime, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"        this.dateAndTime \u003d LocalDate.parse(dateAndTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of a Deadline object.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     * @return A string representation of a Deadline object in the format of [D] do this (by: Oct 15 2019)","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"                + dateAndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of a Deadline object for the purpose of being written to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"     * @return A string representation of a Deadline object in the format of D , do this , 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"        return \"D , \" + super.toFileString() + \" , \" + dateAndTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"seanflyyy":55}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":" * An Event class which specifies a event task.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"    /* When the task is due. */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"    protected LocalDate dateAndTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     * @param dateAndTime The specific deadline of when the task is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"        this.dateAndTime \u003d LocalDate.parse(dateAndTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"     * Creates an Event object.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     * @param dateAndTime The specific deadline of when the task is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"     * @param isDone Whether the task has been completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"    public Event(String description, String dateAndTime, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"        this.dateAndTime \u003d LocalDate.parse(dateAndTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of an Event object.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"     * @return A string representation of an Event object in the format of [E] do this (at: Oct 15 2019)","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"                + dateAndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of an Event object for the purpose of being written to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"     * @return A string representation of an Event object in the format of E , do this , 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"        return \"E , \" + super.toFileString() + \" , \" + dateAndTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"seanflyyy":57}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":" * A Task class representing a task.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"     * Returns \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"     * @return Returns a string in the format of [X] do this","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"seanflyyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"seanflyyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"seanflyyy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of a Task object for the purpose of writing to a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"seanflyyy"},"content":"     * @return Returns a string in the format of 1 , do this.","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"seanflyyy"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"seanflyyy"},"content":"        return isDone + \" , \" + description;","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"seanflyyy":72}},{"path":"src/main/java/seedu/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.ui.Style;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":" * A class representing a list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"    /* All the tasks. */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"     * Creates a TaskList object with an empty ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"     * Creates a TaskList object with a populated ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks An ArrayList containing tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"     * Returns the Task at that specified index based on the output of ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"     * @param index The index of the task item based on the output of the ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"     * @return A Task at that specified location.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"     * Returns the added task.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"     * @param task The task to be added to the ArrayList of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"     * @return The Task added.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"        return task;","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"     * Deletes the task at the specified location given by index.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"     * @param index The index of the task based on the output of ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"     * @return The Task after it has been deleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"seanflyyy"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"seanflyyy"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"seanflyyy"},"content":"        return task;","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"seanflyyy"},"content":"     * Deletes the task at the specified location given by index after it has been marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"seanflyyy"},"content":"     * @param index The index of the task based on the output of ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"seanflyyy"},"content":"     * @return The Task after it has been marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"seanflyyy"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"seanflyyy"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"seanflyyy"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"seanflyyy"},"content":"        return task;","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"seanflyyy"},"content":"     * Deletes the task at the specified location given by index after it has been unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"seanflyyy"},"content":"     * @param index The index of the task based on the output of ListCommand.execute(...).","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"seanflyyy"},"content":"     * @return The Task after it has been unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"seanflyyy"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"seanflyyy"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"seanflyyy"},"content":"        task.unmark();","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"seanflyyy"},"content":"        return task;","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"seanflyyy"},"content":"     * Prints out all the tasks stored in ArrayList","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"seanflyyy"},"content":"    public void listTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"seanflyyy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"seanflyyy"},"content":"            System.out.println(Style.INDENTATION + (i + 1) + \".\" + getTask(i + 1));","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"seanflyyy"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"seanflyyy"},"content":"        return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"seanflyyy"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"seanflyyy"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"seanflyyy"},"content":"     * Displays the matching tasks based on the keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"seanflyyy"},"content":"     * @param keyword Specifies the keyword to match the tasks to.","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"seanflyyy"},"content":"    public void displayMatchingTasks(String keyword) {","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"seanflyyy"},"content":"        int j \u003d 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"seanflyyy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"seanflyyy"},"content":"            Task task \u003d getTask(i + 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"seanflyyy"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"seanflyyy"},"content":"                System.out.println(Style.INDENTATION + (j + 1) + \".\" + task);","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"seanflyyy"},"content":"                j++;","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"seanflyyy"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"seanflyyy"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":121}},{"path":"src/main/java/seedu/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":" * A class representing a todo Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of a ToDo object.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"     * @return The string representation of a ToDo object.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"     * Returns a string representation of a ToDo object for the purpose of being written to a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"     * @return The string representation of a ToDo object for the purpose of being written to af file.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"    public String toFileString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"        return \"T , \" + super.toFileString();","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"seanflyyy":43}},{"path":"src/main/java/seedu/duke/ui/Style.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":" * Style class handles things like indentation and half_indentation.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"public class Style {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"    public static final String HALF_INDENTATION \u003d \"  \";","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":9}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":" * Ui Class responsible for handling all Ui displaying related matters.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"    /* Boolean representing whether there is a loadingError */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"    protected boolean loadingError;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"     * Creates a Ui object.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"    public Ui() {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"        this.loadingError \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"seanflyyy"},"content":"     * Prints out the welcome message.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"seanflyyy"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"seanflyyy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"seanflyyy"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"seanflyyy"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"seanflyyy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"seanflyyy"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(\"Hello! I\u0027m seedu.duke.Duke\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"seanflyyy"},"content":"                + \"What can I do for you?\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"seanflyyy"},"content":"     * Shows a loading error screen if there is an error.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"seanflyyy"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(\"----- Loading Error!! -----\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"seanflyyy"},"content":"     * Prints out the error message if there is an error.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"seanflyyy"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"seanflyyy"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + errorMessage + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"seanflyyy"},"content":"     * Returns the command after reading it through Scanner.","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"seanflyyy"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"seanflyyy"},"content":"     * @return The command in a string representation.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"seanflyyy"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"seanflyyy"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"seanflyyy"},"content":"        String command \u003d myObj.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"seanflyyy"},"content":"        return command;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"seanflyyy"},"content":"     * Prints out a line as part of the UI.","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"seanflyyy"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(\"__________________________________________\"","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"seanflyyy"},"content":"                + \"__________________________________________\" + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"seanflyyy"},"content":"     * Prints out good bye message.","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"seanflyyy"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"seanflyyy"},"content":"     * Displays all the tasks in the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"seanflyyy"},"content":"     * @param tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"seanflyyy"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"seanflyyy"},"content":"        tasks.listTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(\"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"seanflyyy"},"content":"     * Displays task after it has been marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"seanflyyy"},"content":"     * @param task The task to be marked.","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"seanflyyy"},"content":"    public void showMarkStatus(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Nice! I\u0027ve marked this seedu.duke.task as done:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + Style.HALF_INDENTATION + task + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"seanflyyy"},"content":"     * Displays task after it has been unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"seanflyyy"},"content":"     * @param task The task to be unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"seanflyyy"},"content":"    public void showUnmarkStatus(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"OK, I\u0027ve marked this seedu.duke.task as not done yet:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + Style.HALF_INDENTATION + task + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"seanflyyy"},"content":"     * Displays teh task that has been added to ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"seanflyyy"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"seanflyyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Got it. I\u0027ve added this seedu.duke.task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + Style.HALF_INDENTATION + task);","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"seanflyyy"},"content":"     * Displays the task after it has been deleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"seanflyyy"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"seanflyyy"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Noted. I\u0027ve removed this seedu.duke.task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + Style.HALF_INDENTATION + task);","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"seanflyyy"},"content":"     * Displays the number of tasks in the list in an appropriate format.","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"seanflyyy"},"content":"     * @param numberOfTasks The number of tasks in the list.","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"seanflyyy"},"content":"    public void displayNumberOfTasks(int numberOfTasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"seanflyyy"},"content":"        String taskOrTasks \u003d numberOfTasks \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Now you have \" + numberOfTasks + \" \"","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"seanflyyy"},"content":"                + taskOrTasks + \" in the list.\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"seanflyyy"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"seanflyyy"},"content":"     * Displays the header comment before the matching tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"seanflyyy"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"seanflyyy"},"content":"    public void displayMatchingTasks() {","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(Style.INDENTATION + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":143}},{"path":"src/test/java/seedu/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"class DeadlineTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"    public void deadlineConstructorNoIsDone_normalDeadlineWithDeadlineDateTime_toStringCorrect() {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2019-10-15\");","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"        assertEquals(deadline.toString(), \"[D][ ] return book (by: Oct 15 2019)\");","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"    public void deadlineConstructorIsDone_normalDeadlineWithDeadlineDateTime_toStringCorrect() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2019-10-15\", true);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"        System.out.println(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"        assertEquals(deadline.toString(), \"[D][X] return book (by: Oct 15 2019)\");","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":21}},{"path":"src/test/java/seedu/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"    public void addTask_DeadlineObject_toStringSuccess () {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2019-10-15\");","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"        Task task \u003d tasks.getTask(1);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"        assertEquals(task, deadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"seanflyyy":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seanflyyy"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"seanflyyy"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"seanflyyy"},"content":"event project meeting /at 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"seanflyyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"seanflyyy"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"seanflyyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"seanflyyy"},"content":"event do lab /at 2019-10-15","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"seanflyyy"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"seanflyyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"seanflyyy"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"seanflyyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"seanflyyy"},"content":"delete 2","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"seanflyyy"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"seanflyyy"},"content":"todo","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"seanflyyy"},"content":"deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"seanflyyy"},"content":"event","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"seanflyyy"},"content":"mark","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"unmark","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"seanflyyy"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"seanflyyy":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"seanflyyy"},"content":"java -classpath ..\\bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"seanflyyy":1,"-":20}}]

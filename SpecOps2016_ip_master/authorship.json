[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SpecOps2016":1,"-":40}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"[D][ ] return book (by: Oct 15 2019)","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"SpecOps2016":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"SpecOps2016"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"SpecOps2016"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"SpecOps2016"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"SpecOps2016"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"SpecOps2016"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"SpecOps2016"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"SpecOps2016"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":11,"-":80}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"/*","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" * in the user manual at https://docs.gradle.org/7.5.1/userguide/multi_project_builds.html","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"rootProject.name \u003d \u0027ip-master\u0027","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"import components.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"import components.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import components.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import components.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"import components.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"  private Storage storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  private TaskList tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"  private Ui ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"  public Duke(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"    ui \u003d new Ui();","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"    storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"    try {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"      tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"    } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"      ui.showLoadingError();","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"      tasks \u003d new TaskList();","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"  public void run() {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"    tasks.setStorage(storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"    Parser.setUi(ui);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"    Parser.setTaskList(tasks);","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"    ui.getPrompt(sc);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"    new Duke(\"duke.txt\").run();","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SpecOps2016":33,"-":3}},{"path":"src/main/java/components/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" * Represents deadline tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  protected String by;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"  protected LocalDate by2;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"  protected String time;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"  public Deadline(String description, String by) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"    super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"    this.by \u003d by;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"  public Deadline(String description, LocalDate by2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"    super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"    this.by2 \u003d by2;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"   * Returns string representation of Deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"   * @return string representation.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"  @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"  public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"    if (this.by !\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"      return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"      DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"      return \"[D]\" + super.toString() + \" (by: \" + by2.format(formatter) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":40}},{"path":"src/main/java/components/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":" * An exception exclusive to Duke chatbot.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"  public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"    super(errorMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":10}},{"path":"src/main/java/components/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" * Represents event tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  protected String at;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"  protected LocalDate at2;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"  public Event(String description, String at) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"    super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"    this.at \u003d at;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"  public Event(String description, LocalDate at2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"    super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"    this.at2 \u003d at2;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"   * Returns string representation of Event.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"   * @return string representation.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"  @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"  public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"    if (this.at !\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"      return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"      DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"      return \"[E]\" + super.toString() + \" (at: \" + at2.format(formatter) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":40}},{"path":"src/main/java/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" * Represents a parser, which tries to understand user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  private static Ui Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"  private static TaskList taskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"  private static Storage storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"   * Connects Ui object with Parser.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"   * @param ui Ui to be connected with Parser.","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"  public static void setUi(Ui ui) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"    Parser.Ui \u003d ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"   * Connects TaskList object with Parser.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"   * @param taskList taskList to be connected with Parser.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"  public static void setTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"    Parser.taskList \u003d taskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"   * Parses and trying to make sense of user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"   * @param line string representation of user input.","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"   * @throws DukeException If user input is incoherent.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"  public static void parseLine(String line) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"    if (line.equals(\"bye\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"SpecOps2016"},"content":"      System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"SpecOps2016"},"content":"      System.exit(0);","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.equals(\"list\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"SpecOps2016"},"content":"      taskList.showTasks();","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"unmark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"SpecOps2016"},"content":"      if (line.equals(\"unmark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"SpecOps2016"},"content":"        throw new DukeException(\"☹ OOPS!!! The description of a mark cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"SpecOps2016"},"content":"        int num \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"SpecOps2016"},"content":"        taskList.setTaskStatus(num - 1, false);","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"mark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"SpecOps2016"},"content":"      if (line.equals(\"mark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"SpecOps2016"},"content":"        throw new DukeException(\"☹ OOPS!!! The description of a mark cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"SpecOps2016"},"content":"        int num \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"SpecOps2016"},"content":"        taskList.setTaskStatus(num - 1, true);","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"find\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"SpecOps2016"},"content":"      taskList.findLine(line.substring(5));","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"todo\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"SpecOps2016"},"content":"      if (line.equals(\"todo\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"SpecOps2016"},"content":"        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"SpecOps2016"},"content":"        String d1 \u003d line.substring(5);","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"SpecOps2016"},"content":"        Todo test \u003d new Todo(d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"SpecOps2016"},"content":"        taskList.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"deadline\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"SpecOps2016"},"content":"      if (line.equals(\"deadline\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"SpecOps2016"},"content":"        throw new DukeException(\"☹ OOPS!!! The description of a unmark cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"SpecOps2016"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(9, line.indexOf(\"/\") - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"SpecOps2016"},"content":"          String var \u003d line.substring(line.indexOf(\"/\") + 4, line.length());","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"SpecOps2016"},"content":"          LocalDate d1 \u003d LocalDate.parse(var);","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"SpecOps2016"},"content":"          Deadline test \u003d new Deadline(description, d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"SpecOps2016"},"content":"          taskList.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"SpecOps2016"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(9, line.indexOf(\"/\") - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"SpecOps2016"},"content":"          String by \u003d line.substring(line.indexOf(\"/\") + 4, line.length());","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"SpecOps2016"},"content":"          String time \u003d line.substring(line.length() - 4, line.length());","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"SpecOps2016"},"content":"          Deadline test \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"SpecOps2016"},"content":"          taskList.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"SpecOps2016"},"content":"      if (line.equals(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"SpecOps2016"},"content":"        throw new DukeException(\"☹ OOPS!!! The description of a unmark cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"SpecOps2016"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(6, line.indexOf(\"/\") - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"SpecOps2016"},"content":"          LocalDate d1 \u003d LocalDate.parse(line.substring(line.indexOf(\"/\") + 4));","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"SpecOps2016"},"content":"          Event test \u003d new Event(description, d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"SpecOps2016"},"content":"          taskList.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"SpecOps2016"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(6, line.indexOf(\"/\") - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"SpecOps2016"},"content":"          String at \u003d line.substring(line.indexOf(\"/\") + 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"SpecOps2016"},"content":"          Event test \u003d new Event(description, at);","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"SpecOps2016"},"content":"          taskList.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"delete\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"SpecOps2016"},"content":"      if (line.equals(\"delete\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"SpecOps2016"},"content":"        throw new DukeException(\"☹ OOPS!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"SpecOps2016"},"content":"        int removal \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"SpecOps2016"},"content":"    } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"SpecOps2016"},"content":"      throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\");","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":116,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"SpecOps2016"},"content":"  public static void parseLineStorage(String line, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"SpecOps2016"},"content":"    if (line.contains(\"[T]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"SpecOps2016"},"content":"      if (line.contains(\"[X]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"SpecOps2016"},"content":"        String d1 \u003d line.substring(7);","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"SpecOps2016"},"content":"        Todo test \u003d new Todo(d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"SpecOps2016"},"content":"        test.setStatus(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"SpecOps2016"},"content":"        storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"SpecOps2016"},"content":"      } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"SpecOps2016"},"content":"        String d1 \u003d line.substring(7);","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"SpecOps2016"},"content":"        Todo test \u003d new Todo(d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"SpecOps2016"},"content":"        storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"[D]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"SpecOps2016"},"content":"      try {","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"SpecOps2016"},"content":"        if (line.contains(\"[X]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":134,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"SpecOps2016"},"content":"          String var \u003d line.substring(line.indexOf(\":\") + 2, line.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"SpecOps2016"},"content":"          LocalDate d1 \u003d LocalDate.parse(var);","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"SpecOps2016"},"content":"          Deadline test \u003d new Deadline(description, d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"SpecOps2016"},"content":"          test.setStatus(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"SpecOps2016"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 7);","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"SpecOps2016"},"content":"          String var \u003d line.substring(line.indexOf(\":\") + 2, line.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"SpecOps2016"},"content":"          LocalDate d1 \u003d LocalDate.parse(var);","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"SpecOps2016"},"content":"          Deadline test \u003d new Deadline(description, d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"SpecOps2016"},"content":"      } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"SpecOps2016"},"content":"        if (line.contains(\"[X]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":149,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"SpecOps2016"},"content":"          String by \u003d line.substring(line.indexOf(\":\") + 2, line.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"SpecOps2016"},"content":"          Deadline test \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"SpecOps2016"},"content":"          test.setStatus(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"SpecOps2016"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"SpecOps2016"},"content":"          String by \u003d line.substring(line.indexOf(\":\") + 2, line.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"SpecOps2016"},"content":"          Deadline test \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-28"},{"lineNumber":158,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"SpecOps2016"},"content":"    } else if (line.contains(\"[E]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":162,"author":{"gitId":"SpecOps2016"},"content":"      try {","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"SpecOps2016"},"content":"        if (line.contains(\"[X]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"SpecOps2016"},"content":"          LocalDate d1 \u003d LocalDate.parse(line.substring(line.indexOf(\":\") + 2, line.length() - 1));","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"SpecOps2016"},"content":"          Event test \u003d new Event(description, d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":167,"author":{"gitId":"SpecOps2016"},"content":"          test.setStatus(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"SpecOps2016"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":170,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":171,"author":{"gitId":"SpecOps2016"},"content":"          LocalDate d1 \u003d LocalDate.parse(line.substring(line.indexOf(\":\") + 2, line.length() - 1));","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"SpecOps2016"},"content":"          Event test \u003d new Event(description, d1);","lastModifiedDate":"2022-08-28"},{"lineNumber":173,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":174,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":175,"author":{"gitId":"SpecOps2016"},"content":"      } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":176,"author":{"gitId":"SpecOps2016"},"content":"        if (line.contains(\"[X]\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"SpecOps2016"},"content":"          String at \u003d line.substring(line.indexOf(\":\") + 2, line.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":179,"author":{"gitId":"SpecOps2016"},"content":"          Event test \u003d new Event(description, at);","lastModifiedDate":"2022-08-28"},{"lineNumber":180,"author":{"gitId":"SpecOps2016"},"content":"          test.setStatus(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":181,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"SpecOps2016"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"SpecOps2016"},"content":"          String description \u003d line.substring(7, line.indexOf(\":\") - 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":184,"author":{"gitId":"SpecOps2016"},"content":"          String at \u003d line.substring(line.indexOf(\":\") + 2, line.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"SpecOps2016"},"content":"          Event test \u003d new Event(description, at);","lastModifiedDate":"2022-08-28"},{"lineNumber":186,"author":{"gitId":"SpecOps2016"},"content":"          storage.add(test);","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"SpecOps2016"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":189,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":191,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":192,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-28"},{"lineNumber":193,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":194,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"SpecOps2016":194}},{"path":"src/main/java/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.io.File;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":" * Represents storage, which stores user\u0027s inputted tasks in a text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"  private File f;","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"  private ArrayList\u003cTask\u003e ls;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"  public Storage(String filepath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"    ls \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"    f \u003d new File(filepath);","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"   * Writes user\u0027s inputted tasks into a text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"   * @param filePath  path of text file to br written onto.","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"   * @param textToAdd text to be written onto text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"   * @throws IOException If file is not to be found.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"  public void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"    FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"    fw.write(textToAdd);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"    fw.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"   * deletes user\u0027s inputted tasks from a text file.","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"SpecOps2016"},"content":"   * @param filePath path of text file to br deleted from.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"SpecOps2016"},"content":"   * @param iterate  ArrayList of tasks that are not deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"   * @throws IOException If file is not to be found.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"SpecOps2016"},"content":"  public void deleteFromFile(String filePath, ArrayList\u003cTask\u003e iterate) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"SpecOps2016"},"content":"    FileWriter fw \u003d new FileWriter(\"temp.txt\", true);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"SpecOps2016"},"content":"    File f \u003d new File(\"temp.txt\");","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"SpecOps2016"},"content":"    for (int i \u003d 0; i \u003c iterate.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"SpecOps2016"},"content":"      fw.write(iterate.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"SpecOps2016"},"content":"    fw.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"SpecOps2016"},"content":"    Files.delete(Paths.get(filePath));","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"SpecOps2016"},"content":"    File g \u003d new File(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"SpecOps2016"},"content":"    f.renameTo(g);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"SpecOps2016"},"content":"   * add tasks into an ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"SpecOps2016"},"content":"   * @param task task to be added into ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"SpecOps2016"},"content":"  public void add(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"SpecOps2016"},"content":"    ls.add(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"SpecOps2016"},"content":"   * load tasks into an ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"SpecOps2016"},"content":"   * @returns ArrayList of tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"SpecOps2016"},"content":"   * @throws DukeException If text file is not found","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"SpecOps2016"},"content":"  public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"SpecOps2016"},"content":"    try {","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"SpecOps2016"},"content":"      Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"SpecOps2016"},"content":"      while (s.hasNext()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"SpecOps2016"},"content":"        String line \u003d s.nextLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"SpecOps2016"},"content":"        Parser.parseLineStorage(line, this);","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"SpecOps2016"},"content":"      s.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"SpecOps2016"},"content":"      return ls;","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"SpecOps2016"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"SpecOps2016"},"content":"      throw new DukeException(\"duke.txt is not found!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":88}},{"path":"src/main/java/components/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":" * Represents task, which a user\u0027s inputs.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"public class Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"  protected String description;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"  protected boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  protected LocalDate date;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"  public Task(String description) {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"    this.description \u003d description;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"   * get status icon of a task, with \"X\" representing completion and","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"   * a blank representing incompletion.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"   * @returns task task to be added into ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"    return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"   * Returns string representation of Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"   * @return string representation.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"  @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"  public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"    return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"   * sets status of task to be completed or not.","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"SpecOps2016"},"content":"   * @param value true represents completion while false represents incompletion.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"  public void setStatus(boolean value) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"SpecOps2016"},"content":"    this.isDone \u003d value;","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":49}},{"path":"src/main/java/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" * Represents TaskList, which keeps tracks of all the user\u0027s inputted tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"  private ArrayList\u003cTask\u003e ls;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  private Storage storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"  private ArrayList\u003cString\u003e tracker \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"  public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"    this.ls \u003d tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"  public TaskList() {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"    this.ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"   * Connects storage with TaskList.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"   * @param storage Storage to be connected with","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"  public void setStorage(Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"    this.storage \u003d storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"   * shows the list of tasks the user has inputted.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"  public void showTasks() {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"    for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"      System.out.println(i + 1 + \".\" + \" \" + ls.get(i).toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"SpecOps2016"},"content":"   * add tasks into an ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"SpecOps2016"},"content":"   * @param task task to be added into ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"SpecOps2016"},"content":"  public void add(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"SpecOps2016"},"content":"    ls.add(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(task.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"SpecOps2016"},"content":"    String file2 \u003d \"duke.txt\";","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"SpecOps2016"},"content":"    try {","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"SpecOps2016"},"content":"      storage.writeToFile(file2, task.toString() + System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"SpecOps2016"},"content":"    } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"SpecOps2016"},"content":"      System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"Now you have\" + \" \" + ls.size() + \" \" + \"tasks in the list.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"SpecOps2016"},"content":"   * remove tasks from ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"SpecOps2016"},"content":"   * @param task index of task to be removed from ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"SpecOps2016"},"content":"  public void remove(int task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(ls.get(task).toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"SpecOps2016"},"content":"    ls.remove(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"SpecOps2016"},"content":"    String file2 \u003d \"duke.txt\";","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"SpecOps2016"},"content":"    try {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"SpecOps2016"},"content":"      storage.deleteFromFile(file2, ls);","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"SpecOps2016"},"content":"    } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"SpecOps2016"},"content":"      System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"Now you have\" + \" \" + ls.size() + \" \" + \"tasks in the list.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"SpecOps2016"},"content":"   * mark task to completed or not.","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"SpecOps2016"},"content":"   * @param index  index of task to be marked.","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"SpecOps2016"},"content":"   * @param status mark task to be completed with true or not completed with false.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"SpecOps2016"},"content":"  public void setTaskStatus(int index, boolean status) {","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"SpecOps2016"},"content":"    ls.get(index).setStatus(false);","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(ls.get(index).toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"SpecOps2016"},"content":"  public void findLine(String s) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"SpecOps2016"},"content":"    boolean stop \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"SpecOps2016"},"content":"    for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"SpecOps2016"},"content":"      if (ls.get(i).toString().contains(s)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"SpecOps2016"},"content":"        this.tracker.add(ls.get(i).toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"SpecOps2016"},"content":"        stop \u003d true;","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"SpecOps2016"},"content":"    if (stop) {","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"SpecOps2016"},"content":"      System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"SpecOps2016"},"content":"      for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"SpecOps2016"},"content":"        System.out.println(i + 1 + \".\" + \" \" + tracker.get(i));","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"SpecOps2016"},"content":"    } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"SpecOps2016"},"content":"      throw new DukeException(\"No matching tasks\");","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":108}},{"path":"src/main/java/components/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":" * Represents deadline tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"  public Todo(String description) {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"    super(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"   * Returns string representation of Deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"   * @return string representation.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"  @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"  public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":21}},{"path":"src/main/java/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"package components;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":" * Represents Ui, or the user\u0027s interface.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"  private String userInput;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"  public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"SpecOps2016"},"content":"   * gets user input formatted into strings and then to be read.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"SpecOps2016"},"content":"   * @param sc scanner object which contains the text.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"SpecOps2016"},"content":"  public void getPrompt(Scanner sc) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"SpecOps2016"},"content":"    String line \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"SpecOps2016"},"content":"    while (sc.hasNext()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"SpecOps2016"},"content":"      try {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"SpecOps2016"},"content":"        line \u003d sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"SpecOps2016"},"content":"        Parser.parseLine(line);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"SpecOps2016"},"content":"      } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"SpecOps2016"},"content":"        e.printStackTrace();","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"SpecOps2016"},"content":"      }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"SpecOps2016"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"SpecOps2016"},"content":"   * shows error when there is one during loading.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"SpecOps2016"},"content":"  public void showLoadingError() {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(\"duke.txt not found!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"SpecOps2016"},"content":"  /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"SpecOps2016"},"content":"   * displays Exception that is thrown.","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"SpecOps2016"},"content":"   *","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"SpecOps2016"},"content":"   * @param e exception that is thrown.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"SpecOps2016"},"content":"   */","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"SpecOps2016"},"content":"  public void showExceptionError(Exception e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"SpecOps2016"},"content":"    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"SpecOps2016":51}},{"path":"src/tests/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"  @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"  public void testDeadline() {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"    assertEquals(\"[D][] return brush (by: Oct 15 2019)\",","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"        new Deadline(\"return brush\", \"2019-10-15\").toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"SpecOps2016":12}},{"path":"src/tests/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"public class EventTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"  @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"  public void testDeadline() {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"    assertEquals(\"[E][] return brush (at: Oct 15 2019)\",","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"        new Event(\"return brush\", \"2019-10-15\").toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"SpecOps2016":13}},{"path":"src/tests/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"SpecOps2016"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"SpecOps2016"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"  @Test","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"SpecOps2016"},"content":"  public void testToDo() {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"SpecOps2016"},"content":"    assertEquals(\"[T][] borrow book\", new ToDo(\"borrow book\").toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"SpecOps2016"},"content":"  }","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"SpecOps2016"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"SpecOps2016":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SpecOps2016"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"SpecOps2016"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"SpecOps2016"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"SpecOps2016":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"SpecOps2016"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SpecOps2016":1,"-":20}}]

[{"path":"src/main/java/myDuke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":" * This class encapsulates the idea of a deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for a deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"     * @param description what is the task","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"     * @param status whether it has been completed","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"     * @param date when is the task due","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"    public Deadline(String description, boolean status, LocalDateTime date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"        super(description, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"     * Converts the deadline to string representation to be stored in text file","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"        String status \u003d super.getStatus() ? \"T\" : \"F\";","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"        return \"D | \" + status + \" | \" + super.toString() + \" | \" + date.toString() + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"     * Converts the deadline to string representation for user","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"therealdaofu"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + super.toString() +","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"therealdaofu"},"content":"                \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"HH:mm MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"therealdaofu":41}},{"path":"src/main/java/myDuke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":" * This class represents a chat bot.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"    private static boolean isEnd;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for duke","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"     * @param filePath absolute file path of the storage file","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"        isEnd \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"        storage.loadFromFile(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"        ui \u003d new Ui(tasks, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"     * Runs the chat bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"        Scanner myScanner \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"        ui.welcome();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"        while (!isEnd) {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"                ui.Response(myScanner.nextLine());","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"            } catch (DukeException e){","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"therealdaofu"},"content":"                System.out.println(\"Please input the date in the ISO-8601 format\\n\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"therealdaofu"},"content":"                        \"For example: 2022-08-20T12:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"therealdaofu"},"content":"        myScanner.close();","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"therealdaofu"},"content":"     * Stops the chat bot.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"therealdaofu"},"content":"    public static void stop() {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"therealdaofu"},"content":"        isEnd \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"therealdaofu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"therealdaofu"},"content":"        new Duke(\"C:\\\\Users\\\\xudao\\\\Documents\\\\nus\\\\year 2\\\\sem 1\\\\\" +","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"therealdaofu"},"content":"                \"2103t\\\\git stuff\\\\individual project\\\\src\\\\data\\\\storage.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"therealdaofu":53,"-":3}},{"path":"src/main/java/myDuke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":" * This class encapsulates the exceptions that are specific to chatbot","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for exception","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"     * @param message what is the error","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"therealdaofu":13}},{"path":"src/main/java/myDuke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":" * This class encapsulates the idea of a event.","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":"    private String duration;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for a event.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"     * @param description what the event is","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"     * @param status whether it has been done","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"     * @param duration when the event will be held","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"    public Event(String description, boolean status, String duration) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"        super(description, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"     * Converts the event to string representation to be stored in text file","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"        String status \u003d super.getStatus() ? \"T\" : \"F\";","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"        return \"E | \" + status + \" | \" + super.toString() + \" | \" + duration + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"     * Converts the event to string representation for user","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + super.toString() + \"(at: \" + this.duration + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"therealdaofu":37}},{"path":"src/main/java/myDuke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":" * This class deals with loading and reading tasks from the file, and also saving to the file","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"    //this is the physical file saving the items","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"    private File STORAGEFILE;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"    private BufferedReader reader;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for the memory","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"        STORAGEFILE \u003d new File(filepath);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"     * This function reads the data from the file and stores it into the given taskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"     * @param taskLists the taskList you want to store the data in","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"    public void loadFromFile(TaskList taskLists) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"            this.reader \u003d new BufferedReader(new FileReader(STORAGEFILE));","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"            String currentLine;","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"            boolean status;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"            while((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"                String type \u003d currentLine.substring(0, 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"therealdaofu"},"content":"                status \u003d currentLine.substring(4, 5).equals(\"T\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"therealdaofu"},"content":"                switch(type) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"therealdaofu"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"therealdaofu"},"content":"                        taskLists.add(new ToDo(currentLine.substring(8), status));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"therealdaofu"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"therealdaofu"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"therealdaofu"},"content":"                        int divider \u003d currentLine.substring(8).indexOf(\"|\") + 8;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"therealdaofu"},"content":"                        taskLists.add(new Deadline(currentLine.substring(8, divider - 1),","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"therealdaofu"},"content":"                                status, LocalDateTime.parse(currentLine.substring(divider + 2))));","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"therealdaofu"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"therealdaofu"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"therealdaofu"},"content":"                        int divider_2 \u003d currentLine.substring(8).indexOf(\"|\") + 8;","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"therealdaofu"},"content":"                        taskLists.add(new Event(currentLine.substring(8, divider_2 - 1),","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"therealdaofu"},"content":"                                status, currentLine.substring(divider_2 + 2)));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"therealdaofu"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"therealdaofu"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"therealdaofu"},"content":"            reader.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"therealdaofu"},"content":"        catch(IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"therealdaofu"},"content":"            System.out.print(\"Invalid Path for storage file\");","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"therealdaofu"},"content":"     * This functions stores the data from the taskList into the file","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"therealdaofu"},"content":"     * @param taskLists given taskList","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"therealdaofu"},"content":"    public void saveToFile(TaskList taskLists) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"therealdaofu"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(taskLists.getNumOfTask());","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"therealdaofu"},"content":"            for (int i \u003d 0; i \u003c taskLists.getNumOfTask(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"therealdaofu"},"content":"                this.writer \u003d new BufferedWriter(new FileWriter(STORAGEFILE));","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"therealdaofu"},"content":"                writer.write(taskLists.getTask(i).getDescription());","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"therealdaofu"},"content":"                System.out.println(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"therealdaofu"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"therealdaofu"},"content":"        catch(IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"therealdaofu"},"content":"            System.out.print(\"Invalid Path for storage file\");","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"therealdaofu":80}},{"path":"src/main/java/myDuke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":" * This class encapsulates the idea of a generic task.","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":"    private String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for a task.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"     * @param description what the task is","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"     * @param status whether the task is completed","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"     * Returns a string representation of the status of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"     * @return status representation in the form [X] or [ ]","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"     * String representation of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"        return description;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"     * String representation of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"therealdaofu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"therealdaofu"},"content":"        return description;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"therealdaofu"},"content":"     * Returns the status of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"therealdaofu"},"content":"     * @return a boolean","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"therealdaofu"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"therealdaofu"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"therealdaofu"},"content":"    };","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"therealdaofu"},"content":"     * Marks the current task as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"therealdaofu"},"content":"    public void markasDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"therealdaofu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"therealdaofu"},"content":"     * Marks the current task as incomplete.","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"therealdaofu"},"content":"    public void markasNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"therealdaofu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"therealdaofu":64}},{"path":"src/main/java/myDuke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":" * This class contains a list of tasks and manages it.","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"    //this is where the tasks are stored","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"    private ArrayList\u003cTask\u003e taskLists;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for tasklist.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"        this.taskLists \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"     * Returns the task with the given index.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"     * @param index index of the task you want to retrieve","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"     * @return the stored task","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"        return taskLists.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"     * Returns the number of tasks stored","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"     * @return number of tasks stored","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"    public int getNumOfTask() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"        return taskLists.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"     * Adds the given task into the taskList","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"     * @param task given task","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"therealdaofu"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"therealdaofu"},"content":"        taskLists.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"therealdaofu"},"content":"     * Saves the given task.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"therealdaofu"},"content":"     * @param task given task","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"therealdaofu"},"content":"    public void saveTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"therealdaofu"},"content":"        taskLists.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"therealdaofu"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"therealdaofu"},"content":"     * @param index given index of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"therealdaofu"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"therealdaofu"},"content":"    public void markTask(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"therealdaofu"},"content":"        if (checkValidIndex(index)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"therealdaofu"},"content":"            Task current \u003d taskLists.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"therealdaofu"},"content":"            if (current.getStatus()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The task you want to mark is already marked.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"therealdaofu"},"content":"            current.markasDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"therealdaofu"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"therealdaofu"},"content":"            throw new DukeException(\"☹ OOPS!!! The task you want to mark is not here.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"therealdaofu"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"therealdaofu"},"content":"     * @param index given index of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"therealdaofu"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"therealdaofu"},"content":"    public void unMarkTask(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"therealdaofu"},"content":"        if (index \u003e -1 \u0026\u0026 index \u003c taskLists.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"therealdaofu"},"content":"            Task current \u003d taskLists.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"therealdaofu"},"content":"            if (!current.getStatus()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The task you want to mark is already marked.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"therealdaofu"},"content":"            current.markasNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"therealdaofu"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"therealdaofu"},"content":"            throw new DukeException(\"☹ OOPS!!! The task you want to mark is not here.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"therealdaofu"},"content":"     * Deletes the tasks with the given index","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"therealdaofu"},"content":"     * @param index given index","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"therealdaofu"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"therealdaofu"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"therealdaofu"},"content":"        if (checkValidIndex(index)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"therealdaofu"},"content":"            taskLists.remove(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"therealdaofu"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"therealdaofu"},"content":"            throw new DukeException(\"☹ OOPS!!! The The task you want to delete is not here.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"therealdaofu"},"content":"    private boolean checkValidIndex(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"therealdaofu"},"content":"        return index \u003e -1 \u0026\u0026 index \u003c taskLists.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"therealdaofu"},"content":"     * Returns the string representation of the stored tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"therealdaofu"},"content":"     * @return a table listing all the stored tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"therealdaofu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"therealdaofu"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"therealdaofu"},"content":"        for (int i \u003d 0; i \u003c taskLists.size(); i ++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"therealdaofu"},"content":"            Task current \u003d taskLists.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"therealdaofu"},"content":"            output \u003d output + String.valueOf(i + 1) + \".\" + current.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"therealdaofu"},"content":"            if (i !\u003d taskLists.size() - 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"therealdaofu"},"content":"                output \u003d output + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"therealdaofu"},"content":"        return output;","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"therealdaofu"},"content":"     * Returns a string detailing how many tasks are stored.","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"therealdaofu"},"content":"     * @return a string","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"therealdaofu"},"content":"    public String numOfTaskToString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"therealdaofu"},"content":"        return \"\\n\" + \"Now you have \" + String.valueOf(taskLists.size()) + \" tasks in the list.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"therealdaofu":125}},{"path":"src/main/java/myDuke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":" * This class encapsulates the idea of a todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"     * @param description what the todo is","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"     * @param status whether it has been completed","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"    public ToDo(String description, boolean status) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"        super(description, status);","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"        String status \u003d super.getStatus() ? \"T\" : \"F\";","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"        return \"T | \" + status + \" | \" + super.toString() +  \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"therealdaofu":26}},{"path":"src/main/java/myDuke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"package myDuke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"therealdaofu"},"content":" * This class deals with interaction with the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"therealdaofu"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"therealdaofu"},"content":"    private static final String LINE \u003d \"------------------------------------------\";","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"therealdaofu"},"content":"    private TaskList taskLists;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"therealdaofu"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"therealdaofu"},"content":"     * Constructor for ui.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"therealdaofu"},"content":"     * @param taskLists TaskList used to store the tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"therealdaofu"},"content":"     * @param storage Storage used to save to file","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"therealdaofu"},"content":"    public Ui (TaskList taskLists, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"therealdaofu"},"content":"        this.taskLists \u003d taskLists;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"therealdaofu"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"therealdaofu"},"content":"    private static String wrapper(String content) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"therealdaofu"},"content":"        return LINE + \"\\n\" + content + \"\\n\" + LINE;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"therealdaofu"},"content":"     * This prints the welcome message","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"therealdaofu"},"content":"    public void welcome() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"therealdaofu"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"therealdaofu"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"therealdaofu"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"therealdaofu"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"therealdaofu"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"therealdaofu"},"content":"        System.out.println(wrapper(logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"therealdaofu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"therealdaofu"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"therealdaofu"},"content":"     * This handles how the Duke will respond based on user input","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"therealdaofu"},"content":"     * @param input what the user typed into the terminal","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"therealdaofu"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"therealdaofu"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"therealdaofu"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"therealdaofu"},"content":"    public void Response(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"therealdaofu"},"content":"        String done \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"therealdaofu"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"therealdaofu"},"content":"            Duke.stop();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"therealdaofu"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(taskLists.toString()));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"therealdaofu"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"therealdaofu"},"content":"            if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The task you want to mark cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"therealdaofu"},"content":"            String indexString \u003d input.substring(5);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"therealdaofu"},"content":"            int index \u003d Integer.valueOf(indexString) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"therealdaofu"},"content":"            Task current \u003d taskLists.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"therealdaofu"},"content":"            taskLists.markTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"therealdaofu"},"content":"            storage.saveToFile(taskLists);","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"therealdaofu"},"content":"            String content \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + current.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(content));","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"therealdaofu"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"therealdaofu"},"content":"            if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The task you want to unmark cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"therealdaofu"},"content":"            String indexString \u003d input.substring(7);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"therealdaofu"},"content":"            int index \u003d Integer.valueOf(indexString) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"therealdaofu"},"content":"            Task current \u003d taskLists.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"therealdaofu"},"content":"            taskLists.unMarkTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"therealdaofu"},"content":"            storage.saveToFile(taskLists);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"therealdaofu"},"content":"            String content \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + current.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(content));","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"therealdaofu"},"content":"        } else if(input.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"therealdaofu"},"content":"            if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The task you want to delete cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"therealdaofu"},"content":"            String indexString \u003d input.substring(7);","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"therealdaofu"},"content":"            int index \u003d Integer.valueOf(indexString) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"therealdaofu"},"content":"            Task deletedTask \u003d taskLists.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"therealdaofu"},"content":"            taskLists.deleteTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"therealdaofu"},"content":"            storage.saveToFile(taskLists);","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"therealdaofu"},"content":"            String content \u003d \"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString()","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"therealdaofu"},"content":"                    + taskLists.getNumOfTask();","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(content));","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"therealdaofu"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"therealdaofu"},"content":"            if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"therealdaofu"},"content":"            Task todo \u003d new ToDo(input.substring(5), false);","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"therealdaofu"},"content":"            taskLists.saveTask(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"therealdaofu"},"content":"            storage.saveToFile(taskLists);","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"therealdaofu"},"content":"            String message \u003d done + \"  \" + todo.toString() + taskLists.numOfTaskToString();","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(message));","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"therealdaofu"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"therealdaofu"},"content":"            if (input.length() \u003d\u003d 8) {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"therealdaofu"},"content":"            if (!input.contains(\"/\") || input.length() \u003d\u003d input.indexOf(\"/\") + 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The deadline is missing.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"therealdaofu"},"content":"            int divider \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"therealdaofu"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(input.substring(divider + 4));","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"therealdaofu"},"content":"            Task deadline \u003d new Deadline(input.substring(9, divider), false, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"therealdaofu"},"content":"            taskLists.saveTask(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"therealdaofu"},"content":"            storage.saveToFile(taskLists);","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"therealdaofu"},"content":"            String message \u003d done + \"  \" + deadline.toString() + taskLists.numOfTaskToString();","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(message));","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"therealdaofu"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"therealdaofu"},"content":"            if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"therealdaofu"},"content":"            if (!input.contains(\"/\") || input.length() \u003d\u003d input.indexOf(\"/\") + 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"therealdaofu"},"content":"                throw new DukeException(\"☹ OOPS!!! The duration of the event is missing.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"therealdaofu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"therealdaofu"},"content":"            int divider \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"therealdaofu"},"content":"            Task event \u003d new Event(input.substring(6, divider), false, input.substring(divider + 4));","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"therealdaofu"},"content":"            taskLists.saveTask(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"therealdaofu"},"content":"            storage.saveToFile(taskLists);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"therealdaofu"},"content":"            String message \u003d done + \"  \" + event.toString() + taskLists.numOfTaskToString();","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"therealdaofu"},"content":"            System.out.println(wrapper(message));","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"therealdaofu"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"therealdaofu"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"therealdaofu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"therealdaofu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"therealdaofu"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"therealdaofu":126}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"therealdaofu"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"therealdaofu"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"therealdaofu"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"therealdaofu"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"therealdaofu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"therealdaofu":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"therealdaofu"},"content":"REM if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"therealdaofu":1,"-":20}}]

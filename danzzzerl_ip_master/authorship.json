[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the deadline type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     * @param date the deadline timing of the deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * Show the date of the deadline in a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of the date of the deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    public String deadlineDateStr() {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        return date.getMonth() + \" \" + date.getDayOfMonth() + \" \" + date.getYear();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a deadline task.","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDateStr() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":36}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.io.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.util.*;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     * global variables","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    static Writer newTextLine;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     * Prints the starting message.","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public static void sayGreeting() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * Prints the end message.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"     * Find the text file if it exists, or create it if it does not.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    public static void findFile() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            File myObj \u003d new File(\"./src/main/java/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"File \" + myObj.getName() + \" exists, please continue and type in a task!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"     * Loads the current text file, updates the ArrayList.","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    public static void loadFile() {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"            File myObj \u003d new File(\"./src/main/java/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                String currLine \u003d myReader.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"                String[] currStrArr \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                String firstLetter \u003d currStrArr[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"                String markedDone \u003d currStrArr[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"                String description \u003d currStrArr[2];","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"                if (\"T \".equals(firstLetter)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"                    taskList.add(new Todo(description));","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"                    Task currTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"                    if (markedDone.equals(\"X\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"                        currTask.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"                } else if (\"D \".equals(firstLetter)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"                    taskList.add(new Deadline(description, LocalDate.parse(currStrArr[3])));","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"                    Task currTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"                    if (markedDone.equals(\"X\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"                        currTask.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"                } else if (\"E \".equals(firstLetter)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"                    taskList.add(new Event(description, currStrArr[3]));","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"                    Task currTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"                    if (markedDone.equals(\"X\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"                        currTask.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"            myReader.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"An error occurred. File not found.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"     * Prints the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"    public static void printList() throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"        newTextLine \u003d new BufferedWriter(new FileWriter(\"./src/main/java/duke.txt\", false));","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(i + \". \" + currTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"            if (currTask instanceof Todo) {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"T | \").append(currTask.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"                        .append(currTask.description).append(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"                Deadline currDeadline \u003d (Deadline) currTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"D | \").append(currDeadline.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"                        .append(currDeadline.description).append(\"|\").append(currDeadline.date.toString()).append(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"                Event currEvent \u003d (Event) currTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"E | \").append(currEvent.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"                        .append(currEvent.description).append(\"|\").append(currEvent.at).append(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"        newTextLine.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be mark done","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"    public static void markTaskAsDone(int index) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"            currTask.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"        printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks the specified task as not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be unmarked","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"    public static void unmarkTask(int index) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"danzzzerl"},"content":"            currTask.markUndone();","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"        printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"danzzzerl"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"    public static void deleteTask(int index) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + taskList.get(index - 1));","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"danzzzerl"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" taskList in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"danzzzerl"},"content":"        printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"danzzzerl"},"content":"     * Creates a new task and adds it to the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"danzzzerl"},"content":"     * @param firstWord the first word typed in by the user","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings of the words typed in by the user","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"    public static void createNewTask(String firstWord, String[] strArray) throws DukeException, IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"danzzzerl"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"            case \"todo\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"danzzzerl"},"content":"                // throw exception if no word after to-do","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"                if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"                StringBuilder todoStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":180,"author":{"gitId":"danzzzerl"},"content":"                    todoStr.append(\" \").append(strArray[i]);","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":182,"author":{"gitId":"danzzzerl"},"content":"                String currString \u003d todoStr.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"danzzzerl"},"content":"                taskList.add(new Todo(currString));","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"danzzzerl"},"content":"                Task currTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":186,"author":{"gitId":"danzzzerl"},"content":"                // print message when to-do is added","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-08-25"},{"lineNumber":188,"author":{"gitId":"danzzzerl"},"content":"                        \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":189,"author":{"gitId":"danzzzerl"},"content":"                printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":190,"author":{"gitId":"danzzzerl"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"danzzzerl"},"content":"            case \"deadline\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"danzzzerl"},"content":"                // throw exception if no word after deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"danzzzerl"},"content":"                if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":197,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"danzzzerl"},"content":"                // throw exception if no deadline time","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"danzzzerl"},"content":"                int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"danzzzerl"},"content":"                    if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"danzzzerl"},"content":"                        indexCheck \u003d i;","lastModifiedDate":"2022-08-18"},{"lineNumber":204,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"danzzzerl"},"content":"                if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-18"},{"lineNumber":207,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"This description needs a timing! Add again with /by followed by the deadline timing.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":208,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":210,"author":{"gitId":"danzzzerl"},"content":"                // create deadline description and deadline date","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"danzzzerl"},"content":"                StringBuilder deadlineStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":212,"author":{"gitId":"danzzzerl"},"content":"                String deadline \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"danzzzerl"},"content":"                    if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"danzzzerl"},"content":"                        if (i + 1 \u003e strArray.length - 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"danzzzerl"},"content":"                            System.out.println(\"Please type a deadline after /by\");","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"danzzzerl"},"content":"                        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":218,"author":{"gitId":"danzzzerl"},"content":"                            deadline \u003d strArray[i + 1];","lastModifiedDate":"2022-08-25"},{"lineNumber":219,"author":{"gitId":"danzzzerl"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":220,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":221,"author":{"gitId":"danzzzerl"},"content":"                    } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":222,"author":{"gitId":"danzzzerl"},"content":"                        deadlineStr.append(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":223,"author":{"gitId":"danzzzerl"},"content":"                        deadlineStr.append(strArray[i]);","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":225,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":226,"author":{"gitId":"danzzzerl"},"content":"                String deadlineDescription \u003d deadlineStr.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"                // make sure deadline is in correct format to accept input","lastModifiedDate":"2022-08-25"},{"lineNumber":229,"author":{"gitId":"danzzzerl"},"content":"                String deadlinePattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"danzzzerl"},"content":"                DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(deadlinePattern);","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"danzzzerl"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"danzzzerl"},"content":"                    LocalDate.parse(deadline, deadlineFormatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"danzzzerl"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"danzzzerl"},"content":"                    System.out.println(\"Invalid deadline format! Please type in deadline format as yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":235,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":237,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":238,"author":{"gitId":"danzzzerl"},"content":"                // add deadline tasks to ArrayList once conditions are satisfied","lastModifiedDate":"2022-08-25"},{"lineNumber":239,"author":{"gitId":"danzzzerl"},"content":"                taskList.add(new Deadline(deadlineDescription, LocalDate.parse(deadline)));","lastModifiedDate":"2022-08-25"},{"lineNumber":240,"author":{"gitId":"danzzzerl"},"content":"                Task currTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":241,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":242,"author":{"gitId":"danzzzerl"},"content":"                // print message when deadline is added","lastModifiedDate":"2022-08-25"},{"lineNumber":243,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-08-25"},{"lineNumber":244,"author":{"gitId":"danzzzerl"},"content":"                        \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":245,"author":{"gitId":"danzzzerl"},"content":"                printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":246,"author":{"gitId":"danzzzerl"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":247,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":248,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":249,"author":{"gitId":"danzzzerl"},"content":"            case \"event\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":250,"author":{"gitId":"danzzzerl"},"content":"                // throw exception if no word after event","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"danzzzerl"},"content":"                if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":254,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":255,"author":{"gitId":"danzzzerl"},"content":"                // throw exception if no event time","lastModifiedDate":"2022-08-18"},{"lineNumber":256,"author":{"gitId":"danzzzerl"},"content":"                int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-18"},{"lineNumber":257,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":258,"author":{"gitId":"danzzzerl"},"content":"                    if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":259,"author":{"gitId":"danzzzerl"},"content":"                        indexCheck \u003d i;","lastModifiedDate":"2022-08-18"},{"lineNumber":260,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":261,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":262,"author":{"gitId":"danzzzerl"},"content":"                if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-18"},{"lineNumber":263,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"This description needs a timing! Add again with /at followed by the deadline timing.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":264,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":265,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":266,"author":{"gitId":"danzzzerl"},"content":"                // create event string and deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":267,"author":{"gitId":"danzzzerl"},"content":"                StringBuilder eventStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":268,"author":{"gitId":"danzzzerl"},"content":"                StringBuilder eventTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":269,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":270,"author":{"gitId":"danzzzerl"},"content":"                    if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":271,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":272,"author":{"gitId":"danzzzerl"},"content":"                    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":273,"author":{"gitId":"danzzzerl"},"content":"                        eventStr.append(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":274,"author":{"gitId":"danzzzerl"},"content":"                        eventStr.append(strArray[i]);","lastModifiedDate":"2022-08-18"},{"lineNumber":275,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":276,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":277,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":278,"author":{"gitId":"danzzzerl"},"content":"                    if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":279,"author":{"gitId":"danzzzerl"},"content":"                        for (int j \u003d i + 1; j \u003c strArray.length; j++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":280,"author":{"gitId":"danzzzerl"},"content":"                            eventTime.append(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":281,"author":{"gitId":"danzzzerl"},"content":"                            eventTime.append(strArray[j]);","lastModifiedDate":"2022-08-18"},{"lineNumber":282,"author":{"gitId":"danzzzerl"},"content":"                        }","lastModifiedDate":"2022-08-17"},{"lineNumber":283,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":284,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":285,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":286,"author":{"gitId":"danzzzerl"},"content":"                String eventDescription \u003d eventStr.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":287,"author":{"gitId":"danzzzerl"},"content":"                String eventDate \u003d eventTime.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":288,"author":{"gitId":"danzzzerl"},"content":"                taskList.add(new Event(eventDescription, eventDate));","lastModifiedDate":"2022-08-25"},{"lineNumber":289,"author":{"gitId":"danzzzerl"},"content":"                Task currTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":290,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":291,"author":{"gitId":"danzzzerl"},"content":"                // print message when event is added","lastModifiedDate":"2022-08-25"},{"lineNumber":292,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-08-25"},{"lineNumber":293,"author":{"gitId":"danzzzerl"},"content":"                        \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":294,"author":{"gitId":"danzzzerl"},"content":"                printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":295,"author":{"gitId":"danzzzerl"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":296,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":297,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":298,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":299,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":300,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":301,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":302,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":303,"author":{"gitId":"danzzzerl"},"content":"     * The main function.","lastModifiedDate":"2022-08-18"},{"lineNumber":304,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":306,"author":{"gitId":"danzzzerl"},"content":"        // print out starting message","lastModifiedDate":"2022-08-18"},{"lineNumber":307,"author":{"gitId":"danzzzerl"},"content":"        sayGreeting();","lastModifiedDate":"2022-08-18"},{"lineNumber":308,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":309,"author":{"gitId":"danzzzerl"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":310,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":311,"author":{"gitId":"danzzzerl"},"content":"        // find and load file","lastModifiedDate":"2022-08-25"},{"lineNumber":312,"author":{"gitId":"danzzzerl"},"content":"        findFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":313,"author":{"gitId":"danzzzerl"},"content":"        loadFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":314,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":315,"author":{"gitId":"danzzzerl"},"content":"        label:","lastModifiedDate":"2022-08-25"},{"lineNumber":316,"author":{"gitId":"danzzzerl"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":317,"author":{"gitId":"danzzzerl"},"content":"            // take in input every loop","lastModifiedDate":"2022-08-18"},{"lineNumber":318,"author":{"gitId":"danzzzerl"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":319,"author":{"gitId":"danzzzerl"},"content":"            String[] arrOfInput \u003d input.split(\" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":320,"author":{"gitId":"danzzzerl"},"content":"            String firstWord \u003d arrOfInput[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":321,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":322,"author":{"gitId":"danzzzerl"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":323,"author":{"gitId":"danzzzerl"},"content":"                switch (firstWord) {","lastModifiedDate":"2022-08-25"},{"lineNumber":324,"author":{"gitId":"danzzzerl"},"content":"                    case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":325,"author":{"gitId":"danzzzerl"},"content":"                        // end program when input is bye","lastModifiedDate":"2022-08-18"},{"lineNumber":326,"author":{"gitId":"danzzzerl"},"content":"                        sayGoodbye();","lastModifiedDate":"2022-08-18"},{"lineNumber":327,"author":{"gitId":"danzzzerl"},"content":"                        break label;","lastModifiedDate":"2022-08-25"},{"lineNumber":328,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":329,"author":{"gitId":"danzzzerl"},"content":"                    case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":330,"author":{"gitId":"danzzzerl"},"content":"                        // list out the current list","lastModifiedDate":"2022-08-18"},{"lineNumber":331,"author":{"gitId":"danzzzerl"},"content":"                        printList();","lastModifiedDate":"2022-08-25"},{"lineNumber":332,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":333,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":334,"author":{"gitId":"danzzzerl"},"content":"                    case \"mark\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":335,"author":{"gitId":"danzzzerl"},"content":"                        // to mark an element as done","lastModifiedDate":"2022-08-18"},{"lineNumber":336,"author":{"gitId":"danzzzerl"},"content":"                        int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":337,"author":{"gitId":"danzzzerl"},"content":"                        markTaskAsDone(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":338,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":339,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":340,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":341,"author":{"gitId":"danzzzerl"},"content":"                    case \"unmark\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":342,"author":{"gitId":"danzzzerl"},"content":"                        // to mark an element as undone","lastModifiedDate":"2022-08-18"},{"lineNumber":343,"author":{"gitId":"danzzzerl"},"content":"                        int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":344,"author":{"gitId":"danzzzerl"},"content":"                        unmarkTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":345,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":346,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":347,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":348,"author":{"gitId":"danzzzerl"},"content":"                    case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":349,"author":{"gitId":"danzzzerl"},"content":"                    case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":350,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":351,"author":{"gitId":"danzzzerl"},"content":"                    case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":352,"author":{"gitId":"danzzzerl"},"content":"                        // adding the event to the list","lastModifiedDate":"2022-08-25"},{"lineNumber":353,"author":{"gitId":"danzzzerl"},"content":"                        // adding the deadline to the list","lastModifiedDate":"2022-08-18"},{"lineNumber":354,"author":{"gitId":"danzzzerl"},"content":"                        // adding the to-do to the list","lastModifiedDate":"2022-08-25"},{"lineNumber":355,"author":{"gitId":"danzzzerl"},"content":"                        createNewTask(firstWord, arrOfInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":356,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":357,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":358,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":359,"author":{"gitId":"danzzzerl"},"content":"                    case \"delete\": {","lastModifiedDate":"2022-08-25"},{"lineNumber":360,"author":{"gitId":"danzzzerl"},"content":"                        // deleting a task","lastModifiedDate":"2022-08-18"},{"lineNumber":361,"author":{"gitId":"danzzzerl"},"content":"                        int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":362,"author":{"gitId":"danzzzerl"},"content":"                        deleteTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":363,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":364,"author":{"gitId":"danzzzerl"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":365,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":366,"author":{"gitId":"danzzzerl"},"content":"                    default:","lastModifiedDate":"2022-08-25"},{"lineNumber":367,"author":{"gitId":"danzzzerl"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":368,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":369,"author":{"gitId":"danzzzerl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":370,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":371,"author":{"gitId":"danzzzerl"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":372,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"error occurred!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":373,"author":{"gitId":"danzzzerl"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":374,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":375,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danzzzerl":373,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the DukeException exception.","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * @param errorMessage the message to show for the current exception","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the event type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     * @param at the event timing of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * toString method of an event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of an event task","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * Gets the status of the task, done or undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return whether the task is done or undone","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks a task as undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a task","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the to-do type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a to-do task.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":22}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"D |   | concert|2022-08-25","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"D |   | concert|2022-08-26","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"E |   | yes| no","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"E |   | yes| no no","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"danzzzerl":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"todo study","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"deadline do science homework /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"event party /at June 7th","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":8}}]

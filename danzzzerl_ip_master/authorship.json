[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danzzzerl":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"plugins {","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"repositories {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"dependencies {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"test {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    testLogging {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        showExceptions true","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        showCauses true","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"application {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"shadowJar {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"run{","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":41}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"D |   | concert|2022-08-25","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"T |   | borrow book","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"D | X | this|2022-08-26","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"E |   | chill| tonight","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"E |   | testing event| test date","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"D |   | testing deadline|2022-08-25","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":6}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the deadline type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     * @param date the deadline timing of the deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     * Show the date of the deadline in a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of the date of the deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public String deadlineDateStr() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        return date.getMonth() + \" \" + date.getDayOfMonth() + \" \" + date.getYear();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a deadline task.","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDateStr() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.*;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        Ui.sayGreeting();","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        boolean canQuit \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        while (!canQuit) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"            canQuit \u003d Parser.parse(sc.nextLine(), tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"     * The main function.","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        new Duke(\"./src/main/java/duke.txt\").run();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danzzzerl":33,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the duke.DukeException exception.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * @param errorMessage the message to show for the current exception","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the event type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     * @param at the event timing of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * toString method of an event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of an event task","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public static Task parseTaskFromText(String currLine) {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        String[] currStrArr \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        String firstLetter \u003d currStrArr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        String markedDone \u003d currStrArr[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        String description \u003d currStrArr[2];","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"        if (\"T \".equals(firstLetter)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d new Todo(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"            if (markedDone.equals(\" X \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"            return currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        } else if (\"D \".equals(firstLetter)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d new Deadline(description, LocalDate.parse(currStrArr[3]));","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"            if (markedDone.equals(\" X \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"            return currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d new Event(description, currStrArr[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"            if (markedDone.equals(\" X \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"            return currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    public static boolean parse(String input, TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        String[] arrOfInput \u003d input.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        String firstWord \u003d arrOfInput[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            if (\"bye\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"                // end program when input is bye","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"                Ui.sayGoodbye();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"                return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"list\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"                // list out the current list","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"                Ui.printListStartingMessage();","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"                    Task currTask \u003d tasks.get(i);","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"                    Ui.printTask(i + 1, currTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"mark\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"                // to mark an element as done","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"                tasks.markTaskAsDone(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"                Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"unmark\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"                // to mark an element as undone","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"                int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"                tasks.unmarkTask(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"                Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"todo\".equals(firstWord) || \"deadline\".equals(firstWord) || \"event\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"                // adding the event, deadline or to-do to the list","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"                createNewTask(firstWord, arrOfInput, tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"delete\".equals(firstWord)) {// deleting a task","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"                int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"                tasks.deleteTask(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"                Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"        return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"     * Creates a new task and adds it to the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"     * @param firstWord the first word typed in by the user","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings of the words typed in by the user","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"    public static void createNewTask(String firstWord, String[] strArray, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"        if (\"todo\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no word after to-do","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"            if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder todoStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"                todoStr.append(\" \").append(strArray[i]);","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"            String currString \u003d todoStr.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"            tasks.add(new Todo(currString));","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"            // print message when to-do is added","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"            Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"        } else if (\"deadline\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no word after deadline","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"            if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no deadline time","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"            int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"                    indexCheck \u003d i;","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"            if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"This description needs a timing! Add again with /by followed by the deadline timing.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"            // create deadline description and deadline date","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder deadlineStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"            String deadline \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"danzzzerl"},"content":"                    if (i + 1 \u003e strArray.length - 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"                        System.out.println(\"Please type a deadline after /by\");","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"                        deadline \u003d strArray[i + 1];","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"danzzzerl"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"danzzzerl"},"content":"                    deadlineStr.append(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"                    deadlineStr.append(strArray[i]);","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"danzzzerl"},"content":"            String deadlineDescription \u003d deadlineStr.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"danzzzerl"},"content":"            // make sure deadline is in correct format to accept input","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"danzzzerl"},"content":"            String deadlinePattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"            DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(deadlinePattern);","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"            try {","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"danzzzerl"},"content":"                LocalDate.parse(deadline, deadlineFormatter);","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(\"Invalid deadline format! Please type in deadline format as yyyy-MM-dd\");","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"                return;","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"            // add deadline tasks to ArrayList once conditions are satisfied","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"danzzzerl"},"content":"            tasks.add(new Deadline(deadlineDescription, LocalDate.parse(deadline)));","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"danzzzerl"},"content":"            // print message when deadline is added","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"            Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"danzzzerl"},"content":"        } else if (\"event\".equals(firstWord)) {// throw exception if no word after event","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"danzzzerl"},"content":"            if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no event time","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"            int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"                    indexCheck \u003d i;","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"            if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"This description needs a timing! Add again with /at followed by the deadline timing.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"danzzzerl"},"content":"            // create event string and deadline","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder eventStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder eventTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"danzzzerl"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"danzzzerl"},"content":"                    eventStr.append(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"danzzzerl"},"content":"                    eventStr.append(strArray[i]);","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"danzzzerl"},"content":"                    for (int j \u003d i + 1; j \u003c strArray.length; j++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"danzzzerl"},"content":"                        eventTime.append(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"danzzzerl"},"content":"                        eventTime.append(strArray[j]);","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":201,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"danzzzerl"},"content":"            String eventDescription \u003d eventStr.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"danzzzerl"},"content":"            String eventDate \u003d eventTime.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"danzzzerl"},"content":"            tasks.add(new Event(eventDescription, eventDate));","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"danzzzerl"},"content":"            // print message when event is added","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"danzzzerl"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"danzzzerl"},"content":"            Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":211,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":212,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":213,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":213}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * Loads the current text file, updates the ArrayList.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    public ArrayList\u003cString\u003e loadFile() throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        ArrayList\u003cString\u003e strList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"            File myFile \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"            if (myFile.createNewFile()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"                Ui.showLoadingError(myFile.getName());","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"                Ui.showExistingFile(myFile.getName());","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"            Scanner myReader \u003d new Scanner(myFile);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"            while (myReader.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"                strList.add(myReader.nextLine());","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"            myReader.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"            return strList;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        return strList;","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"     * Writes the following tasks in the taskList to the text file.","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the taskList to write in the text file","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    public static void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        Writer newTextLine \u003d new BufferedWriter(new FileWriter(\"./src/main/java/duke.txt\", false));","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"            if (currTask instanceof Todo) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"T | \").append(currTask.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"                        .append(currTask.description).append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                Deadline currDeadline \u003d (Deadline) currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"D | \").append(currDeadline.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                        .append(currDeadline.description).append(\"|\").append(currDeadline.date.toString()).append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"                Event currEvent \u003d (Event) currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"E | \").append(currEvent.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"                        .append(currEvent.description).append(\"|\").append(currEvent.at).append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        newTextLine.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":66}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * Gets the status of the task, done or undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     * @return whether the task is done or undone","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks a task as undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a task","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":49}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public TaskList(ArrayList\u003cString\u003e strList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        for (String s : strList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"            this.taskList.add(Parser.parseTaskFromText(s));","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be mark done","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"            currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"            Ui.markedDoneMessage(currTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks the specified task as not done.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be unmarked","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    public void unmarkTask(int index) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"            currTask.markUndone();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"            Ui.markUndoneMessage(currTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + taskList.get(index - 1));","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" taskList in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":78}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the to-do type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a to-do task.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Prints the starting message.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"    public static void sayGreeting() {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"     * Prints the end message.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public static void markedDoneMessage(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public static void markUndoneMessage(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public static void showLoadingError(String str) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Loading error! New file: \" + str + \" created, please continue and type in a new task!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    public static void showExistingFile(String str) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"File \" + str + \" exists, please continue and type in a task!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    public static void printListStartingMessage() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    public static void printTask(int i, Task currTask) {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(i + \". \" + currTask);","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":42}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public void taskListSizeTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 1\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 2\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 3\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(3, testList.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    public void taskListGetTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 1\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 2\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 3\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        assertEquals((new Todo(\"todo 3\")).toString(), testList.get(2).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":25}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    public void todoToStringTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        Task todoTestTask \u003d new Todo(\"testing todo\");","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(\"[T][ ]testing todo\", todoTestTask.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void deadlineToStringTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        Task deadlineTestTask \u003d new Deadline(\"testing deadline\", LocalDate.parse(\"2022-08-25\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(\"[D][ ]testing deadline (by: AUGUST 25 2022)\", deadlineTestTask.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public void eventToStringTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        Task eventTestTask \u003d new Event(\"testing event\", \"test date\");","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(\"[E][ ]testing event (at: test date)\", eventTestTask.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"todo study","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"deadline do science homework /by 2022-08-25","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"event party /at June 7th","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danzzzerl":1,"-":20}}]

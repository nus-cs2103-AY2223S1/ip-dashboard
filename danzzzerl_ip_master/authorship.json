[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the deadline type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     * @param by the deadline timing of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a deadline task.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"import java.util.*;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Prints the starting message.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"    public static void sayGreeting() {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     * Prints the end message.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     * Prints the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks The task list","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks The task list","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be mark done","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    public static void markTaskAsDone(ArrayList\u003cTask\u003e tasks, int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            currTask.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks the specified task as not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks The task list","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be unmarked","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"            currTask.markUndone();","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks The task list","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int index) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + tasks.get(index - 1));","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"     * Creates a new task and adds it to the task list.","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"     * @param firstWord the first word typed in by the user","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings of the words typed in by the user","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks The task list","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"    public static void createNewTask(String firstWord, String[] strArray, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"        if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no word after to-do","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"            if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder todoStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"                todoStr.append(\" \").append(strArray[i]);","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"            tasks.add(new Todo(todoStr.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"        } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no word after deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"            if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no deadline time","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"            int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"                    indexCheck \u003d i;","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"            if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"This description needs a timing! Add again with /by followed by the deadline timing.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"            // create deadline string and deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder deadlineStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"                } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"                    deadlineStr.append(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"                    deadlineStr.append(strArray[i]);","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":132,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"danzzzerl"},"content":"                    for (int j \u003d i + 1; j \u003c strArray.length; j++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"                        deadline.append(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"                        deadline.append(strArray[j]);","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"danzzzerl"},"content":"            tasks.add(new Deadline(deadlineStr.toString(), deadline.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"danzzzerl"},"content":"        } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no word after event","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"danzzzerl"},"content":"            if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"danzzzerl"},"content":"            // throw exception if no event time","lastModifiedDate":"2022-08-18"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"            int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":155,"author":{"gitId":"danzzzerl"},"content":"                    indexCheck \u003d i;","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"danzzzerl"},"content":"            if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"This description needs a timing! Add again with /at followed by the deadline timing.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":162,"author":{"gitId":"danzzzerl"},"content":"            // create event string and deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder eventStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"            StringBuilder eventTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-17"},{"lineNumber":165,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"                } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":169,"author":{"gitId":"danzzzerl"},"content":"                    eventStr.append(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"                    eventStr.append(strArray[i]);","lastModifiedDate":"2022-08-18"},{"lineNumber":171,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":173,"author":{"gitId":"danzzzerl"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"                if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"                    for (int j \u003d i + 1; j \u003c strArray.length; j++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"danzzzerl"},"content":"                        eventTime.append(\" \");","lastModifiedDate":"2022-08-17"},{"lineNumber":177,"author":{"gitId":"danzzzerl"},"content":"                        eventTime.append(strArray[j]);","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-17"},{"lineNumber":180,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":181,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":182,"author":{"gitId":"danzzzerl"},"content":"            tasks.add(new Event(eventStr.toString(), eventTime.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1) +","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"danzzzerl"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":185,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":186,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":187,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":188,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":190,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"danzzzerl"},"content":"     * The main function.","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":194,"author":{"gitId":"danzzzerl"},"content":"        // print out starting message","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"danzzzerl"},"content":"        sayGreeting();","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":197,"author":{"gitId":"danzzzerl"},"content":"        // initialise variables","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"danzzzerl"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"danzzzerl"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"danzzzerl"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"danzzzerl"},"content":"            // take in input every loop","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"danzzzerl"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":204,"author":{"gitId":"danzzzerl"},"content":"            String[] arrOfInput \u003d input.split(\" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"danzzzerl"},"content":"            String firstWord \u003d arrOfInput[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":206,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":207,"author":{"gitId":"danzzzerl"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":208,"author":{"gitId":"danzzzerl"},"content":"                if (firstWord.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"danzzzerl"},"content":"                    // end program when input is bye","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"danzzzerl"},"content":"                    sayGoodbye();","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"danzzzerl"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":212,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":213,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"list\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"danzzzerl"},"content":"                    // list out the current list","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"danzzzerl"},"content":"                    printList(taskList);","lastModifiedDate":"2022-08-18"},{"lineNumber":216,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":217,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":218,"author":{"gitId":"danzzzerl"},"content":"                    // to mark an element as done","lastModifiedDate":"2022-08-18"},{"lineNumber":219,"author":{"gitId":"danzzzerl"},"content":"                    int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":220,"author":{"gitId":"danzzzerl"},"content":"                    markTaskAsDone(taskList, index);","lastModifiedDate":"2022-08-18"},{"lineNumber":221,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":222,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":223,"author":{"gitId":"danzzzerl"},"content":"                    // to mark an element as undone","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"danzzzerl"},"content":"                    int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"danzzzerl"},"content":"                    unmarkTask(taskList, index);","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"                    // adding the to-do to the list","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"danzzzerl"},"content":"                    createNewTask(firstWord, arrOfInput, taskList);","lastModifiedDate":"2022-08-18"},{"lineNumber":230,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":232,"author":{"gitId":"danzzzerl"},"content":"                    // adding the deadline to the list","lastModifiedDate":"2022-08-18"},{"lineNumber":233,"author":{"gitId":"danzzzerl"},"content":"                    createNewTask(firstWord, arrOfInput, taskList);","lastModifiedDate":"2022-08-18"},{"lineNumber":234,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":235,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":236,"author":{"gitId":"danzzzerl"},"content":"                    // adding the event to the list","lastModifiedDate":"2022-08-18"},{"lineNumber":237,"author":{"gitId":"danzzzerl"},"content":"                    createNewTask(firstWord, arrOfInput, taskList);","lastModifiedDate":"2022-08-18"},{"lineNumber":238,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":239,"author":{"gitId":"danzzzerl"},"content":"                } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":240,"author":{"gitId":"danzzzerl"},"content":"                    // deleting a task","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"danzzzerl"},"content":"                    int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":242,"author":{"gitId":"danzzzerl"},"content":"                    deleteTask(taskList, index);","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":244,"author":{"gitId":"danzzzerl"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":245,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"danzzzerl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"danzzzerl"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danzzzerl":248,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the DukeException exception.","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * @param errorMessage the message to show for the current exception","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the event type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     * @param at the event timing of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * toString method of an event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of an event task","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * Gets the status of the task, done or undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return whether the task is done or undone","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks a task as undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + this.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a task","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the to-do type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a to-do task.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"todo study","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"deadline do science homework /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"event party /at June 7th","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":8}}]

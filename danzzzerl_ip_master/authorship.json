[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danzzzerl":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"plugins {","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"repositories {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"dependencies {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"test {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    testLogging {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        showExceptions true","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        showCauses true","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"application {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"shadowJar {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"run{","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":56}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"D |   | test dl|2022-01-01","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"E | X | test event| t date","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"T |   | test td2","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"T | X | hello","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the deadline type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * @param date the deadline timing of the deadline task","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Show the date of the deadline in a string.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of the date of the deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    public String getDeadlineDateStr() {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        return date.getMonth() + \" \" + date.getDayOfMonth() + \" \" + date.getYear();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a deadline task.","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineDateStr() + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" * Represents the main Duke class.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * @param filePath path of the file to be used","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"     * Returns Duke\u0027s response to the user\u0027s input.","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    String getResponse(String input) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            Platform.exit();","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            return Ui.sayGoodbye();","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        else {","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"            return Parser.parse(input, tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"danzzzerl":39,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":" * Represents the Duke Exception class to deal with exceptions.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the duke.DukeException exception.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"     * @param errorMessage the message to show for the current exception","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":" * Represents an Event Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the event type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     * @param at the event timing of the event task","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * toString method of an event task.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of an event task","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":31}},{"path":"src/main/java/duke/JavaLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class JavaLauncher {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    private Duke duke \u003d new Duke(\"./src/main/java/duke.txt\");","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ronaldopng.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eriktenhagpng.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * A Parser to make sense from the inputs from the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     * Method to parse a line of text from a text file.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     * @param currLine the line of text from the text file","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @return the Task to be added to the current TaskList","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public static Task parseTaskFromText(String currLine) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        String[] currStrArr \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        String firstLetter \u003d currStrArr[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        String markedDone \u003d currStrArr[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        String description \u003d currStrArr[2];","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"        assert !firstLetter.isEmpty(): \"No string detected from text!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        if (\"T \".equals(firstLetter)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d new Todo(description);","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"            if (markedDone.equals(\" X \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"            return currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"        } else if (\"D \".equals(firstLetter)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d new Deadline(description, LocalDate.parse(currStrArr[3]));","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            if (markedDone.equals(\" X \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"            return currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d new Event(description, currStrArr[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"            if (markedDone.equals(\" X \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"                currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"            return currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"     * Method to parse the input from the user, and add it to the list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"     * @param input the input from the user","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the list of tasks to be edited","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"     * @return the boolean true, to stop the program when bye is inputted","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    public static String parse(String input, TaskList tasks) {","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"        String[] arrOfInput \u003d input.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"        String firstWord \u003d arrOfInput[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"        assert !firstWord.isEmpty(): \"No string detected from input!\";","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"            if (\"list\".equals(firstWord)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"                return Ui.printList(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"mark\".equals(firstWord)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"                return parseMarkTask(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"unmark\".equals(firstWord)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"                return parseUnmarkTask(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"todo\".equals(firstWord)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"                return createNewTodo(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"deadline\".equals(firstWord)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"                return createNewDeadline(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"event\".equals(firstWord)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"                return createNewEvent(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"delete\".equals(firstWord)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"                return parseDeleteTask(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"            } else if (\"find\".equals(firstWord)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"                return parseFindTask(arrOfInput, tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"            return \"Something went wrong \" + e.getMessage();","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"        return \"Error! Please try again.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"     * Method for marking tasks when the command is mark.","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"     * @param arrOfInput array of the words from the input","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the TaskList to access","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"     * @return the String to show after marking the task","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"    public static String parseMarkTask(String[] arrOfInput, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"        if (arrOfInput.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a number after mark!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"        int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"        return tasks.markTaskAsDone(index);","lastModifiedDate":"2022-09-02"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"     * Method for marking tasks as undone when the command is unmark.","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"     * @param arrOfInput array of the words from the input","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the TaskList to access","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"     * @return the String to show after marking the task as undone","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"    public static String parseUnmarkTask(String[] arrOfInput, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"        if (arrOfInput.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a number after unmark!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"        int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"        return tasks.unmarkTask(index);","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"     * Method for deleting tasks when the command is delete.","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"     * @param arrOfInput array of the words from the input","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the TaskList to access","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"     * @return the String to show after deleting a task","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"    public static String parseDeleteTask(String[] arrOfInput, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"        if (arrOfInput.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a number after delete!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"danzzzerl"},"content":"        int index \u003d Integer.parseInt(arrOfInput[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"danzzzerl"},"content":"        return tasks.deleteTask(index);","lastModifiedDate":"2022-09-02"},{"lineNumber":135,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"danzzzerl"},"content":"     * Method for finding tasks when the command is find.","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"danzzzerl"},"content":"     * @param arrOfInput array of the words from the input","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the TaskList to access","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"danzzzerl"},"content":"     * @return the String to show after finding the tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"danzzzerl"},"content":"    public static String parseFindTask(String[] arrOfInput, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"danzzzerl"},"content":"        if (arrOfInput.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a word after find!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"danzzzerl"},"content":"        String str \u003d arrOfInput[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"danzzzerl"},"content":"        return tasks.find(str);","lastModifiedDate":"2022-09-02"},{"lineNumber":151,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"danzzzerl"},"content":"     * Creates a new to-do and adds it to the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings of the words typed in by the user","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the task list of which the task is to be added to","lastModifiedDate":"2022-09-02"},{"lineNumber":159,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"danzzzerl"},"content":"    public static String createNewTodo(String[] strArray, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"danzzzerl"},"content":"        // throw exception if no word after to-do","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"danzzzerl"},"content":"        if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"danzzzerl"},"content":"        StringBuilder todoStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"danzzzerl"},"content":"            todoStr.append(\" \").append(strArray[i]);","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"danzzzerl"},"content":"        String currString \u003d todoStr.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"danzzzerl"},"content":"        tasks.add(new Todo(currString));","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"danzzzerl"},"content":"        Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"danzzzerl"},"content":"        Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"danzzzerl"},"content":"        // print message when to-do is added","lastModifiedDate":"2022-09-02"},{"lineNumber":176,"author":{"gitId":"danzzzerl"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-09-02"},{"lineNumber":177,"author":{"gitId":"danzzzerl"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":178,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":181,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"danzzzerl"},"content":"     * Creates a new deadline and adds it to the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":183,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings of the words typed in by the user","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the task list of which the task is to be added to","lastModifiedDate":"2022-09-09"},{"lineNumber":186,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":187,"author":{"gitId":"danzzzerl"},"content":"    public static String createNewDeadline(String[] strArray, TaskList tasks) throws IOException, DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"danzzzerl"},"content":"        // check for exceptions","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"danzzzerl"},"content":"        deadlineExceptionsCheck(strArray);","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"danzzzerl"},"content":"        String[] deadlineDescDate \u003d deadlineDescDate(strArray);","lastModifiedDate":"2022-09-09"},{"lineNumber":192,"author":{"gitId":"danzzzerl"},"content":"        String deadlineDescription \u003d deadlineDescDate[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":193,"author":{"gitId":"danzzzerl"},"content":"        String deadlineDate \u003d deadlineDescDate[1];","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":195,"author":{"gitId":"danzzzerl"},"content":"        // make sure deadline is in correct format to accept input","lastModifiedDate":"2022-09-09"},{"lineNumber":196,"author":{"gitId":"danzzzerl"},"content":"        String deadlinePattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"danzzzerl"},"content":"        DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(deadlinePattern);","lastModifiedDate":"2022-09-09"},{"lineNumber":198,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"danzzzerl"},"content":"            LocalDate.parse(deadlineDate, deadlineFormatter);","lastModifiedDate":"2022-09-09"},{"lineNumber":200,"author":{"gitId":"danzzzerl"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"danzzzerl"},"content":"            return \"Invalid deadline format! Please type in deadline format as yyyy-MM-dd\";","lastModifiedDate":"2022-09-09"},{"lineNumber":202,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":204,"author":{"gitId":"danzzzerl"},"content":"        // add deadline tasks to ArrayList once conditions are satisfied","lastModifiedDate":"2022-09-09"},{"lineNumber":205,"author":{"gitId":"danzzzerl"},"content":"        tasks.add(new Deadline(deadlineDescription, LocalDate.parse(deadlineDate)));","lastModifiedDate":"2022-09-09"},{"lineNumber":206,"author":{"gitId":"danzzzerl"},"content":"        Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":207,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":208,"author":{"gitId":"danzzzerl"},"content":"        Storage.writeToFile(tasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":209,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":210,"author":{"gitId":"danzzzerl"},"content":"        // print message when deadline is added","lastModifiedDate":"2022-09-09"},{"lineNumber":211,"author":{"gitId":"danzzzerl"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-09-09"},{"lineNumber":212,"author":{"gitId":"danzzzerl"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":213,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":214,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":216,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":217,"author":{"gitId":"danzzzerl"},"content":"     * Method to return the deadline description and date.","lastModifiedDate":"2022-09-09"},{"lineNumber":218,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":219,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings to get the description and date from","lastModifiedDate":"2022-09-09"},{"lineNumber":220,"author":{"gitId":"danzzzerl"},"content":"     * @return the String array containing the deadline description and date","lastModifiedDate":"2022-09-09"},{"lineNumber":221,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":222,"author":{"gitId":"danzzzerl"},"content":"    public static String[] deadlineDescDate(String[] strArray) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":223,"author":{"gitId":"danzzzerl"},"content":"        String[] endArray \u003d new String[2];","lastModifiedDate":"2022-09-09"},{"lineNumber":224,"author":{"gitId":"danzzzerl"},"content":"        StringBuilder deadlineStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":225,"author":{"gitId":"danzzzerl"},"content":"        String deadline \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":226,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":227,"author":{"gitId":"danzzzerl"},"content":"            if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":228,"author":{"gitId":"danzzzerl"},"content":"                if (i + 1 \u003e strArray.length - 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":229,"author":{"gitId":"danzzzerl"},"content":"                    throw new DukeException(\"Please type a deadline after /by\");","lastModifiedDate":"2022-09-09"},{"lineNumber":230,"author":{"gitId":"danzzzerl"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":231,"author":{"gitId":"danzzzerl"},"content":"                    deadline \u003d strArray[i + 1];","lastModifiedDate":"2022-08-27"},{"lineNumber":232,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":233,"author":{"gitId":"danzzzerl"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":234,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":235,"author":{"gitId":"danzzzerl"},"content":"                deadlineStr.append(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":236,"author":{"gitId":"danzzzerl"},"content":"                deadlineStr.append(strArray[i]);","lastModifiedDate":"2022-08-27"},{"lineNumber":237,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":238,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":239,"author":{"gitId":"danzzzerl"},"content":"        endArray[0] \u003d deadlineStr.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":240,"author":{"gitId":"danzzzerl"},"content":"        endArray[1] \u003d deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":241,"author":{"gitId":"danzzzerl"},"content":"        return endArray;","lastModifiedDate":"2022-09-09"},{"lineNumber":242,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":243,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":244,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":245,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":246,"author":{"gitId":"danzzzerl"},"content":"     * Method to check for exceptions for the deadline command.","lastModifiedDate":"2022-09-09"},{"lineNumber":247,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":248,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings to check for exceptions","lastModifiedDate":"2022-09-09"},{"lineNumber":249,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":250,"author":{"gitId":"danzzzerl"},"content":"    public static void deadlineExceptionsCheck(String[] strArray) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":251,"author":{"gitId":"danzzzerl"},"content":"        // throw exception if no word after deadline","lastModifiedDate":"2022-09-09"},{"lineNumber":252,"author":{"gitId":"danzzzerl"},"content":"        if (strArray.length \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":253,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":254,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":255,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":256,"author":{"gitId":"danzzzerl"},"content":"        // throw exception if no deadline time","lastModifiedDate":"2022-09-09"},{"lineNumber":257,"author":{"gitId":"danzzzerl"},"content":"        int indexCheck \u003d 1000;","lastModifiedDate":"2022-08-27"},{"lineNumber":258,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":259,"author":{"gitId":"danzzzerl"},"content":"            if (strArray[i].equals(\"/by\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":260,"author":{"gitId":"danzzzerl"},"content":"                indexCheck \u003d i;","lastModifiedDate":"2022-08-27"},{"lineNumber":261,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":262,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":263,"author":{"gitId":"danzzzerl"},"content":"        if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-08-27"},{"lineNumber":264,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"This description needs a timing! \"","lastModifiedDate":"2022-08-27"},{"lineNumber":265,"author":{"gitId":"danzzzerl"},"content":"                    + \"Add again with /by followed by the deadline timing.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":266,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":267,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":268,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":269,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":270,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":271,"author":{"gitId":"danzzzerl"},"content":"     * Creates a new event and adds it to the task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":272,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":273,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings of the words typed in by the user","lastModifiedDate":"2022-09-09"},{"lineNumber":274,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the task list of which the task is to be added to","lastModifiedDate":"2022-09-09"},{"lineNumber":275,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":276,"author":{"gitId":"danzzzerl"},"content":"    public static String createNewEvent(String[] strArray, TaskList tasks) throws DukeException, IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":277,"author":{"gitId":"danzzzerl"},"content":"        // check for exceptions","lastModifiedDate":"2022-09-09"},{"lineNumber":278,"author":{"gitId":"danzzzerl"},"content":"        eventExceptionsCheck(strArray);","lastModifiedDate":"2022-09-09"},{"lineNumber":279,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":280,"author":{"gitId":"danzzzerl"},"content":"        // create event string and deadline","lastModifiedDate":"2022-08-27"},{"lineNumber":281,"author":{"gitId":"danzzzerl"},"content":"        StringBuilder eventStr \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":282,"author":{"gitId":"danzzzerl"},"content":"        StringBuilder eventTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":283,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":284,"author":{"gitId":"danzzzerl"},"content":"            if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":285,"author":{"gitId":"danzzzerl"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":286,"author":{"gitId":"danzzzerl"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":287,"author":{"gitId":"danzzzerl"},"content":"                eventStr.append(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":288,"author":{"gitId":"danzzzerl"},"content":"                eventStr.append(strArray[i]);","lastModifiedDate":"2022-08-27"},{"lineNumber":289,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":290,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":291,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":292,"author":{"gitId":"danzzzerl"},"content":"            if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":293,"author":{"gitId":"danzzzerl"},"content":"                for (int j \u003d i + 1; j \u003c strArray.length; j++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":294,"author":{"gitId":"danzzzerl"},"content":"                    eventTime.append(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":295,"author":{"gitId":"danzzzerl"},"content":"                    eventTime.append(strArray[j]);","lastModifiedDate":"2022-08-27"},{"lineNumber":296,"author":{"gitId":"danzzzerl"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":297,"author":{"gitId":"danzzzerl"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":298,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":299,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":300,"author":{"gitId":"danzzzerl"},"content":"        String eventDescription \u003d eventStr.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":301,"author":{"gitId":"danzzzerl"},"content":"        String eventDate \u003d eventTime.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":302,"author":{"gitId":"danzzzerl"},"content":"        tasks.add(new Event(eventDescription, eventDate));","lastModifiedDate":"2022-08-27"},{"lineNumber":303,"author":{"gitId":"danzzzerl"},"content":"        Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":304,"author":{"gitId":"danzzzerl"},"content":"        Storage.writeToFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":305,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":306,"author":{"gitId":"danzzzerl"},"content":"        // print message when event is added","lastModifiedDate":"2022-09-02"},{"lineNumber":307,"author":{"gitId":"danzzzerl"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + currTask +","lastModifiedDate":"2022-09-02"},{"lineNumber":308,"author":{"gitId":"danzzzerl"},"content":"                \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":309,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":310,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":311,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":312,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":313,"author":{"gitId":"danzzzerl"},"content":"     * Method to check for exceptions for the event command.","lastModifiedDate":"2022-09-09"},{"lineNumber":314,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":315,"author":{"gitId":"danzzzerl"},"content":"     * @param strArray the array of strings to check for exceptions","lastModifiedDate":"2022-09-09"},{"lineNumber":316,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":317,"author":{"gitId":"danzzzerl"},"content":"    public static void eventExceptionsCheck(String[] strArray) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":318,"author":{"gitId":"danzzzerl"},"content":"        // throw exception if no word after event","lastModifiedDate":"2022-09-09"},{"lineNumber":319,"author":{"gitId":"danzzzerl"},"content":"        if (strArray.length \u003c 2) {","lastModifiedDate":"2022-09-09"},{"lineNumber":320,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":321,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":322,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":323,"author":{"gitId":"danzzzerl"},"content":"        // throw exception if no event time","lastModifiedDate":"2022-09-09"},{"lineNumber":324,"author":{"gitId":"danzzzerl"},"content":"        int indexCheck \u003d 1000;","lastModifiedDate":"2022-09-09"},{"lineNumber":325,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":326,"author":{"gitId":"danzzzerl"},"content":"            if (strArray[i].equals(\"/at\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":327,"author":{"gitId":"danzzzerl"},"content":"                indexCheck \u003d i;","lastModifiedDate":"2022-09-09"},{"lineNumber":328,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":329,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":330,"author":{"gitId":"danzzzerl"},"content":"        if (indexCheck \u003d\u003d 1000) {","lastModifiedDate":"2022-09-09"},{"lineNumber":331,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"This description needs a timing! \"","lastModifiedDate":"2022-09-09"},{"lineNumber":332,"author":{"gitId":"danzzzerl"},"content":"                    + \"Add again with /at followed by the event timing.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":333,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":334,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":335,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":335}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" * A Class that deals with the loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     * The constructor for the Storage class.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * @param filePath path of the file to be used","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * Loads the current text file, updates the ArrayList.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public ArrayList\u003cString\u003e loadFile() throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        ArrayList\u003cString\u003e strList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"            File myFile \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"            Scanner myReader \u003d new Scanner(myFile);","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"            while (myReader.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"                strList.add(myReader.nextLine());","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            myReader.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            return strList;","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"        return strList;","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"     * Writes the following tasks in the taskList to the text file.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the taskList to write in the text file","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"    public static void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        Writer newTextLine \u003d new BufferedWriter(new FileWriter(\"./src/main/java/duke.txt\", false));","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            if (currTask instanceof Todo) {","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"T | \").append(currTask.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"                        .append(currTask.description).append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"                Deadline currDeadline \u003d (Deadline) currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"D | \").append(currDeadline.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"                        .append(currDeadline.description).append(\"|\")","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"                        .append(currDeadline.date.toString()).append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"                Event currEvent \u003d (Event) currTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"                newTextLine.append(\"E | \").append(currEvent.getStatusIcon()).append(\" |\")","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"                        .append(currEvent.description).append(\"|\").append(currEvent.at).append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"        newTextLine.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":69}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":" * Represents the main Task class.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the task","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * Gets the status of the task, done or undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"     * @return whether the task is done or undone","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks a task as undone.","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a task.","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a task","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":54}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" * A Class to store the ArrayList of Tasks of a user, and deal with commands that edit the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     * The constructor for the TaskList class.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    @SafeVarargs","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    public TaskList(ArrayList\u003cString\u003e... strList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        for (ArrayList\u003cString\u003e a : strList) {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"            for (String s : a) {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"                this.taskList.add(Parser.parseTaskFromText(s));","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be mark done","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    public String markTaskAsDone(int index) throws DukeException, IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"            currTask.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"            Storage.writeToFile(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"            return Ui.markedDoneMessage(currTask);","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"     * Unmarks the specified task as not done.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be unmarked","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    public String unmarkTask(int index) throws DukeException, IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"            currTask.markUndone();","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"            Storage.writeToFile(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"            return Ui.markUndoneMessage(currTask);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"danzzzerl"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"danzzzerl"},"content":"     * @param index The index of the task to be deleted","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"danzzzerl"},"content":"    public String deleteTask(int index) throws DukeException, IOException {","lastModifiedDate":"2022-09-02"},{"lineNumber":65,"author":{"gitId":"danzzzerl"},"content":"        if (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"danzzzerl"},"content":"            Task tempTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"danzzzerl"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"danzzzerl"},"content":"            Storage.writeToFile(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":69,"author":{"gitId":"danzzzerl"},"content":"            return \"Noted. I\u0027ve removed this task:\\n  \" + tempTask + \"\\nNow you have \" + taskList.size() +","lastModifiedDate":"2022-09-02"},{"lineNumber":70,"author":{"gitId":"danzzzerl"},"content":"                    \" tasks in the list.\";","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"danzzzerl"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"danzzzerl"},"content":"            throw new DukeException(\"Input a valid task index!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"danzzzerl"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"danzzzerl"},"content":"     * @return the size of the task list","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"danzzzerl"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"danzzzerl"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"danzzzerl"},"content":"     * Returns the task at the index of the array of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"danzzzerl"},"content":"     * @param index the index of the array of tasks that the task is wanted","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"danzzzerl"},"content":"     * @return the task that is at the given index of the array","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"danzzzerl"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"danzzzerl"},"content":"        assert (1 \u003c\u003d index \u0026\u0026 index \u003c\u003d taskList.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"danzzzerl"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"danzzzerl"},"content":"     * Adds the given task to the list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"danzzzerl"},"content":"     * @param task the task to be added to the list of tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"danzzzerl"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"danzzzerl"},"content":"        assert task !\u003d null;","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"danzzzerl"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"danzzzerl"},"content":"     * Finds the tasks in the task list that contain the given string.","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"danzzzerl"},"content":"     * @param str the given string that is used to find the tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"danzzzerl"},"content":"    public String find(String str) {","lastModifiedDate":"2022-09-02"},{"lineNumber":115,"author":{"gitId":"danzzzerl"},"content":"        assert !str.isEmpty();","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"danzzzerl"},"content":"        return Ui.printFoundTasksStart(str, this);","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"danzzzerl"},"content":"     * Returns the String representation of a TaskList object.","lastModifiedDate":"2022-09-02"},{"lineNumber":121,"author":{"gitId":"danzzzerl"},"content":"     * @return the String representation of a TaskList object","lastModifiedDate":"2022-09-02"},{"lineNumber":122,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":123,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":125,"author":{"gitId":"danzzzerl"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2022-09-02"},{"lineNumber":126,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"danzzzerl"},"content":"            res.append(String.format(\"%d. %s\\n\", 1 + i, this.taskList.get(i)));","lastModifiedDate":"2022-09-02"},{"lineNumber":128,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"danzzzerl"},"content":"        return res.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":131}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":" * Represents a To-do Task.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    protected String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"     * Constructor for the to-do type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"     * @param description description of the to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     * toString method of a to-do task.","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"     * @return the string representation of a to-do task","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"danzzzerl":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":" * The Class that deals with user interactions.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":" * @author Denzel Tan","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"     * Prints the end message.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    public static String sayGoodbye() {","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"     * Prints out the message when a task has been marked as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"     * @param task the task to be marked as done","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    public static String markedDoneMessage(Task task) {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"danzzzerl"},"content":"     * Prints out the message when a task has been marked as undone.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"danzzzerl"},"content":"     * @param task the task to be marked as undone","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"danzzzerl"},"content":"    public static String markUndoneMessage(Task task) {","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"danzzzerl"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"danzzzerl"},"content":"     * Prints the current task.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"danzzzerl"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"danzzzerl"},"content":"     * @param tasks the list of tasks to print","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"danzzzerl"},"content":"    public static String printList(TaskList tasks) {","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"danzzzerl"},"content":"        return \"Here is your current task list:\\n\" + tasks;","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"danzzzerl"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"danzzzerl"},"content":"     * Print the starting message output when finding tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"danzzzerl"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"danzzzerl"},"content":"    public static String printFoundTasksStart(String str, TaskList tasks) {","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"danzzzerl"},"content":"        StringBuilder res \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"danzzzerl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"danzzzerl"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"danzzzerl"},"content":"            if (currTask.toString().contains(str)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"danzzzerl"},"content":"                res.append(currTask).append(\"\\n\");","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"danzzzerl"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"danzzzerl"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"danzzzerl"},"content":"        return res.toString();","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"danzzzerl":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"    public void taskListSizeTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 1\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 2\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 3\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(3, testList.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"    public void taskListGetTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 1\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 2\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"        testList.add(new Todo(\"todo 3\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"        assertEquals((new Todo(\"todo 3\")).toString(), testList.get(2).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":25}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"danzzzerl"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"danzzzerl"},"content":"    public void todoToStringTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"danzzzerl"},"content":"        Task todoTestTask \u003d new Todo(\"testing todo\");","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(\"[T][ ]testing todo\", todoTestTask.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"danzzzerl"},"content":"    public void deadlineToStringTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"        Task deadlineTestTask \u003d new Deadline(\"testing deadline\", LocalDate.parse(\"2022-08-25\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(\"[D][ ]testing deadline (by: AUGUST 25 2022)\", deadlineTestTask.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"danzzzerl"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"danzzzerl"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"danzzzerl"},"content":"    public void eventToStringTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"danzzzerl"},"content":"        Task eventTestTask \u003d new Event(\"testing event\", \"test date\");","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"danzzzerl"},"content":"        assertEquals(\"[E][ ]testing event (at: test date)\", eventTestTask.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"danzzzerl"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"danzzzerl"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"danzzzerl":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danzzzerl"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"danzzzerl"},"content":"todo study","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"danzzzerl"},"content":"deadline do science homework /by 2022-08-25","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"danzzzerl"},"content":"event party /at June 7th","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"danzzzerl"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"danzzzerl"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"danzzzerl"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"danzzzerl"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"danzzzerl":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"danzzzerl"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danzzzerl":1,"-":20}}]

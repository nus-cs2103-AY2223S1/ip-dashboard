{"authorDailyContributionsMap":{"parth-io":[{"date":"2022-08-14","commitResults":[{"hash":"4c73152bcbd0b8328a7e450c82ca99c639da0c60","messageTitle":"Add Level-1 Add to .gitignore","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}}]},{"date":"2022-08-15","commitResults":[{"hash":"f18fc419d5c048492625e5ee998b9c0a84ee0075","messageTitle":"Add Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":4}}},{"hash":"beac72131fa347487922a427286a173a2815b135","messageTitle":"Add Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":6}}},{"hash":"16b8039a83013e30743cd358ab182f32dc4b6882","messageTitle":"Add Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":5}}},{"hash":"4f22dab7cf75a54ad9d71c5c295839b66f6159c7","messageTitle":"Add A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":4,"deletions":3},"sh":{"insertions":5,"deletions":5}}},{"hash":"eaa0096178f77c3f4826492d7d6d725a868b38c9","messageTitle":"Add Level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":93,"deletions":59}}},{"hash":"3b633d5b5f77a0f10e7094d87d59e6522c71ce4f","messageTitle":"Add Level-6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":14,"deletions":3}}}]},{"date":"2022-08-18","commitResults":[{"hash":"944d61fc0262660f094754d86589dbd38e721f7b","messageTitle":"Add A-Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":108,"deletions":90}}},{"hash":"2cdc420a83cd1c0288a7c76a38d6fa07d10947ce","messageTitle":"Refactor code for task commands to create new tasks Refactor CustomMessageException to outside of Duke.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":31}}}]},{"date":"2022-08-24","commitResults":[{"hash":"c7677ad0c921960c9f38f937d133eab779badec2","messageTitle":"Refactor code for task commands and follow coding conventions","messageBody":"Common behaviours in task commands cause code duplication.\n\nLet\u0027s simplify how the code parses task commands.\nLet\u0027s follow coding conventions as well.\n","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":79}}},{"hash":"ea4c35d40c79ac25ec1e712e5d5c3970d330a952","messageTitle":"Refactor Task class and subclasses","messageBody":"The enum functionality is split across the Enum class and the Task classes.\n\nLet\u0027s link the two together.\n\nLet\u0027s add the ability for tasks to generate a storage string also.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":57,"deletions":10}}},{"hash":"fd1128946c7e84451ad54c5c04437961d4f222e0","messageTitle":"Implement the save feature","messageBody":"The code does not persist the tasks.\n\nLet\u0027s refactor the Duke class and abstract away the TaskList into a separate class.\n\nLet\u0027s also create an InputParser class to read the input from user or from file.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":259,"deletions":164}}},{"hash":"db76c8ce8e9eed843c9384c9ecafb0430f25239a","messageTitle":"Implement the date/time feature","messageBody":"The code does not parse the date/time the user enters.\n\nLet\u0027s refactor add LocalDateTime and parse the user input.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":26,"deletions":11}}},{"hash":"179ca26ee5dac7ee608e8fce5ec1a0bb8690fd5f","messageTitle":"Fix branch-Level-8 merge conflicts","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":4}}},{"hash":"5cbf8075f0218c0424ea7fda3612546471dc76fa","messageTitle":"Refactor TaskList and Parser into Storage and Ui","messageBody":"TaskList and InputParser are doing too much in one class.\n\nLet\u0027s move functionality out to other classes to achieve separation of concerns.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":270,"deletions":203}}},{"hash":"cd529b3b2328f1270fa314cfdf67273223ec05a2","messageTitle":"Divide classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":3}}}]},{"date":"2022-08-25","commitResults":[{"hash":"e0660580a10059330fb3d69fd0c437e442da1d45","messageTitle":"Add JUnit tests","messageBody":"The code has no tests.\n\nLet\u0027s test methods in Parser and TaskList\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":6}}},{"hash":"1ff778811d18f3517dc7bc76583173cc35c0a1f2","messageTitle":"Create JAR file and improve printing","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":39,"deletions":56}}},{"hash":"c136858558efdebdf09bc7c80059434d81428476","messageTitle":"Add find functionality","messageBody":"Find is not a recognised command.\n\nLet\u0027s add it.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":17}}},{"hash":"b24f3aa2b2402df0bb124b4b572b71f0c201b587","messageTitle":"Add JavaDocs to non-private classes, methods, and fields","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":208,"deletions":12}}},{"hash":"1037a56f93dc9b35cf1d647bec62b2f8fed2f74a","messageTitle":"Fix minor Java coding style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"a7c20d3edc810d8937383a3b05d6dbaa9126bd03","messageTitle":"Fix wildcard import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2022-09-02","commitResults":[{"hash":"2b472b29f7fbc96aa316126af8e5f5641fe47b64","messageTitle":"Add GUI","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":8,"deletions":1},"fxml":{"insertions":37,"deletions":0},"java":{"insertions":338,"deletions":8}}}]},{"date":"2022-09-03","commitResults":[{"hash":"c3060949b006d799f2c2304999a14f0e47fd792a","messageTitle":"Clean up tutorial code","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":20,"deletions":0},"java":{"insertions":12,"deletions":173}}},{"hash":"15fea4a514d3790bc13c874e263803ecfbf227a3","messageTitle":"Add Checkstyle","messageBody":"The project does not follow the recommended style.\n\nLet\u0027s add Checkstyle\n","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":167,"deletions":159}}}]},{"date":"2022-09-04","commitResults":[{"hash":"661db8eb22744c0826e147c3477b12f481c344c3","messageTitle":"GUI: transition to a GUI","messageBody":"Using the CLI-mode is difficult and not visually appealing.\n\nResponses in the CLI mode are also cumbersome to add, with delimitations made using lines and indentations.\n\nLet\u0027s use JavaFX to add a GUI. Let\u0027s also simplify the generation of Duke\u0027s responses in the code.\n\nUsing JavaFX is recommended because JavaFX is a versatile and popular library to create a desktop GUI. The resulting UI is simple and minimalistic.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":155,"deletions":212}}}]},{"date":"2022-09-12","commitResults":[{"hash":"2193365844042a5af1557c80ac019640091619c9","messageTitle":"The code has no assertions.","messageBody":"Assertions are a useful way of checking the code is executing as per our expectations.\n\nLet\u0027s add assertions to TaskList and Parser.java.\n\nThese files have complicated logic.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":18,"deletions":17}}},{"hash":"289664b9026fd246ed96c4944e299a8689a80ac4","messageTitle":"The code has some quality issues.","messageBody":"We need to improve readability.\n\nLet\u0027s remove dead code and unnecessary comments. Let\u0027s also avoid complicated logical expressions. Let\u0027s also make the happy path more prominent, where applicable.\n\nThis commit also fixes #1\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":20}}},{"hash":"eb4262fef6cdae05c7454612feb66113457abbfb","messageTitle":"The code checks for invalid number of arguments in multiple places.","messageBody":"Let\u0027s add this check to Command.java.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":61,"deletions":49}}},{"hash":"39e56343e61d1482cd075a6636e58624917720bb","messageTitle":"Parser.java has a very long method.","messageBody":"This is poor code quality.\n\nLet\u0027s refactor the different Command executions to a separate package.\n","fileTypesAndContributionMap":{"java":{"insertions":348,"deletions":147}}}]},{"date":"2022-09-13","commitResults":[{"hash":"c070cb4118aad213a473286b7501ba08df4125c6","messageTitle":"Let\u0027s polish the use of Streams in TaskList.","messageBody":"Let\u0027s also refactor the different TaskList related classes and methods to a separate package.\n","fileTypesAndContributionMap":{"java":{"insertions":173,"deletions":138}}},{"hash":"63b7f30f0fcbec03262927c522f27ee38c2abba6","messageTitle":"Currently, the code has major issues with code extensibility and flexibility. The code for TaskList and Storage is tightly coupled. The Parser class and TaskList class were doing too much.","messageBody":"This prevents the code from being easily modified.\n\nLet\u0027s simplify TaskList and Parser. Let\u0027s also add to the execute method of the Command classes, so only the execute method dictates the flow.\n\nThis approach allows the code to adhere more closely to the SLAP principle.\n","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":119}}},{"hash":"d242caac4504054edd8fc225ade768475ac25a66","messageTitle":"Let\u0027s improve the code structure by creating a new package duke.gui","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":74,"deletions":67}}}]},{"date":"2022-09-14","commitResults":[{"hash":"85c9334cc30d60cd5dd8dbd197f51bd8bad11c41","messageTitle":"The user is currently unable to undo the previous command.","messageBody":"Let\u0027s add an UNDO command.\n\nRunning an undoable command will store the previous TaskList to a backup file. Storing the previous state over creating an inverse for each command is preferable, as it is simpler to implement.\n","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":30}}},{"hash":"32f427eebd6739936b3215a611ba2a446c2b8615","messageTitle":"Add documentation to the project.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":182,"deletions":13}}}]}]},"authorFileTypeContributionMap":{"parth-io":{"java":1287,"md":172,"fxml":57,"sh":5,"bat":0,"gradle":14,"txt":11}},"authorContributionVariance":{"parth-io":80259.35},"authorDisplayNameMap":{"parth-io":"CS2103-F14-4 GUJA..LESH"}}

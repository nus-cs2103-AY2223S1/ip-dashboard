[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chngchngchng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chngchngchng":4,"-":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import duke.parser.DukeParser;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":" * Main Duke class.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"    private static final String FILE_PATH \u003d \"src/main/java/duke/data.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"    // String array used to store duke.tasks","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"     * The main function to run Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"     * @param args command-line arguments (currently serves no functionality)","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"    // Currently, the main function takes in user input and echoes it to the user","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Hello, I am Duke.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"        // Init variables to use","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"        Storage st \u003d new Storage(FILE_PATH);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"            taskList \u003d st.load();","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(\"I found some previously entered data on your disk, but \"","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"                    + \"encountered the following error when trying to load it:\\n\"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"                    + e.getMessage());","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"        DukeParser parser \u003d new DukeParser(taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"What can I do for you? :)\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"        while (!parser.exitDuke()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"            parser.parseInput(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"                parser.execute(st);","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"                continue;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"                continue;","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"chngchngchng":58,"-":8}},{"path":"src/main/java/duke/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"TODO,,true,,a new todo task,,null","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"DEADLINE,,false,,a new deadline,,01-09-2000 00:00","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"EVENT,,false,,a new event,,06-10-1999 00:00","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chngchngchng":3}},{"path":"src/main/java/duke/data2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"TODO,,false,,new todo,,null","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"DEADLINE,,false,,new deadline,,26-08-2022 23:59","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"EVENT,,false,,ian\u0027s birthday!! :D,,01-09-2022 00:00","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chngchngchng":3}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":" * Main Exception class that Duke uses.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"     * Standard constructor for the DukeException class.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"     * @param message message that the exception will throw","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chngchngchng":16}},{"path":"src/main/java/duke/parser/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.parser;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":" * Handler class that manages user input to duke.Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":" * TODO more JavaDocs","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"public class DukeParser {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    private final String BREAK_LINES \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"    private String keyword;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"    private String restOfInputString;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    private Boolean shouldExit \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"     * Default constructor for the DukeParser object.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"     * @param taskList A reference of duke.Duke\u0027s ArrayList of Tasks","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"    public DukeParser(TaskList taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"     * Checks if an exit command has been given to Duke","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"     * @return whether Duke should be exited or not","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"    public boolean exitDuke() {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"        return this.shouldExit;","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"     * Handles user input, and preps parser for instruction execution.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"     * @param inputString The string that we would like to parse.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"    public void parseInput(String inputString)  {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"        // Sanitise user input first before continuing","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"        String newString \u003d sanitiseUserInput(inputString);","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"        // Grab keyword from instruction","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"        this.keyword \u003d newString.split(\" \")[0].toLowerCase();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"        // Split rest of input string for further parsing","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"        // If there is no rest of input string, then restOfInputString will be \"\".","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"        this.restOfInputString \u003d newString.substring(this.keyword.length()).trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"     * Executes a loaded and parsed instruction.","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"     * @param st Storage that we want to save data to after the instruction has been executed","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"     * @throws DukeException if instruction execution fails","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"    public void execute(Storage st) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"        if (this.keyword \u003d\u003d null) {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"Error: Parser has not been loaded with an instruction yet!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"chngchngchng"},"content":"        if (this.keyword.equals(\"\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"I can\u0027t do anything based off a blank instruction!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"chngchngchng"},"content":"        switch (this.keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"chngchngchng"},"content":"        case \"list\":","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"            this.listInstructionHandler();","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"chngchngchng"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"chngchngchng"},"content":"            this.byeInstructionHandler();","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"chngchngchng"},"content":"        case \"find\":","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"chngchngchng"},"content":"            this.findInstructionHandler();","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"chngchngchng"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"chngchngchng"},"content":"            // Intentional fallthrough","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"chngchngchng"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"chngchngchng"},"content":"            // Intentional fallthrough","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"chngchngchng"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"chngchngchng"},"content":"            this.numericalInstructionHandler();","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"chngchngchng"},"content":"            st.save(this.taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"chngchngchng"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"chngchngchng"},"content":"            // Intentional fallthrough","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"chngchngchng"},"content":"        case \"event\":","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"chngchngchng"},"content":"            // Intentional fallthrough","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"chngchngchng"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"chngchngchng"},"content":"            this.addTaskInstructionHandler();","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"chngchngchng"},"content":"            st.save(this.taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"chngchngchng"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(\"Command not recognised. Try again?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"chngchngchng"},"content":"     * Sanitises user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"chngchngchng"},"content":"     * @param inputString User input that needs to be sanitised","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"chngchngchng"},"content":"     * @return Sanitised user input","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"chngchngchng"},"content":"    public String sanitiseUserInput(String inputString) {","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"chngchngchng"},"content":"        // Clear trailing whitespace","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"chngchngchng"},"content":"        String out \u003d inputString.trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"chngchngchng"},"content":"        return out;","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"chngchngchng"},"content":"     * Handles a list instruction by printing user\u0027s tasks to the screen.","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"chngchngchng"},"content":"    public void listInstructionHandler() {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(this.taskList);","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"chngchngchng"},"content":"     * Handles a bye instruction by exiting Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"chngchngchng"},"content":"    public void byeInstructionHandler() {","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"chngchngchng"},"content":"        this.shouldExit \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"chngchngchng"},"content":"     * Handles numerical instructions that act on an indexed element in taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"chngchngchng"},"content":"     * @throws DukeException Index is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"chngchngchng"},"content":"    public void numericalInstructionHandler() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"chngchngchng"},"content":"        // First, try to parse the numerical part of the instruction, if error, throw it","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"chngchngchng"},"content":"        int instructionNum;","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"chngchngchng"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"chngchngchng"},"content":"            instructionNum \u003d Integer.valueOf(this.restOfInputString) - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"chngchngchng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"Error when parsing user input - did you supply a valid \"","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"chngchngchng"},"content":"                    + \"number as an index?\");","lastModifiedDate":"2022-08-29"},{"lineNumber":160,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"chngchngchng"},"content":"        // Actual logic","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"chngchngchng"},"content":"        if (instructionNum \u003e\u003d this.taskList.getSize() || instructionNum \u003c 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"Invalid index provided. Try again?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"chngchngchng"},"content":"        switch (this.keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"chngchngchng"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"chngchngchng"},"content":"            this.taskList.markTaskComplete(instructionNum);","lastModifiedDate":"2022-08-22"},{"lineNumber":171,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"chngchngchng"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"chngchngchng"},"content":"            this.taskList.markTaskIncomplete(instructionNum);","lastModifiedDate":"2022-08-22"},{"lineNumber":174,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"chngchngchng"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"chngchngchng"},"content":"            this.taskList.deleteTask(instructionNum);","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"chngchngchng"},"content":"     * Handles find instructions on the taskList","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":186,"author":{"gitId":"chngchngchng"},"content":"     * @throws DukeException If no valid search parameters are found in user input","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":188,"author":{"gitId":"chngchngchng"},"content":"    public void findInstructionHandler() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"chngchngchng"},"content":"        if (this.restOfInputString.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"Oops! Please provide a valid string to search for.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":192,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":193,"author":{"gitId":"chngchngchng"},"content":"        String[] searchTerms \u003d this.restOfInputString.split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":194,"author":{"gitId":"chngchngchng"},"content":"        String found \u003d taskList.search(searchTerms);","lastModifiedDate":"2022-08-24"},{"lineNumber":195,"author":{"gitId":"chngchngchng"},"content":"        if (found.equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":196,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(\"Hmm... I couldn\u0027t find any tasks matching your queries :(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"chngchngchng"},"content":"            System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"chngchngchng"},"content":"            return;","lastModifiedDate":"2022-08-24"},{"lineNumber":199,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":200,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Here are the matching tasks in your list that I found!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":201,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(found);","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-24"},{"lineNumber":203,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":204,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":205,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":206,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":207,"author":{"gitId":"chngchngchng"},"content":"     * Handles adding of instructions to taskList","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":209,"author":{"gitId":"chngchngchng"},"content":"     * @throws DukeException User input provided is incomplete / does not match required format.","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":211,"author":{"gitId":"chngchngchng"},"content":"    public void addTaskInstructionHandler() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":212,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"chngchngchng"},"content":"        if (this.restOfInputString.equals(\"\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"Oops! Descriptions for tasks cannot be blank!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":215,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":216,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":217,"author":{"gitId":"chngchngchng"},"content":"        int slashIndex \u003d this.restOfInputString.indexOf(\"/\");","lastModifiedDate":"2022-08-21"},{"lineNumber":218,"author":{"gitId":"chngchngchng"},"content":"        String divider \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":219,"author":{"gitId":"chngchngchng"},"content":"        String[] splitInput \u003d this.restOfInputString.split(\" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"chngchngchng"},"content":"        for (String s: splitInput) {","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"chngchngchng"},"content":"            if (s.startsWith(\"/\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"chngchngchng"},"content":"                divider \u003d s;","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":225,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":227,"author":{"gitId":"chngchngchng"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":228,"author":{"gitId":"chngchngchng"},"content":"        switch (this.keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":229,"author":{"gitId":"chngchngchng"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-21"},{"lineNumber":230,"author":{"gitId":"chngchngchng"},"content":"            newTask \u003d new Todo(this.restOfInputString);","lastModifiedDate":"2022-08-21"},{"lineNumber":231,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"chngchngchng"},"content":"        case \"event\":","lastModifiedDate":"2022-08-21"},{"lineNumber":233,"author":{"gitId":"chngchngchng"},"content":"            if (divider \u003d\u003d null || !divider.equals(\"/at\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":234,"author":{"gitId":"chngchngchng"},"content":"                throw new DukeException(\"Oops! To create an event, please format your input in \"","lastModifiedDate":"2022-08-29"},{"lineNumber":235,"author":{"gitId":"chngchngchng"},"content":"                        + \"this manner:\\n\u003cEvent Name\u003e /at dd-mm-yyyy hh:mm\");","lastModifiedDate":"2022-08-29"},{"lineNumber":236,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"chngchngchng"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":238,"author":{"gitId":"chngchngchng"},"content":"                newTask \u003d new Event(this.restOfInputString.substring(0, slashIndex - 1),","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"chngchngchng"},"content":"                        this.restOfInputString.substring(slashIndex + 4));","lastModifiedDate":"2022-08-21"},{"lineNumber":240,"author":{"gitId":"chngchngchng"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":241,"author":{"gitId":"chngchngchng"},"content":"                throw new DukeException(\"Oops! Events must have a date of occurrence, formatted \"","lastModifiedDate":"2022-08-29"},{"lineNumber":242,"author":{"gitId":"chngchngchng"},"content":"                        + \"as dd-mm-yyyy hh:mm.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":243,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":244,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":245,"author":{"gitId":"chngchngchng"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"chngchngchng"},"content":"            if (divider \u003d\u003d null || !divider.equals(\"/by\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":247,"author":{"gitId":"chngchngchng"},"content":"                throw new DukeException(\"Oops! To create a deadline, please format your input in \"","lastModifiedDate":"2022-08-29"},{"lineNumber":248,"author":{"gitId":"chngchngchng"},"content":"                        + \"this manner:\\n\u003cDeadline Name\u003e /by dd-mm-yyyy hh:mm\");","lastModifiedDate":"2022-08-29"},{"lineNumber":249,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":250,"author":{"gitId":"chngchngchng"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":251,"author":{"gitId":"chngchngchng"},"content":"                newTask \u003d new Deadline(this.restOfInputString.substring(0, slashIndex - 1),","lastModifiedDate":"2022-08-21"},{"lineNumber":252,"author":{"gitId":"chngchngchng"},"content":"                        this.restOfInputString.substring(slashIndex + 4));","lastModifiedDate":"2022-08-21"},{"lineNumber":253,"author":{"gitId":"chngchngchng"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":254,"author":{"gitId":"chngchngchng"},"content":"                throw new DukeException(\"Oops! Deadlines must have a valid deadline, \"","lastModifiedDate":"2022-08-29"},{"lineNumber":255,"author":{"gitId":"chngchngchng"},"content":"                        + \"formatted as dd-mm-yyyy hh:mm.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":256,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":257,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":258,"author":{"gitId":"chngchngchng"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":259,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":260,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":261,"author":{"gitId":"chngchngchng"},"content":"        this.taskList.addTaskToList(newTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":262,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(BREAK_LINES);","lastModifiedDate":"2022-08-21"},{"lineNumber":263,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":264,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":265,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"chngchngchng":265}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    String filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"     * Standard constructor for Duke\u0027s Storage tool.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"     * @param filePath Location of Duke\u0027s data.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"     * Loads data from file into a new TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"     * @return Duke\u0027s TaskList initialised with task data.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"     * @throws DukeException If data could not be read.","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"        // Base: If filepath is null, there is no file to read","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"        if (filePath \u003d\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"Error - No file path specified for Storage to retrieve from!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"        // Create new file, if exists, doesn\u0027t do anything","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"            File newFile \u003d new File(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"            newFile.createNewFile();","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"An error occurred when trying to create a new file...\");","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"        // Init arrayList","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"        // Prep file for reading","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"            File dukeData \u003d new File(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"            Scanner sc \u003d new Scanner(dukeData);","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"                String[] parsedData \u003d data.split(\",,\");","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"                if (parsedData.length !\u003d 4) {","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"chngchngchng"},"content":"                    throw new DukeException(\"Error reading from file: \" + filePath + \". Perhaps \" +","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"                            \"the data is stored in an incorrect manner?\");","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"                String type \u003d parsedData[0];","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"                boolean isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"chngchngchng"},"content":"                try {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"                    isDone \u003d Boolean.parseBoolean(parsedData[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"chngchngchng"},"content":"                    throw new DukeException(\"Error reading from file: \" + filePath + \": Unknown \" +","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"                            \"boolean format for stored tasks\");","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"chngchngchng"},"content":"                // TODO: More error checking for description and datetimeinfo?","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"chngchngchng"},"content":"                String description \u003d parsedData[2];","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"chngchngchng"},"content":"                String dateTimeInfo \u003d parsedData[3];","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"chngchngchng"},"content":"                switch (type) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"chngchngchng"},"content":"                case \"TODO\":","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"chngchngchng"},"content":"                    newList.add(new Todo(description, isDone));","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"chngchngchng"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"chngchngchng"},"content":"                case \"DEADLINE\":","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"                    newList.add(new Deadline(description, isDone, dateTimeInfo));","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"chngchngchng"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"chngchngchng"},"content":"                case \"EVENT\":","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"chngchngchng"},"content":"                    newList.add(new Event(description, isDone, dateTimeInfo));","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"chngchngchng"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"chngchngchng"},"content":"                default:","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"chngchngchng"},"content":"                    throw new DukeException(\"Error reading from file: \" + filePath + \": Unknown \" +","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"chngchngchng"},"content":"                            \"task type\");","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"chngchngchng"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"chngchngchng"},"content":"            sc.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"chngchngchng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"chngchngchng"},"content":"        return new TaskList(newList);","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"chngchngchng"},"content":"     * Saves taskList to file on drive.","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"chngchngchng"},"content":"     * @param taskList List to fetch save data from","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"chngchngchng"},"content":"     * @throws DukeException if saving data fails","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"chngchngchng"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"chngchngchng"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"chngchngchng"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"chngchngchng"},"content":"            fileWriter.write(taskList.getWriteString());","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"chngchngchng"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"chngchngchng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"chngchngchng"},"content":"            throw new DukeException(\"An error occurred when writing data out :(\");","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"chngchngchng"},"content":"        return \"Duke Storage currently loaded with file at \" + filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chngchngchng":120}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.tasklist;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import java.util.List;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":" * Implementation of the TaskList, the list of tasks created by the user.","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"     * Overloaded constructor to allow for loading of previously generated tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"     * @param taskList Array of existing tasks parsed by Storage","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"     * Marks a task as complete in the Task List.","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"     * @param index The index of the task to be marked as complete","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"    public void markTaskComplete(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as having been completed:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(taskList.get(index));","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"     * Marks a task as incomplete in the Task List.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"     * @param index The index of the task to be marked as incomplete.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"    public void markTaskIncomplete(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"        taskList.get(index).markAsUndone();","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Okay, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(taskList.get(index));","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"chngchngchng"},"content":"     * Adds a task to the Task List.","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"chngchngchng"},"content":"     * @param task The task that is to be added to the List.","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"chngchngchng"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"chngchngchng"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Got it, i\u0027ve added this task to your list:\\n  \" + task);","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"You now have \" + taskList.size() + \" tasks in your list.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"chngchngchng"},"content":"     * Deletes a task from the Task List.","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"chngchngchng"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"chngchngchng"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"chngchngchng"},"content":"        Task removedTask \u003d taskList.get(index);","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"chngchngchng"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"Okay, I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(removedTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"chngchngchng"},"content":"        System.out.println(\"You now have \" + taskList.size() + \" tasks in your list.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"chngchngchng"},"content":"     * Searches for tasks in the list that contain any of the search terms.","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"chngchngchng"},"content":"     * Search terms are all individual words that come after the [list] keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"chngchngchng"},"content":"     * For an example, \"list new test\" will return all tasks in the list that have","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"chngchngchng"},"content":"     * \"new\" or \"test\" in their descriptions.","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"chngchngchng"},"content":"     * The current implementation of search only supports exact matching (case-insensitive).","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"chngchngchng"},"content":"     * @param terms Array of search terms.","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"chngchngchng"},"content":"     * @return String that contains all matching tasks, formatted.","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"chngchngchng"},"content":"    public String search(String[] terms) {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"chngchngchng"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"chngchngchng"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"chngchngchng"},"content":"            for (String term: terms) {","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"chngchngchng"},"content":"                if (task.toString().toLowerCase().contains(term.toLowerCase())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"chngchngchng"},"content":"                   if (!result.contains(task.toString())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"chngchngchng"},"content":"                       result +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"chngchngchng"},"content":"                   }","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"chngchngchng"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"chngchngchng"},"content":"        return result.equals(\"\") ? result : result.substring(0, result.length() - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"chngchngchng"},"content":"     * Fetch the size of the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"chngchngchng"},"content":"     * @return The size of the task list.","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"chngchngchng"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"chngchngchng"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"chngchngchng"},"content":"     * Returns write string version of TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"chngchngchng"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"chngchngchng"},"content":"     * @return TaskList in writeString format, to be written into data.txt","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"chngchngchng"},"content":"    public String getWriteString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"chngchngchng"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"chngchngchng"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"chngchngchng"},"content":"            result +\u003d task.getSaveString() + \"\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"chngchngchng"},"content":"        return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"chngchngchng"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"chngchngchng"},"content":"        String res \u003d \"Here are the tasks that you have added to the list:\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"chngchngchng"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"chngchngchng"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2022-08-22"},{"lineNumber":132,"author":{"gitId":"chngchngchng"},"content":"                res +\u003d counter + \". \" + task;","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"chngchngchng"},"content":"                if (counter !\u003d taskList.size()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":134,"author":{"gitId":"chngchngchng"},"content":"                    res +\u003d \"\\n\";","lastModifiedDate":"2022-08-22"},{"lineNumber":135,"author":{"gitId":"chngchngchng"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"chngchngchng"},"content":"                counter++;","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"chngchngchng"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"chngchngchng"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"chngchngchng"},"content":"        return counter \u003d\u003d 1 ? \"There are no tasks in your task list at the moment!\" : res;","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chngchngchng":141}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"     * Standard constructor for a deadline","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"     * @param deadline The deadline of the task","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"        super(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"     * Overloaded constructor that allows for creation of pre-completed deadline tasks","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"     * @param isDone Marks whether the task has been completed before","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"     * @param deadline The deadline of the task","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    public Deadline(String description, boolean isDone, String deadline) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"        return \"DEADLINE,,\" + super.getSaveString() + this.deadline.format(formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"        String formatted \u003d deadline.format(formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formatted);","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chngchngchng":45}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"    private LocalDateTime eventDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"     * Standard constructor for an event","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"     * @param description The description of the event","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"     * @param eventDateTime The date and time of the event occurring","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"    public Event(String description, String eventDateTime) {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"        super(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"        this.eventDateTime \u003d LocalDateTime.parse(eventDateTime, formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"     * Overloaded constructor to allow for creation of pre-completed events","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"     * @param description The description of the event","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"     * @param isDone Marks the event as having been completed or not","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"     * @param eventDateTime The event\u0027s date and time of occurrence","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    public Event(String description, boolean isDone, String eventDateTime) {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"        this.eventDateTime \u003d LocalDateTime.parse(eventDateTime, formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"        return \"EVENT,,\" + super.getSaveString() + this.eventDateTime.format(formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"        String formatted \u003d this.eventDateTime.format(formatter);","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"        return String.format(\"[E]%s (on: %s)\", super.toString(), formatted);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chngchngchng":46}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"    private String description;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"     * Standard constructor that defines a Task","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"     * @param description Description for the task","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"     * Overloaded constructor to allow for creation of pre-completed tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"     * @param description Description for the task","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"     * @param isDone Marks whether task has been completed","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        return isDone? \"X\" : \" \";","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"        return this.isDone + \",,\" + this.description + \",,\";","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chngchngchng":48}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"     * Standard constructor for a todo task","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"        super(description);","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"     * Overloaded constructor that allows for creation of completed todos","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"     * @param description The description of the task","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"     * @param isDone Marks if task has been previously completed","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"        return \"TODO,,\" + super.getSaveString() + \"null\";","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chngchngchng":31}},{"path":"src/test/java/duke/parser/DukeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"public class DukeParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"    DukeParser parser \u003d new DukeParser(new TaskList());","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    Storage st \u003d new Storage(\"random\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"    public void throwsExceptionWhenCommandNotLoaded() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"        assertThrows(DukeException.class, () -\u003e parser.execute(st));","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    public void throwsExceptionWhenEmptyCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"        parser.parseInput(\"\");","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"        assertThrows(DukeException.class, () -\u003e parser.execute(st));","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chngchngchng":26}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"package duke.tasklist;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"chngchngchng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chngchngchng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"chngchngchng"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"chngchngchng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"chngchngchng"},"content":"    public void addTaskTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"chngchngchng"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"chngchngchng"},"content":"        Task newTask \u003d new Todo(\"a new todo task\");","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"        assertEquals(list.getSize(), 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"chngchngchng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"chngchngchng"},"content":"    public void writeStringTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"chngchngchng"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"chngchngchng"},"content":"        Task newTask \u003d new Todo(\"a new todo task\");","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"chngchngchng"},"content":"        newTask \u003d new Deadline(\"a new deadline\", \"01-09-2000 00:00\");","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"chngchngchng"},"content":"        newTask \u003d new Event(\"a new event\", \"06-10-1999 00:00\");","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"chngchngchng"},"content":"        assertEquals(list.getWriteString(), \"TODO,,false,,a new todo task,,null\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"chngchngchng"},"content":"                \"DEADLINE,,false,,a new deadline,,01-09-2000 00:00\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"chngchngchng"},"content":"                \"EVENT,,false,,a new event,,06-10-1999 00:00\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"chngchngchng"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"chngchngchng"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"chngchngchng"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"chngchngchng"},"content":"        Task newTask \u003d new Todo(\"a new todo task\");","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"chngchngchng"},"content":"        newTask \u003d new Deadline(\"a new deadline\", \"01-09-2000 00:00\");","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"chngchngchng"},"content":"        newTask \u003d new Event(\"a new event\", \"06-10-1999 00:00\");","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"chngchngchng"},"content":"        list.addTaskToList(newTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"chngchngchng"},"content":"        assertEquals(list.toString(), \"Here are the tasks that you have added to the list:\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"chngchngchng"},"content":"                \"1. [T][ ] a new todo task\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"chngchngchng"},"content":"                \"2. [D][ ] a new deadline (by: Sep 01 2000 00:00)\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"chngchngchng"},"content":"                \"3. [E][ ] a new event (on: Oct 06 1999 00:00)\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"chngchngchng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"chngchngchng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"chngchngchng"},"content":"    // TODO Testing for creation, update, deletion of tasks","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"chngchngchng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"chngchngchng":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chngchngchng"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"chngchngchng"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"chngchngchng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"chngchngchng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"chngchngchng"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"chngchngchng"},"content":"list","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"chngchngchng":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chngchngchng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chngchngchng":1,"-":20}}]

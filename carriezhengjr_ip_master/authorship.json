[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"# CaCa","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"### _A personal assistant chatbot that helps users manage and track tasks._","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"\u003chr\u003e","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"# CaCa Features","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"Functions with respective commands are listed below as Function (description): `command`. e.g...","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"- Greet user (triggered as soon as the chatbot is run)","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"- Exit program (end chatbot): `bye`","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"- Add tasks:","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"    - ToDos (tasks without any date/time): `todo taskDescription`","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"        - e.g.`todo borrow book`","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"    - Deadlines (tasks to be done before date/time): `deadline taskDescription /by dateTime`","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"        - e.g. `deadline return book /by Sunday`","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"    - Events (tasks that start and end at a specific time): `event taskDescription /at dateTime`","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"        - e.g. `event project meeting /at Mon 2-4pm`","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"- List task (displays a list of all tasks stored): `list`","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"- Mark task (marks task as done with a \"X\"): `mark taskIndex` ","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    - e.g. `mark 2`","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"- Unmark task (marks task as not done and removes \"X\"): `unmark taskIndex`","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"    - e.g. `unmark 2`","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"- Delete task (deletes task from list): `delete taskIndex`","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"    - e.g. `delete 3`","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"\u003chr\u003e","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"carriezhengjr":28,"-":24}},{"path":"src/main/java/CaCa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" * CaCa is a personal assistant chatbot that helps users manage and track things.","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" * It greets user, reads and stores user input,","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":" * allows user to add and delete tasks, update task status as done or undone,","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":" * displays all tasks with status and exits when user inputs bye.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"public class CaCa {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"    // Structure below is adapted from A-MoreOOP in","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"    // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"     * A TaskList object containing all the tasks in a list..","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for CaCa chatbot program.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * @param dirPath Directory path containing the file with stored tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     * @param filePath Relative file path to store tasks locally.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    public CaCa(String dirPath, String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"        storage \u003d new Storage(dirPath, filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"            tasks \u003d storage.readFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(\"You have keyed in an invalid date and time!\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"                    + \"Please specify date and time in the format: dd/MM/yyyy HHmm\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"                    + \"E.g. 24/08/2022 2359\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * Runs CaCa chatbot program.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * @throws IOException If there exists failed or interrupted I/O operations.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        // Greets user.","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        ui.greet();","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"        // Load file that was previously saved to local hard disk.","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"        storage.loadFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"        while (true) {","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"            // Reads user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"            boolean isRunning \u003d parser.hasStopped(input);","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"            if (!isRunning) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"     * The main chatbot program.","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"     * @throws IOException If there exists failed or interrupted I/O operations.","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        new CaCa(\"data/\", \"data/caca.txt\").run();","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"carriezhengjr":76}},{"path":"src/main/java/CaCaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This is an exception class for exceptions specific to CaCa.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"public class CaCaException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"    public CaCaException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":11}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" * This class represents tasks that need to be done before a specific date/time.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description from user input.","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"     * @param dateTimeInput Date/time as deadline from user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidDateException If date entered by user is not in the specified format.","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public Deadline(String description, String dateTimeInput) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"            // Adapted from 3. LocalDate parse() method and 4. LocalDateTime parse() method of","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"            // https://codegym.cc/groups/posts/parse-methods-in-java","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"            // and subsection \"Using dates/times in Java\" of section \"Duke Level-8: Dates and Times\" from","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"            // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"            by \u003d LocalDateTime.parse(dateTimeInput, formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"            throw new InvalidDateException(\"You have keyed in an invalid date and time!\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"                    + \"Please specify date and time in the format: dd/MM/yyyy HHmm\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"                    + \"E.g. 24/08/2022 2359\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a deadline with given isDone status.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * @param dateTimeInput Date/time as deadline from user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * @param isDone True if deadline is marked as done; false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidDateException If date entered by user is not in the specified format.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"    public Deadline(String description, String dateTimeInput, boolean isDone) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        // Explicit constructor invocation adapted from","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        // https://docs.oracle.com/javase/tutorial/java/javaOO/thiskey.html","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"        this(description, dateTimeInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"     * Displays the task type of deadline as D.","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"     * @return D.","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"        return \"D\";","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"     * Displays the deadline with its type, status (done or undone), description and date/time.","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"     * @return Task type, status, description and date/time.","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        // Adapted from 3. LocalDate parse() method and 4. LocalDateTime parse() method of","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"        // https://codegym.cc/groups/posts/parse-methods-in-java","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        // and subsection \"Using dates/times in Java\" of section \"Duke Level-8: Dates and Times\" from","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        String newDateTime \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), newDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"     * Formats deadline in a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"     * @return Deadline with task type, status, description and date/time.","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"        // Adapted from 3. LocalDate parse() method and 4. LocalDateTime parse() method of","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"        // https://codegym.cc/groups/posts/parse-methods-in-java","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"        // and subsection \"Using dates/times in Java\" of section \"Duke Level-8: Dates and Times\" from","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"        String formattedDateTime \u003d by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"        return String.format(\"D | %s | %s | %s\", this.getStatusIcon(), this.description, formattedDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":95}},{"path":"src/main/java/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This is an exception class for empty user inputs into CaCa.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"public class EmptyInputException extends CaCaException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"    public EmptyInputException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" * This class represents tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating an event.","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description from user input.","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"     * @param dateTimeInput Event date/time from user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidDateException If date entered by user is not in the specified format.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"    public Event(String description, String dateTimeInput) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"            // Adapted from 3. LocalDate parse() method and 4. LocalDateTime parse() method of","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"            // https://codegym.cc/groups/posts/parse-methods-in-java","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"            // and subsection \"Using dates/times in Java\" of section \"Duke Level-8: Dates and Times\" from","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"            // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"            at \u003d LocalDateTime.parse(dateTimeInput, formatter);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"            throw new InvalidDateException(\"You have keyed in an invalid date and time!\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"                    + \"Please specify date and time in the format: dd/MM/yyyy HHmm\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"                    + \"E.g. 24/08/2022 2359\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating an event with given isDone status.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description from user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"     * @param dateTimeInput Event date/time from user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"     * @param isDone True if event is marked as done; false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidDateException If date entered by user is not in the specified format.","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"    public Event (String description, String dateTimeInput, boolean isDone) throws InvalidDateException {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"        // Explicit constructor invocation adapted from","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"        // https://docs.oracle.com/javase/tutorial/java/javaOO/thiskey.html","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"        this(description, dateTimeInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"     * Displays the task type of event as E.","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"     * @return E.","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"        return \"E\";","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"     * Displays the event with its type, status (done or undone), description and time.","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"     * @return Task type, status, description and time.","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"        // Adapted from 3. LocalDate parse() method and 4. LocalDateTime parse() method of","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"        // https://codegym.cc/groups/posts/parse-methods-in-java","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"        // and subsection \"Using dates/times in Java\" of section \"Duke Level-8: Dates and Times\" from","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"        String newDateTime \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), newDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"     * Formats event in a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"     * @return Event with task type, status, description and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"        // Adapted from 3. LocalDate parse() method and 4. LocalDateTime parse() method of","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"        // https://codegym.cc/groups/posts/parse-methods-in-java","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"        // and subsection \"Using dates/times in Java\" of section \"Duke Level-8: Dates and Times\" from","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"        // https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"        String formattedDateTime \u003d at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"        return String.format(\"E | %s | %s | %s\", this.getStatusIcon(), this.description, formattedDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":89}},{"path":"src/main/java/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This is an exception class when user has entered an invalid date and time for deadline or event.","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"public class InvalidDateException extends CaCaException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"carriezhengjr":10}},{"path":"src/main/java/InvalidTaskIndex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This is an exception class when user has entered an invalid task index for marking or unmarking task.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"public class InvalidTaskIndex extends CaCaException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"    public InvalidTaskIndex(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":10}},{"path":"src/main/java/MissingDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This is an exception class when user input has missing details for deadline and event.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"public class MissingDetailException extends CaCaException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"    public MissingDetailException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":10}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"     * A horizontal line to be displayed as separator for each activity with CaCa.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"     * A TaskList object containing all the tasks in a list.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"     * A Storage object to update tasks in the local file.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a parser to deal with user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * @param tasks A list of tasks to be updated according to user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     * @param storage The storage system to update tasks in the local file.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     * Indicates whether user command has stopped and ended the program.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     * @param input User input as command.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"     * @return True if input has ended the program; false otherwise.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"     * @throws IOException If there exists failed or interrupted I/O operations.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"    public boolean hasStopped(String input) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"        // Detect user command, where 1st element is the type of action to be done (command type),","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"        // 2nd element is the task description, with or without date/time.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"        String commandType \u003d command[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"        // Prints a line after a user input, to start CaCa response.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        System.out.print(LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"            if (commandType.isBlank()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"                throw new EmptyInputException(\"OOPS!!! You have entered an empty input.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"                Ui.bye();","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"                return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"todo\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"                // Checks for valid description, i.e. not empty or blank, before adding todo.","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.hasDescription(command);","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.addToDo(command[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"deadline\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"                // Checks for valid description, i.e. not empty or blank, before adding deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.hasDescription(command);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.addDeadline(command[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"event\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"                // Checks for valid description, i.e. not empty or blank, before adding event.","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.hasDescription(command);","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.addEvent(command[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.listTasks();","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"mark\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.markTask(command[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"unmark\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.unmarkTask(command[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"            } else if (commandType.equals(\"delete\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"                TaskList.deleteTask(command[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"                // Invalid input.","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"        } catch (CaCaException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(\"Please try again!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"        } finally {","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"            // Prints a line to end CaCa response.","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"        return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"carriezhengjr":118}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":" * This class represents the storage system to save and read tasks from the hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"     * A string representing the directory path.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"    private final String dirPath;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"     * A string representing the file path.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a storage object.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     * @param dirPath Directory path of file being read.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"     * @param filePath Path of the file being read.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    public Storage(String dirPath, String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"     * Either displays all tasks stored in file (when applicable),","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"     * or prompts user if file does not exist.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"    public void loadFile() throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"        String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"            String openFileMsg \u003d \"Opening the file that stores all your tasks...\\n\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"            String showTaskmsg \u003d \"These are the tasks in your list:\";","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(openFileMsg + showTaskmsg);","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"            // Prints all tasks found in the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"            if (!sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"                System.out.println(\"There is no task in your list.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"                    String task \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"                    System.out.println(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"            // Prints a line to end CaCa loading response.","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(LINE);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(\"The file to store all your tasks does not exist.\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"                    + \"I will create one now...\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"                    + LINE);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"     * Creates a file if file does not exist in hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"     * @param dirPath Directory path of created file.","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"     * @param filePath File path of created file.","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"     * @return The file created.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"     * @throws IOException If there exists failed or interrupted I/O operations.","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"    public File createFile(String dirPath, String filePath) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"        File directory \u003d new File(dirPath);","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"        directory.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"        file.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"        return file;","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"     * Updates tasks in file.","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"     * @param tasks List of tasks in file.","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"     * @throws IOException If there exists failed or interrupted I/O operations.","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"    public void updateFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"        // Solution below adapted from W3.4c C++ to Java -\u003e Miscellaneous Topics -\u003e File access","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"        // from https://nus-cs2103-ay2223s1.github.io/website/schedule/week3/topics.html#W3-4","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"        // and https://github.com/cheehongw/ip/blob/master/src/main/java/duke/Storage.java","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"        String newFilePath \u003d filePath + \".new\";","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"        File file \u003d createFile(dirPath, newFilePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"        FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"            fw.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"        fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"        // Solution below adapted from https://docs.oracle.com/javase/tutorial/essential/io/move.html and","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"        // https://stackoverflow.com/questions/27749755/files-move-replace-existing-cannot-be-resolved-to-a-variable","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"        Files.move(Paths.get(newFilePath), Paths.get(filePath), REPLACE_EXISTING);","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"     * Reads tasks stored in file.","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"     * @return A list of all the tasks stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"    public TaskList readFile() throws InvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"        // Surround with try-catch block as suggested by IDE.","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"                // Solution below adapted from","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"                // https://stackoverflow.com/questions/10796160/splitting-a-java-string-by-the-pipe-symbol-using-split","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"                // and https://github.com/cheehongw/ip/blob/master/src/main/java/duke/Storage.java","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"                String[] taskDetails \u003d task.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"                String taskType \u003d taskDetails[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"                String statusIcon \u003d taskDetails[1];","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"                boolean isDone \u003d statusIcon.equals(\"X\");","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"                String description \u003d taskDetails[2];","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"                // Stores all the tasks from file into the array.","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"                switch (taskType) {","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"                case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"                    tasks.addTask(new Todo(description, isDone));","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"                case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"                    String by \u003d taskDetails[3];","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"                    tasks.addTask(new Deadline(description, by, isDone));","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"                case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"                    String at \u003d taskDetails[3];","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"                    tasks.addTask(new Event(description, at, isDone));","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"                default:","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"            // Creates a new list to store subsequent tasks entered by user","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"            // if data file does not exist at the start.","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"            // Prevents NullPointerException as suggested by IDE.","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"            if (sc !\u003d null) {","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"                sc.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"        return tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"carriezhengjr":178}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This class represents tasks added by the user.","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a task.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description from user input.","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //@@author carriezhengjr-reused","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Reused code under subsection \"Extension: A-Classes\" of the section \"Duke Level-3: Mark as Done\"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // from https://nus-cs2103-ay2223s1.github.io/website/schedule/week2/project.html#ip","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Checks task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return Task description.","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The icon to display task status.","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return X when task is done; empty otherwise.","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //@@author carriezhengjr-reused","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Reused code under subsection \"Extension: A-Classes\" of the section \"Duke Level-3: Mark as Done\"","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // from https://nus-cs2103-ay2223s1.github.io/website/schedule/week2/project.html#ip","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Displays the type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return A letter to represent the type of task.","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public abstract String taskType();","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Displays the task with its type, status (done or undone) and description.","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return Task type, status and description.","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return String.format(\"[%s][%s] %s\", this.taskType(), this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Formats tasks in a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @return Format displayed in a file with task type, status (done or undone), description","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * and date or time (when applicable).","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"carriezhengjr":14,"-":64}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" * This class contains the task list e.g., it has operations to add/delete tasks in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":" * The list of operations that CaCa can perform with the tasks are listed below as","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":" * Function (description): command. e.g...","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":" * \u003cli\u003eAdd tasks:\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":" * \u003cul\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":" *     \u003cli\u003eToDos (tasks without any date/time): todo taskDescription\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":" *     e.g.todo borrow book","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":" *     \u003cli\u003eDeadlines (tasks to be done before date/time): deadline taskDescription /by dateTime\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":" *     e.g. deadline return book /by Sunday","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":" *     \u003cli\u003eEvents (tasks that start and end at a specific time): event taskDescription /at dateTime\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":" *     e.g. event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":" * \u003cli\u003eList task (displays a list of all tasks stored): list\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":" * \u003cli\u003eMark task (marks task as done with a \"X\"): mark taskIndex. e.g. mark 2\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":" * \u003cli\u003eUnmark task (marks task as not done and removes \"X\"): unmark taskIndex. e.g. unmark 2\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":" * \u003cli\u003eDelete task (deletes task from list): delete taskIndex. e.g. delete 3\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"     * An array to store the list of tasks input by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"        return tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"     * Checks if task index is valid.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"carriezhengjr"},"content":"     * @param taskIndex Task index entered by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidTaskIndex If task index is invalid, i.e. out of range.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"carriezhengjr"},"content":"    public static void isValid(int taskIndex) throws InvalidTaskIndex {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"carriezhengjr"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"carriezhengjr"},"content":"            String MESSAGE \u003d String.format(\"OOPS!!! You have entered an invalid task index. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"carriezhengjr"},"content":"                    \"It should be between 1 and %d.\", tasks.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"carriezhengjr"},"content":"            throw new InvalidTaskIndex(MESSAGE);","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"carriezhengjr"},"content":"     * Checks if task description is empty or contains only white spaces.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"carriezhengjr"},"content":"     * @param command User input with 1st element as command type, 2nd element as task description.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"carriezhengjr"},"content":"     * @throws EmptyInputException If task description is empty or left blank.","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"carriezhengjr"},"content":"    public static void hasDescription(String[] command) throws EmptyInputException {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"carriezhengjr"},"content":"        String commandType \u003d command[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"carriezhengjr"},"content":"        if (command.length \u003d\u003d 1 || command[1].isBlank()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"carriezhengjr"},"content":"            String MESSAGE \u003d String.format(\"OOPS!!! The description of %s cannot be empty.\",","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"carriezhengjr"},"content":"                    commandType);","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"carriezhengjr"},"content":"            throw new EmptyInputException(MESSAGE);","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"carriezhengjr"},"content":"     * Adds a ToDo task to user list.","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"carriezhengjr"},"content":"     * @param taskDescription Task description entered by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"carriezhengjr"},"content":"    public static void addToDo(String taskDescription) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"carriezhengjr"},"content":"        Task taskToAdd \u003d new Todo(taskDescription);","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"carriezhengjr"},"content":"        tasks.add(taskToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(taskToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"carriezhengjr"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"carriezhengjr"},"content":"     * Adds a Deadline task to user list.","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"carriezhengjr"},"content":"     * @param taskInfo Task information with task description and task date \u0026 time.","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"carriezhengjr"},"content":"     * @throws MissingDetailException If task description or task date \u0026 time is missing.","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"carriezhengjr"},"content":"    public static void addDeadline(String taskInfo) throws MissingDetailException, InvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"carriezhengjr"},"content":"        String[] detailedCommand \u003d taskInfo.split(\" /by \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"carriezhengjr"},"content":"        if (detailedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"carriezhengjr"},"content":"            String message \u003d \"OOPS!!! Details missing! \"","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"carriezhengjr"},"content":"                    + \"A deadline must have both description and date \u0026 time.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"carriezhengjr"},"content":"            throw new MissingDetailException(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"carriezhengjr"},"content":"            if (detailedCommand[0].isBlank() || detailedCommand[1].isBlank()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"carriezhengjr"},"content":"                String MESSAGE \u003d \"OOPS!!! I do not accept blank details. \"","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"carriezhengjr"},"content":"                        + \"A deadline must have both description and date \u0026 time.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"carriezhengjr"},"content":"                throw new MissingDetailException(MESSAGE);","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"carriezhengjr"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"carriezhengjr"},"content":"                String description \u003d detailedCommand[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"carriezhengjr"},"content":"                String by \u003d detailedCommand[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"carriezhengjr"},"content":"                Task taskToAdd \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"carriezhengjr"},"content":"                tasks.add(taskToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"carriezhengjr"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"carriezhengjr"},"content":"                System.out.println(taskToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"carriezhengjr"},"content":"                System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"carriezhengjr"},"content":"     * Adds an Event task to user list.","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"carriezhengjr"},"content":"     * @param taskInfo Task information with task description and task date \u0026 time.","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"carriezhengjr"},"content":"     * @throws MissingDetailException If task description or task date \u0026 time is missing.","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"carriezhengjr"},"content":"    public static void addEvent(String taskInfo) throws MissingDetailException, InvalidDateException {","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"carriezhengjr"},"content":"        String[] detailedCommand \u003d taskInfo.split(\" /at \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"carriezhengjr"},"content":"        if (detailedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"carriezhengjr"},"content":"            String message \u003d \"OOPS!!! Details missing! \"","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"carriezhengjr"},"content":"                    + \"An event must have both description and date \u0026 time.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"carriezhengjr"},"content":"            throw new MissingDetailException(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"carriezhengjr"},"content":"            if (detailedCommand[0].isBlank() || detailedCommand[1].isBlank()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"carriezhengjr"},"content":"                String message \u003d \"OOPS!!! I do not accept blank details. \"","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"carriezhengjr"},"content":"                        + \"An event must have both description and date \u0026 time.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"carriezhengjr"},"content":"                throw new MissingDetailException(message);","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"carriezhengjr"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"carriezhengjr"},"content":"                String description \u003d detailedCommand[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"carriezhengjr"},"content":"                String at \u003d detailedCommand[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"carriezhengjr"},"content":"                Task taskToAdd \u003d new Event(description, at);","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"carriezhengjr"},"content":"                tasks.add(taskToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"carriezhengjr"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"carriezhengjr"},"content":"                System.out.println(taskToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"carriezhengjr"},"content":"                System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"carriezhengjr"},"content":"     * Displays a list of all the tasks stored in CaCa.","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"carriezhengjr"},"content":"    public static void listTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"carriezhengjr"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"carriezhengjr"},"content":"            // No task in the tasks list.","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(\"There is no task in your list!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"carriezhengjr"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"carriezhengjr"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"carriezhengjr"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"carriezhengjr"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"carriezhengjr"},"content":"                System.out.printf(\"%d.%s%n\", i + 1, task);","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"carriezhengjr"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"carriezhengjr"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"carriezhengjr"},"content":"     * Marks a task as done in task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"carriezhengjr"},"content":"     * @param index Task index entered by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidTaskIndex If task index is invalid, i.e. out of range.","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"carriezhengjr"},"content":"    public static void markTask(String index) throws InvalidTaskIndex {","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"carriezhengjr"},"content":"        int taskIndex \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"carriezhengjr"},"content":"        isValid(taskIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"carriezhengjr"},"content":"        // taskIndex entered by user is 1 larger than its array index.","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"carriezhengjr"},"content":"        Task taskToMark \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"carriezhengjr"},"content":"        taskToMark.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(taskToMark);","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"carriezhengjr"},"content":"     * Marks a task as not done in task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"carriezhengjr"},"content":"     * @param index Task index entered by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidTaskIndex If task index is invalid, i.e. out of range.","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"carriezhengjr"},"content":"    public static void unmarkTask(String index) throws InvalidTaskIndex {","lastModifiedDate":"2022-08-27"},{"lineNumber":201,"author":{"gitId":"carriezhengjr"},"content":"        int taskIndex \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"carriezhengjr"},"content":"        isValid(taskIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"carriezhengjr"},"content":"        // taskIndex entered by user is 1 larger than its array index.","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"carriezhengjr"},"content":"        Task taskToUnmark \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"carriezhengjr"},"content":"        taskToUnmark.markAsUndone();","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(taskToUnmark);","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":211,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":212,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":213,"author":{"gitId":"carriezhengjr"},"content":"     * Deletes a task from task list.","lastModifiedDate":"2022-08-27"},{"lineNumber":214,"author":{"gitId":"carriezhengjr"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"carriezhengjr"},"content":"     * @param index Task index entered by user.","lastModifiedDate":"2022-08-27"},{"lineNumber":216,"author":{"gitId":"carriezhengjr"},"content":"     * @throws InvalidTaskIndex If task index is invalid, i.e. out of range.","lastModifiedDate":"2022-08-27"},{"lineNumber":217,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":218,"author":{"gitId":"carriezhengjr"},"content":"    public static void deleteTask(String index) throws InvalidTaskIndex {","lastModifiedDate":"2022-08-27"},{"lineNumber":219,"author":{"gitId":"carriezhengjr"},"content":"        int taskIndex \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":220,"author":{"gitId":"carriezhengjr"},"content":"        isValid(taskIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":221,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":222,"author":{"gitId":"carriezhengjr"},"content":"        // taskIndex input is 1 larger than array index.","lastModifiedDate":"2022-08-27"},{"lineNumber":223,"author":{"gitId":"carriezhengjr"},"content":"        Task taskToDelete \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":224,"author":{"gitId":"carriezhengjr"},"content":"        tasks.remove(taskToDelete);","lastModifiedDate":"2022-08-27"},{"lineNumber":225,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":226,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskToDelete);","lastModifiedDate":"2022-08-27"},{"lineNumber":227,"author":{"gitId":"carriezhengjr"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":228,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":229,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"carriezhengjr":229}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This class represents tasks without any date/time attached to it.","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description from user input.","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"     * Constructor for creating a todo with given isDone status.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"     * @param isDone True if todo is marked as done; false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"    public Todo (String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"     * Displays the task type of todo as T.","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"     * @return T.","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"    public String taskType() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"        return \"T\";","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"     * Formats todo in a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     * @return Todo with task type, status and description.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"        return String.format(\"T | %s | %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":44}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":" * @author Carrie Zheng Jiarui","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":" * @version CS2103T AY22/23 Semester 1, iP","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"     * A horizontal line to be displayed as separator for each activity with CaCa.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"     * Greets user with CaCa logo and introduction.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"        // ASCII text banner below created and adapted from","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"        // https://manytools.org/hacker-tools/ascii-banner/","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"        // with the following settings:","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"        // Banner text: CaCa, Font: Big, Horizontal spacing: Normal, Vertical spacing: Normal.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"        String LOGO \u003d \"   _____       _____      \\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"                + \"  / ____|     / ____|     \\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"                + \" | |     __ _| |     __ _ \\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"                + \" | |    / _` | |    / _` |\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"                + \" | |___| (_| | |___| (_| |\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"                + \"  \\\\_____\\\\__,_|\\\\_____\\\\__,_|\\n\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"        String GREETING \u003d \"Hello! I\u0027m CaCa.\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(LINE + LOGO + GREETING + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"     * Says bye to user.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"    public static void bye() {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"carriezhengjr":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"blah","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"carriezhengjr"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"carriezhengjr"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"carriezhengjr"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"carriezhengjr"},"content":"deadline revision","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"carriezhengjr"},"content":"deadline /by Sun","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"carriezhengjr"},"content":"deadline  /by Mon","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"carriezhengjr"},"content":"deadline revision /by","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by 01/09/2022 2400","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by 1/09/2022 2400","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by 01/09/2022 2401","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by 01/13/2022 0005","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"hello","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"event meeting","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"event /at Fri 1-3pm","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"event  /at Fri 1-3pm","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"event meeting /at","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"carriezhengjr"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"carriezhengjr"},"content":"event project meeting /at 1/10/2022 1400","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"carriezhengjr"},"content":"event project meeting /at 01/13/2022 1400","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"carriezhengjr"},"content":"event project meeting /at 01/10/2022 1400","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"carriezhengjr"},"content":"todo join sports club","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"carriezhengjr"},"content":"mark -1","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"carriezhengjr"},"content":"mark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"mark 5","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"carriezhengjr"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"carriezhengjr"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"carriezhengjr"},"content":"unmark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"carriezhengjr"},"content":"unmark -1","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"carriezhengjr"},"content":"unmark 5","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"unmark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"carriezhengjr"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"carriezhengjr"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"carriezhengjr"},"content":"delete 0","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"carriezhengjr"},"content":"delete -1","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"carriezhengjr"},"content":"delete 6","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"carriezhengjr"},"content":"delete 3","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"carriezhengjr"},"content":"deadline return book /by 29/08/2022 1530","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"carriezhengjr"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"carriezhengjr"},"content":"event project meeting /at 09/09/2022 1700","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"carriezhengjr"},"content":"todo exercise","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"carriezhengjr"},"content":"mark 7","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"carriezhengjr"},"content":"delete 7","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"carriezhengjr"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"carriezhengjr":55}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"carriezhengjr"},"content":"list","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"carriezhengjr"},"content":"bye","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"carriezhengjr":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"java -classpath ..\\bin CaCa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"carriezhengjr":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"carriezhengjr"},"content":"# delete caca.txt file created from previous run","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"carriezhengjr"},"content":"if [ -e \"./data/caca.txt\" ]","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"carriezhengjr"},"content":"then","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"carriezhengjr"},"content":"    rm data/caca.txt","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"carriezhengjr"},"content":"fi","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"carriezhengjr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"carriezhengjr"},"content":"java -classpath ../bin CaCa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"carriezhengjr"},"content":"java -classpath ../bin CaCa \u003c input1.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"carriezhengjr"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"carriezhengjr":9,"-":36}}]

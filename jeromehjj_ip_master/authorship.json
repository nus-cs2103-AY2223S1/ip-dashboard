[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    protected String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + this.by + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    public static void greeting() {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"        String initMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + initMessage + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public static void exit() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + goodbyeMessage + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : tasklist) {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(counter + \".\" + t.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            counter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    public static void markTask(ArrayList\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.remove(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        greeting();","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"                    exit();","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"                    listTasks(list);","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.contains(\"unmark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"                    char taskNumber \u003d input.charAt(7);","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"                    int number \u003d Character.getNumericValue(taskNumber);","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"                    if (number \u003c\u003d 0 || number \u003e count) {","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"                        throw new DukeException(LINE + \"☹ OOPS!!! Sorry, I can\u0027t mark this as\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"                                \" undone if it does not exist\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"                        unmarkTask(list, number - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.contains(\"mark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"                    char taskNumber \u003d input.charAt(5);","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"                    int number \u003d Character.getNumericValue(taskNumber);","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"                    if (number \u003c\u003d 0 || number \u003e count) {","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"                        throw new DukeException(LINE + \"☹ OOPS!!! Sorry, I can\u0027t mark this as \" +","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"                                \"done if it does not exist :(\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"                        markTask(list, number - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.contains(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"                    String task \u003d input.substring(4);","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"                    ToDo todo \u003d new ToDo(task);// get the task","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"                    if (task.isEmpty() || input.substring(5).isEmpty()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"                        throw new DukeException(LINE + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"                                + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"                        list.add(count, todo);","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"                        count++;","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"                        System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + todo.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"                        System.out.println(\"Now you have \" + count + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"                        String[] deadline \u003d input.split(\"deadline \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"                        String taskBy \u003d deadline[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"                        String[] task \u003d taskBy.split(\"/by\", 2);//Split task into its description and deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"                        Deadline d \u003d new Deadline(task[0], task[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"                        list.add(d);","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"                        count++;","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"                        System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + d.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"                        System.out.println(\"Now you have \" + count + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.contains(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"                    String[] event \u003d input.split(\"event \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"                    String taskAt \u003d event[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"                    String[] task \u003d taskAt.split(\"/at\", 2);// Split task into its description and timeline","lastModifiedDate":"2022-08-18"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"                    Event e \u003d new Event(task[0], task[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"                    list.add(e);","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"                    count++;","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + e.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(\"Now you have \" + count + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.contains(\"delete\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"                    String[] deletion \u003d input.split(\"delete \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"                    char deletionIndex \u003d input.charAt(7);","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"                    int index \u003d Character.getNumericValue(deletionIndex);","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"                    if (index \u003c\u003d 0 || index \u003e count) {","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"                        throw new DukeException(LINE + \"☹ OOPS!!! I can\u0027t remove this if it does not exist\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"                                + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"                    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"                        deleteTask(list, index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"                        count--;","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeromehjj":134,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + this.at + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"todo breakfast","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"deadline homework /by today 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"event concert /at Sunday 1700","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"javac  -cp C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\Duke.java -Xlint:none -d ..\\bin C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"java -classpath C:\\Users\\Jerome\\cs2103t\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeromehjj":2,"-":19}}]

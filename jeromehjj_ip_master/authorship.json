[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    protected String by; // \"Aug 26 2022 07:00:00 PM\" i want to format it back to yyyy-mm-ddTHours:Minute:Seconds","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"            this.deadline \u003d LocalDateTime.parse(by.substring(1));","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            this.deadline \u003d LocalDateTime.parse(by.substring(1));","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \" +","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private String printTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        String s \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm:ss a\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        return s;","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        return \"D | \" + super.fileStatus() + \"|\" + this.by;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"                + printTime() + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"public class Duke {","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public void run() {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        ui.greeting();","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        while (true) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"            Parser p \u003d new Parser(fullCommand, ui);","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            if (p.readCommand(tasks)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"                continue;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"            ui.exit();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":36}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    protected LocalDateTime event;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"            this.event \u003d LocalDateTime.parse(at.substring(1));","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            this.event \u003d LocalDateTime.parse(at.substring(1));","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \" +","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private String printTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        String s \u003d this.event.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm:ss a\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        return s;","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        return \"E | \" + super.fileStatus() + \"|\" + this.at;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        return \"[E]\" + super.toString() + \"(at: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"                + printTime() + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jeromehjj":47}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    private String command;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    public Parser(String command, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    public boolean readCommand(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        Scanner sc \u003d new Scanner(command);","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        String first \u003d inputArray[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"                return false;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"                listTasks(taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            } else if (first.equals(\"unmark\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"                unmarkTask(input, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"            } else if (first.equals(\"mark\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"                markTask(input, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"            } else if (first.equals(\"todo\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"                addTask(input, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            } else if (first.equals(\"deadline\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"                addTask(input, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"            } else if (first.equals(\"event\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"                addTask(input, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"            } else if (first.equals(\"delete\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"                deleteTask(input, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"                throw new DukeException(LINE + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"                        + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(LINE + \"☹ OOPS!!! Please make sure you include the proper index.\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(LINE + \"☹ OOPS!!! Please make sure you include the proper index.\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    public static void listTasks(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(counter + \".\" + t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"            counter++;","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    public static void unmarkTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        String taskNumber \u003d input.substring(7);","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        if (number \u003c\u003d 0 || number \u003e taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(LINE + \"☹ OOPS!!! Sorry, I can\u0027t mark this as\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"                    \" undone if it does not exist\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(number - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task + \"\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"    public static void markTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"        String taskNumber \u003d input.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"        if (number \u003c\u003d 0 || number \u003e taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(LINE + \"☹ OOPS!!! Sorry,\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"                    \" I can\u0027t mark this as done if it does not exist :(\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(number - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task + \"\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"    public static void addTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"        String[] taskArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"        String task \u003d taskArray[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        switch (task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"                if (taskArray[1].isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"                    Task todo \u003d new ToDo(taskArray[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"                    int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"                    taskList.add(todo);","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + todo);","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(\"Now you have \" + index + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"                String[] deadlineArray \u003d input.split(\"deadline\", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"                String taskBy \u003d deadlineArray[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"                String[] taskDeadline \u003d taskBy.split(\"/by\", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"                if (deadlineArray[1].isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"                if (taskDeadline.length \u003c 2 || taskDeadline[1].isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! Please include a /by for your deadline. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"                            \"E.g /by 2019-10-15T10:15:00.\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"                    Deadline d \u003d new Deadline(taskDeadline[0].substring(1), taskDeadline[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"                    int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"                    taskList.add(d);","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + d);","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(\"Now you have \" + index + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"            case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"                String[] eventArray \u003d input.split(\"event\", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"                String taskAt \u003d eventArray[1];","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"                String[] taskEvent \u003d taskAt.split(\"/at\", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"                if (eventArray[1].isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! The description of a event cannot be empty.\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"                if (taskEvent.length \u003c 2 || taskEvent[1].isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! Please include a /at for your deadline. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"                            \"E.g /at 2019-10-15T10:15:00.\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"                    Event e \u003d new Event(taskEvent[0].substring(1), taskEvent[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"                    int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"                    taskList.add(e);","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + e);","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(\"Now you have \" + index + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"                    break;","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"            default:","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(\"I can\u0027t add this task. Sorry :(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"    public static void deleteTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"        String deletionIndex \u003d input.substring(7);","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"        int index \u003d Integer.parseInt(deletionIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(LINE + \"☹ OOPS!!! I can\u0027t remove this if it does not exist\\n\"","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"jeromehjj"},"content":"                    + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\\n\" + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":164}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    private String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    public static void formatToList(File f, ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"                String[] taskDescription \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"                String taskType \u003d taskDescription[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"                boolean isDone \u003d taskDescription[1].equals(\"1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"                String description \u003d taskDescription[2] + \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"                String date \u003d \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"                Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"                if (taskDescription.length \u003d\u003d 4) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"                    date +\u003d taskDescription[3];","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new ToDo(description, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new Event(description, isDone, date);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"                taskList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"                Path path \u003d Paths.get(\"./data/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"            printFileContents(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"            formatToList(file, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Error: Cannot load file!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Error: File does not exist\");","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"        return taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"    public static String formatToFile(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"            result +\u003d t.fileStatus() + \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"        return result;","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"            fw.write(formatToFile(taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"            fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":96}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":37}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        Task t \u003d taskList.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        return t;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        Task t \u003d taskList.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        return t;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        return this.taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":35}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        return \"T | \" + super.fileStatus();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public static void greeting() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        String initMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + initMessage + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public static void exit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + goodbyeMessage + LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    public static void showLine() {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        showLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(\"Error: Cannot load file!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        showLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":35}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public void instantiateDeadlineObject_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"[D][ ] Concert (at: Aug 27 2022 06:40:00 PM\",","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"                    new Deadline(\"Concert\", \"Aug 27th 2pm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":21}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public void instantiateEventObject_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"[E][ ] Concert (at: Aug 27 2022 06:40:00 PM\",","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"                    new Event(\"Concert\", \"Aug 27th 2pm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":21}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        ToDo t \u003d new ToDo(\"read book\");","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(\"[T][ ] read book\", t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void testFileStatus() {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        ToDo t \u003d new ToDo(\"read book\");","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        t.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(\"T | 1 | read book\", t.fileStatus());","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"todo breakfast","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"deadline homework /by today 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"event concert /at Sunday 1700","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"javac  -cp C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\Duke.java -Xlint:none -d ..\\bin C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"java -classpath C:\\Users\\Jerome\\cs2103t\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeromehjj":2,"-":19}}]

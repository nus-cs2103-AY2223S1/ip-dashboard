[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    protected String by; // \"Aug 26 2022 07:00:00 PM\" i want to format it back to yyyy-mm-ddTHours:Minute:Seconds","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"            this.deadline \u003d LocalDateTime.parse(by.substring(1));","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            this.deadline \u003d LocalDateTime.parse(by.substring(1));","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \" +","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    private String printTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        String s \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm:ss a\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        return s;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        return \"D | \" + super.fileStatus() + \"|\" + this.by;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"                + printTime() + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public static void greeting() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String initMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + initMessage + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    public static void exit() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + goodbyeMessage + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : tasklist) {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(counter + \".\" + t.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            counter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    public static void unmarkTask(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        String taskNumber \u003d input.substring(7);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        if (number \u003c\u003d 0 || number \u003e taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(LINE + \"☹ OOPS!!! Sorry, I can\u0027t mark this as\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"                    \" undone if it does not exist\\n\" + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(number - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    public static void markTask(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        String taskNumber \u003d input.substring(5);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"        if (number \u003c\u003d 0 || number \u003e taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(LINE + \"☹ OOPS!!! Sorry,\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"                    \" I can\u0027t mark this as done if it does not exist :(\\n\" + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(number - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"    public static void addTask(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"        String[] taskArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        String task \u003d taskArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        switch (task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"                if (taskArray.length \u003c 2 || taskArray[1].isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"                    Task todo \u003d new ToDo(taskArray[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"                    int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"                    taskList.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"                    count++;","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + todo.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"                    System.out.println(\"Now you have \" + index + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"                String[] deadlineArray \u003d input.split(\"deadline\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"                String taskBy \u003d deadlineArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"                String[] taskDeadline \u003d taskBy.split(\"/by\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"                if (deadlineArray.length \u003c 2 || deadlineArray[1].isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"            if (taskDeadline.length \u003c 2 || taskDeadline[1].isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"                throw new DukeException(LINE + \"☹ OOPS!!! Please include a /by for your deadline. \" +","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"                        \"E.g /by 2019-10-15T10:15:00.\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"                        + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"                Deadline d \u003d new Deadline(taskDeadline[0].substring(1), taskDeadline[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"                int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"                taskList.add(d);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"                count++;","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + d.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(\"Now you have \" + index + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"            String[] eventArray \u003d input.split(\"event\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"            String taskAt \u003d eventArray[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"            String[] taskEvent \u003d taskAt.split(\"/at\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"                if (eventArray.length \u003c 2 || eventArray[1].isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! The description of a event cannot be empty.\\n\"","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"            if (taskEvent.length \u003c 2 || taskEvent[1].isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"                throw new DukeException(LINE + \"☹ OOPS!!! Please include a /at for your deadline. \" +","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"                        \"E.g /at 2019-10-15T10:15:00.\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"                        + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"                Event e \u003d new Event(taskEvent[0].substring(1), taskEvent[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"                int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"                taskList.add(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"                count++;","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\" + e.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(\"Now you have \" + index + \" tasks in this list.\\n\" + LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(\"I can\u0027t add this task. Sorry :(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"    public static void deleteTask(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"        String deletionIndex \u003d input.substring(7);","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"        int index \u003d Integer.parseInt(deletionIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(LINE + \"☹ OOPS!!! I can\u0027t remove this if it does not exist\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"                    + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"        count--;","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(LINE + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(task.toString() + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\\n\" + LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"    public static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"        fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"    public static String formatToFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"            result +\u003d t.fileStatus() + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"        return result;","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"jeromehjj"},"content":"    public static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"jeromehjj"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"jeromehjj"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"jeromehjj"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"jeromehjj"},"content":"    public static void formatToList(File f, ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"jeromehjj"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"jeromehjj"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"jeromehjj"},"content":"                String[] taskDescription \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"jeromehjj"},"content":"                String taskType \u003d taskDescription[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"jeromehjj"},"content":"                boolean isDone \u003d taskDescription[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"jeromehjj"},"content":"                String description \u003d taskDescription[2] + \" \";","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"jeromehjj"},"content":"                String date \u003d \" \";","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"jeromehjj"},"content":"                Task task \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"jeromehjj"},"content":"                if (taskDescription.length \u003d\u003d 4) {","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"jeromehjj"},"content":"                    date +\u003d taskDescription[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":181,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new ToDo(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":186,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":187,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new Event(description, isDone, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":188,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":189,"author":{"gitId":"jeromehjj"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":190,"author":{"gitId":"jeromehjj"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":191,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":192,"author":{"gitId":"jeromehjj"},"content":"                taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":194,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":196,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":198,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":200,"author":{"gitId":"jeromehjj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":201,"author":{"gitId":"jeromehjj"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":202,"author":{"gitId":"jeromehjj"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":203,"author":{"gitId":"jeromehjj"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-25"},{"lineNumber":208,"author":{"gitId":"jeromehjj"},"content":"        greeting();","lastModifiedDate":"2022-08-25"},{"lineNumber":209,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":210,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"jeromehjj"},"content":"            Path path \u003d Paths.get(\"./data/\");","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"jeromehjj"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"jeromehjj"},"content":"            f.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(\"Cannot read data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":218,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":219,"author":{"gitId":"jeromehjj"},"content":"            printFileContents(FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":220,"author":{"gitId":"jeromehjj"},"content":"            formatToList(f, taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":221,"author":{"gitId":"jeromehjj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":222,"author":{"gitId":"jeromehjj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":223,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"jeromehjj"},"content":"        while (true) {","lastModifiedDate":"2022-08-25"},{"lineNumber":226,"author":{"gitId":"jeromehjj"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"jeromehjj"},"content":"            String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":228,"author":{"gitId":"jeromehjj"},"content":"            String first \u003d inputArray[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":229,"author":{"gitId":"jeromehjj"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"jeromehjj"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"jeromehjj"},"content":"                    exit();","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"jeromehjj"},"content":"                    writeToFile(FILE_PATH, formatToFile(taskList));","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"jeromehjj"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"jeromehjj"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":235,"author":{"gitId":"jeromehjj"},"content":"                    listTasks(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"jeromehjj"},"content":"                } else if (first.equals(\"unmark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":237,"author":{"gitId":"jeromehjj"},"content":"                    unmarkTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":238,"author":{"gitId":"jeromehjj"},"content":"                } else if (first.equals(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":239,"author":{"gitId":"jeromehjj"},"content":"                    markTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":240,"author":{"gitId":"jeromehjj"},"content":"                } else if (first.equals(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":241,"author":{"gitId":"jeromehjj"},"content":"                    addTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":242,"author":{"gitId":"jeromehjj"},"content":"                } else if (first.equals(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":243,"author":{"gitId":"jeromehjj"},"content":"                    addTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":244,"author":{"gitId":"jeromehjj"},"content":"                } else if (first.equals(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":245,"author":{"gitId":"jeromehjj"},"content":"                    addTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":246,"author":{"gitId":"jeromehjj"},"content":"                } else if (first.equals(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":247,"author":{"gitId":"jeromehjj"},"content":"                    deleteTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":248,"author":{"gitId":"jeromehjj"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"jeromehjj"},"content":"                    throw new DukeException(LINE + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"jeromehjj"},"content":"                            + LINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"jeromehjj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":254,"author":{"gitId":"jeromehjj"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":255,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(LINE + \"☹ OOPS!!! Please make sure you include the proper index.\\n\" + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":256,"author":{"gitId":"jeromehjj"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":257,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(LINE + \"☹ OOPS!!! Please make sure you include the proper index.\\n\" + LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":258,"author":{"gitId":"jeromehjj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":259,"author":{"gitId":"jeromehjj"},"content":"                System.out.println(\"Cannot read data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":260,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":261,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeromehjj":256,"-":7}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    protected LocalDateTime event;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"            this.event \u003d LocalDateTime.parse(at.substring(1));","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            this.event \u003d LocalDateTime.parse(at.substring(1));","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \" +","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    private String printTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        String s \u003d this.event.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm:ss a\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        return s;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        return \"E | \" + super.fileStatus() + \"|\" + this.at;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        return \"[E]\" + super.toString() + \"(at: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"                + printTime() + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jeromehjj":46}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        return \"T | \" + super.fileStatus();","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"todo breakfast","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"deadline homework /by today 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"event concert /at Sunday 1700","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"javac  -cp C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\Duke.java -Xlint:none -d ..\\bin C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"java -classpath C:\\Users\\Jerome\\cs2103t\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeromehjj":2,"-":19}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"checkstyle {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    String javaFxVersion \u003d \u002718.0.2\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeromehjj":18,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":" * The Duke class encapsulates a Personal Assistant Chatbot named Duke to help keep track of various tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":" *","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":" * @author Jerome Hoo Jun Jie","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"public class Duke {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    /** The storage to load tasks from the file and saves tasks in the file specified */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    /** A collection to store tasks into a list */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    /** A user interface to interact with the user */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates the Duke object.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     * @param filePath the relative path provided for Duke to load and save files.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public void save() {","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        this.storage.save(tasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    public String load() {","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"            return this.storage.printFileContents(storage.getFilePath());","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    public String greeting() {","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"        return ui.greeting();","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"            c.execute(tasks, ui);","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"            return c.response();","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":67}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":" * The Parser class deals with making sense of the user command.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    /** A user interface to interact with the user */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    /** The command input by the user */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    private String command;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates the Parser object to deal with user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     * @param ui","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    public Parser(String command, Ui ui) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        String first \u003d inputArray[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        switch (first) {","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        case \"list\":","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"        case \"event\":","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"            return new EventCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        case \"find\":","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"            return new FindCommand(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        default:","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":53}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":" * The Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    /** The relative path of the file to be loaded and saved in */","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    private String filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates the Storage object.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"     * @param filePath Relative path of the file to be loaded and saved.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public String getFilePath() {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        return this.filePath;","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"     * Prints the contents of the file onto the console.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"     * @param filePath Relative path of the file to be loaded from.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"     * @throws FileNotFoundException If filePath is invalid.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    public static String printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        String response  \u003d \"\";","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"            response +\u003d s.nextLine() + \"\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        return response;","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"     * Reformats the content from the saved file into the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"     * @param f File to be loaded from.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"     * @param taskList The collection of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"     * @throws FileNotFoundException If file does not exist.","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"    public static void formatToList(File f, ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"                String[] taskDescription \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"                String taskType \u003d taskDescription[0];","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"                boolean isDone \u003d taskDescription[1].equals(\"1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"                String description \u003d taskDescription[2] + \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"                String date \u003d \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"                Task task \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"                if (taskDescription.length \u003d\u003d 4) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"                    date +\u003d taskDescription[3];","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new ToDo(description, isDone);","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new Deadline(description, isDone, date);","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"jeromehjj"},"content":"                if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"jeromehjj"},"content":"                    task \u003d new Event(description, isDone, date);","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"jeromehjj"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"jeromehjj"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"jeromehjj"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"jeromehjj"},"content":"                taskList.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"jeromehjj"},"content":"     * Loads the file when Duke is opened.","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"jeromehjj"},"content":"     * @return The collection of Tasks that was saved in the file.","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"jeromehjj"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"jeromehjj"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"jeromehjj"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"jeromehjj"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"jeromehjj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"jeromehjj"},"content":"                Path path \u003d Paths.get(\"./data/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"jeromehjj"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"jeromehjj"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"jeromehjj"},"content":"            printFileContents(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"jeromehjj"},"content":"            formatToList(file, taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"jeromehjj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Error: Cannot load file!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Error: File does not exist\");","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"jeromehjj"},"content":"        return taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"jeromehjj"},"content":"     * Converts the tasks in the list to the file format.","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"jeromehjj"},"content":"     * @param taskList The collection of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"jeromehjj"},"content":"     * @return The string representation of the tasks in file format.","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"jeromehjj"},"content":"    public static String formatToFile(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"jeromehjj"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"jeromehjj"},"content":"            result +\u003d t.fileStatus() + \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"jeromehjj"},"content":"        return result;","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"jeromehjj"},"content":"     * Saves the list into the file when Duke is closed.","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"jeromehjj"},"content":"     * @param taskList The collection of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"jeromehjj"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"jeromehjj"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"jeromehjj"},"content":"            fw.write(formatToFile(taskList));","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"jeromehjj"},"content":"            fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"jeromehjj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":157}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":" * The TaskList class encapsulates a collection of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     * Adds the task given into the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     * @param task Task to be done.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"     * Returns the task of the given index in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"     * @param index The index of the task to return.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"     * @return the task of given index found in list.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"        return t;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"     * Removes the task of the given index in the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     * @param index The index of the task to be removed","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"     * @return The element that was removed from the list","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        Task t \u003d tasks.remove(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        return t;","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"     * @return the size of the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"    public int size() {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"     * Returns the list.","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"     * @return the collection of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":68}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":" * The Ui class deals with interactions with the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"public class Ui {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    /** Scanner to read input from the user */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public Ui() {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"     * Prints the greeting message when Duke is opened.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    public static String greeting() {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        return greetingMessage + \"Here are some tasks that were left from before:\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     * Prints the exit message when Duke is closed.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    public static String exit() {","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    public static String showLine() {","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        return LINE;","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"     * Shows an error when loading a file.","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        showLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        System.out.println(\"Error: Cannot load file!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"        showLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":43}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        this.response \u003d ui.exit();","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"        return true;","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":17}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    public String response \u003d \"\";","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public abstract void execute(TaskList taskList, Ui ui) throws DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public String response() {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        return this.response;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        return false;","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":19}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String[] deadlineArray \u003d input.split(\"deadline\", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String taskBy \u003d deadlineArray[1];","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        String[] taskDeadline \u003d taskBy.split(\"/by\", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        if (deadlineArray[1].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        if (taskDeadline.length \u003c 2 || taskDeadline[1].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! Please include a /by for your deadline. \"","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                    + \"E.g /by 2019-10-15T10:15:00.\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"            Deadline d \u003d new Deadline(taskDeadline[0].substring(1), taskDeadline[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            taskList.add(d);","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            this.response \u003d \"Got it. I\u0027ve added this task:\\n\" + d.toString()","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"                    + \"\\n\" + \"Now you have \" + index + \" tasks in this list.\";","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":36}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String deletionIndex \u003d input.substring(7);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        int index \u003d Integer.parseInt(deletionIndex);","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! I can\u0027t remove this if it does not exist\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.remove(index - 1);","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        this.response \u003d \"Noted. I\u0027ve removed this task:\" + task.toString() + \"\\n\" + \"Now you have \"","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"                + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":28}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String[] eventArray \u003d input.split(\"event\", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String taskAt \u003d eventArray[1];","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        String[] taskEvent \u003d taskAt.split(\"/at\", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        if (eventArray[1].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        if (taskEvent.length \u003c 2 || taskEvent[1].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! Please include a /at for your deadline. \"","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                    + \"E.g /at 2019-10-15T10:15:00.\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"            Event e \u003d new Event(taskEvent[0].substring(1), taskEvent[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            taskList.add(e);","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            this.response \u003d \"Got it. I\u0027ve added this task:\\n\" + e.toString()","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"                    + \"\\n\" + \"Now you have \" + index + \" tasks in this list.\";","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":36}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String keyword \u003d inputArray[1];","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        if (inputArray[1].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! Please input something for me to find.\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"                temp.add(t);","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        if (temp.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"No matching tasks in your list\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        this.response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : temp.getTaskList()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"            this.response +\u003d index + \".\" + t.toString() + \"\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"            index++;","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":38}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    public ListCommand() {","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        this.response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"            this.response +\u003d counter + \".\" + t.toString() + \"\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            counter++;","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String taskNumber \u003d input.substring(5);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        if (number \u003c\u003d 0 || number \u003e taskList.size()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! Sorry,\"","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"                    + \" I can\u0027t mark this as done if it does not exist :(\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(number - 1);","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        this.response \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":29}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        String[] taskArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        if (taskArray[1].isEmpty()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"            Task todo \u003d new ToDo(taskArray[1]);","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            int index \u003d taskList.size() + 1;","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            taskList.add(todo);","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            this.response \u003d \"Got it. I\u0027ve added this task:\\n\" + todo.toString() + \"\\n\" + \"Now you have \"","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"                    + index + \" tasks in this list.\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":30}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.command;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    private String input;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    public void execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        String taskNumber \u003d input.substring(7);","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        int number \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        if (number \u003c\u003d 0 || number \u003e taskList.size()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"OOPS!!! Sorry, I can\u0027t mark this as\"","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"                    + \" undone if it does not exist\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        Task task \u003d taskList.get(number - 1);","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        this.response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":29}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.exception;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":" * The DukeException class encapsulates exceptions specific to the Duke class.","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":11}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.javafx;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"    private void flip() {","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        db.flip();","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"        return db;","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":61}},{"path":"src/main/java/duke/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.javafx;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class Launcher {","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":12}},{"path":"src/main/java/duke/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.javafx;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greeting();","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"            stage.show();","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":33}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.javafx;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.javafx.DialogBox;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    public void greeting() {","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.greeting(), dukeImage),","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"                DialogBox.getDukeDialog(duke.load(), dukeImage));","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-10"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    @FXML","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"            duke.save();","lastModifiedDate":"2022-09-10"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.0));","lastModifiedDate":"2022-09-10"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"            delay.setOnFinished(scene -\u003e {","lastModifiedDate":"2022-09-10"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"                Platform.exit();","lastModifiedDate":"2022-09-10"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"            });","lastModifiedDate":"2022-09-10"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"            delay.play();","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-09-10"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2022-09-10"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"        } else {","lastModifiedDate":"2022-09-10"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2022-09-10"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-10"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":74}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":" * The Deadline class encapsulates a Deadline task.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    /** A specific date/time for the task to be done */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    protected String by;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    /** The deadline to be stored in the Deadline object */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates a Deadline object.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"     * @param by A specific date/time for the task to be done.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     * @throws DukeException If by is in an invalid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"            this.deadline \u003d LocalDateTime.parse(by.substring(1));","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"                    + \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates a Deadline object.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"     * @param isDone Flag to indicate if the task is done or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"     * @param by A specific date/time for the task to be done.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"     * @throws DukeException If by is in an invalid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"            this.deadline \u003d LocalDateTime.parse(by.substring(1));","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"                    + \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"     * Returns the deadline date/time in a valid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"     * @return Deadline date/time in a valid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    private String printTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        String s \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm:ss a\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        return s;","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        return \"D | \" + super.fileStatus() + \"|\" + this.by;","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"                + printTime() + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":75}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":" * The Event class encapsulates an Event task.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    /** A specific start and end to the task */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    protected String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    /** The event duration to be stored in the Event object */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    protected LocalDateTime event;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates an Event object.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     * @param at A specific start and end to the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"     * @throws DukeException If at given is in an invalid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"            this.event \u003d LocalDateTime.parse(at.substring(1));","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"                    + \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates an Event object.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"     * @param isDone Flag to indicate if a task is done or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"     * @param at A specific start and end to the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"     * @throws DukeException If at given is in an invalid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"            this.event \u003d LocalDateTime.parse(at.substring(1));","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"            throw new DukeException(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"                    + \"E.g 2019-10-15T10:15:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"     * Returns the event start and end date/time in a valid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"     * @return event start and end date/time in valid format.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    private String printTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        String s \u003d this.event.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm:ss a\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"        return s;","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"jeromehjj"},"content":"        return \"E | \" + super.fileStatus() + \"|\" + this.at;","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"jeromehjj"},"content":"        return \"[E]\" + super.toString() + \"(at: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"jeromehjj"},"content":"                + printTime() + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"jeromehjj":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"    /** The description of the task */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    /** Flag to indicate if a task is done or not */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates a Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates a Task object.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"     * @param isDone Flag to indicate if task is done or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"        return this.description;","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"jeromehjj"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jeromehjj"},"content":"     * Returns the String representation of the Task object when saved into a file.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jeromehjj"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"jeromehjj"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"jeromehjj"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"jeromehjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"jeromehjj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"jeromehjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"jeromehjj"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":63}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":" * The ToDo class encapsulates a ToDo task.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates a ToDo object.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"     * Instantiates a ToDo object.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"     * @param isDone Flag to indicate if task is done or not.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jeromehjj"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"jeromehjj"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"jeromehjj"},"content":"    public String fileStatus() {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"jeromehjj"},"content":"        return \"T | \" + super.fileStatus();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"jeromehjj"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"jeromehjj"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"jeromehjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"jeromehjj":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    public void instantiateDeadlineObject_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"[D][ ] Concert (at: Aug 27 2022 06:40:00 PM\",","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"                    new Deadline(\"Concert\", \"Aug 27th 2pm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"Please input the deadline in yyyy-mm-ddTHours:Minute:Seconds format. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":23}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"public class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"    public void instantiateEventObject_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"[E][ ] Concert (at: Aug 27 2022 06:40:00 PM\",","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"                    new Event(\"Concert\", \"Aug 27th 2pm\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"            assertEquals(\"Please input the deadline in yyyy-mm-ddTHours:Minutes:Seconds format. \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"                    \"E.g 2019-10-15T10:15:00\", e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":23}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"    public void testStringConversion() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jeromehjj"},"content":"        ToDo t \u003d new ToDo(\"read book\");","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(\"[T][ ] read book\", t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jeromehjj"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jeromehjj"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jeromehjj"},"content":"    public void testFileStatus() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"        ToDo t \u003d new ToDo(\"read book\");","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jeromehjj"},"content":"        t.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jeromehjj"},"content":"        assertEquals(\"T | 1 | read book\", t.fileStatus());","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jeromehjj"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jeromehjj"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jeromehjj":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"jeromehjj"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"jeromehjj"},"content":"todo breakfast","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"jeromehjj"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"jeromehjj"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"jeromehjj"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"jeromehjj"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"jeromehjj"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"jeromehjj"},"content":"deadline homework /by today 2359","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"event concert /at Sunday 1700","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"jeromehjj"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"jeromehjj":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jeromehjj"},"content":"javac  -cp C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\Duke.java -Xlint:none -d ..\\bin C:\\Users\\Jerome\\cs2103t\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jeromehjj"},"content":"java -classpath C:\\Users\\Jerome\\cs2103t\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeromehjj":2,"-":19}}]

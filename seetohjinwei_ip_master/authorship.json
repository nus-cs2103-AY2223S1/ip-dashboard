[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":" * Deadline is a Task that needs to be done before a specific date/time.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException emptyDescription \u003d new DukeException(\"Description of Deadline cannot be empty!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException wrongFormat \u003d","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"        new DukeException(\"Wrong format for Deadline!\\n    Should be \u0027deadline \u003cdescription\u003e /by YYYY-MM-DD\u0027.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    /** Deadline of the deadline. */","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"     * Private constructor for a deadline, with a description and deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * Deadline is set as \"not done\" when created.","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of a deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     * @param deadline    Deadline of a deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    private Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     * Factory Method for a Deadline, with a user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     * Deadline is set as \"not done\" when created.","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"     * @param input User input.","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"     * @return Deadline object with the given user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    public static Deadline create(String input) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        if (input.length() \u003c 1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"            throw Deadline.emptyDescription;","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        // Split the input into description and date with the separator of \"/by\".","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        String[] split \u003d input.split(\" /by \");","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"            throw wrongFormat;","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        String description \u003d split[0];","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        String deadline \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate localDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"            localDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.invalidDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"        return new Deadline(description, localDate);","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"     * Factory method for a Deadline, with done and description and date.","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"     * @param done Whether the Deadline is done.","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"     * @param date Date of Deadline.","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"     * @return Deadline object with the given parameters.","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    public static Deadline create(String done, String description, String date) {","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        Deadline deadline \u003d new Deadline(description, LocalDate.parse(date));","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        if (done.equals(\"1\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"            deadline.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"        return deadline;","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of a Deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of a Deadline.","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    public String getFileFormat() {","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"D | %s | %s\", super.getFileFormat(), this.deadline);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of a deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of a deadline.","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yy\");","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        String deadline \u003d this.deadline.format(formatter);","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seetohjinwei":93}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"import java.io.File;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-12"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    private static final String minorIndentation \u003d \"  \";","lastModifiedDate":"2022-08-12"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"    private static final String indentation \u003d \"    \";","lastModifiedDate":"2022-08-12"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    private static final String horizontalLine \u003d indentation + \"____________________________________________________________\";","lastModifiedDate":"2022-08-12"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"     * Load tasks from file.","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * @return tasks The tasks loaded from the file.","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    private static ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        Path directoryPath \u003d Paths.get(\"data\");","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        Path filePath \u003d Paths.get(\"data/tasks\");","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        File directory \u003d new File(directoryPath.toUri());","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        // Create directory if it does not exist.","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        // noinspection ResultOfMethodCallIgnored because not only making use of the side effect","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        directory.mkdir();","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        File file \u003d new File(filePath.toUri());","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"            // Create file if it does not exist.","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"                // If file did not exist before this, there are no tasks.","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"                return tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.badData;","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"                String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"                Task task;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"                switch (split[0]) {","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"                        task \u003d Todo.create(split[1], split[2]);","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"                        task \u003d Deadline.create(split[1], split[2], split[3]);","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"                        task \u003d Event.create(split[1], split[2], split[3]);","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"                    default:","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"                        throw DukeException.badData;","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"                tasks.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"            // Should not happen because file is created beforehand.","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"            return tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        return tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"     * Save tasks to file.","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"     * @param tasks The tasks to be saved to the file.","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        Path filePath \u003d Paths.get(\"data/tasks\");","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        File file \u003d new File(filePath.toUri());","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"            String line \u003d task.getFileFormat();","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"            fw.write(line + \"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        fw.close();","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    private static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"            System.out.printf(indentation + \"%d: %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-12"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"    private static void mark(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.noIndex;","lastModifiedDate":"2022-08-13"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        String indexInput \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"        int i \u003d Integer.parseInt(indexInput);","lastModifiedDate":"2022-08-12"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2022-08-13"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.invalidIndex;","lastModifiedDate":"2022-08-13"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        // Subtract 1 to account for 0-index data structure.","lastModifiedDate":"2022-08-13"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-12"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"        System.out.printf(indentation + \"Marked task %d as done!\\n\", i);","lastModifiedDate":"2022-08-12"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + minorIndentation + task);","lastModifiedDate":"2022-08-12"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"    private static void unmark(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.noIndex;","lastModifiedDate":"2022-08-13"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"        String indexInput \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"        int i \u003d Integer.parseInt(indexInput);","lastModifiedDate":"2022-08-12"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"        if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2022-08-13"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.invalidIndex;","lastModifiedDate":"2022-08-13"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"        // Subtract 1 to account for 0-index data structure.","lastModifiedDate":"2022-08-13"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-12"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"        System.out.printf(indentation + \"Marked task %d as not done!\\n\", i);","lastModifiedDate":"2022-08-12"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + minorIndentation + task);","lastModifiedDate":"2022-08-12"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"    private static void delete(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.noIndex;","lastModifiedDate":"2022-08-13"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"        String indexInput \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"        int i \u003d Integer.parseInt(indexInput);","lastModifiedDate":"2022-08-13"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"        if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2022-08-13"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.invalidIndex;","lastModifiedDate":"2022-08-13"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"        // Subtract 1 to account for 0-index data structure.","lastModifiedDate":"2022-08-13"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"        tasks.remove(i - 1);","lastModifiedDate":"2022-08-13"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2022-08-13"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":141,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"Removing this todo!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + minorIndentation + task);","lastModifiedDate":"2022-08-13"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"        System.out.printf(indentation + \"Now you have %d tasks.\\n\", numberOfTasks);","lastModifiedDate":"2022-08-13"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"    private static void todo(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"            throw Todo.emptyDescription;","lastModifiedDate":"2022-08-13"},{"lineNumber":149,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"        String description \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":151,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d Todo.create(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-13"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2022-08-13"},{"lineNumber":154,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":155,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"Added this todo!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + minorIndentation + task);","lastModifiedDate":"2022-08-13"},{"lineNumber":157,"author":{"gitId":"seetohjinwei"},"content":"        System.out.printf(indentation + \"Now you have %d tasks.\\n\", numberOfTasks);","lastModifiedDate":"2022-08-13"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":159,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":160,"author":{"gitId":"seetohjinwei"},"content":"    private static void deadline(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":162,"author":{"gitId":"seetohjinwei"},"content":"            throw Deadline.emptyDescription;","lastModifiedDate":"2022-08-13"},{"lineNumber":163,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"        String descAndDate \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d Deadline.create(descAndDate);","lastModifiedDate":"2022-08-13"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-13"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2022-08-13"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"Added this deadline!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":170,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + minorIndentation + task);","lastModifiedDate":"2022-08-13"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"        System.out.printf(indentation + \"Now you have %d tasks.\\n\", numberOfTasks);","lastModifiedDate":"2022-08-13"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":173,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"    private static void event(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":176,"author":{"gitId":"seetohjinwei"},"content":"            throw Event.emptyDescription;","lastModifiedDate":"2022-08-13"},{"lineNumber":177,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"        String descAndDate \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d Event.create(descAndDate);","lastModifiedDate":"2022-08-13"},{"lineNumber":180,"author":{"gitId":"seetohjinwei"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-13"},{"lineNumber":181,"author":{"gitId":"seetohjinwei"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2022-08-13"},{"lineNumber":182,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":183,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"Added this event!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":184,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + minorIndentation + task);","lastModifiedDate":"2022-08-13"},{"lineNumber":185,"author":{"gitId":"seetohjinwei"},"content":"        System.out.printf(indentation + \"Now you have %d tasks.\\n\", numberOfTasks);","lastModifiedDate":"2022-08-13"},{"lineNumber":186,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":187,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":189,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2022-08-17"},{"lineNumber":190,"author":{"gitId":"seetohjinwei"},"content":"        String logo \u003d indentation + \"____        _        \\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":191,"author":{"gitId":"seetohjinwei"},"content":"                + indentation + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":192,"author":{"gitId":"seetohjinwei"},"content":"                + indentation + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":193,"author":{"gitId":"seetohjinwei"},"content":"                + indentation + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":194,"author":{"gitId":"seetohjinwei"},"content":"                + indentation + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":195,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"Hello I\u0027m\\n\" + logo);","lastModifiedDate":"2022-08-17"},{"lineNumber":196,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"What can I do for you?\");","lastModifiedDate":"2022-08-17"},{"lineNumber":197,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2022-08-17"},{"lineNumber":198,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":199,"author":{"gitId":"seetohjinwei"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":200,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":201,"author":{"gitId":"seetohjinwei"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":202,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":203,"author":{"gitId":"seetohjinwei"},"content":"            tasks \u003d loadTasks();","lastModifiedDate":"2022-08-17"},{"lineNumber":204,"author":{"gitId":"seetohjinwei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":205,"author":{"gitId":"seetohjinwei"},"content":"            System.out.println(indentation + e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":206,"author":{"gitId":"seetohjinwei"},"content":"            // Load with empty list instead.","lastModifiedDate":"2022-08-17"},{"lineNumber":207,"author":{"gitId":"seetohjinwei"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":208,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":209,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":210,"author":{"gitId":"seetohjinwei"},"content":"        scanLoop:","lastModifiedDate":"2022-08-17"},{"lineNumber":211,"author":{"gitId":"seetohjinwei"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":212,"author":{"gitId":"seetohjinwei"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":213,"author":{"gitId":"seetohjinwei"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":214,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":215,"author":{"gitId":"seetohjinwei"},"content":"                String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":216,"author":{"gitId":"seetohjinwei"},"content":"                String command \u003d split[0];","lastModifiedDate":"2022-08-17"},{"lineNumber":217,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":218,"author":{"gitId":"seetohjinwei"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2022-08-17"},{"lineNumber":219,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":220,"author":{"gitId":"seetohjinwei"},"content":"                // Handle the various commands.","lastModifiedDate":"2022-08-17"},{"lineNumber":221,"author":{"gitId":"seetohjinwei"},"content":"                switch (command) {","lastModifiedDate":"2022-08-17"},{"lineNumber":222,"author":{"gitId":"seetohjinwei"},"content":"                    case \"bye\":","lastModifiedDate":"2022-08-17"},{"lineNumber":223,"author":{"gitId":"seetohjinwei"},"content":"                        // Stops the application, by breaking out of the scan loop.","lastModifiedDate":"2022-08-17"},{"lineNumber":224,"author":{"gitId":"seetohjinwei"},"content":"                        break scanLoop;","lastModifiedDate":"2022-08-17"},{"lineNumber":225,"author":{"gitId":"seetohjinwei"},"content":"                    case \"list\":","lastModifiedDate":"2022-08-17"},{"lineNumber":226,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.list(tasks);","lastModifiedDate":"2022-08-17"},{"lineNumber":227,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":228,"author":{"gitId":"seetohjinwei"},"content":"                    case \"mark\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":229,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.mark(tasks, split);","lastModifiedDate":"2022-08-17"},{"lineNumber":230,"author":{"gitId":"seetohjinwei"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":232,"author":{"gitId":"seetohjinwei"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":233,"author":{"gitId":"seetohjinwei"},"content":"                    case \"unmark\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":234,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.unmark(tasks, split);","lastModifiedDate":"2022-08-17"},{"lineNumber":235,"author":{"gitId":"seetohjinwei"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":236,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":237,"author":{"gitId":"seetohjinwei"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":238,"author":{"gitId":"seetohjinwei"},"content":"                    case \"delete\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":239,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.delete(tasks, split);","lastModifiedDate":"2022-08-17"},{"lineNumber":240,"author":{"gitId":"seetohjinwei"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":242,"author":{"gitId":"seetohjinwei"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":243,"author":{"gitId":"seetohjinwei"},"content":"                    case \"todo\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":244,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.todo(tasks, split);","lastModifiedDate":"2022-08-17"},{"lineNumber":245,"author":{"gitId":"seetohjinwei"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":247,"author":{"gitId":"seetohjinwei"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":248,"author":{"gitId":"seetohjinwei"},"content":"                    case \"deadline\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":249,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.deadline(tasks, split);","lastModifiedDate":"2022-08-17"},{"lineNumber":250,"author":{"gitId":"seetohjinwei"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-17"},{"lineNumber":252,"author":{"gitId":"seetohjinwei"},"content":"                    }","lastModifiedDate":"2022-08-17"},{"lineNumber":253,"author":{"gitId":"seetohjinwei"},"content":"                    case \"event\": {","lastModifiedDate":"2022-08-17"},{"lineNumber":254,"author":{"gitId":"seetohjinwei"},"content":"                        Duke.event(tasks, split);","lastModifiedDate":"2022-08-17"},{"lineNumber":255,"author":{"gitId":"seetohjinwei"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":256,"author":{"gitId":"seetohjinwei"},"content":"                        break;","lastModifiedDate":"2022-08-13"},{"lineNumber":257,"author":{"gitId":"seetohjinwei"},"content":"                    }","lastModifiedDate":"2022-08-13"},{"lineNumber":258,"author":{"gitId":"seetohjinwei"},"content":"                    default:","lastModifiedDate":"2022-08-13"},{"lineNumber":259,"author":{"gitId":"seetohjinwei"},"content":"                        throw DukeException.unknownCommand;","lastModifiedDate":"2022-08-13"},{"lineNumber":260,"author":{"gitId":"seetohjinwei"},"content":"                }","lastModifiedDate":"2022-08-12"},{"lineNumber":261,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":262,"author":{"gitId":"seetohjinwei"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2022-08-12"},{"lineNumber":263,"author":{"gitId":"seetohjinwei"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":264,"author":{"gitId":"seetohjinwei"},"content":"                System.out.println(indentation + e.getMessage());","lastModifiedDate":"2022-08-13"},{"lineNumber":265,"author":{"gitId":"seetohjinwei"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2022-08-13"},{"lineNumber":266,"author":{"gitId":"seetohjinwei"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":267,"author":{"gitId":"seetohjinwei"},"content":"                // Handles case where user inputs an invalid number.","lastModifiedDate":"2022-08-13"},{"lineNumber":268,"author":{"gitId":"seetohjinwei"},"content":"                System.out.println(indentation + \"Invalid number!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":269,"author":{"gitId":"seetohjinwei"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2022-08-13"},{"lineNumber":270,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":271,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-12"},{"lineNumber":272,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":273,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(indentation + \"Bye, hope to see you soon!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":274,"author":{"gitId":"seetohjinwei"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2022-08-13"},{"lineNumber":275,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":276,"author":{"gitId":"seetohjinwei"},"content":"        // Close scanner.","lastModifiedDate":"2022-08-17"},{"lineNumber":277,"author":{"gitId":"seetohjinwei"},"content":"        scanner.close();","lastModifiedDate":"2022-08-17"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"seetohjinwei":275,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":" * Exception for the Duke application.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"    // Some commonly used exceptions.","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException unknownCommand \u003d new DukeException(\"Unknown command!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException noIndex \u003d new DukeException(\"Please provide an index!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException invalidIndex \u003d new DukeException(\"Invalid index!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException invalidDate \u003d new DukeException(\"Invalid date!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException badData \u003d new DukeException(\"Bad tasks data!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"     * Constructor for a Duke Exception, that takes in a message.","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"     * @param message Message for the Duke Exception.","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"        super(message);","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seetohjinwei":20}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":" * Event is a Task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException emptyDescription \u003d new DukeException(\"Description of Event cannot be empty!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException wrongFormat \u003d","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"            new DukeException(\"Wrong format for Event!\\n    Should be \u0027event \u003cdescription\u003e /at YYYY-MM-DD\u0027.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    /** Date of the event. */","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"     * Private constructor for an event, with a description and date.","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * Event is set as \"not done\" when created.","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of an event.","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     * @param date        Date of an event.","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    private Event(String description, LocalDate date) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     * Factory Method for an Event, with a user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     * Event is set as \"not done\" when created.","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"     * @param input User input.","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"     * @return Event object with the given user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    public static Event create(String input) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        if (input.length() \u003c 1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"            throw Event.emptyDescription;","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        // Split the input into description and date with the separator of \"/at\".","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        String[] split \u003d input.split(\" /at \");","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"            throw Event.wrongFormat;","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        String description \u003d split[0];","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        String date \u003d split[1];","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate localDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"            localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"            throw DukeException.invalidDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"        return new Event(description, localDate);","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"     * Factory method for an Event, with done and description and date.","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"     * @param done Whether the Event is done.","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of Event.","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"     * @param date Date of Event.","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"     * @return Event object with the given parameters.","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    public static Event create(String done, String description, String date) {","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        Event event \u003d new Event(description, LocalDate.parse(date));","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        if (done.equals(\"1\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"            event.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"        return event;","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of an Event.","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of an Event.","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    public String getFileFormat() {","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"E | %s | %s\", super.getFileFormat(), this.date);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of an event.","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of an event","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yy\");","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        String date \u003d this.date.format(formatter);","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), date);","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seetohjinwei":93}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-08-12"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":" * Task is a representation of a task in Duke.","lastModifiedDate":"2022-08-12"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-08-12"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"    /** Description of the task. */","lastModifiedDate":"2022-08-12"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"    private final String description;","lastModifiedDate":"2022-08-12"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"    /** Whether the task is done. */","lastModifiedDate":"2022-08-12"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-12"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-12"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"     * Constructor for a Task, with a description.","lastModifiedDate":"2022-08-12"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"     * Task is set as \"not done\" when created.","lastModifiedDate":"2022-08-12"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-12"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of a task.","lastModifiedDate":"2022-08-12"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-12"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-12"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-12"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-12"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-12"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-12"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-12"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-12"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-12"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-12"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-08-12"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-12"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-12"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-12"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-12"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the task in a format for file saving.","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"     * @return The task in file saving format.","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    public String getFileFormat() {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"%s | %s\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-12"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of a task.","lastModifiedDate":"2022-08-12"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-12"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of a task.","lastModifiedDate":"2022-08-12"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-12"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-08-12"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-12"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"        String doneIcon \u003d this.isDone ? \"X\" : \" \" ;","lastModifiedDate":"2022-08-12"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"[%s] %s\", doneIcon, this.description);","lastModifiedDate":"2022-08-12"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-12"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-08-12"}],"authorContributionMap":{"seetohjinwei":54}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":" * Todo is a Task without any date/time attached to it.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"    public final static DukeException emptyDescription \u003d new DukeException(\"Description of Todo cannot be empty!\");","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"     * Private constructor for a Todo, with a description.","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"     * Todo is set as \"not done\" when created.","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of a todo.","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    private Todo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * Factory Method for a Todo, with a user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     * Todo is set as \"not done\" when created.","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of Todo.","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"     * @return Todo object with the given user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    public static Todo create(String description) throws DukeException {","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        if (description.length() \u003c 1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"            throw Todo.emptyDescription;","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        return new Todo(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"     * Factory method for a Todo, with done and description.","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"     * @param done Whether the Todo is done.","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"     * @param description Description of Todo.","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"     * @return Todo object with the given parameters.","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    public static Todo create(String done, String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        if (done.equals(\"1\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"            todo.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        return todo;","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of a Todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of a Todo.","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    public String getFileFormat() {","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(\"T | %s\", super.getFileFormat());","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the string representation of a todo.","lastModifiedDate":"2022-08-13"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"     * @return String representation of a todo.","lastModifiedDate":"2022-08-13"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seetohjinwei":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"todo read book","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"deadline return book /by 2022-06-29","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"event project meeting /at 2022-08-06","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"todo join sports club","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"mark 4","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"todo borrow book","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"deadline return book 2 /by 2019-10-15","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"event project meeting /at 2022-10-15","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"todo","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"todo","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"deadline","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"deadline","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"deadline x","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"event","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"event","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"event x","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"blah","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"?","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"delete 1","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"delete 1","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"bye","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"seetohjinwei":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"# remove the data from previous test (if any)","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"rm -f data/tasks","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"seetohjinwei":3}}]

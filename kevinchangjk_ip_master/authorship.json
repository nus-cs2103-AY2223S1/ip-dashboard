[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"plugins {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"repositories {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    mavenCentral()","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"dependencies {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"test {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    testLogging {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        showExceptions true","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        showCauses true","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        showStackTraces true","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"application {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    mainClassName \u003d \"carbon.Launcher\"","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"checkstyle {","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"  toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"shadowJar {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"    archiveBaseName \u003d \"carbon\"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"run{","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-05"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"javafx {","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"    version \u003d \"18.0.2\"","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"kevinchangjk":68}},{"path":"src/main/java/carbon/Carbon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":" * Interacts with user through CLI to keep track of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":" * Requires user to provide input and call task management commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class Carbon {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"     * Creates an instance of Carbon.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"     * Main constructor.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"     * Initializes with required components: UI, Storage, and Parser.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"     * @return Carbon object.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    public Carbon() {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        // init fields","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        this.parser \u003d new Parser(this.ui, this.storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"     * Returns the greeting for the user interface.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"     * @return Greeting to the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    public String greet() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        return this.ui.greet();","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"     * Returns the log response from the parser and processer.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"     * @return Execution log.","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"        String log;","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d this.parser.processCommand(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        } catch (CarbonException error) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d error.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"kevinchangjk":52}},{"path":"src/main/java/carbon/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import carbon.gui.Main;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class Launcher {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"     * Launches the GUI application.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"kevinchangjk":16}},{"path":"src/main/java/carbon/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CorruptedSaveFileException;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidInputException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":" * Parses user inputs, and processes them.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":" * This class merges the reading and writing functionality of the chat bot, by","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":" * parsing user inputs, and calling for the necessary processing to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private boolean hasUndoed;","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of Parser class.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"     * @param ui An instance of the Ui class.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"     * @return Parser object.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    public Parser(Ui ui, Storage storage) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        this.hasUndoed \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"            this.taskList \u003d this.storage.loadSaveFile();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        } catch (CorruptedSaveFileException error) {","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     * Parses and processes a user input text.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     * If the command is not a basic command, this method will call the processAdvanced method.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User input text.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"     * @return Execution log.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If an error is encountered during processing or execution.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    public String processCommand(String input) throws CarbonException {","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        String lowerCaseInput \u003d input.toLowerCase();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        String log;","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        switch (lowerCaseInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d this.ui.exit();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"            assert this.taskList !\u003d null : \"Tasks not loaded\";","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d this.taskList.listItems();","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        case \"undo\":","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d this.undoPreviousCommand();","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"            this.hasUndoed \u003d true;","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"            // unable to process as a simple command, pass to next handler","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d this.processAdvancedCommand(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"     * Parses and processes user input text.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"     * This method is only for advanced commands that require parameters from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User input text.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"     * @return Execution log.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If an error is encountered during processing or execution.","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"    private String processAdvancedCommand(String input) throws CarbonException {","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        String lowerCaseInput \u003d input.toLowerCase();","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        String log;","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"            this.storage.writeUndoTasks(this.taskList);","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"            if (lowerCaseInput.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.validateAndMark(input, true);","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"            } else if (lowerCaseInput.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.validateAndMark(input, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"            } else if (lowerCaseInput.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.deleteTask(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"            } else if (lowerCaseInput.startsWith(\"find\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.findTask(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"            } else if (lowerCaseInput.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.addTask(input, Task.Type.TODO);","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"            } else if (lowerCaseInput.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.addTask(input, Task.Type.DEADLINE);","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"            } else if (lowerCaseInput.startsWith(\"event\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.addTask(input, Task.Type.EVENT);","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"                // not a valid command","lastModifiedDate":"2022-09-05"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"                CarbonException invalidInput \u003d new InvalidInputException(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"                throw invalidInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"            this.storage.writeSaveTasks(this.taskList);","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"            this.hasUndoed \u003d false;","lastModifiedDate":"2022-09-11"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"            return log;","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"        } catch (CarbonException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"            throw error;","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"    private String undoPreviousCommand() {","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"        String log;","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"            if (this.hasUndoed) {","lastModifiedDate":"2022-09-11"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d \"My guy, you already undo-ed once.\\nI can\u0027t remember more than one change.\";","lastModifiedDate":"2022-09-11"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"            } else {","lastModifiedDate":"2022-09-11"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"                this.taskList \u003d this.storage.loadUndoFile();","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"                log \u003d this.taskList.listItems();","lastModifiedDate":"2022-09-11"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"        } catch (FileNotFoundException error) {","lastModifiedDate":"2022-09-11"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d \"There\u0027s nothing to undo yet.\";","lastModifiedDate":"2022-09-11"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"        } catch (CorruptedSaveFileException error) {","lastModifiedDate":"2022-09-11"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d \"Sorry, I can\u0027t undo that. Too bad.\";","lastModifiedDate":"2022-09-11"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-09-11"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"kevinchangjk":127}},{"path":"src/main/java/carbon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CorruptedSaveFileException;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":" * Stores data on tasks and acts as interface for storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":" * Used to save data and load data from a default filepath.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    /** Default filepath for storing data on tasks */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    private static final String SAVEFILENAME \u003d \"tasks.txt\";","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    private static final String UNDOFILENAME \u003d \"undo.txt\";","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private static final String WORKING_DIR \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    private static final String STORE_DIR \u003d Storage.WORKING_DIR + \"/store/\";","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    private static final String SAVEFILEPATH \u003d Storage.STORE_DIR + Storage.SAVEFILENAME;","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    private static final String UNDOFILEPATH \u003d Storage.STORE_DIR + Storage.UNDOFILENAME;","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of Storage class.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"     * Main constructor method.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"     * @return Storage object.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    public Storage() {}","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    private TaskList loadFile(String filepath) throws FileNotFoundException, CorruptedSaveFileException {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        File saveFile \u003d new File(filepath);","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        if (!saveFile.isFile()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"            throw new FileNotFoundException(\"File does not exist\");","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        Scanner saveFileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        while (saveFileScanner.hasNextLine()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"            String data \u003d saveFileScanner.nextLine();","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"            taskList.loadTask(data);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"        saveFileScanner.close();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"        return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    private void writeTasks(TaskList taskList, String filepath) {","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        File saveFile \u003d new File(filepath);","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        File saveFileDir \u003d new File(Storage.STORE_DIR);","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            // ensures dir and file exists","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"            saveFileDir.mkdir();","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"            FileWriter writer \u003d new FileWriter(saveFile);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"            writer.write(taskList.encodeTasks());","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        } catch (IOException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"            System.out.println(error);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"     * Loads the save file and retrieves saved tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"     * Uses the default filepath.","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"     * @return TaskList instance containing the saved tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    public TaskList loadSaveFile() throws FileNotFoundException, CorruptedSaveFileException {","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        return this.loadFile(Storage.SAVEFILEPATH);","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"     * Saves the tasks in the save file.","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"     * Uses the default filepath.","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"     * @param taskList Instance of TaskList containing tasks to be saved.","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"    public void writeSaveTasks(TaskList taskList) {","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        this.writeTasks(taskList, Storage.SAVEFILEPATH);","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"     * Loads the undo file and retrieves the previous state of saved tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"     * Uses the default filepath.","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"     * @return TaskList instance containing the previous saved tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"    public TaskList loadUndoFile() throws FileNotFoundException, CorruptedSaveFileException {","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        return this.loadFile(Storage.UNDOFILEPATH);","lastModifiedDate":"2022-09-06"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"     * Saves the tasks in the undo file.","lastModifiedDate":"2022-09-06"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"     * Uses the default filepath.","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"     * @param taskList Instance of TaskList containing tasks to be saved.","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"    public void writeUndoTasks(TaskList taskList) {","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        this.writeTasks(taskList, Storage.UNDOFILEPATH);","lastModifiedDate":"2022-09-06"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"kevinchangjk":104}},{"path":"src/main/java/carbon/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import java.util.List;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CorruptedSaveFileException;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidParamException;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.OutOfBoundsException;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":" * A class that contains and manages user-declared tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of TaskList class.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"     * @return TaskList object.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"     * Loads and adds a task to the list of all tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"     * @param data String input of the encoded task.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If an error is encountered while decoding the String data.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    public void loadTask(String data) throws CorruptedSaveFileException {","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"            Task task \u003d Task.decodeTask(data);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"            this.tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        } catch (CorruptedSaveFileException error) {","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"            throw error;","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"     * Encodes the task into text data to be stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"     * Does not use any actual encoding format, but simplifies the text.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"     * @return Encoded task data.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"    public String encodeTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        String encodedTasks \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d this.tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"            encodedTasks +\u003d this.tasks.get(i).encode();","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        return encodedTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"     * Updates if a specific task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"     * Performs input validation before executing.","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"     * @return Execution log.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If there are invalid parameters.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    public String validateAndMark(String input, boolean isDone) throws CarbonException {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"        int taskNumber;","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d input.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        int requiredLen \u003d isDone ? \"mark \".length() : \"unmark \".length();","lastModifiedDate":"2022-09-05"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"        if (len \u003c\u003d requiredLen) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        String indexString \u003d input.substring(requiredLen);","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        if (!indexString.matches(\"[0-9]+\")) {","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"        taskNumber \u003d Integer.valueOf(indexString);","lastModifiedDate":"2022-09-11"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e this.tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException outOfBounds \u003d new OutOfBoundsException(taskNumber, this.tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"            throw outOfBounds;","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        String log \u003d this.setDone(taskNumber, isDone);","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"    private String setDone(int taskNumber, boolean isDone) {","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"        String log;","lastModifiedDate":"2022-09-11"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"        boolean hasChanged \u003d task.setDone(isDone);","lastModifiedDate":"2022-09-11"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"        if (hasChanged) {","lastModifiedDate":"2022-09-11"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d String.format(\"Got it! \\n\\n%s\", task);","lastModifiedDate":"2022-09-11"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-09-11"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"            log \u003d String.format(\"I\u0027ve already marked it as \"","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"                    + (isDone ? \"done\" : \"undone\")","lastModifiedDate":"2022-09-11"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"                    + \".\\n\\n%s\", task);","lastModifiedDate":"2022-09-11"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"     * @param type Type of Task: Todo, Event, or Deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"     * @return Execution log.","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If an error is encountered while creating the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"    public String addTask(String input, Task.Type type) throws CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"        Task newTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"        switch (type) {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"        case TODO: {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"            newTask \u003d Todo.createTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"        case DEADLINE: {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"            newTask \u003d Deadline.createTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"        case EVENT: {","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"            newTask \u003d Event.createTask(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"            // should never reach here","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"            assert false : \"Unknown task type\";","lastModifiedDate":"2022-09-05"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"            newTask \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"        String log \u003d String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"kevinchangjk"},"content":"                \"I have added: \\n%s\\n\\nWe\u0027ve got %s so far.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"                newTask,","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":"                this.countTasks()","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"     * Deletes a user-specified task.","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"     * @return Execution log.","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If there are invalid parameters.","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"kevinchangjk"},"content":"    public String deleteTask(String input) throws CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d input.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"        int requiredLen \u003d \"delete \".length();","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"kevinchangjk"},"content":"        if (len \u003c\u003d requiredLen) {","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":162,"author":{"gitId":"kevinchangjk"},"content":"        int taskNumber \u003d Integer.valueOf(input.substring(requiredLen));","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"kevinchangjk"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e this.tasks.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException outOfBounds \u003d new OutOfBoundsException(taskNumber, this.tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"kevinchangjk"},"content":"            throw outOfBounds;","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"        Task taskDeleted \u003d this.tasks.remove(taskNumber - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"        String log \u003d String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"kevinchangjk"},"content":"                \"I have removed: \\n%s\\n\\nWe\u0027ve got %s left.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"                taskDeleted,","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"                this.countTasks()","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"     * Finds all tasks that contain a user-specified keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"     * @return All matching tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If there are invalid parameters.","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"    public String findTask(String input) throws CarbonException {","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d input.length();","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"kevinchangjk"},"content":"        int requiredLen \u003d \"find \".length();","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"kevinchangjk"},"content":"        if (len \u003c\u003d requiredLen) {","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":191,"author":{"gitId":"kevinchangjk"},"content":"        String keyword \u003d input.substring(requiredLen);","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"kevinchangjk"},"content":"        String log \u003d \"Here\u0027s what I could find. \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"kevinchangjk"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"        this.tasks.forEach(task -\u003e {","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"kevinchangjk"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":196,"author":{"gitId":"kevinchangjk"},"content":"                matches.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":198,"author":{"gitId":"kevinchangjk"},"content":"        });","lastModifiedDate":"2022-08-26"},{"lineNumber":199,"author":{"gitId":"kevinchangjk"},"content":"        log \u003d this.arrangeTasks(matches, log);","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-26"},{"lineNumber":201,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":204,"author":{"gitId":"kevinchangjk"},"content":"     * Lists all tasks that are contained.","lastModifiedDate":"2022-08-26"},{"lineNumber":205,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"kevinchangjk"},"content":"     * @return Text containing all tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"kevinchangjk"},"content":"    public String listItems() {","lastModifiedDate":"2022-08-25"},{"lineNumber":209,"author":{"gitId":"kevinchangjk"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"kevinchangjk"},"content":"            String log \u003d \"There are no tasks so far.\";","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"kevinchangjk"},"content":"            return log;","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"kevinchangjk"},"content":"        assert this.tasks.size() \u003e 0 : \"Tasks have been corrupted\";","lastModifiedDate":"2022-09-05"},{"lineNumber":215,"author":{"gitId":"kevinchangjk"},"content":"        String log \u003d \"Here are the tasks so far. \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"kevinchangjk"},"content":"        log \u003d this.arrangeTasks(this.tasks, log);","lastModifiedDate":"2022-08-26"},{"lineNumber":217,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-26"},{"lineNumber":218,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":219,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":220,"author":{"gitId":"kevinchangjk"},"content":"    private String arrangeTasks(List\u003cTask\u003e tasks, String log) {","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"kevinchangjk"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":222,"author":{"gitId":"kevinchangjk"},"content":"            String taskLog \u003d String.format(","lastModifiedDate":"2022-08-25"},{"lineNumber":223,"author":{"gitId":"kevinchangjk"},"content":"                    \"\\n%d: %s\",","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"kevinchangjk"},"content":"                    i + 1,","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"kevinchangjk"},"content":"                    tasks.get(i)","lastModifiedDate":"2022-08-26"},{"lineNumber":226,"author":{"gitId":"kevinchangjk"},"content":"                    );","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"kevinchangjk"},"content":"            log +\u003d taskLog;","lastModifiedDate":"2022-08-25"},{"lineNumber":228,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":229,"author":{"gitId":"kevinchangjk"},"content":"        return log;","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"kevinchangjk"},"content":"    private String countTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"kevinchangjk"},"content":"        int count \u003d this.tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"kevinchangjk"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":235,"author":{"gitId":"kevinchangjk"},"content":"            return String.format(\"%d task\", count);","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":237,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(\"%d tasks\", count);","lastModifiedDate":"2022-09-05"},{"lineNumber":238,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":239,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"kevinchangjk":239}},{"path":"src/main/java/carbon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Random;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":" * Provides the user interface for Carbon to interact with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":" * Primarily used for the Graphical User Interface.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INTRO \u003d \"Hey, Carbon here. \";","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    private static final String[] INIT_PROMPTS \u003d {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"        \"What\u0027s up?\",","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        \"How\u0027s things going?\",","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"        \"Nice weather today, huh?\",","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        \"How can I help you?\",","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"        \"Please don\u0027t talk to me.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"        \"To get an A+ for CS2103T, you have t---[REDACTED]\"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    };","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private static final String[] GOODBYES \u003d {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"        \"Bye-bye, see you again soon!\",","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        \"Farewell. Stay safe.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        \"Nice meeting you. Let\u0027s catch up again sometime.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        \"Bye. Good riddance.\",","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        \"...zzzzzz...\",","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        \"What? Yeah, sorry I gotta run now.\"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    };","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    // used for making random choices of text","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    private Random rand;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of the Ui class.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"     * @return Ui object.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    public Ui() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        this.rand \u003d new Random();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"     * Returns a String comprising the greeting for the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     * Chooses a prompt from a list randomly.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"     * @return Greeting to the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"    public String greet() {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        int randomIndex \u003d this.rand.nextInt(Ui.INIT_PROMPTS.length);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"        String randomPrompt \u003d Ui.INIT_PROMPTS[randomIndex];","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        String greeting \u003d Ui.INTRO + randomPrompt;","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        return greeting;","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"     * Exits the Carbon interactive interface.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"     * @return Farewell to the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"    public String exit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        int randomIndex \u003d this.rand.nextInt(Ui.GOODBYES.length);","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        String randomGoodbye \u003d Ui.GOODBYES[randomIndex];","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"        return randomGoodbye;","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"kevinchangjk":63}},{"path":"src/main/java/carbon/error/CarbonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":" * Main abstract class for all exceptions related to Carbon.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"public abstract class CarbonException extends RuntimeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"    public CarbonException(String message) {","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"        super(message);","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        return \"Hold up, something\u0027s off.\";","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"kevinchangjk":15}},{"path":"src/main/java/carbon/error/CorruptedSaveFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":" * Exception class for corrupted stored data on tasks, that cannot be read.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"public class CorruptedSaveFileException extends CarbonException {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"    private String data;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of the exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"     * @param data String message for the error.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"     * @return CorruptedSavefileException object.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    public CorruptedSaveFileException(String data) {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"        super(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"        this.data \u003d data;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(\"The save file appear to be corrupted.\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"                + \"\\\"%s\\\" is not formatted properly.\", data);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"kevinchangjk":26}},{"path":"src/main/java/carbon/error/InvalidFlagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Deadline;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Event;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" * Exception Class for invalid inputs on flags for indicating date time.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"public class InvalidFlagException extends CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    private Task.Type type;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    private String flag;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of the exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"     * @param input String message for the error.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"     * @param type The type of task.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    public InvalidFlagException(String input, Task.Type type) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        super(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        if (type \u003d\u003d Task.Type.DEADLINE) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"            this.flag \u003d Deadline.FLAG;","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"            this.flag \u003d Event.FLAG;","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"                \"%s\\nUse \u0027%s\u0027 to indicate the time for your %s.\",","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"                super.toString(),","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"                this.flag,","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"                this.type","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"kevinchangjk":40}},{"path":"src/main/java/carbon/error/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":" * Exception Class for invalid command by user.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"public class InvalidInputException extends CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"    public InvalidInputException(String input) {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"        super(input);","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"                \"%s\\n\u0027%s\u0027? I have no idea what that is.\",","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"                super.toString(),","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"                this.getMessage()","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"kevinchangjk":21}},{"path":"src/main/java/carbon/error/InvalidParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":" * Exception class for invalid input parameters for a command.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"public class InvalidParamException extends CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"    public InvalidParamException(String input) {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"        super(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"                \"%s\\nLooks like you\u0027re missing valid details for your \u0027%s\u0027.\",","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"                super.toString(),","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"                this.getMessage()","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"kevinchangjk":21}},{"path":"src/main/java/carbon/error/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":" * Exception Class for invalid inputs regarding date and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"public class InvalidTimeException extends CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"    public InvalidTimeException(String input) {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"        super(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"                \"%s\\nThe time \u0027%s\u0027 looks a little wonky.\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"                + \"Please input in YYYY-MM-DD format.\",","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"                super.toString(),","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"                this.getMessage()","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"kevinchangjk":22}},{"path":"src/main/java/carbon/error/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.error;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":" * Exception Class for invalid index input that is out of bounds.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"public class OutOfBoundsException extends CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of the exception.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"     * @param taskNumber The task number specified by the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"     * @param length The total number of tasks currently stored.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    public OutOfBoundsException(int taskNumber, int length) {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"        super(String.format(","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"                \"%d is a little awkward. We have %d tasks.\",","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"                taskNumber,","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"                length)","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        );","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"                \"%s\\n%s\\nMaybe you would like to try that again.\",","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"                super.toString(),","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"                this.getMessage()","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        );","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"kevinchangjk":30}},{"path":"src/main/java/carbon/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"     * Returns a DialogBox configured for the user\u0027s input.","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"     * @param text User input.","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"     * @param img User profile picture.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"     * @return The user\u0027s dialog box.","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"     * Returns a DialogBox configured for Carbon\u0027s responses.","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"     * @param text Response from Carbon.","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"     * @param img Carbon profile picture.","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"     * @return Carbon\u0027s dialog box.","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"    public static DialogBox getCarbonDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"kevinchangjk":75}},{"path":"src/main/java/carbon/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import carbon.Carbon;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":" * A GUI for Carbon using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    private Carbon carbon \u003d new Carbon();","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCarbon(this.carbon);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"kevinchangjk":32}},{"path":"src/main/java/carbon/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import carbon.Carbon;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":" * Controller for MainWindow.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" * Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    private Carbon carbon;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/clown.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    private Image carbonImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/carbon.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"     * Initializes the main window.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"     * Connects the Carbon class bot to the main window for handling business logic.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     * @param carbon The Carbon object.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    public void setCarbon(Carbon carbon) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        this.carbon \u003d carbon;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"        String greeting \u003d this.carbon.greet();","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getCarbonDialog(greeting, carbonImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"     * the dialog container.","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        String response \u003d carbon.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"                DialogBox.getCarbonDialog(response, carbonImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"        this.userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"kevinchangjk":65}},{"path":"src/main/java/carbon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidFlagException;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidParamException;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidTimeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" * Deadline class that represents tasks to be completed before a particular date or time.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":" * Can be represented with either date alone, or date together with time.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    public static final String FLAG \u003d \" /by\";","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private static final int TYPEKEY \u003d Task.getTypeKey(Task.Type.DEADLINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    private Temporal dateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    private Deadline(String name, Boolean isDone, Temporal dateTime) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    private static String extractName(String input) throws CarbonException {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        int flagIndex \u003d input.indexOf(Deadline.FLAG);","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        if (flagIndex \u003d\u003d -1) {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidFlag \u003d new InvalidFlagException(input, Task.Type.DEADLINE);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidFlag;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d input.substring(\"deadline \".length(), flagIndex);","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        return name;","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    private static Temporal extractTime(String input) throws CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d input.length();","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        int flagIndex \u003d input.indexOf(Deadline.FLAG);","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        if (len \u003c\u003d flagIndex + Deadline.FLAG.length() + 1) {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        String timeString \u003d input.substring(flagIndex + Deadline.FLAG.length() + 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"            Temporal dateTime \u003d Deadline.formatTime(timeString);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"            return dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidTime \u003d new InvalidTimeException(timeString);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    private static Temporal formatTime(String timeString) throws DateTimeParseException {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"            if (timeString.length() \u003c 11) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"                LocalDate time \u003d LocalDate.parse(timeString, Task.DATEFORMATPARSE);","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"                return time;","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(timeString, Task.DATETIMEFORMATPARSE);","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"                return time;","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"            throw error;","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"     * Creates a new Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"    public static Task createTask(String input) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d Deadline.extractName(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        Temporal dateTime \u003d Deadline.extractTime(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        Task deadline \u003d new Deadline(name, false, dateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        return deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"     * Loads a task that was saved.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"     * @param time Date or time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"    public static Task loadTask(String name, Boolean isDone, String time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        Temporal dateTime \u003d Deadline.formatTime(time);","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        Task deadline \u003d new Deadline(name, isDone, dateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"        return deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"    public String encode() {","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"        int typeKey \u003d Deadline.TYPEKEY;","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        String result \u003d String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"                \"%d|%d|%s|%s\\n\", typeKey, isDone, this.name,","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"                this.displayTime(Task.FormatType.READ));","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"    private String displayTime(Task.FormatType formatType) {","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"        String timeFormatted;","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"        if (this.dateTime instanceof LocalDate) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"            LocalDate date \u003d (LocalDate) this.dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"            timeFormatted \u003d formatType \u003d\u003d Task.FormatType.READ","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"                    ? date.format(Task.DATEFORMATPARSE)","lastModifiedDate":"2022-09-05"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"                    : date.format(Task.DATEFORMATPRINT);","lastModifiedDate":"2022-08-29"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"            LocalDateTime time \u003d (LocalDateTime) this.dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"            timeFormatted \u003d formatType \u003d\u003d Task.FormatType.READ","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"                    ? time.format(Task.DATETIMEFORMATPARSE)","lastModifiedDate":"2022-09-05"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"                    : time.format(Task.DATETIMEFORMATPRINT);","lastModifiedDate":"2022-08-29"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"        return timeFormatted;","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"        String type \u003d \"(DEAD)\";","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"        String timeFormatted \u003d this.displayTime(Task.FormatType.PRINT);","lastModifiedDate":"2022-08-29"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(\"%s %s \u003c %s\", type, super.toString(), timeFormatted);","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kevinchangjk":131}},{"path":"src/main/java/carbon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidFlagException;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidParamException;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidTimeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" * Event class that represents tasks that occur at a particular date or time.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":" * Can be represented with either date alone, or date together with time.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    public static final String FLAG \u003d \" /at\";","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private static final int TYPEKEY \u003d Task.getTypeKey(Task.Type.EVENT);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    private Temporal dateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    private Event(String name, Boolean isDone, Temporal dateTime) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    private static String extractName(String input) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        int flagIndex \u003d input.indexOf(Event.FLAG);","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        if (flagIndex \u003d\u003d -1) {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidFlag \u003d new InvalidFlagException(input, Task.Type.EVENT);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidFlag;","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d input.substring(\"event \".length(), flagIndex);","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        return name;","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    private static Temporal extractTime(String input) throws CarbonException {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d input.length();","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        int flagIndex \u003d input.indexOf(Event.FLAG);","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        if (len \u003c\u003d flagIndex + Event.FLAG.length() + 1) {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        String timeString \u003d input.substring(flagIndex + Event.FLAG.length() + 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"            Temporal dateTime \u003d Event.formatTime(timeString);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"            return dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidTime \u003d new InvalidTimeException(timeString);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    private static Temporal formatTime(String timeString) throws DateTimeParseException {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"            if (timeString.length() \u003c 11) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"                LocalDate time \u003d LocalDate.parse(timeString, Task.DATEFORMATPARSE);","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"                return time;","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(timeString, Task.DATETIMEFORMATPARSE);","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"                return time;","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"            throw error;","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"     * Creates a new Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User input.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"    public static Task createTask(String input) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d Event.extractName(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        Temporal dateTime \u003d Event.extractTime(input);","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        Task event \u003d new Event(name, false, dateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        return event;","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"     * Loads a task that was saved.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"     * @param time Date or time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"    public static Task loadTask(String name, Boolean isDone, String time) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        Temporal dateTime \u003d Event.formatTime(time);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"        Task event \u003d new Event(name, isDone, dateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"        return event;","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"    public String encode() {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"        int typeKey \u003d Event.TYPEKEY;","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"        String result \u003d String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"                \"%d|%d|%s|%s\\n\", typeKey, isDone, this.name,","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"                this.displayTime(Task.FormatType.READ));","lastModifiedDate":"2022-08-29"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"    private String displayTime(Task.FormatType formatType) {","lastModifiedDate":"2022-08-29"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"        String timeFormatted;","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"        if (this.dateTime instanceof LocalDate) {","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"            LocalDate date \u003d (LocalDate) this.dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"            timeFormatted \u003d formatType \u003d\u003d Task.FormatType.READ","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"                    ? date.format(Task.DATEFORMATPARSE)","lastModifiedDate":"2022-09-05"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"                    : date.format(Task.DATEFORMATPRINT);","lastModifiedDate":"2022-08-29"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"            assert this.dateTime instanceof LocalDateTime : \"Unknown date or time format\";","lastModifiedDate":"2022-09-05"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"            LocalDateTime time \u003d (LocalDateTime) this.dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"            timeFormatted \u003d formatType \u003d\u003d Task.FormatType.READ","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"                    ? time.format(Task.DATETIMEFORMATPARSE)","lastModifiedDate":"2022-09-05"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"                    : time.format(Task.DATETIMEFORMATPRINT);","lastModifiedDate":"2022-08-29"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"        return timeFormatted;","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"        String type \u003d \"(EVNT)\";","lastModifiedDate":"2022-08-31"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"        String timeFormatted \u003d this.displayTime(Task.FormatType.PRINT);","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(\"%s %s @ %s\", type, super.toString(), timeFormatted);","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kevinchangjk":133}},{"path":"src/main/java/carbon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CorruptedSaveFileException;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":" * Enapsulates information regarding tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":" * This is an abstract class, and is extended by Todo, Event, and Deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"     * Represents the types of Tasks that Carbon supports.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"     * Todo is for tasks without any deadlines.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"     * Deadline is for a task with a deadline.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"     * Event is for an item that takes place at a date and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    public static enum Type {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        TODO,","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        DEADLINE,","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        EVENT","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    };","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    protected static enum FormatType {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        READ,","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        PRINT","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    };","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    protected static final DateTimeFormatter DATEFORMATPARSE \u003d DateTimeFormatter","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"            .ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    protected static final DateTimeFormatter DATEFORMATPRINT \u003d DateTimeFormatter","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"            .ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    protected static final DateTimeFormatter DATETIMEFORMATPARSE \u003d DateTimeFormatter","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"            .ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    protected static final DateTimeFormatter DATETIMEFORMATPRINT \u003d DateTimeFormatter","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"            .ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"    private static List\u003cType\u003e typeKeys \u003d Arrays.asList(Type.values());","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    protected String name;","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs an instance of a Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"     * Constructor for an abstract class, not meant to be called directly.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"    protected Task(String name, Boolean isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    protected static int getTypeKey(Type type) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        int key \u003d typeKeys.indexOf(type);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"        return key;","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"     * Decodes text data into a single task.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"     * @param data Text data of the encoded task.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"     * @return Decoded Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"     * @throws CarbonException  If the data is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    public static Task decodeTask(String data) throws CarbonException {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        String[] values \u003d data.split(\"\\\\|\");","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"        // should have min 3 segments: type, name, and doneness","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"        if (values.length \u003c 3 || values.length \u003e 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"            throw new CorruptedSaveFileException(data);","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        // else, continue decoding","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        int typeKey \u003d Integer.parseInt(values[0]);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        Type type \u003d typeKeys.get(typeKey);","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"        int doneIndicator \u003d Integer.parseInt(values[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"        assert doneIndicator \u003d\u003d 0 || doneIndicator \u003d\u003d 1 : \"Save file corrupted\";","lastModifiedDate":"2022-09-05"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"        boolean isDone \u003d doneIndicator \u003d\u003d 1;","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d values[2];","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        String param \u003d values.length \u003d\u003d 4 ? values[3] : \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"        Task decodedTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"        switch (type) {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"        case TODO:","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"            decodedTask \u003d Todo.loadTask(name, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"            decodedTask \u003d Deadline.loadTask(name, isDone, param);","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"        case EVENT:","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"            decodedTask \u003d Event.loadTask(name, isDone, param);","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"            break;","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"            // should never reach here","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"            assert false : \"Unknown task type\";","lastModifiedDate":"2022-09-05"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"            decodedTask \u003d Todo.createTask(\"todo _\");","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"        return decodedTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"     * Updates whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"     * @return Whether there was a change.","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"    public boolean setDone(boolean isDone) {","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"        if (this.isDone \u003d\u003d isDone) {","lastModifiedDate":"2022-09-11"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"            return false;","lastModifiedDate":"2022-09-11"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"        return true;","lastModifiedDate":"2022-09-11"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"     * Encodes the task object into a simplified text to be stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"     * Does not use an actual encoding format.","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"     * @return Encoded text data.","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"    public abstract String encode();","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"     * Checks if task name contains a keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"     * @param keyword Keyword to check for.","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"     * @return Whether or not the task name contains the keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"        boolean hasKeyword \u003d this.name.contains(keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"        return hasKeyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"        String doneness \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(\"[%s] %s\", doneness, this.name);","lastModifiedDate":"2022-08-15"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kevinchangjk":146}},{"path":"src/main/java/carbon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.CarbonException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidParamException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":" * Enapsulates information regarding Todos.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    private static final int TYPEKEY \u003d Task.getTypeKey(Task.Type.TODO);","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    private Todo(String name, Boolean isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    private static String extractName(String input) throws CarbonException {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"        int len \u003d input.length();","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        int requiredLen \u003d \"todo \".length();","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"        if (len \u003c\u003d requiredLen) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"            CarbonException invalidParam \u003d new InvalidParamException(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"            throw invalidParam;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d input.substring(\"todo \".length());","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        return name;","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"     * Creates a new Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"     * @param input User text input.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    public static Task createTask(String input) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        String name \u003d Todo.extractName(input);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        Task todo \u003d new Todo(name, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        return todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"     * Loads a task that was saved.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"    public static Task loadTask(String name, Boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"        Task todo \u003d new Todo(name, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        return todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"    public String encode() {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        int typeKey \u003d Todo.TYPEKEY;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        String result \u003d String.format(\"%d|%d|%s\\n\", typeKey, isDone, this.name);","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        return result;","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"    /** {@inheritDoc} */","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        String type \u003d \"(TODO)\";","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        return String.format(\"%s %s !\", type, super.toString());","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"kevinchangjk":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"kevinchangjk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"carbon.gui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"kevinchangjk":19}},{"path":"src/test/java/carbon/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidInputException;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import carbon.error.InvalidParamException;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    private Parser parser \u003d new Parser(this.ui, this.storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    public void process_invalidCommand_returnsInvalidInputException() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"        String input \u003d \"testInvalidCommand\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"            this.parser.processCommand(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        } catch (InvalidInputException error) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"            hasError \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(hasError);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    public void process_outOfBoundsIndex_returnsInvalidParamException() {","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        String input \u003d \"mark -1\";","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            this.parser.processCommand(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        } catch (InvalidParamException error) {","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"            hasError \u003d true;","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(hasError);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kevinchangjk":38}},{"path":"src/test/java/carbon/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package carbon;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import carbon.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    public void listItems_noItems_returnsNoTasks() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"        String expectedOutput \u003d \"There are no tasks so far.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        String actualOutput \u003d this.taskList.listItems();","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    public void addTask_todo_returnsAddedTask() {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        String input \u003d \"todo Complete Assignment\";","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        String expectedOutput \u003d \"I have added: \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"                + \"(TODO) [ ] Complete Assignment !\\n\\n\"","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"                + \"We\u0027ve got 1 task so far.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        String actualOutput \u003d this.taskList.addTask(input, Task.Type.TODO);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kevinchangjk":28}}]

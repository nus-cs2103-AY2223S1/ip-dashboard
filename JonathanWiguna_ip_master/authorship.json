[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"checkstyle {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"JonathanWiguna":22,"-":40}},{"path":"data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"T | 1 | cook dinner","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"D | 0 | return textbook to the library | 21/12/2022 1700","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"E | 0 | Ed Sheeran concert | 24/06/2023 2000","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"R | 0 |  weekly project meeting | FRIDAY | 1130","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"D | 0 | watch lecture | 24/12/2000 1200","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"JonathanWiguna":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"# [Duke](https://github.com/JonathanWiguna/ip)","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"***","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"Duke is a Command Line Application to help you manage your tasks better.","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"- Quick Start Guide","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"- Features","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"***","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"## Quick Start Guide","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/JonathanWiguna/ip/releases).","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Duke.","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"4. Double-click the file to start the application. The GUI similar to the one below should appear.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"![InitialWindow](InitialWindow.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"5. Type the command in the input box at the bottom of the window and press Enter to execute it. e.g. typing `list` and ","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"pressing Enter will show the current list of tasks. Some example commands you can try:","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"   - `todo read book`: Adds a simple todo task to the task list.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"   - `delete 1`: Deletes the 1st task in the current list.","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"   - `bye`: Saves the current task list into the local storage and exits the app.","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"6. Make sure to close the app by using the `bye` command instead of by pressing the X button at the top right of the ","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"window. Closing the app with the X button will not save the changes you made in that session.","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"7. Refer to the [Features](https://jonathanwiguna.github.io/ip/#features) below for details of each command.","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"***","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"\u003e e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo do laundry`.","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"### Adding a ToDo Task: `todo`","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"Adds a ToDo task to the task list.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"Format: `todo DESCRIPTION`\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"- `todo cook dinner`","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"- `todo jog`","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"![TodoExample](TodoExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"### Adding a Deadline Task: `deadline`","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"Adds a Deadline task to the task list.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"Format: `deadline DESCRIPTION /by DATE TIME`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"`DATE` must be in `dd/MM/yyyy` format and `TIME` must be in `HHmm` format.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"- `deadline return textbook to the library /by 21/12/2022 1700`","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"- `deadline apply for internship /by 01/01/2023 0800`","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"![DeadlineExample](DeadlineExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"### Adding an Event Task: `event`","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"Adds an Event task to the task list.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"Format: `event DESCRIPTION /at DATE TIME`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"`DATE` must be in `dd/MM/yyyy` format and `TIME` must be in `HHmm` format.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"- `event Ed Sheeran concert /at 24/06/2023 2000`","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"- `event NUS Career Fair /at 12/10/2022 1400`","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"![EventExample](EventExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"### Adding a Recurring Task: `recurring`","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"Adds a Recurring task to the task list.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"Format: `recurring DESCRIPTION /every DAY /at TIME`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"`DAY` must be spelled in full, e.g. monday, and `TIME` must be in `HHmm` format.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"- `recurring weekly project meeting /every friday /at 1130`","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"![RecurringExample](RecurringExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"### Listing task list: `list`","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"Shows all the current tasks in the task list.","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"Format: `list`","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"![ListExample](ListExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"### Finding a task: `find`","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"Finds the task that fits the given description.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"Format: `find DESCRIPTION`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"- `find textbook`","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"![FindExample](FindExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"Marks the task at the specified index as done.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"Format: `mark INDEX`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"- `mark 1`","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"![MarkExample](MarkExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"### Marking a task as not done: `unmark`","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"Marks the task at the specified index as not done.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"Format: `unmark INDEX`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"JonathanWiguna"},"content":"- `mark 2`","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"JonathanWiguna"},"content":"![UnmarkExample](UnmarkExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"JonathanWiguna"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"JonathanWiguna"},"content":"Deletes the task at the specified index.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"JonathanWiguna"},"content":"Format: `delete INDEX`.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"JonathanWiguna"},"content":"Examples:","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"JonathanWiguna"},"content":"- `delete 4`","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"JonathanWiguna"},"content":"![DeleteExample](DeleteExample.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"JonathanWiguna"},"content":"### Exiting the app: `bye`","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"JonathanWiguna"},"content":"Exits the app and saves the data to the local storage.\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"JonathanWiguna"},"content":"Format: `bye`","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"JonathanWiguna"},"content":"### Saving the data","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"JonathanWiguna"},"content":"The task list made by Duke are saved in the hard disk whenever the command `bye` is called.","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"JonathanWiguna":96,"-":16}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    protected String deadlineString;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     * @param deadline Date and Time of the deadline in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the hour and minutes of this \u003ccode\u003eDeadline\u003c/code\u003e in a \u003ccode\u003eString\u003c/code\u003e in \"HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of the hour and minutes of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"        int len \u003d deadlineString.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        return deadlineString.substring(len - 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.getDayOfWeek() + \" \" + deadline.getDayOfMonth() + \" \"","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"                + deadline.getMonth() + \" \" + deadline.getYear() + \" \" + this.getTime() + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e in the format to be stored in the","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"     * local storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"     *     storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"        return \"D\" + \" | \" + done + \" | \" + this.description + \" | \" + this.deadlineString + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":66}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Chatbot to read user inputs and manage a tasks list.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class Duke {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String STORAGE_PATH \u003d \"data/TaskList.txt\";","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e instance and attempt to retrieve the saved tasks list stored locally.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     * If the retrieval succeeds, initializes a \u003ccode\u003eTaskList\u003c/code\u003e with the saved tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * If the retrieval fails, initializes a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    public Duke() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"        storage \u003d new Storage(STORAGE_PATH);","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e as a response to the user\u0027s input.","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e response.","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":45}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an event.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    protected String timeString;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     * @param time Date and Time of the event in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    public Event(String description, String time, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        this.timeString \u003d time;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the hour and minutes of this \u003ccode\u003eEvent\u003c/code\u003e in a \u003ccode\u003eString\u003c/code\u003e in \"HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of the hour and minutes of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"        int len \u003d timeString.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        return timeString.substring(len - 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.getDayOfWeek() + \" \" + time.getDayOfMonth() + \" \"","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"                + time.getMonth() + \" \" + time.getYear() + \" \" + this.getTime() + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"     * storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"     *     storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"        return \"E\" + \" | \" + done + \" | \" + this.description + \" | \" + this.timeString + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":66}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"JonathanWiguna":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String FXML_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String TITLE \u003d \"Duke\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    private static Stage stage;","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(FXML_PATH));","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"            Main.stage \u003d stage;","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"            stage.setTitle(TITLE);","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    public static void close() {","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        Main.stage.close();","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"JonathanWiguna":43}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddRecurringTaskCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddToDoCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a \u003ccode\u003eParser\u003c/code\u003e that parses input into \u003ccode\u003eCommand\u003c/code\u003e to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_BYE \u003d \"bye\";","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_DEADLINE \u003d \"^deadline.*\";","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_DELETE \u003d \"^delete [0-9]*$\";","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_EVENT \u003d \"^event.*\";","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_FIND \u003d \"^find.*\";","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_LIST \u003d \"list\";","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_MARK \u003d \"^mark [0-9]*$\";","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_RECURRING \u003d \"^recurring.*\";","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_TODO \u003d \"^todo.*\";","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String INPUT_UNMARK \u003d \"^unmark [0-9]*$\";","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * Parses input into a \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"     * @param fullCommand User\u0027s input","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eCommand\u003c/code\u003e to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If input is not of a recognizable pattern.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.equalsIgnoreCase(INPUT_BYE)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            return new ExitCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.equalsIgnoreCase(INPUT_LIST)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"            return new ListCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_TODO)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddToDoCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_DEADLINE)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddDeadlineCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_EVENT)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddEventCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_RECURRING)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddRecurringTaskCommand(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_MARK)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"            return new MarkCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_UNMARK)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"            return new UnmarkCommand(fullCommand);","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_DELETE)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(INPUT_FIND)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"        throw new DukeException(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":74}},{"path":"src/main/java/duke/RecurringTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a recurring task.","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"public class RecurringTask extends Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    protected String dayString;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    protected String timeString;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eRecurringTask\u003c/code\u003e task.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the recurring task.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     * @param day Day of the recurring task.","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @param time Time of the recurring task in \"HHmm\" format.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    public RecurringTask(String description, String day, String time, boolean isDone) {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        this.dayString \u003d day.toUpperCase();","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"        this.timeString \u003d time;","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        this.time \u003d getUpcomingDateTime(dayString, timeString);","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eRecurringTask\u003c/code\u003e task that is 7 days following the given \u003ccode\u003eRecurringTask\u003c/code\u003e.","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task A \u003ccode\u003eRecurringTask\u003c/code\u003e.","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    public RecurringTask(RecurringTask task) {","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        super(task.description, false);","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        this.time \u003d task.time.plusDays(7);","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        this.dayString \u003d task.dayString;","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        this.timeString \u003d task.timeString;","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the upcoming \u003ccode\u003eLocalDateTime\u003c/code\u003e with the specified day and time.","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"     * @param day The day of the \u003ccode\u003eLocalDateTime\u003c/code\u003e object that will be returned.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"     * @param time The time of the \u003ccode\u003eLocalDateTime\u003c/code\u003e object that will be returned.","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"     * @return An upcoming \u003ccode\u003eLocalDateTime\u003c/code\u003e with the specified day and time from when the function is called.","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    private LocalDateTime getUpcomingDateTime(String day, String time) {","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"        LocalDateTime dt \u003d LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.valueOf(day)));","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"        dt \u003d dt.withHour(Integer.parseInt(time.substring(0, 2)));","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"        dt \u003d dt.withMinute(Integer.parseInt(time.substring(2, 4)));","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"        return dt;","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the hour and minutes of this \u003ccode\u003eRecurringTask\u003c/code\u003e in a \u003ccode\u003eString\u003c/code\u003e in \"HHmm\" format.","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of the hour and minutes of this \u003ccode\u003eRecurringTask\u003c/code\u003e.","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"        int len \u003d timeString.length();","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"        return timeString.substring(len - 4);","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eRecurringTask\u003c/code\u003e.","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eRecurringTask\u003c/code\u003e.","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[R]\" + super.toString() + \" (every: \" + time.getDayOfWeek() + \" at: \" + this.getTime() + \")\";","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eRecurringTask\u003c/code\u003e in the format to be stored","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"     * in the local storage.","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eRecurringTask\u003c/code\u003e in the format to be stored","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"JonathanWiguna"},"content":"     *     in the local storage.","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"        return \"R\" + \" | \" + done + \" | \" + this.description + \" | \" + this.dayString + \" | \" + this.timeString + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"        return true;","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"JonathanWiguna":93}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e class that reads and writes to the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private File file;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    private FileWriter writer;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object that will read and write to the specified file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @param filePath Path of the file to be read and written into.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * Creates a directory at the specified path in the local storage, unless the directory already exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * @param path Path of the directory to be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If directory cannot be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    public void createDirectory(String path) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        File dir \u003d new File(path);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"                dir.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"Oh no! I can\u0027t make a folder to store the tasks!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"     * Creates a file at the path specified in the constructor, unless the file already exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If file cannot be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"    public void createFile() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"            this.file.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"Oops! I can\u0027t make the file to store the tasks!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"     * Reads the list of tasks stored locally.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If the file is not found.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"            this.createDirectory(\"data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"            this.createFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"            assert file.exists(); //Asserts that the file in the specified filePath exists","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"                if (!taskString.isBlank()) {","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"                    stringToTask(taskString, taskList);","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"            sc.close();","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"JonathanWiguna"},"content":"            return taskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"You don\u0027t have any previously saved tasks!\");","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"    private void stringToTask(String str, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"        String[] taskElements \u003d str.split(\" \\\\| \");","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"JonathanWiguna"},"content":"        boolean isTaskDone \u003d taskElements[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"JonathanWiguna"},"content":"        switch (taskElements[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"        case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"            taskList.add(new ToDo(taskElements[2], isTaskDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"JonathanWiguna"},"content":"        case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"JonathanWiguna"},"content":"            taskList.add(new Deadline(taskElements[2], taskElements[3], isTaskDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"JonathanWiguna"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"JonathanWiguna"},"content":"        case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"JonathanWiguna"},"content":"            taskList.add(new Event(taskElements[2], taskElements[3], isTaskDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"JonathanWiguna"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"JonathanWiguna"},"content":"        case \"R\":","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"JonathanWiguna"},"content":"            taskList.add(new RecurringTask(taskElements[2], taskElements[3], taskElements[4], isTaskDone));","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"JonathanWiguna"},"content":"            break;","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"JonathanWiguna"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"JonathanWiguna"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"JonathanWiguna"},"content":"     * Writes the specified list of tasks into local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"JonathanWiguna"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e to be saved into local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If writing into the file fails.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"JonathanWiguna"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"JonathanWiguna"},"content":"            writer \u003d new FileWriter(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"JonathanWiguna"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"JonathanWiguna"},"content":"                writer.write(taskList.get(i).toStorageFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"JonathanWiguna"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"Something went wrong while saving the file! :(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":126}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a generic task.","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks this \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @return True.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"        return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks this \u003ccode\u003eTask\u003c/code\u003e as not done.","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * @return False.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e that indicates whether this \u003ccode\u003eTask\u003c/code\u003e is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"     * If done, \u003ccode\u003eString\u003c/code\u003e is \"X\".","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"     * If not done, \u003ccode\u003eString\u003c/code\u003e is \" \".","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e that represents if the \u003ccode\u003eTask\u003c/code\u003e is done.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the description of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"     * @return A description of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"        return this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eTask\u003c/code\u003e and whether it is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"    public abstract String toStorageFormat();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"    public abstract boolean isRecurring();","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"JonathanWiguna":75}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a list of task by storing a list of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"public class TaskList {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_LIST \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs an empty \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e initialized with the specified list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks A list of tasks to be managed by this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a task into this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task The \u003ccode\u003eTask\u003c/code\u003e object to be added into this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the task in the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e in the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the number of \u003ccode\u003eTask\u003c/code\u003e in this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"     * @return The number of \u003ccode\u003eTask\u003c/code\u003e in this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the \u003ccode\u003eTask\u003c/code\u003e in the specified index to be done.","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the \u003ccode\u003eTask\u003c/code\u003e to be marked done.","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the \u003ccode\u003eTask\u003c/code\u003e in the specified index to be not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the \u003ccode\u003eTask\u003c/code\u003e to be marked not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.get(index).markAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"     * Removes the \u003ccode\u003eTask\u003c/code\u003e in the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"JonathanWiguna"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints out the list of \u003ccode\u003eTask\u003c/code\u003e stored in this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"    public String list() {","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"JonathanWiguna"},"content":"        Task[] x \u003d new Task[tasks.size()];","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"        Task[] tasksArray \u003d tasks.toArray(x);","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"        String response \u003d MESSAGE_LIST;","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"        for (int i \u003d 1; i \u003c\u003d tasksArray.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasksArray[i - 1];","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"JonathanWiguna"},"content":"            response +\u003d i + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"JonathanWiguna"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":99,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints the \u003ccode\u003eTask\u003c/code\u003es that matches the given input.","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"JonathanWiguna"},"content":"     * @param input Keyword of the description of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"JonathanWiguna"},"content":"    public String find(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"JonathanWiguna"},"content":"        String response \u003d MESSAGE_FIND;","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"JonathanWiguna"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"JonathanWiguna"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-09-22"},{"lineNumber":110,"author":{"gitId":"JonathanWiguna"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2022-09-22"},{"lineNumber":111,"author":{"gitId":"JonathanWiguna"},"content":"            if (taskDescription.contains(input.substring(5))) {","lastModifiedDate":"2022-09-22"},{"lineNumber":112,"author":{"gitId":"JonathanWiguna"},"content":"                response +\u003d count + \".\" + task + \"\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"JonathanWiguna"},"content":"                count++;","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"JonathanWiguna"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"JonathanWiguna":119}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     *     storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     *     storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        return \"T\" + \" | \" + done + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":44}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 9;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_ARGUMENT_MISSING \u003d \"OOPS!!! The description and/or the time of a deadline \"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"            + \"cannot be empty.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks \"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"            + \"in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String REGEX_KEYWORD \u003d \" /by \";","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    public AddDeadlineCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eDeadline\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description or time.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            assert !description.substring(DESCRIPTION_INDEX).isBlank() : MESSAGE_ARGUMENT_MISSING;","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            String[] str \u003d description.substring(DESCRIPTION_INDEX).split(REGEX_KEYWORD);","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            Deadline deadline \u003d new Deadline(str[0], str[1], false);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"            int numberOfTasks \u003d tasks.getSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, deadline, numberOfTasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(MESSAGE_ARGUMENT_MISSING);","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":51}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 6;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_ARGUMENT_MISSING \u003d \"OOPS!!! The description and/or the time of an event \"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"            + \"cannot be empty.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks \"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"            + \"in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String REGEX_KEYWORD \u003d \" /at \";","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddEventCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    public AddEventCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eEvent\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description or time.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            assert !description.substring(DESCRIPTION_INDEX).isBlank() : MESSAGE_ARGUMENT_MISSING;","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            String[] str \u003d description.substring(DESCRIPTION_INDEX).split(REGEX_KEYWORD);","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            Event event \u003d new Event(str[0], str[1], false);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"            int numberOfTasks \u003d tasks.getSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, event, numberOfTasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(MESSAGE_ARGUMENT_MISSING);","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":51}},{"path":"src/main/java/duke/commands/AddRecurringTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.RecurringTask;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eRecurringTask\u003c/code\u003e.","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class AddRecurringTaskCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 9;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_ARGUMENT_MISSING \u003d \"OOPS!!! The description and/or the time of a recurring \"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"            + \"task cannot be empty.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks \"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"            + \"in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String REGEX_KEYWORD_DAY \u003d \" /every \";","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String REGEX_KEYWORD_TIME \u003d \" /at \";","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddRecurringTaskCommand\u003c/code\u003e command.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public AddRecurringTaskCommand(String description) {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eRecurringTask\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description or time.","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            assert !description.substring(DESCRIPTION_INDEX).isBlank() : MESSAGE_ARGUMENT_MISSING;","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            String[] str \u003d description.substring(DESCRIPTION_INDEX).split(REGEX_KEYWORD_DAY);","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            String[] dayAndTime \u003d str[1].split(REGEX_KEYWORD_TIME);","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"            RecurringTask recurringTask \u003d new RecurringTask(str[0], dayAndTime[0], dayAndTime[1], false);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(recurringTask);","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"            int numberOfTasks \u003d tasks.getSize();","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, recurringTask, numberOfTasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(MESSAGE_ARGUMENT_MISSING);","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"JonathanWiguna":53}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 5;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_ARGUMENT_MISSING \u003d \"OOPS!!! The description and/or the time of a todo \"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"            + \"cannot be empty.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks \"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"            + \"in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddToDoCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eToDo\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            assert !description.substring(DESCRIPTION_INDEX).isBlank() : MESSAGE_ARGUMENT_MISSING;","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            ToDo todo \u003d new ToDo(description.substring(DESCRIPTION_INDEX), false);","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            int numberOfTasks \u003d tasks.getSize();","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, todo, numberOfTasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(MESSAGE_ARGUMENT_MISSING);","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":49}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    public Command(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If command fails to execute.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":31}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to delete a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 7;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"OOPS!!! You cannot delete a non-existent task.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Noted. I\u0027ve removed this task:\\n  %s\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * Deletes the specified \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeIndexOutOfBoundsException If user inputted an index outside the range.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeIndexOutOfBoundsException {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            int index \u003d changeToZeroIndex(Integer.parseInt(description.substring(DESCRIPTION_INDEX)));","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"            assert index \u003e\u003d 0 : MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            assert index \u003c tasks.getSize() : MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.delete(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, task);","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeIndexOutOfBoundsException(MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"    private int changeToZeroIndex(int index) {","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        return index - 1;","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":52}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to exit \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_EXIT \u003d \"Goodbye!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eExitCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    public ExitCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * Exits \u003ccode\u003eDuke\u003c/code\u003e and writes the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e into the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If \u003ccode\u003eStorage\u003c/code\u003e fails to write into the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        String response \u003d MESSAGE_EXIT;","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":36}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to find \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * Finds the \u003ccode\u003eTask\u003c/code\u003e/s that matches the given input.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        return tasks.find(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"JonathanWiguna":30}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to list the \u003ccode\u003eTask\u003c/code\u003es in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * Lists out the \u003ccode\u003eTask\u003c/code\u003es in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        return tasks.list();","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":31}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.RecurringTask;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to mark a \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 5;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"OOPS!!! You cannot mark a non-existent task as done.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\\n %s\";","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS_RECURRING_TASK \u003d \"\\nAnd I\u0027ve re-added this task for next week!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eMarkCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    public MarkCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the user-specified \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeIndexOutOfBoundsException If user inputted an index outside the range.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeIndexOutOfBoundsException {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            int index \u003d changeToZeroIndex(Integer.parseInt(description.substring(DESCRIPTION_INDEX)));","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            assert index \u003e\u003d 0 : MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            assert index \u003c tasks.getSize() : MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.markTaskAsDone(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, task);","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"            if (task.isRecurring()) {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"                RecurringTask recurringTask \u003d (RecurringTask) task;","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"                tasks.delete(index);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"                tasks.add(new RecurringTask(recurringTask));","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"                response +\u003d MESSAGE_SUCCESS_RECURRING_TASK;","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeIndexOutOfBoundsException(MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    private int changeToZeroIndex(int index) {","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"        return index - 1;","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":60}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Task;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to mark a \u003ccode\u003eTask\u003c/code\u003e as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final int DESCRIPTION_INDEX \u003d 7;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"OOPS!!! You cannot mark a non-existent task as undone.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK, I\u0027ve marked this task as not done yet:\\n %s\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eUnMarkCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    public UnmarkCommand(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the user-specified \u003ccode\u003eTask\u003c/code\u003e as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeIndexOutOfBoundsException If user inputted an index outside the range.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeIndexOutOfBoundsException {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            int index \u003d changeToZeroIndex(Integer.parseInt(description.substring(DESCRIPTION_INDEX)));","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"            assert index \u003e\u003d 0 : MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            assert index \u003c tasks.getSize() : MESSAGE_INDEX_OUT_OF_BOUNDS;","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.markTaskAsUndone(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"            String response \u003d String.format(MESSAGE_SUCCESS, task);","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            return response;","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeIndexOutOfBoundsException(MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"    private int changeToZeroIndex(int index) {","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        return index - 1;","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":52}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an exception made for \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDukeException\u003c/code\u003e with the given error message.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"     * @param msg Error message that corresponds to the exception.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"        super(msg);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":17}},{"path":"src/main/java/duke/exceptions/DukeIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an index out of bounds exception made for \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public class DukeIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDukeIndexOutOfBoundsException\u003c/code\u003e with the given error message.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"     * @param msg Error message that corresponds to the exception.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    public DukeIndexOutOfBoundsException(String msg) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"        super(msg);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":17}},{"path":"src/main/java/duke/exceptions/DukeMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a missing argument exception made for \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public class DukeMissingArgumentException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDukeMissingArgumentException\u003c/code\u003e with the given error message.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"     * @param msg Error message that corresponds to the exception.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    public DukeMissingArgumentException(String msg) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"        super(msg);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":17}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String FXML_PATH \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(FXML_PATH));","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"JonathanWiguna":64}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Main;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String IMAGE_PATH_DUKE \u003d \"/images/Duke.png\";","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String IMAGE_PATH_USER \u003d \"/images/DaUser.png\";","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_EXIT \u003d \"Goodbye!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hi there! Duke at your service. \"","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"            + \"Let me retrieve your stored task list!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(IMAGE_PATH_USER));","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(IMAGE_PATH_DUKE));","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"     * Initializes the Main Window","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"                DialogBox.getDukeDialog(MESSAGE_WELCOME, dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"        if (response \u003d\u003d MESSAGE_EXIT) {","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-09-07"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"            delay.setOnFinished(event -\u003e Main.close());","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"            delay.play();","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"JonathanWiguna":75}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"         minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-padding: 0 5 10 5;\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"JonathanWiguna":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"            fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"500.0\"","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"500.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"100.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"590.0\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"JonathanWiguna":24}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"    public void testGetTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"        assertEquals(\"1200\",","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"                new Deadline(\"do deadline\", \"25/09/2022 1200\", false).getTime());","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"JonathanWiguna":13}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"        assertEquals(\"[T][ ] Do a todo task\", new ToDo(\"Do a todo task\", false).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"JonathanWiguna":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"todo join sports club","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":8}}]

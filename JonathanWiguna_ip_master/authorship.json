[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JonathanWiguna":1,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    protected String deadlineString;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     * @param deadline Date and Time of the deadline in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the hour and minutes of this \u003ccode\u003eDeadline\u003c/code\u003e in a \u003ccode\u003eString\u003c/code\u003e in \"HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of the hour and minutes of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        int len \u003d deadlineString.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        return deadlineString.substring(len - 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.getDayOfWeek() + \" \" + deadline.getDayOfMonth() + \" \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"                deadline.getMonth() + \" \" + deadline.getYear() + \" \" + this.getTime() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"     * storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e in the format to be stored in the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"        return \"D\" + \" | \" + done + \" | \" + this.description + \" | \" + this.deadlineString + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Chatbot to read user inputs and manage a tasks list.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class Duke {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e instance and attempt to retrieve the saved tasks list stored locally.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * If the retrieval succeeds, initializes a \u003ccode\u003eTaskList\u003c/code\u003e with the saved tasks in it.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     * If the retrieval fails, initializes a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     * @param filePath Path of the file relative to the root directory.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        ui.printWelcome();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printSuccessfulLoad();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printFailedLoad();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     * Runs \u003ccode\u003eDuke\u003c/code\u003e to start taking inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"    public void run() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"                ui.printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"            } finally {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"                ui.printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"        new Duke(\"data/TaskList.txt\").run();","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":58}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an event.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    protected String timeString;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     * @param time Date and Time of the event in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    public Event(String description, String time, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"        this.timeString \u003d time;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the hour and minutes of this \u003ccode\u003eEvent\u003c/code\u003e in a \u003ccode\u003eString\u003c/code\u003e in \"HHmm\" format.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of the hour and minutes of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    public String getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        int len \u003d timeString.length();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        return timeString.substring(len - 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.getDayOfWeek() + \" \" + time.getDayOfMonth() + \" \" +","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"                time.getMonth() + \" \" + time.getYear() + \" \" + this.getTime() + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"     * storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e in the format to be stored in the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"        return \"E\" + \" | \" + done + \" | \" + this.description + \" | \" + this.timeString + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.AddToDoCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"import duke.commands.UnMarkCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a \u003ccode\u003eParser\u003c/code\u003e that parses input into \u003ccode\u003eCommand\u003c/code\u003e to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * Parses input into a \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * @param fullCommand Input taken from \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eCommand\u003c/code\u003e to be executed.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If input is not of a recognizable pattern.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"            return new ExitCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"            return new ListCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^todo.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddToDoCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^deadline.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddDeadlineCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^event.*\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            return new AddEventCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^mark [0-9]*$\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"            return new MarkCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^unmark [0-9]*$\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"            return new UnMarkCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^delete [0-9]*$\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"        if (fullCommand.matches(\"^find.*\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":57}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a \u003ccode\u003eStorage\u003c/code\u003e class that reads and writes to the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    private File file;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    private FileWriter writer;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object that will read and write to the specified file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * @param filePath Path of the file to be read and written into.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * Creates a directory at the specified path in the local storage, unless the directory already exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * @param path Path of the directory to be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If directory cannot be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    public void createDirectory(String path) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        File dir \u003d new File(path);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            if(!dir.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"                dir.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"Oh no! I can\u0027t make a folder to store the tasks!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"     * Creates a file at the path specified in the constructor, unless the file already exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If file cannot be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"    public void createFile() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"            this.file.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"Oops! I can\u0027t make the file to store the tasks!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"     * Reads the list of tasks stored locally.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If the file is not found.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"            this.createDirectory(\"data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"            this.createFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"                if (taskString.isBlank()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"                    continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"                String[] taskElements \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"                boolean isTaskDone \u003d taskElements[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"JonathanWiguna"},"content":"                switch (taskElements[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"                case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"JonathanWiguna"},"content":"                    taskList.add(new ToDo(taskElements[2], isTaskDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"                case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"                    taskList.add(new Deadline(taskElements[2], taskElements[3], isTaskDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"                case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"JonathanWiguna"},"content":"                    taskList.add(new Event(taskElements[2], taskElements[3], isTaskDone));","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"JonathanWiguna"},"content":"                default:","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"JonathanWiguna"},"content":"            sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"JonathanWiguna"},"content":"            return taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"You don\u0027t have any previously saved tasks!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"JonathanWiguna"},"content":"     * Writes the specified list of tasks into local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"JonathanWiguna"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e to be saved into local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If writing into the file fails.","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"JonathanWiguna"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"JonathanWiguna"},"content":"            writer \u003d new FileWriter(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"JonathanWiguna"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"JonathanWiguna"},"content":"                writer.write(taskList.get(i).toStorageFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"JonathanWiguna"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"JonathanWiguna"},"content":"            writer.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeException(\"Something went wrong while saving the file! :(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":119}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a generic task","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     * Construct a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Mark this \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @return True.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"        return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     * Mark this \u003ccode\u003eTask\u003c/code\u003e as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * @return False.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e that indicates whether this \u003ccode\u003eTask\u003c/code\u003e is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"     * If done, \u003ccode\u003eString\u003c/code\u003e is \"X\".","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"     * If not done, \u003ccode\u003eString\u003c/code\u003e is \" \".","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e that represents if the \u003ccode\u003eTask\u003c/code\u003e is done.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the description of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"     * @return A description of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"        return this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eTask\u003c/code\u003e and whether it is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"    public abstract String toStorageFormat();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"JonathanWiguna":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a list of task by storing a list of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"public class TaskList {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs an empty \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e initialized with the specified list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks A list of tasks to be managed by this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a task into this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task The \u003ccode\u003eTask\u003c/code\u003e object to be added into this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the task in the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e in the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the number of \u003ccode\u003eTask\u003c/code\u003e in this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"     * @return The number of \u003ccode\u003eTask\u003c/code\u003e in this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the \u003ccode\u003eTask\u003c/code\u003e in the specified index to be done.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the \u003ccode\u003eTask\u003c/code\u003e to be marked done.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the \u003ccode\u003eTask\u003c/code\u003e in the specified index to be not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the \u003ccode\u003eTask\u003c/code\u003e to be marked not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.get(index).markAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"     * Removes the \u003ccode\u003eTask\u003c/code\u003e in the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"     * @param index Index of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints out the list of \u003ccode\u003eTask\u003c/code\u003e stored in this \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"    public void list() {","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"        Task[] x \u003d new Task[tasks.size()];","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"JonathanWiguna"},"content":"        Task[] tasksArray \u003d tasks.toArray(x);","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"JonathanWiguna"},"content":"        for(int i \u003d 1; i \u003c\u003d tasksArray.length; i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasksArray[i - 1];","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"            System.out.println(i + \".\" + task.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"JonathanWiguna"},"content":"    public void find(String input) {","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"JonathanWiguna"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"JonathanWiguna"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"JonathanWiguna"},"content":"            String task \u003d tasks.get(i).toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"JonathanWiguna"},"content":"            if (task.contains(input.substring(5))) {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"JonathanWiguna"},"content":"                System.out.println(count + \".\" + task);","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"JonathanWiguna"},"content":"                count++;","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"JonathanWiguna"},"content":"            };","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"JonathanWiguna":108}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"     * @param isDone Indicator whether the task has been done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e in the format to be stored in the local","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e in the format to be stored in the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"        char done \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        return \"T\" + \" | \" + done + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":" * Represents a \u003ccode\u003eUi\u003c/code\u003e that handles user interaction.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String LINE \u003d \"__________________________________\";","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Hi there! Baymax at your service. Let me retrieve your stored task list!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    private static final String MESSAGE_BYE \u003d \"Goodbye!\";","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints a line separator.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints a welcome message.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printWelcome() {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(MESSAGE_WELCOME);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printBye() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(MESSAGE_BYE);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints successful load message.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printSuccessfulLoad() {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Found it!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints failed load message.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printFailedLoad() {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Seems like you don\u0027t have a task list. I\u0027ve initialized one for you!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"JonathanWiguna"},"content":"        printLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints the number of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"JonathanWiguna"},"content":"     * @param size The number of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printNumberOfTasks(int size) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"JonathanWiguna"},"content":"        if (size \u003c 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"JonathanWiguna"},"content":"            System.out.println(\"Now you have \" + size + \" task in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"JonathanWiguna"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"JonathanWiguna"},"content":"            System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints \u003ccode\u003eTask\u003c/code\u003e added into the \u003ccode\u003eTaskList\u003c/code\u003e message.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e to be added.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"JonathanWiguna"},"content":"     * @param size The number of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e after this addition.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printAddTask(Task task, int size) {","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + task);","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"JonathanWiguna"},"content":"        printNumberOfTasks(size);","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"JonathanWiguna"},"content":"    ","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints \u003ccode\u003eTask\u003c/code\u003e deleted from the \u003ccode\u003eTaskList\u003c/code\u003e message.","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"JonathanWiguna"},"content":"     * @param size The number of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e after this deletion.","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printDeleteTask(Task task, int size) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"JonathanWiguna"},"content":"        printNumberOfTasks(size);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints \u003ccode\u003eTask\u003c/code\u003e marked as done message.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e to be marked as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printTaskMarkedDone(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints \u003ccode\u003eTask\u003c/code\u003e marked as not done message.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"JonathanWiguna"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e to be marked as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printTaskMarkedUndone(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"JonathanWiguna"},"content":"     * @param error Error message to be printed.","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"JonathanWiguna"},"content":"    public static void printError(String error) {","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(error);","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"JonathanWiguna"},"content":"     * Prints enter command message.","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"JonathanWiguna"},"content":"     * @return Command message inputted by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"JonathanWiguna"},"content":"    public static String readCommand() {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"JonathanWiguna"},"content":"        System.out.println(\"Please enter a command: \");","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"JonathanWiguna"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":126}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    public AddDeadlineCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eDeadline\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description or time.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"            String[] str \u003d description.substring(9).split(\" /by \");","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            Deadline deadline \u003d new Deadline(str[0], str[1], false);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printAddTask(deadline, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(\"OOPS!!! The description and/or the time of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":42}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddEventCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    public AddEventCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eEvent\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description or time.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"            String[] str \u003d description.substring(6).split(\" /at \");","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            Event event \u003d new Event(str[0], str[1], false);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(event);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printAddTask(event, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(\"OOPS!!! The description and/or the time of an event cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":42}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eAddToDoCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * Adds a new \u003ccode\u003eToDo\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeMissingArgumentException If the input is missing a description.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeMissingArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"            ToDo todo \u003d new ToDo(description.substring(5), false);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.add(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printAddTask(todo, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeMissingArgumentException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":41}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    public Command(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If command fails to execute.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns whether the command is the exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"     * @return True if and only if the \u003ccode\u003eCommand\u003c/code\u003e is the exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"        return false;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":42}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeMissingArgumentException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to delete a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * Deletes the specified \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeIndexOutOfBoundsException If user inputted an index outside the range.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            int index \u003d Integer.parseInt(description.substring(7)) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.delete(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printDeleteTask(task, tasks.size());","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeIndexOutOfBoundsException(\"OOPS!!! You cannot delete a non-existent task.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":43}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to exit \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eExitCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    public ExitCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Exits \u003ccode\u003eDuke\u003c/code\u003e and writes the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e into the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeException If \u003ccode\u003eStorage\u003c/code\u003e fails to write into the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"        ui.printBye();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"     * Returns whether the command is the exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"     * @return True.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"JonathanWiguna"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"JonathanWiguna"},"content":"        return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":46}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.find(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"JonathanWiguna":18}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to list the \u003ccode\u003eTask\u003c/code\u003es in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     * Lists out the \u003ccode\u003eTask\u003c/code\u003es in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        tasks.list();","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":35}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to mark a \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eMarkCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    public MarkCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the user-specified \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeIndexOutOfBoundsException If user inputted an index outside the range.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"            int index \u003d Integer.parseInt(description.substring(5)) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.markTaskAsDone(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printTaskMarkedDone(tasks.get(index));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeIndexOutOfBoundsException(\"OOPS!!! You cannot mark a non-existent task as done.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":40}},{"path":"src/main/java/duke/commands/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"import duke.exceptions.DukeIndexOutOfBoundsException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":" * Represents an executable \u003ccode\u003eCommand\u003c/code\u003e to mark a \u003ccode\u003eTask\u003c/code\u003e as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"JonathanWiguna"},"content":"     * Constructs a \u003ccode\u003eUnMarkCommand\u003c/code\u003e command.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"JonathanWiguna"},"content":"     * @param description Input from the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"JonathanWiguna"},"content":"    public UnMarkCommand(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"JonathanWiguna"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"JonathanWiguna"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"JonathanWiguna"},"content":"     * Marks the user-specified \u003ccode\u003eTask\u003c/code\u003e as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"JonathanWiguna"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"JonathanWiguna"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e to be interacted with this command.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"JonathanWiguna"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e to print messages after the command executes.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"JonathanWiguna"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e that interacts with the local storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"JonathanWiguna"},"content":"     * @throws DukeIndexOutOfBoundsException If user inputted an index outside the range.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"JonathanWiguna"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"JonathanWiguna"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"JonathanWiguna"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIndexOutOfBoundsException {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"JonathanWiguna"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"JonathanWiguna"},"content":"            int index \u003d Integer.parseInt(description.substring(7)) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"JonathanWiguna"},"content":"            tasks.markTaskAsUndone(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"JonathanWiguna"},"content":"            ui.printTaskMarkedUndone(tasks.get(index));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"JonathanWiguna"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"JonathanWiguna"},"content":"            throw new DukeIndexOutOfBoundsException(\"OOPS!!! You cannot mark a non-existent task as undone.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"JonathanWiguna"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":40}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"        super(msg);","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":9}},{"path":"src/main/java/duke/exceptions/DukeIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"public class DukeIndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"    public DukeIndexOutOfBoundsException(String msg) {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"        super(msg);","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":9}},{"path":"src/main/java/duke/exceptions/DukeMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"public class DukeMissingArgumentException extends DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"    public DukeMissingArgumentException(String msg) {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"        super(msg);","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"JonathanWiguna":9}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    public void testGetTime() {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"        assertEquals(\"1200\",","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"                new Deadline(\"do deadline\", \"25/09/2022 1200\", false).getTime());","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"JonathanWiguna":12}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"JonathanWiguna"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"JonathanWiguna"},"content":"        assertEquals(\"[T][ ] Do a todo task\", new ToDo(\"Do a todo task\", false).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"JonathanWiguna"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"JonathanWiguna"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"JonathanWiguna":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JonathanWiguna"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"JonathanWiguna"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"JonathanWiguna"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"JonathanWiguna"},"content":"todo join sports club","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"JonathanWiguna"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"JonathanWiguna"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"JonathanWiguna"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"JonathanWiguna"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"JonathanWiguna":8}}]

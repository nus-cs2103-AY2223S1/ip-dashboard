[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"checkstyle {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ElginL":20,"-":41}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"E | 1 | eat | 2022-12-12","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"D | 1 | ip | 2022-12-20","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ElginL":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":" * Represents a robot that takes in tasks given by user through CLI, and other requests such as","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":" * listing all tasks, deleting tasks, adding tasks and marking tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    /** All Tasks */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    /** Storage for tasks. */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    /** Ui for Duke. */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     * @param filePath Path to storage file from root folder (e.g. \u0027src/data/duke.txt\u0027).","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"            System.out.println(this.ui.showLoadingError());","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"     * Executes the command given by the user and act accordingly.","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"     * @param userInput The input that user provides.","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"     * @return The message Duke wants to say to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException if user input is not in a valid format.","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     * @throws NumberFormatException if indexes provided for commands that require it cannot be casted into","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     *                               integer (e.g. mark, delete).","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"     * @throws DateTimeParseException if date provided for commands is invalid.","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"    public String handleUserInput(String userInput) {","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"        String dukeMessage \u003d \"\";","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"            dukeMessage \u003d c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"            dukeMessage \u003d this.ui.dukeErrorMsg(e.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"            dukeMessage \u003d this.ui.numberCastErrorMsg();","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"            dukeMessage \u003d this.ui.dateErrorMsg();","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"        return dukeMessage;","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ElginL":70,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"ElginL":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":" * GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    private Duke duke \u003d new Duke(\"src/data/duke.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"            VBox box \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"            Scene scene \u003d new Scene(box);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"ElginL":34}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" * Represents an Add Command, to add a task to tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /** The name of the command (e.g. todo, deadline, event). */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"    private final String command;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"    /** The arguments of the command (e.g. \u0027sleep /at 2020-12-12\u0027). */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"     * Constructor of AddCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"     * @param command The name of the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     * @param arguments The arguments of the command (e.g. \u0027sleep /at 2020-12-12\u0027).","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    public AddCommand(String command, String arguments) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     * Executes AddCommand and adds a task to tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"        if (this.command.equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"            ToDo newToDo \u003d tasks.addToDo(this.arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"            return ui.taskAddedMsg(tasks.getTaskLen(), newToDo);","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"        } else if (this.command.equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"            Deadline newDeadline \u003d tasks.addDeadline(this.arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"            return ui.taskAddedMsg(tasks.getTaskLen(), newDeadline);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"            Event newEvent \u003d tasks.addEvent(this.arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"            return ui.taskAddedMsg(tasks.getTaskLen(), newEvent);","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Abstract class Command that represents commands on tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * Abstract method that executes the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Represents a Delete Command, to delete a task from tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /** The arguments of the command (e.g. \u0027sleep /at 2020-12-12\u0027). */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * Constructor of DeleteCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @param arguments The arguments of the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     * Executes the delete command and remove a task from tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        String deletedTaskDesc \u003d tasks.deleteItem(this.arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        return ui.taskDeletedMsg(tasks.getTaskLen(), deletedTaskDesc);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":39}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Represents an Exit Command, which quits Duke\u0027s service to user.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * Executes the Exit command, and stops Duke and user interaction, ending off with a bye.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"        // Timeout before exiting program (3 seconds).","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"            try {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"                Runnable runnable \u003d () -\u003e System.exit(0);","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"                Thread.sleep(3000);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"                runnable.run();","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"                System.err.println(e);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"        }).start();","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"        return ui.byeMsg();","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * FindCommand that finds for a task in the TaskList, matched by search input.","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /** The search input for the task. */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    private final String searchInput;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @param arguments The arguments for the task (i.e. the search input string).","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        this.searchInput \u003d arguments;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     * Executes find command and print to user the results of the search.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        String searchResults \u003d tasks.findMatches(this.searchInput);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        return Ui.searchResultsMsg(searchResults);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ElginL":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Represents a List Command, which lists all tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * Executes the command and lists all tasks to the user.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"        String items \u003d tasks.allItems();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"        return ui.allTasksMsg(items);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":27}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Represents a Mark Command, which marks a task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /** The arguments of the command (e.g. \u0027sleep /at 2020-12-12\u0027). */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * Constructor of MarkCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @param arguments The arguments of the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     * Executes the Mark command, and marks the task as done.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        String taskDescription \u003d tasks.markOrUnmark(this.arguments, true);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        return ui.taskMarkedMsg(taskDescription);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Represents an Unmark Command, which unmarks a task as completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /** The arguments of the command (e.g. \u0027sleep /at 2020-12-12\u0027). */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    private final String arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * Constructor of MarkCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @param arguments The arguments of the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     * Executes the Unmark command, and unmarks the task as not done.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     * @param tasks All tasks present in Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * @param ui The UI controller that handles interaction between user and Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * @param storage Storage that stores all tasks on Disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @return Duke\u0027s message to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        String taskDescription \u003d tasks.markOrUnmark(this.arguments, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        return ui.taskUnmarkedMsg(taskDescription);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.exception;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * Exception when user inputs something invalid to Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"    /** The error message */","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"    private final String message;","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"     * Constructor of DukeException.","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     * @param message The error message to be displayed to user.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"     * Returns error message, concatenated with oops.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"     * @return Error message.","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"        return this.message;","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"ElginL":31}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.parser;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":" * Parser class that deals with making sense of the user command.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    /** All valid commands. */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    private static final ArrayList\u003cString\u003e validCommands \u003d new ArrayList\u003c\u003e(Arrays.asList(\"bye\", \"list\", \"todo\",","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"            \"event\", \"deadline\", \"mark\", \"unmark\", \"delete\", \"find\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    /** All valid commands without arguments. */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    private static final ArrayList\u003cString\u003e validCommandsWithoutArgs \u003d new ArrayList\u003c\u003e(Arrays.asList(\"bye\", \"list\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * Parses the user input and return the command that the user is demanding.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     * @param userInput The user input into the CLI.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     * @return Command that the user wants to execute.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If no matching command is found that Duke supports.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        String[] inputWords \u003d userInput.trim().split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"        if (userInput.equals(\"todo\") || userInput.equals(\"deadline\") || userInput.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"The description of a task cannot be empty!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"        if (userInput.equals(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage \u0027mark index\u0027\");","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"        if (userInput.equals(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage \u0027unmark index\u0027\");","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"        if (userInput.equals(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage \u0027delete index\u0027\");","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"        if (userInput.equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage \u0027find title\u0027\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"        String userCommand \u003d inputWords[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"        String arguments \u003d Parser.canRunWithoutArgs(inputWords[0]) || !Parser.isValidCommand(inputWords[0])","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"                ? \"\"","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"                : userInput.substring(userCommand.length() + 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"        switch (userCommand) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"        case \"event\":","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"            return new AddCommand(userCommand, arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"            return new MarkCommand(arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"            return new UnmarkCommand(arguments);","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"        case \"find\":","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"        case \"list\":","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"        default:","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"I\u0027m sorry, I don\u0027t understand what that means :-(\");","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"     * Checks whether single line command is allowed (Depends on your declaration).","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"     * @param command The command that needs to be checked whether it is allowed to run without arguments.","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"     * @return True if command can run without arguments, false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ElginL"},"content":"    public static boolean canRunWithoutArgs(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"ElginL"},"content":"        return Parser.validCommandsWithoutArgs.contains(command);","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"ElginL"},"content":"     * Checks whether it is a recognized command.","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"ElginL"},"content":"     * @param command The command to be checked for validity.","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"ElginL"},"content":"     * @return True if command is valid, false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"ElginL"},"content":"    public static boolean isValidCommand(String command) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"ElginL"},"content":"        return Parser.validCommands.contains(command);","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":105}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":" * Represents storage for tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    /** Path to file where tasks are stored. */","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    private final Path filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"    /** File reference where tasks are stored. */","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"    private final File file;","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"     * @param filePath Path to file (e.g. \u0027src/data/tasks.txt\u0027)","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"        String[] directories \u003d filePath.split(\"/\");","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"        this.filePath \u003d Paths.get(System.getProperty(\"user.dir\"), directories);","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"        this.file \u003d new File(this.filePath.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"        // Path to directory where file that stores tasks is at","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"        Path dirPath \u003d Paths.get(System.getProperty(\"user.dir\"), Arrays.copyOf(directories, directories.length - 1));","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"        // Making sure that missing folders / files are created.","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"        File dir \u003d new File(dirPath.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"            dir.mkdirs();","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"                this.writeToFile(\"\", true);","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"     * Loads tasks from data/duke.txt file.","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"     * @throws FileNotFoundException If file cannot be opened by Scanner.","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"        if (this.file.exists() \u0026\u0026 !this.file.isDirectory()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"            Scanner fileScanner \u003d new Scanner(this.file);","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"                String[] details \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"                try {","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"                    switch (details[0]) {","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"                        tempList.add(new ToDo(details[2], details[1].equals(\"1\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"                        break;","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"                        tempList.add(new Deadline(details[2], details[3], details[1].equals(\"1\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"                        break;","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"                        tempList.add(new Event(details[2], details[3], details[1].equals(\"1\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"                        break;","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"                    default:","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"                        throw new DukeException(\"File contains lines that cannot be validated as a Task.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"ElginL"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"ElginL"},"content":"                this.writeToFile(\"\", true);","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"ElginL"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"ElginL"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"ElginL"},"content":"        return tempList;","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"ElginL"},"content":"     * Writes to file that contains all the tasks.","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"ElginL"},"content":"     * @param textToAdd The text to be added to the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"ElginL"},"content":"     * @throws IOException If there are errors in input/output to the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"ElginL"},"content":"    private void writeToFile(String textToAdd, boolean isOverwrite) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"ElginL"},"content":"        FileWriter fw \u003d isOverwrite","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"ElginL"},"content":"                ? new FileWriter(this.filePath.toString())","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"ElginL"},"content":"                : new FileWriter(this.filePath.toString(), true);","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"ElginL"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"ElginL"},"content":"        fw.close();","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"ElginL"},"content":"     * Saves tasks into a duke.txt file.","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"ElginL"},"content":"     * @param tasks All the tasks to save.","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"ElginL"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"ElginL"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"ElginL"},"content":"            // 1 denotes task is done, 0 denotes task is not done.","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"ElginL"},"content":"            String taskDone \u003d t.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"ElginL"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"ElginL"},"content":"                if (t instanceof ToDo) {","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"ElginL"},"content":"                    this.writeToFile(\"T | \" + taskDone + \" | \" + t.getTaskName() + \"\\n\", false);","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"ElginL"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"ElginL"},"content":"                    this.writeToFile(\"D | \" + taskDone + \" | \" + t.getTaskName() + \" | \"","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"ElginL"},"content":"                            + ((Deadline) t).getDate() + \"\\n\", false);","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"ElginL"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2022-08-22"},{"lineNumber":133,"author":{"gitId":"ElginL"},"content":"                    this.writeToFile(\"E | \" + taskDone + \" | \" + t.getTaskName() + \" | \"","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"ElginL"},"content":"                            + ((Event) t).getDate() + \"\\n\", false);","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"ElginL"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":136,"author":{"gitId":"ElginL"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":137,"author":{"gitId":"ElginL"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":139,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"ElginL":141}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Deadline Class that encapsulates details of a task with a deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin Lee","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /** The date of deadline. */","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * Constructor of Deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @param taskName The Task\u0027s Name.","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     * @param date The date of deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"     * @throws DateTimeParseException If date cannot be casted to LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    public Deadline(String taskName, String date) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"        super(taskName);","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * Constructor of Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @param taskName The Task\u0027s name.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     * @param date The date of deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     * @param isDone True if the task is done, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"    public Deadline(String taskName, String date, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"        super(taskName, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"     * Gets the date of Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"     * @return Date of deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"        return this.date;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"     * String representation of a Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     * @return Deadline representation.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * Event Class that encapsulates details of an Event Task.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" * @author Elgin Lee","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /** The date and time of the event. */","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     * Constructor of Event.","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * @param taskName The name of the Event.","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     * @param date The date and time when the Event will happen.","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"     * @throws DateTimeParseException If date cannot be casted to LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    public Event(String taskName, String date) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"        super(taskName);","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * Constructor of Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @param taskName The name of the event.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     * @param date The date and time when the Event will happen.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     * @param isDone True if the event is done, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"    public Event(String taskName, String date, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"        super(taskName, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"     * Gets the date of the event.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"     * @return The date of the event.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"        return this.date;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"     * String representation of an Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     * @return Event string representation.","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * Class Task that encapsulates details of a task.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":" * @author Elgin Lee","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"public class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"    /** Name of the task. */","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"    /** Whether the task has been completed. */","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"     * Constructor for a Task, initializes task name","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     * @param taskName The title of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"     * Constructor for a Task, initializes both task name and isDone.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     * @param taskName The title of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * @param isDone True if task is already done, false if not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"     * Checks whether the task is done or not.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"     * @return True if task is done, False otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"     * Gets the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"     * @return The task\u0027s name.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"        return this.taskName;","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"     * Returns status of the task (difference depends on whether it is done or not done).","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"     * @return [X] if task is done, [ ] otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"     * Marks the task as done, and sets isDone to true.","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"     * Unmarks the task, and sets isDone to false.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"     * String representation of a Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"     * @return Status concatenated with the task\u0027s name.","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"        return this.getStatusIcon() + this.taskName;","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":88}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" * Represents all tasks in TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    /** List of tasks. */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     * @param tasks The tasks in TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"     * Getter for all tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"     * @return All tasks in TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"     * Gets the total number of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"     * @return The total number of tasks currently.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"    public int getTaskLen() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     * Adds one To Do task and adds it to the array list.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"     * @param description The task description.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"     * @return The new ToDo task created.","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"    public ToDo addToDo(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"        ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"        this.tasks.add(newToDo);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"        return newToDo;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"     * Creates one Deadline and adds it to the array list.","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"     * @param userInput The description of the task, and deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"     * @return The new Deadline task created.","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If userInput is not in the form \"description /by deadline\".","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"     * @throws DateTimeParseException If deadline date given by user cannot be casted to a date (require \"yyyy-mm-dd\")","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"    public Deadline addDeadline(String userInput) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"        String[] detailsFragments \u003d userInput.split(\" /by\");","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"        if (detailsFragments.length !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage description /by deadline\");","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"        Deadline newDeadline \u003d new Deadline(detailsFragments[0], detailsFragments[1].trim());","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"        this.tasks.add(newDeadline);","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"        return newDeadline;","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"     * Creates one Event and adds it to the array list.","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"     * @param userInput The description of the task, and event time.","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"     * @return The new Event created.","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If userInput is not in the form \"description /at time\".","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"ElginL"},"content":"    public Event addEvent(String userInput) throws DukeException, DateTimeParseException {","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"ElginL"},"content":"        String[] detailsFragments \u003d userInput.split(\" /at\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"ElginL"},"content":"        if (detailsFragments.length !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage description /at time\");","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"ElginL"},"content":"        Event newEvent \u003d new Event(detailsFragments[0], detailsFragments[1].trim());","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"ElginL"},"content":"        this.tasks.add(newEvent);","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"ElginL"},"content":"        return newEvent;","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"ElginL"},"content":"     * Deletes a task from the tasks array list.","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"ElginL"},"content":"     * @param userInput The index of item to delete.","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"ElginL"},"content":"     * @return String representation of the task deleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If index is empty or out of bounds from the array list.","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"ElginL"},"content":"     * @throws NumberFormatException If index cannot be casted into an integer.","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"ElginL"},"content":"    public String deleteItem(String userInput) throws DukeException, NumberFormatException {","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"ElginL"},"content":"        String index \u003d userInput.trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"ElginL"},"content":"        int deleteIndex \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"ElginL"},"content":"        if (deleteIndex \u003c 1 || deleteIndex \u003e this.tasks.size()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Invalid index, choose a valid item index!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"ElginL"},"content":"        // Removes the task, and returns the string representation of the task deleted.","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"ElginL"},"content":"        return this.tasks.remove(deleteIndex - 1).toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"ElginL"},"content":"     * Marks a Task as done, or unmarks a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"ElginL"},"content":"     * @param userInput The index of task to be marked as done, preceded by an empty space.","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"ElginL"},"content":"     * @param isMarkDone If true, mark task as done, else, unmark task.","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"ElginL"},"content":"     * @return String representation of the task that was marked or unmarked.","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If index is not given, or index \u003c\u003d 1 or index \u003e\u003d tasks.size().","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"ElginL"},"content":"     * @throws NumberFormatException If index given by user cannot be casted into an integer.","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"ElginL"},"content":"    public String markOrUnmark(String userInput, boolean isMarkDone) throws DukeException, NumberFormatException {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"ElginL"},"content":"        int index \u003d Integer.parseInt(userInput.trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"ElginL"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Invalid index, please provide a valid input\");","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"ElginL"},"content":"        if (!isMarkDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"ElginL"},"content":"            this.tasks.get(index - 1).unmark();","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"ElginL"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"ElginL"},"content":"            this.tasks.get(index - 1).markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"ElginL"},"content":"        return this.tasks.get(index - 1).toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"ElginL"},"content":"     * Finds and returns String representation of","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"ElginL"},"content":"     * all tasks that matches the search descriptor.","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"ElginL"},"content":"     * @param searchInput The search input the user submitted.","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"ElginL"},"content":"     * @return All search results in listed format, else returns String that states failure to find","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"ElginL"},"content":"     *         relevant search results.","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"ElginL"},"content":"    public String findMatches(String searchInput) {","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"ElginL"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"ElginL"},"content":"        int foundCount \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"ElginL"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"ElginL"},"content":"            String taskName \u003d task.getTaskName();","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"ElginL"},"content":"            if (taskName.contains(searchInput)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":167,"author":{"gitId":"ElginL"},"content":"                sb.append(++foundCount).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"ElginL"},"content":"        String searchResults \u003d sb.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"ElginL"},"content":"        return searchResults.isEmpty()","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"ElginL"},"content":"                ? \"Sorry, there are no search results. Try a different term\"","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"ElginL"},"content":"                : searchResults;","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"ElginL"},"content":"     * Returns all tasks in a list format that is stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"ElginL"},"content":"     * @return String representation of all tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"ElginL"},"content":"    public String allItems() {","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"ElginL"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"ElginL"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":186,"author":{"gitId":"ElginL"},"content":"            int itemIndex \u003d i + 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":187,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"ElginL"},"content":"            sb.append(itemIndex).append(\".\").append(this.tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":190,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":191,"author":{"gitId":"ElginL"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":192,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":193,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"ElginL":193}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.task;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * Class that encapsulates To Do task.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"     * Constructor of the To Do task.","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"     * @param taskName The title of the Task","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"        super(taskName);","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * Constructor of the To Do task.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"     * @param taskName The title of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"     * @param isDone True if task is already done, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"        super(taskName, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * String representation of a ToDo.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @return ToDo string representation.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":37}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":" * DialogBox controller that handles the dialog boxes in the conversation between","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":" * duke and user.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ElginL":62}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":" * Controller for MainWindow.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * Setter for Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @param duke","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"     * Initializes the GUI with settings and configurations.","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\", this.dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"     * Handles key enter or submit button press from TextBox GUI.","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"     * Adds two conversation bubbles, Duke and User.","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"    private void submitHandler() {","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"        String dukeMessage \u003d this.duke.handleUserInput(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"                DialogBox.getDukeDialog(dukeMessage, this.dukeImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"ElginL":64}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.ui;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":" * Ui class that handles showing the user texts.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"     * Bye to user (End process message).","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * @return String representation of Bye message.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    public String byeMsg() {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"        return \"Bye. Hope to see you again soon!\\n\" + \"Application closing in 3 seconds...\";","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"     * Formats a task added message for Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"     * @return Message conveying that task has successfully been added, and the current number of tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    public String taskAddedMsg(int newTaskCount, Task task) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"                + newTaskCount + \" tasks in the list.\";","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * Formats a task deleted message for Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     * @return Message conveying that user that has successfully deleted a task, and the number of tasks left","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"    public String taskDeletedMsg(int newTaskCount, String taskDescription) {","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + taskDescription + \"\\n\" + \"Now you have \"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"                + newTaskCount + \" tasks in the list\";","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"     * Formats a message signaling a task has been successfully marked.","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"     * @param taskDescription The description of the task marked.","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"    public String taskMarkedMsg(String taskDescription) {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskDescription;","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"     * Formats a message signaling a task has been successfully unmarked.","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     * @param taskDescription The description of the task unmarked.","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"    public String taskUnmarkedMsg(String taskDescription) {","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskDescription;","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"     * Formats a message that lists all tasks for Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"     * @param allTasks String representation of allTasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"     * @return A formatted string representation of all tasks.","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"    public String allTasksMsg(String allTasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"        if (allTasks.trim().isEmpty()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"            return \"There are no tasks yet...\";","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"        return \"Here are the tasks in your list\\n\" + allTasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"     * File Loading Tasks Error.","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"     * @return String representation of loading error.","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"    public String showLoadingError() {","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"        return \"OOPS!!! Failed to load tasks because file cannot be opened!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"     * Formats a Duke error message.","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"     * @param error Error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"     * @return Formatted duke error message.","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"    public String dukeErrorMsg(String error) {","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"        return \"OOPS!!! \" + error;","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"ElginL"},"content":"     * Formats a date parsing error message (Invalid date format).","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"ElginL"},"content":"     * @return Formatted invalid date error message.","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"ElginL"},"content":"    public String dateErrorMsg() {","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"ElginL"},"content":"        return \"OOPS!!! Your date format has to be in the form \u0027yyyy-mm-dd\u0027\";","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"ElginL"},"content":"     * Formats String to Number cast error message (because user did not input a number).","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"ElginL"},"content":"     * @return Formatted invalid number error message.","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"ElginL"},"content":"    public String numberCastErrorMsg() {","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"ElginL"},"content":"        return \"OOPS!!! Please input a valid index (i.e. a number)\";","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"ElginL"},"content":"     * Formats all search results message for Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"ElginL"},"content":"     * @param searchResults String representation of all string results.","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"ElginL"},"content":"     * @return String representation of all search results.","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"ElginL"},"content":"    public static String searchResultsMsg(String searchResults) {","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"ElginL"},"content":"        return \"Here are the matching tasks in your list:\\n\" + searchResults;","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ElginL":118}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"380.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ElginL":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"\u003cVBox prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"500.0\" prefWidth\u003d\"200.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"          \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#submitHandler\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter Command Here\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"3.0\" right\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"         \u003c/VBox.margin\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"      \u003cButton fx:id\u003d\"submitBtn\" contentDisplay\u003d\"CENTER\" defaultButton\u003d\"true\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#submitHandler\" text\u003d\"Submit Command\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"            \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"      \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"ElginL":43}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.command;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":" * Tests for AddCommand class.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"     * Creates a ToDo task successfully and adds to tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     * @result ToDo task created on execution, and is within the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    public void executes_addToDo_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"        AddCommand addCommand \u003d new AddCommand(\"todo\", \"sleep eat\");","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"        Storage storage \u003d new Storage(\"src/data/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"        addCommand.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"        assertEquals(1, tasks.getTaskLen());","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d tasks.getTasks();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"        Task task \u003d addedTasks.get(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"        assertEquals(\"sleep eat\", task.getTaskName());","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     * Creates an Event task successfully and adds to tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"     * @result Event task created on execution, and is within the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"    public void executes_addEvent_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"        AddCommand addCommand \u003d new AddCommand(\"event\", \"eat /at 2020-12-12\");","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"        Storage storage \u003d new Storage(\"src/data/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"        addCommand.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"        assertEquals(1, tasks.getTaskLen());","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d tasks.getTasks();","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"        Task task \u003d addedTasks.get(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"        assertEquals(\"eat\", task.getTaskName());","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"     * Creates a Deadline task successfully and adds to tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"     * @result Deadline task created on execution, and is within the TaskList.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"    public void executes_addDeadline_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"        AddCommand addCommand \u003d new AddCommand(\"deadline\", \"ip /by 2020-01-12\");","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"        Storage storage \u003d new Storage(\"src/data/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"        addCommand.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"        assertEquals(1, tasks.getTaskLen());","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"ElginL"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d tasks.getTasks();","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"ElginL"},"content":"        Task task \u003d addedTasks.get(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"ElginL"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"ElginL"},"content":"        assertEquals(\"ip\", task.getTaskName());","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"ElginL"},"content":"     * Fails to create a Deadline Task on invalid arguments (i.e. missing /by statement).","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"ElginL"},"content":"     * @result Throws DukeException which gives the correct error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"ElginL"},"content":"    public void executes_addInvalidDeadlineTask_dukeExceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"ElginL"},"content":"        // Missing /by","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"ElginL"},"content":"        AddCommand addCommand \u003d new AddCommand(\"deadline\", \"eat 2020-12-12\");","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"ElginL"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"ElginL"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"ElginL"},"content":"        Storage storage \u003d new Storage(\"src/data/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"ElginL"},"content":"            addCommand.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"ElginL"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"ElginL"},"content":"            assertEquals(\"Usage description /by deadline\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"ElginL"},"content":"     * Fails to create an Event Task on invalid arguments (i.e. missing /at).","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"ElginL"},"content":"     * @result Throws DukeException, with the correct error message.","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"ElginL"},"content":"    public void executes_addInvalidEventTask_dukeExceptionThrown() {","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"ElginL"},"content":"        // Missing /at","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"ElginL"},"content":"        AddCommand addCommand \u003d new AddCommand(\"event\", \"eat 2020-12-12\");","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"ElginL"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"ElginL"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"ElginL"},"content":"        Storage storage \u003d new Storage(\"src/data/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"ElginL"},"content":"            addCommand.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"ElginL"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"ElginL"},"content":"            assertEquals(\"Usage description /at time\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ElginL":142}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"package duke.parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":" * Tests for the Parser class.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     * Parser.parse returns AddCommand instance on passing in valid input (todo).","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"     * @result Parser.parse should return an instance of AddCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    public void parse_toDoCommand_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"        assertTrue(Parser.parse(\"todo hello world\") instanceof AddCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"     * Parser.parse returns AddCommand instance on passing in valid input (deadline).","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"     * @result Parser.parse should return an instance of AddCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"    public void parse_deadlineCommand_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"        assertTrue(Parser.parse(\"deadline sleep /by 2020-12-12\") instanceof AddCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"     * Parser.parse returns AddCommand instance on passing in valid input (event).","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"     * @result Parser.parse should return an instance of AddCommand.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"    public void parse_eventCommand_success() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"        assertTrue(Parser.parse(\"event eat /at 2020-01-01\") instanceof AddCommand);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"     * Parser.parse should throw DukeException on attempt to create an empty task.","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"     * @result Throws DukeException for trying to create an empty todo, event or deadline task.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"    public void parse_rejectsAddingEmptyTasks_throwsDukeException() {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"            assertEquals(\"The description of a task cannot be empty!\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"            Parser.parse(\"event\");","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"            assertEquals(\"The description of a task cannot be empty!\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"            assertEquals(\"The description of a task cannot be empty!\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"     * Parser.parse throws DukeException on unrecognized command.","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"     * @result Parser.parse throws DukeException on unrecognized command (e.g. SomeInvalidCommand).","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"    public void parse_rejectsInvalidCommand_throwsDukeException() {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"            Parser.parse(\"SomeInvalidCommand\");","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"            fail();","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"            assertEquals(\"I\u0027m sorry, I don\u0027t understand what that means :-(\", e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ElginL":91}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"ElginL":9}}]

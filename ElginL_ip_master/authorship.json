[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":" * Deadline Class that encapsulates details of a task with a deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * @author Elgin Lee","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"    /** The date of deadline. */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"    protected String date;","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"     * Constructor of Deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"     * @param taskName The Task\u0027s Name.","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * @param date The date of deadline.","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    public Deadline(String taskName, String date) {","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"        super(taskName);","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + date + \")\";","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"    /** List of items. */","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"     * Startup message (When program is first booted).","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"    private static void greetUser() {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"        String message \u003d Duke.formatText(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"     * Prints all items in a list format that is stored.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    private static void listItems() {","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"        for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"            int itemIndex \u003d i + 1;","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"            string.append(itemIndex).append(\".\").append(Duke.tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"        System.out.println(Duke.formatText(\"Here are the tasks in your list\\n\" + string));","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"     * Marks a Task as done, or unmarks a task.","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"     * @param userInput The index of task to be marked as done, preceded by an empty space.","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"     * @param isMarkDone If true, mark task as done, else, unmark task.","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If index is not given, or index \u003c\u003d 1 or index \u003e\u003d tasks.size().","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"     * @throws NumberFormatException If index given by user cannot be casted into an integer.","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"ElginL"},"content":"    private static void markTask(String userInput, boolean isMarkDone) throws DukeException, NumberFormatException {","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"ElginL"},"content":"        if (userInput.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Index of mark cannot be empty!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"ElginL"},"content":"        int index \u003d Integer.parseInt(userInput.trim());","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"ElginL"},"content":"        if (index \u003c 1 || index \u003e Duke.tasks.size()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Invalid index, please provide a valid input\");","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"ElginL"},"content":"        if (!isMarkDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"ElginL"},"content":"            Duke.tasks.get(index - 1).unmark();","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"ElginL"},"content":"            System.out.println(Duke.formatText(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"ElginL"},"content":"                    Duke.tasks.get(index - 1)));","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"ElginL"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"ElginL"},"content":"            Duke.tasks.get(index - 1).markAsDone();","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"ElginL"},"content":"            System.out.println(Duke.formatText(\"Nice! I\u0027ve marked this task as done:\\n\" + Duke.tasks.get(index - 1)));","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"ElginL"},"content":"     * Creates one To Do task and adds it to the array list.","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"ElginL"},"content":"     * @param userInput The task description, preceded by an empty space.","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"ElginL"},"content":"    private static void createToDoTask(String userInput) throws DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"ElginL"},"content":"        String description \u003d userInput.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"ElginL"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"The description of a To Do task cannot by empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"ElginL"},"content":"        Duke.tasks.add(new ToDo(description));","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"ElginL"},"content":"        System.out.println(Duke.formatText(\"Got it. I\u0027ve added this task:\\n\" + \"  \" +","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"ElginL"},"content":"                Duke.tasks.get(Duke.tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"ElginL"},"content":"                \"Now you have \" + Duke.tasks.size() + \" tasks in the list.\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":79,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"ElginL"},"content":"     * Creates one Deadline and adds it to the array list.","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"ElginL"},"content":"     * @param userInput The description of the task, and deadline, preceded by an empty space.","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If userInput is not in the form \"description /by deadline\".","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"ElginL"},"content":"    private static void createDeadline(String userInput) throws DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"ElginL"},"content":"        String trimmedInput \u003d userInput.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"ElginL"},"content":"        if (trimmedInput.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty\");","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":91,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":92,"author":{"gitId":"ElginL"},"content":"        String[] detailsFragments \u003d trimmedInput.split(\" /by\");","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"ElginL"},"content":"        if (detailsFragments.length !\u003d 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":94,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage description /by deadline\");","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":96,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"ElginL"},"content":"        Duke.tasks.add(new Deadline(detailsFragments[0], detailsFragments[1]));","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"ElginL"},"content":"        System.out.println(Duke.formatText(\"Got it. I\u0027ve added this task:\\n\" + \"  \" +","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"ElginL"},"content":"                Duke.tasks.get(Duke.tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"ElginL"},"content":"                \"Now you have \" + Duke.tasks.size() + \" tasks in the list.\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":104,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":105,"author":{"gitId":"ElginL"},"content":"     * Creates one Event and adds it to the array list.","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"ElginL"},"content":"     * @param userInput The description of the task, and event time, preceded by an empty space.","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If userInput is not in the form \"description /at time\".","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":110,"author":{"gitId":"ElginL"},"content":"    private static void createEvent(String userInput) throws DukeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":111,"author":{"gitId":"ElginL"},"content":"        String trimmedInput \u003d userInput.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"ElginL"},"content":"        if (trimmedInput.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"The description of an event cannot be empty\");","lastModifiedDate":"2022-08-15"},{"lineNumber":114,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"ElginL"},"content":"        String[] detailsFragments \u003d trimmedInput.split(\" /at\");","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"ElginL"},"content":"        if (detailsFragments.length !\u003d 2) {","lastModifiedDate":"2022-08-15"},{"lineNumber":118,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Usage description /at time\");","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":120,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":121,"author":{"gitId":"ElginL"},"content":"        Duke.tasks.add(new Event(detailsFragments[0], detailsFragments[1]));","lastModifiedDate":"2022-08-15"},{"lineNumber":122,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"ElginL"},"content":"        System.out.println(Duke.formatText(\"Got it. I\u0027ve added this task:\\n\" + \"  \" +","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"ElginL"},"content":"                Duke.tasks.get(Duke.tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"ElginL"},"content":"                \"Now you have \" + Duke.tasks.size() + \" tasks in the list.\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":127,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"ElginL"},"content":"     * Deletes a task from the tasks array list.","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":131,"author":{"gitId":"ElginL"},"content":"     * @param userInput The index of item to delete, preceded by an empty space.","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"ElginL"},"content":"     * @throws DukeException If index is empty or out of bounds from the array list.","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"ElginL"},"content":"     * @throws NumberFormatException If index cannot be casted into an integer.","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":135,"author":{"gitId":"ElginL"},"content":"    private static void deleteItem(String userInput) throws DukeException, NumberFormatException {","lastModifiedDate":"2022-08-15"},{"lineNumber":136,"author":{"gitId":"ElginL"},"content":"        String index \u003d userInput.trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"ElginL"},"content":"        if (index.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Index cannot be empty!\");","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":140,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":141,"author":{"gitId":"ElginL"},"content":"        int deleteIndex \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"ElginL"},"content":"        if (deleteIndex \u003c 1 || deleteIndex \u003e Duke.tasks.size()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"ElginL"},"content":"            throw new DukeException(\"Invalid index, choose a valid item index!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":145,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":146,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":147,"author":{"gitId":"ElginL"},"content":"        System.out.println(Duke.formatText(\"Noted. I\u0027ve removed this task:\\n  \" +","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"ElginL"},"content":"                Duke.tasks.get(deleteIndex - 1) + \"\\n\" +","lastModifiedDate":"2022-08-20"},{"lineNumber":149,"author":{"gitId":"ElginL"},"content":"                \"Now you have \" + (Duke.tasks.size() - 1) + \" tasks in the list\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":151,"author":{"gitId":"ElginL"},"content":"        Duke.tasks.remove(deleteIndex - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":152,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":153,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":154,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"ElginL"},"content":"     * Starts serving the user in CLI.","lastModifiedDate":"2022-08-20"},{"lineNumber":156,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":157,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":158,"author":{"gitId":"ElginL"},"content":"    private static void startService() {","lastModifiedDate":"2022-08-15"},{"lineNumber":159,"author":{"gitId":"ElginL"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":160,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":161,"author":{"gitId":"ElginL"},"content":"        while (true) {","lastModifiedDate":"2022-08-15"},{"lineNumber":162,"author":{"gitId":"ElginL"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-08-15"},{"lineNumber":163,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":164,"author":{"gitId":"ElginL"},"content":"            // Service has ended","lastModifiedDate":"2022-08-20"},{"lineNumber":165,"author":{"gitId":"ElginL"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":166,"author":{"gitId":"ElginL"},"content":"                System.out.println(Duke.formatText(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2022-08-15"},{"lineNumber":167,"author":{"gitId":"ElginL"},"content":"                break;","lastModifiedDate":"2022-08-15"},{"lineNumber":168,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":169,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":170,"author":{"gitId":"ElginL"},"content":"            // List all the tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":171,"author":{"gitId":"ElginL"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":172,"author":{"gitId":"ElginL"},"content":"                Duke.listItems();","lastModifiedDate":"2022-08-15"},{"lineNumber":173,"author":{"gitId":"ElginL"},"content":"                continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":174,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":175,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":176,"author":{"gitId":"ElginL"},"content":"            // Mark item as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":177,"author":{"gitId":"ElginL"},"content":"            if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":178,"author":{"gitId":"ElginL"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":179,"author":{"gitId":"ElginL"},"content":"                    Duke.markTask(userInput.substring(4), true);","lastModifiedDate":"2022-08-20"},{"lineNumber":180,"author":{"gitId":"ElginL"},"content":"                    continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":181,"author":{"gitId":"ElginL"},"content":"                } catch (DukeException | NumberFormatException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":182,"author":{"gitId":"ElginL"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":183,"author":{"gitId":"ElginL"},"content":"                    continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":184,"author":{"gitId":"ElginL"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":185,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":186,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":187,"author":{"gitId":"ElginL"},"content":"            // Unmark an item (becomes not done).","lastModifiedDate":"2022-08-20"},{"lineNumber":188,"author":{"gitId":"ElginL"},"content":"            if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"ElginL"},"content":"                try {","lastModifiedDate":"2022-08-20"},{"lineNumber":190,"author":{"gitId":"ElginL"},"content":"                    Duke.markTask(userInput.substring(6), false);","lastModifiedDate":"2022-08-20"},{"lineNumber":191,"author":{"gitId":"ElginL"},"content":"                    continue;","lastModifiedDate":"2022-08-20"},{"lineNumber":192,"author":{"gitId":"ElginL"},"content":"                } catch (DukeException | NumberFormatException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":193,"author":{"gitId":"ElginL"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":194,"author":{"gitId":"ElginL"},"content":"                    continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":195,"author":{"gitId":"ElginL"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":196,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":197,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":198,"author":{"gitId":"ElginL"},"content":"            // Deletes a task from tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":199,"author":{"gitId":"ElginL"},"content":"            if (userInput.startsWith(\"delete \")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":200,"author":{"gitId":"ElginL"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":201,"author":{"gitId":"ElginL"},"content":"                    Duke.deleteItem(userInput.substring(6));","lastModifiedDate":"2022-08-20"},{"lineNumber":202,"author":{"gitId":"ElginL"},"content":"                    continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":203,"author":{"gitId":"ElginL"},"content":"                } catch (DukeException | NumberFormatException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":204,"author":{"gitId":"ElginL"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-15"},{"lineNumber":205,"author":{"gitId":"ElginL"},"content":"                    continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":206,"author":{"gitId":"ElginL"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":207,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":208,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":209,"author":{"gitId":"ElginL"},"content":"            // Add item to tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":210,"author":{"gitId":"ElginL"},"content":"            try {","lastModifiedDate":"2022-08-15"},{"lineNumber":211,"author":{"gitId":"ElginL"},"content":"                if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":212,"author":{"gitId":"ElginL"},"content":"                    Duke.createToDoTask(userInput.substring(4));","lastModifiedDate":"2022-08-20"},{"lineNumber":213,"author":{"gitId":"ElginL"},"content":"                } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":214,"author":{"gitId":"ElginL"},"content":"                    Duke.createDeadline(userInput.substring(8));","lastModifiedDate":"2022-08-20"},{"lineNumber":215,"author":{"gitId":"ElginL"},"content":"                } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":216,"author":{"gitId":"ElginL"},"content":"                    Duke.createEvent(userInput.substring(5));","lastModifiedDate":"2022-08-20"},{"lineNumber":217,"author":{"gitId":"ElginL"},"content":"                } else if (userInput.equals(\"todo\") || userInput.equals(\"deadline\") || userInput.equals(\"event\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":218,"author":{"gitId":"ElginL"},"content":"                    throw new DukeException(\"The description of a \" + userInput + \" cannot be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":219,"author":{"gitId":"ElginL"},"content":"                } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":220,"author":{"gitId":"ElginL"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-15"},{"lineNumber":221,"author":{"gitId":"ElginL"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":222,"author":{"gitId":"ElginL"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":223,"author":{"gitId":"ElginL"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":224,"author":{"gitId":"ElginL"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":225,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":226,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":227,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":228,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":229,"author":{"gitId":"ElginL"},"content":"     * Styles a given text with indentation and wraps the text around horizontal lines.","lastModifiedDate":"2022-08-14"},{"lineNumber":230,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":231,"author":{"gitId":"ElginL"},"content":"     * @param text String that needs to be styled.","lastModifiedDate":"2022-08-14"},{"lineNumber":232,"author":{"gitId":"ElginL"},"content":"     * @return Formatted String that has proper indentation and wrapped around horizontal lines.","lastModifiedDate":"2022-08-14"},{"lineNumber":233,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":234,"author":{"gitId":"ElginL"},"content":"    protected static String formatText(String text) {","lastModifiedDate":"2022-08-15"},{"lineNumber":235,"author":{"gitId":"ElginL"},"content":"        final String HORIZONTAL_LINE \u003d \"\\t---------------------------------------------------------------------\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":236,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":237,"author":{"gitId":"ElginL"},"content":"        String[] lines \u003d text.split(\"\\\\r?\\\\n\");","lastModifiedDate":"2022-08-14"},{"lineNumber":238,"author":{"gitId":"ElginL"},"content":"        StringBuilder formattedText \u003d new StringBuilder(HORIZONTAL_LINE);","lastModifiedDate":"2022-08-14"},{"lineNumber":239,"author":{"gitId":"ElginL"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-08-14"},{"lineNumber":240,"author":{"gitId":"ElginL"},"content":"            formattedText.append(\"\\t\").append(line).append(\"\\n\");","lastModifiedDate":"2022-08-14"},{"lineNumber":241,"author":{"gitId":"ElginL"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":242,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":243,"author":{"gitId":"ElginL"},"content":"        return formattedText + HORIZONTAL_LINE;","lastModifiedDate":"2022-08-14"},{"lineNumber":244,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":245,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"ElginL"},"content":"        Duke.greetUser();","lastModifiedDate":"2022-08-14"},{"lineNumber":248,"author":{"gitId":"ElginL"},"content":"        Duke.startService();","lastModifiedDate":"2022-08-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ElginL":246,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"    private final String message;","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"        return Duke.formatText(\"☹ OOPS!!! \" + this.message);","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"ElginL":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":" * Event Class that encapsulates details of an Event Task.","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * @author Elgin Lee","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"    /** The date and time of the event. */","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"    protected String date;","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"     * Constructor of Event.","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"     * @param taskName The name of the Event.","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * @param date The date and time when the Event will happen.","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    public Event(String taskName, String date) {","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"        super(taskName);","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + this.date + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":" * Class Task that encapsulates details of a task.","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * @author Elgin Lee","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"public class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"    /** Name of the task. */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"    /** Whether the task has been completed. */","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"     * Constructor for a Task, initializes task name","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"     * @param taskName The title of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"ElginL"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"ElginL"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"ElginL"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"ElginL"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"ElginL"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"ElginL"},"content":"        return this.getStatusIcon() + this.taskName;","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":39}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":" * Class that encapsulates To Do task.","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":" *","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":" * @author Elgin","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"     * Constructor of the To Do task.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"     * @param taskName The title of the Task","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"ElginL"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"ElginL"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"ElginL"},"content":"        super(taskName);","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"ElginL"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"ElginL"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"ElginL"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"ElginL"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"ElginL"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"ElginL"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"ElginL":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ElginL"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"ElginL"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"ElginL"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"ElginL"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"ElginL"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"ElginL"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"ElginL"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"ElginL"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"ElginL"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"ElginL":9}}]

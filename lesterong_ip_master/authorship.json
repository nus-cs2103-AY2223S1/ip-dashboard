[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    mainClassName \u003d \"john.John\"","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"    archiveBaseName \u003d \"john\"","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lesterong":7,"-":39}},{"path":"src/main/java/john/John.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import john.commands.ByeCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import john.commands.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"import john.data.exception.JohnException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.parser.Parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"import john.storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import john.ui.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":" * The main entry point to the program.","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"public class John {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    private TaskList tasklist;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    private John(String filePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"            this.tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"            this.ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"            this.tasklist \u003d new TaskList();","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"    private void start() {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"        this.ui.showGreeting();","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"    private void exit() {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"        this.ui.showGoodbye();","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"        System.exit(0);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"    private void runCommandLoop() {","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"        Command command;","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"        do {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"            String input \u003d this.ui.getUserCommand();","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"            command \u003d new Parser().parseCommand(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"            String result \u003d executeCommand(command);","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"            this.ui.showToUser(result);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"        } while (!ByeCommand.isBye(command));","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"    private String executeCommand(Command command) {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"            command.setData(tasklist);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"            String result \u003d command.execute();","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"            storage.saveAllTasks(tasklist.getTasksToStore());","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"            return result;","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"        } catch (JohnException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"            this.ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"        return \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"    private void run() {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"        start();","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"        runCommandLoop();","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"        exit();","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"        new John(\"data/tasks.txt\").run();","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"lesterong":68}},{"path":"src/main/java/john/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents an exit command.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" * Terminates the program.","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"     * Returns true if the command is an instance of ByeCommand, false otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"     * @param command The command to check if it is ByeCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * @return True if command is an instance of ByeCommand, false otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    public static boolean isBye(Command command) {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"     * Returns an empty string.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * @return An empty string.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"        return \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":27}},{"path":"src/main/java/john/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":" * Represents a executable command.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"    protected TaskList tasklist;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"     * Sets the tasklist to execute the command on.","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * @param tasklist The tasklist to execute the command on.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    public void setData(TaskList tasklist) {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"     * Executes a command.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * @return A string representing the result of the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    public abstract String execute();","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":24}},{"path":"src/main/java/john/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to create a deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"deadline \u003cdescription\u003e /by \u003cdd/mm/yyyy\u003e \u003chhmm | optional\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String description;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    private final String timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * Constructor for a Deadline command.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     * @param params The parameters of the deadline, including the description and timing.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    public DeadlineCommand(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"        String[] deadlineParams \u003d params.split(\" /by \", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"        this.description \u003d deadlineParams[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        this.timing \u003d deadlineParams[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the deadline added.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"        return this.tasklist.addDeadline(this.description, this.timing);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":31}},{"path":"src/main/java/john/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to delete a specified task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"delete \u003cinteger\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String deleteParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * Constructor for a DeleteCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * @param deleteParams The position of the task to delete.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public DeleteCommand(String deleteParams) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        this.deleteParams \u003d deleteParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * Deletes the specified task from the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        return tasklist.deleteTask(this.deleteParams);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":28}},{"path":"src/main/java/john/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to create an event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"event \u003cdescription\u003e /at \u003cdd/mm/yyyy\u003e \u003chhmm | optional\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String description;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    private final String timing;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * Constructor for an EventCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     * @param params The parameters of the event, including the description and timing.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    public EventCommand(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"        String[] eventParams \u003d params.split(\" /at \", 2);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"        this.description \u003d eventParams[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        this.timing \u003d eventParams[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the event added.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"        return this.tasklist.addEvent(this.description, this.timing);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":31}},{"path":"src/main/java/john/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to find tasks containing a keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"find \u003ckeyword\u003e\";","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String findParams;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * Constructor for a FindCommand.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * @param findParams The keyword to search for.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public FindCommand(String findParams) {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        this.findParams \u003d findParams;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * Returns a string representation of the tasks matching the keywords.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the tasks matching the keywords.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        return tasklist.findTasks(this.findParams);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"lesterong":28}},{"path":"src/main/java/john/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents an incorrect command.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    private final String feedback;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"     * Constructor for an incorrect command without a feedback.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    public IncorrectCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        this.feedback \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"     * Constructor for an IncorrectCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"     * @param feedback The error feedback to display to users.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    public IncorrectCommand(String feedback) {","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"     * Returns the feedback of an incorrect command.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the incorrect command.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"        return feedback.equals(\"\") ? \"|  cannot understand command\\n\" : feedback;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":32}},{"path":"src/main/java/john/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to list out all the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"list \u003cdd/mm/yyyy | optional\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String listParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * Constructor for a ListCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * @param listParams The parameters for a list command.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public ListCommand(String listParams) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        this.listParams \u003d listParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * Returns a string representation of all the tasks in the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the tasks in the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        return tasklist.listTasks(listParams);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":28}},{"path":"src/main/java/john/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to mark a specified task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"mark \u003cinteger\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String markParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * Constructor for a MarkCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * @param markParams The position of the task to mark.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public MarkCommand(String markParams) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        this.markParams \u003d markParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * Marks the specified task in the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task marked.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        return tasklist.markTask(this.markParams);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":28}},{"path":"src/main/java/john/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to create a to do task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"todo \u003cdescription\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String params;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * Constructor for a TodoCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * @param params The description of the to do to add.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public TodoCommand(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        this.params \u003d params;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * Adds a to do task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the to do task.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        return this.tasklist.addTodo(this.params);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":28}},{"path":"src/main/java/john/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Represents a command to unmark a specified task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    public static final String FORMAT \u003d \"unmark \u003cinteger\u003e\";","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private final String unmarkParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"     * Constructor for a UnmarkCommand.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * @param unmarkParams The position of the task to unmark.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public UnmarkCommand(String unmarkParams) {","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        this.unmarkParams \u003d unmarkParams;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     * Unmarks the specified task in the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task unmarked.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    public String execute() {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        return tasklist.unmarkTask(this.unmarkParams);","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":28}},{"path":"src/main/java/john/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.data;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"import john.task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import john.task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"import john.task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":" * Represents the entire list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"     * Constructor for an empty task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"     * Constructor for a task list initialised with tasks from storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"     * @param storedTasks","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"    public TaskList(ArrayList\u003cString\u003e storedTasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"        for (String task : storedTasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"            String[] taskParams \u003d task.split(\" \\\\| \");","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"            switch (taskParams[0]) {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"            case \"T\":","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"                tasks.add(new Todo(taskParams[2]));","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"            case \"D\":","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"                tasks.add(new Deadline(taskParams[2], taskParams[3]));","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"            case \"E\":","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"                tasks.add(new Event(taskParams[2], taskParams[3]));","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"                break;","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"                break;","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"            if (taskParams[1].equals(\"1\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"                tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"     * Returns a string representation of the tasks with a specific date.","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"     * if params are specified, else return a string representation of all the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"     * @param params The date of the tasks to list.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the tasks in the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    public String listTasks(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"            return \"|  no tasks found\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"        } else if (params.equals(\"\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"            for (int pos \u003d 0; pos \u003c tasks.size(); pos++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"                sb.append(String.format(\"%d \u003d\u003d\u003e %s%n\", pos + 1, tasks.get(pos)));","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"lesterong"},"content":"            LocalDate date \u003d LocalDate.parse(params,","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"lesterong"},"content":"                    DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"lesterong"},"content":"            boolean hasTask \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"lesterong"},"content":"            for (int pos \u003d 0; pos \u003c tasks.size(); pos++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"lesterong"},"content":"                if (tasks.get(pos).isEqualDate(date)) {","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"lesterong"},"content":"                    hasTask \u003d true;","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"lesterong"},"content":"                    sb.append(String.format(\"%d \u003d\u003d\u003e %s%n\", pos + 1, tasks.get(pos)));","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"lesterong"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"lesterong"},"content":"            if (!hasTask) {","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"lesterong"},"content":"                return \"|  no tasks found\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"lesterong"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"lesterong"},"content":"     * Returns a string representation of the tasks with matching keywords.","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"lesterong"},"content":"     * @param params The keyword to match with.","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the tasks with matching keywords.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"lesterong"},"content":"    public String findTasks(String params) {","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"lesterong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"lesterong"},"content":"            return \"|  no tasks found\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"lesterong"},"content":"        boolean hasTask \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"lesterong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"lesterong"},"content":"        for (int pos \u003d 0; pos \u003c tasks.size(); pos++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"lesterong"},"content":"            if (tasks.get(pos).isMatchingKeyword(params)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":96,"author":{"gitId":"lesterong"},"content":"                hasTask \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"lesterong"},"content":"                sb.append(String.format(\"%d \u003d\u003d\u003e %s%n\", pos + 1, tasks.get(pos)));","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"lesterong"},"content":"        if (!hasTask) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"lesterong"},"content":"            return \"|  no tasks found\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"lesterong"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"lesterong"},"content":"     * Adds a to do task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"lesterong"},"content":"     * @param description The description of the to do task.","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task added.","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"lesterong"},"content":"    public String addTodo(String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"lesterong"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"lesterong"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"lesterong"},"content":"        return String.format(\"|  added task:%n|    %s%n\", todo);","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"lesterong"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"lesterong"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"lesterong"},"content":"     * @param timing The timing the task is due by.","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the deadline added.","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"lesterong"},"content":"    public String addDeadline(String description, String timing) {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(description, timing);","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"lesterong"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"lesterong"},"content":"        return String.format(\"|  added task:%n|    %s%n\", deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"lesterong"},"content":"     * Adds a event task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"lesterong"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"lesterong"},"content":"     * @param timing The timing the task is due by.","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the event added.","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"lesterong"},"content":"    public String addEvent(String description, String timing) {","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(description, timing);","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"lesterong"},"content":"        tasks.add(event);","lastModifiedDate":"2022-08-22"},{"lineNumber":138,"author":{"gitId":"lesterong"},"content":"        return String.format(\"|  added task:%n|    %s%n\", event);","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":140,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":141,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"lesterong"},"content":"     * Marks the specified task as complete.","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"lesterong"},"content":"     * @param params The position of the task to mark.","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task being marked as complete.","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"lesterong"},"content":"    public String markTask(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":147,"author":{"gitId":"lesterong"},"content":"        int pos \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":148,"author":{"gitId":"lesterong"},"content":"        if (pos \u003c 0 || tasks.size() \u003c\u003d pos) {","lastModifiedDate":"2022-08-22"},{"lineNumber":149,"author":{"gitId":"lesterong"},"content":"            return String.format(\"|  invalid task number%n|  max id is %d%n\", tasks.size());","lastModifiedDate":"2022-08-22"},{"lineNumber":150,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":151,"author":{"gitId":"lesterong"},"content":"        tasks.get(pos).markAsDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":152,"author":{"gitId":"lesterong"},"content":"        return String.format(\"|  marked task:%n|    %s%n\", tasks.get(pos));","lastModifiedDate":"2022-08-22"},{"lineNumber":153,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":154,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":155,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"lesterong"},"content":"     * Marks the specified task as incomplete.","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"lesterong"},"content":"     * @param params The position of the task to unmark.","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task being marked as incomplete.","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"lesterong"},"content":"    public String unmarkTask(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":161,"author":{"gitId":"lesterong"},"content":"        int pos \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":162,"author":{"gitId":"lesterong"},"content":"        if (pos \u003c 0 || tasks.size() \u003c\u003d pos) {","lastModifiedDate":"2022-08-22"},{"lineNumber":163,"author":{"gitId":"lesterong"},"content":"            return String.format(\"|  invalid task number%n|  max id is %d%n\", tasks.size());","lastModifiedDate":"2022-08-22"},{"lineNumber":164,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":165,"author":{"gitId":"lesterong"},"content":"        tasks.get(pos).markAsUndone();","lastModifiedDate":"2022-08-22"},{"lineNumber":166,"author":{"gitId":"lesterong"},"content":"        return String.format(\"|  unmarked task:%n|    %s%n\", tasks.get(pos));","lastModifiedDate":"2022-08-22"},{"lineNumber":167,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":168,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":169,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"lesterong"},"content":"     * Deletes the specified task.","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"lesterong"},"content":"     * @param params The position of the task to deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the task being deleted.","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"lesterong"},"content":"    public String deleteTask(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":175,"author":{"gitId":"lesterong"},"content":"        int pos \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":176,"author":{"gitId":"lesterong"},"content":"        if (pos \u003c 0 || tasks.size() \u003c\u003d pos) {","lastModifiedDate":"2022-08-22"},{"lineNumber":177,"author":{"gitId":"lesterong"},"content":"            return String.format(\"|  invalid task number%n|  max id is %d%n\", tasks.size());","lastModifiedDate":"2022-08-22"},{"lineNumber":178,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":179,"author":{"gitId":"lesterong"},"content":"        String removedTask \u003d tasks.get(pos).toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"lesterong"},"content":"        tasks.remove(pos);","lastModifiedDate":"2022-08-22"},{"lineNumber":181,"author":{"gitId":"lesterong"},"content":"        return String.format(\"|  deleted task:%n|    %s%n\", removedTask);","lastModifiedDate":"2022-08-22"},{"lineNumber":182,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":183,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":184,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":185,"author":{"gitId":"lesterong"},"content":"     * Returns an ArrayList containing the tasks for storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":186,"author":{"gitId":"lesterong"},"content":"     * @return ArrayList of tasks in the storage form.","lastModifiedDate":"2022-08-23"},{"lineNumber":187,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"lesterong"},"content":"    public ArrayList\u003cString\u003e getTasksToStore() {","lastModifiedDate":"2022-08-22"},{"lineNumber":189,"author":{"gitId":"lesterong"},"content":"        ArrayList\u003cString\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":190,"author":{"gitId":"lesterong"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":191,"author":{"gitId":"lesterong"},"content":"            storage.add(task.toStorageFormat());","lastModifiedDate":"2022-08-22"},{"lineNumber":192,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":193,"author":{"gitId":"lesterong"},"content":"        return storage;","lastModifiedDate":"2022-08-22"},{"lineNumber":194,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":195,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":196,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":196}},{"path":"src/main/java/john/data/exception/JohnException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.data.exception;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":" * Signals an exception in the program.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"public class JohnException extends Exception {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"    public JohnException(String message) {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"        super(String.format(\"%s\", message));","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"lesterong":10}},{"path":"src/main/java/john/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.parser;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import john.commands.ByeCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"import john.commands.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.commands.DeadlineCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"import john.commands.DeleteCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import john.commands.EventCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"import john.commands.FindCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"import john.commands.IncorrectCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"import john.commands.ListCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"import john.commands.MarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"import john.commands.TodoCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"import john.commands.UnmarkCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":" * Represents a parser to parse user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"    private static final String REGEX_DEADLINE \u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"            \"[^ ](.*) /by ([1-9]|[0-2][0-9]|(3)[0-1])/(((0)?[0-9])|((1)[0-2]))/[0-9]{4}\"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"                    + \"(( ([01][0-9]|2[0-3])([0-5][0-9]))|)\";","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    private static final String REGEX_EVENT \u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"            \"[^ ](.*) /at ([1-9]|[0-2][0-9]|(3)[0-1])/(((0)?[0-9])|((1)[0-2]))/[0-9]{4}\"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"                    + \"(( ([01][0-9]|2[0-3])([0-5][0-9]))|)\";","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    private static final String REGEX_LIST \u003d","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"            \"(([1-9]|[0-2][0-9]|(3)[0-1])/(((0)?[0-9])|((1)[0-2]))/[0-9]{4}|)\";","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"     * Parses the user input, and returns the corresponding command.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"     * @param input The user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"     * @return Command representing the user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"        String mainCommand \u003d input.split(\" \", 2)[0].toLowerCase();","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        String params \u003d parseParams(input);","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"        switch (mainCommand) {","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"            return prepareTodo(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"            return prepareDeadline(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"            return prepareEvent(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"            return prepareList(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"            return prepareMark(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"            return prepareUnmark(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"            return prepareDelete(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"            return prepareFind(params);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"        default:","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"    private String parseParams(String input) {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"            return \"\";","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"lesterong"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"lesterong"},"content":"    private Command prepareTodo(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"lesterong"},"content":"        if (!params.matches(\"[^ ](.*)\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid TODO format%n|    %s%n\", TodoCommand.FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"lesterong"},"content":"        return new TodoCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"lesterong"},"content":"    private Command prepareDeadline(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"lesterong"},"content":"        if (!Pattern.matches(REGEX_DEADLINE, params.toLowerCase())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"lesterong"},"content":"                    String.format(\"|  invalid DEADLINE format%n|    %s%n\", DeadlineCommand.FORMAT));","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"lesterong"},"content":"        return new DeadlineCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"lesterong"},"content":"    private Command prepareEvent(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"lesterong"},"content":"        if (!Pattern.matches(REGEX_EVENT, params.toLowerCase())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid EVENT format%n|    %s%n\", EventCommand.FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"lesterong"},"content":"        return new EventCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"lesterong"},"content":"    private Command prepareList(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"lesterong"},"content":"        if (!Pattern.matches(REGEX_LIST, params.toLowerCase())) {","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid LIST format%n|    %s%n\", ListCommand.FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"lesterong"},"content":"        return new ListCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"lesterong"},"content":"    private Command prepareMark(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"lesterong"},"content":"        if (!params.matches(\"([0-9]+)\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid MARK format%n|    %s%n\", MarkCommand.FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"lesterong"},"content":"        return new MarkCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":106,"author":{"gitId":"lesterong"},"content":"    private Command prepareUnmark(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":107,"author":{"gitId":"lesterong"},"content":"        if (!params.matches(\"([0-9]+)\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid UNMARK format%n|    %s%n\", UnmarkCommand.FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"lesterong"},"content":"        return new UnmarkCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"lesterong"},"content":"    private Command prepareDelete(String params) {","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"lesterong"},"content":"        if (!params.matches(\"([0-9]+)\")) {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid DELETE format%n|    %s%n\", DeleteCommand.FORMAT));","lastModifiedDate":"2022-08-22"},{"lineNumber":116,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"lesterong"},"content":"        return new DeleteCommand(params);","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"lesterong"},"content":"    private Command prepareFind(String params) {","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"lesterong"},"content":"        if (!params.matches(\"[^ ](.*)\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"lesterong"},"content":"            return new IncorrectCommand(String.format(\"|  invalid FIND format%n|    %s%n\", FindCommand.FORMAT));","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"lesterong"},"content":"        return new FindCommand(params);","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":126}},{"path":"src/main/java/john/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.io.File;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"import john.data.exception.JohnException;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":" * Represents the storage for the tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"public class Storage {","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"     * @param filePath The file path of the data storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"     * Loads the storage file from the file path if it exists, else creates a storage file.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"     * @return The storage file if it exists, else returns a empty storage file.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"     * @throws IOException The storage directory or file cannot be created.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    private File loadFile() throws IOException {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"        String directoryPath \u003d this.filePath.substring(0, this.filePath.lastIndexOf(\"/\"));","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"        File storageFile;","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"            boolean wasDirectoryCreated \u003d directory.mkdirs();","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"            if (!wasDirectoryCreated) {","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"                throw new IOException(\"cannot create storage directory\");","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"        storageFile \u003d new File(this.filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"        if (!storageFile.exists()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"            boolean isFileCreated \u003d storageFile.createNewFile();","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"            if (!isFileCreated) {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"                throw new IOException(\"cannot create storage file\");","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"        return storageFile;","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"     * Reads the storage file and converts it into a ArrayList of the stored tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"     * @return ArrayList of stored tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"     * @throws JohnException The storage file cannot be loaded.","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"    public ArrayList\u003cString\u003e load() throws JohnException {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"        ArrayList\u003cString\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"        try (Scanner sc \u003d new Scanner(loadFile())) {","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"                storedTasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"            throw new JohnException(\"cannot load storage file\");","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"        return storedTasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"lesterong"},"content":"     * Saves all the tasks into the storage file.","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"lesterong"},"content":"     * @param tasks ArrayList of tasks in their storage format.","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"lesterong"},"content":"     * @throws JohnException The file cannot be found or written to.","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"lesterong"},"content":"    public void saveAllTasks(ArrayList\u003cString\u003e tasks) throws JohnException {","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"lesterong"},"content":"        try (FileWriter fw \u003d new FileWriter(this.filePath, false)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":76,"author":{"gitId":"lesterong"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"lesterong"},"content":"            for (String task : tasks) {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"lesterong"},"content":"                sb.append(String.format(\"%s%n\", task));","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"lesterong"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"lesterong"},"content":"            fw.write(String.valueOf(sb));","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"lesterong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"lesterong"},"content":"            throw new JohnException(\"cannot find file\");","lastModifiedDate":"2022-08-29"},{"lineNumber":83,"author":{"gitId":"lesterong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"lesterong"},"content":"            throw new JohnException(\"unable to write to storage\");","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":87}},{"path":"src/main/java/john/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":" * Represents a Deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    private LocalTime time;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"     * @param timing The date and time of when the deadline is due.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    public Deadline(String description, String timing) {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        String[] timingParams \u003d timing.split(\" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        if (timingParams.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"            this.time \u003d LocalTime.parse(timingParams[1], Task.FORMATTER_INPUT_TIME);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        this.date \u003d LocalDate.parse(timingParams[0], Task.FORMATTER_INPUT_DATE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    protected String getType() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"        return \"D\";","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"     * Returns true if the deadline due date is equal to a specified date.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"     * @param date The date to equate to.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"     * @return True if the deadline is equal to the specified date, false otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"    public boolean isEqualDate(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"     * Returns a string representing the storage format of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"     * @return A string representing the storage format of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        return String.format(","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"                \"D | %d | %s | %s%s\", (this.isCompleted ? 1 : 0), this.description,","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"                this.date.format(Task.FORMATTER_INPUT_DATE), (this.time \u003d\u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"                        ? \"\"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"                        : \" \" + this.time.format(Task.FORMATTER_INPUT_TIME)));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"     * A string representation of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"        return String.format(\"[%s][%s] %s (by: %s%s)\",","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"                this.getType(), (this.isCompleted ? \"X\" : \" \"), this.description,","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"                this.date.format(Task.FORMATTER_OUTPUT_DATE), (this.time \u003d\u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"                        ? \"\"","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"                        : \" \" + this.time.format(Task.FORMATTER_OUTPUT_TIME)));","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"lesterong":66}},{"path":"src/main/java/john/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":" * Represents a Event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    private LocalTime time;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"     * Constructor for a Event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"     * @param timing The date and time of when the event is happening.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    public Event(String description, String timing) {","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        String[] timingParams \u003d timing.split(\" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        if (timingParams.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"            this.time \u003d LocalTime.parse(timingParams[1], Task.FORMATTER_INPUT_TIME);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        this.date \u003d LocalDate.parse(timingParams[0], Task.FORMATTER_INPUT_DATE);","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    protected String getType() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"        return \"E\";","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"     * Returns true if the event date is equal to a specified date.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"     * @param date The date to equate to.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"     * @return True if the event is equal to the specified date, false otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"    public boolean isEqualDate(LocalDate date) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"     * Returns a string representing the storage format of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"     * @return A string representing the storage format of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        return String.format(","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"                \"E | %d | %s | %s%s\", (this.isCompleted ? 1 : 0), this.description,","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"                this.date.format(Task.FORMATTER_INPUT_DATE), (this.time \u003d\u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"                        ? \"\"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"                        : \" \" + this.time.format(Task.FORMATTER_INPUT_TIME)));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"     * A string representation of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"        return String.format(\"[%s][%s] %s (at: %s%s)\",","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"                this.getType(), (this.isCompleted ? \"X\" : \" \"), this.description,","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"                this.date.format(Task.FORMATTER_OUTPUT_DATE), (this.time \u003d\u003d null","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"                        ? \"\"","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"                        : \" \" + this.time.format(Task.FORMATTER_OUTPUT_TIME)));","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"lesterong":66}},{"path":"src/main/java/john/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":" * Represents a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    protected static final DateTimeFormatter FORMATTER_INPUT_DATE \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    protected static final DateTimeFormatter FORMATTER_INPUT_TIME \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    protected static final DateTimeFormatter FORMATTER_OUTPUT_DATE \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    protected static final DateTimeFormatter FORMATTER_OUTPUT_TIME \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    protected final String description;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    protected Task(String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"    protected abstract String getType();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"     * Returns true if the task is equal to the specified date.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"     * @param date The date to equate to.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"     * @return True if the task is equal to the specified date, false otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"    public abstract boolean isEqualDate(LocalDate date);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"     * Returns true if the task description contains the keyword.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"     * @param keyword The keyword to check against.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"     * @return True if the task description contains the keyword, false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"    public boolean isMatchingKeyword(String keyword) {","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"    };","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"     * Returns a string representing the storage format of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"     * @return A string representing the storage format of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"    public abstract String toStorageFormat();","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"lesterong":62}},{"path":"src/main/java/john/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":" * Represents a To do task.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"     * Constructor for a Event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"     * @param description The description of the to do.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        super(description);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    protected String getType() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"        return \"T\";","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * Returns false.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     * @param date The date to equate to.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"     * @return False.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    public boolean isEqualDate(LocalDate date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"     * Returns a string representing the storage format of the to do.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"     * @return A string representing the storage format of the to do.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"        return String.format(\"T | %d | %s\", (this.isCompleted ? 1 : 0), this.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"     * A string representation of the to do.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"     * @return A string representation of the to do.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"        return String.format(\"[%s][%s] %s\", this.getType(), (this.isCompleted ? \"X\" : \" \"), this.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":48}},{"path":"src/main/java/john/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":" * The text UI of the program.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"public class Ui {","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    private final Scanner in;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    public Ui() {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"        this(System.in, System.out);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"     * @param in The input for user commands.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"     * @param out The output of user commands.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"    private Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"     * Outputs a message to users.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"     * @param message The message to output.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"        for (String msg : message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"            out.print(msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"     * Outputs a message to user, styled with an indent.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"     * @param message The message to output.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"    public void showToUserWithIndent(String... message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"        for (String msg : message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"            out.printf(\"|  %s%n\", msg);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"     * Reads and returns the user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"     * @return User input.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"        showToUser(\"\\njduke\u003e \");","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"     * Displays text to greet users upon start of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"lesterong"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"lesterong"},"content":"        showToUserWithIndent(\"Welcome to JDuke -- Version 1.0\", \"What can I do for you?\");","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"lesterong"},"content":"     * Displays text to greet users upon exit of program.","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"lesterong"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"lesterong"},"content":"        showToUserWithIndent(\"Goodbye\");","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"lesterong"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"lesterong"},"content":"     * Displays an error message to users if error occurs.","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"lesterong"},"content":"     * @param error The error message to display.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"lesterong"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"lesterong"},"content":"    public void showErrorMessage(String error) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"lesterong"},"content":"        showToUserWithIndent(\"Error:\", error);","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"lesterong":81}},{"path":"src/test/java/john/commands/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"public class ByeCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    public void isByeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"        ByeCommand cmd \u003d new ByeCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        assertTrue(ByeCommand.isBye(cmd));","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        ByeCommand cmd \u003d new ByeCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":20}},{"path":"src/test/java/john/commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        DeadlineCommand cmd \u003d new DeadlineCommand(\"hello /by 11/11/2011\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        cmd.setData(new TaskList());","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  added task:\\n|    [D][ ] hello (by: Nov 11 2011)\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":17}},{"path":"src/test/java/john/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        tl.addTodo(\"hello world\");","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        DeleteCommand cmd \u003d new DeleteCommand(\"1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  deleted task:\\n|    [T][ ] hello world\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":18}},{"path":"src/test/java/john/commands/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class EventCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        EventCommand cmd \u003d new EventCommand(\"hello /at 11/11/2011\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        cmd.setData(new TaskList());","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  added task:\\n|    [E][ ] hello (at: Nov 11 2011)\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":17}},{"path":"src/test/java/john/commands/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTestNoResults() {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        FindCommand cmd \u003d new FindCommand(\"hello\");","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  no tasks found\\n\", cmd.execute());","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        FindCommand cmd \u003d new FindCommand(\"hello\");","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        tl.addTodo(\"hello world\");","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        tl.addTodo(\"goodbye\");","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"        tl.addTodo(\"~~ hello ~~\");","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"1 \u003d\u003d\u003e [T][ ] hello world\\n3 \u003d\u003d\u003e [T][ ] ~~ hello ~~\\n\", cmd.execute());","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"lesterong":28}},{"path":"src/test/java/john/commands/IncorrectCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"public class IncorrectCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"    public void executeTestWithoutParams() {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"        IncorrectCommand cmd \u003d new IncorrectCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  cannot understand command\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    public void executeTestWithParams() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        IncorrectCommand cmd \u003d new IncorrectCommand(\"hello\");","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"hello\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":19}},{"path":"src/test/java/john/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTestWithoutParams() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        ListCommand cmd \u003d new ListCommand(\"\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  no tasks found\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    public void executeTestWithParams() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"        ListCommand cmd \u003d new ListCommand(\"10/10/2010\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        tl.addEvent(\"hello\", \"10/10/2010\");","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"1 \u003d\u003d\u003e [E][ ] hello (at: Oct 10 2010)\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":26}},{"path":"src/test/java/john/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        MarkCommand cmd \u003d new MarkCommand(\"1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        tl.addTodo(\"hello\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  marked task:\\n|    [T][X] hello\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":18}},{"path":"src/test/java/john/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class TodoCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        TodoCommand cmd \u003d new TodoCommand(\"hello world\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        cmd.setData(new TaskList());","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  added task:\\n|    [T][ ] hello world\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":17}},{"path":"src/test/java/john/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import john.data.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"        UnmarkCommand cmd \u003d new UnmarkCommand(\"1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        tl.addTodo(\"hello\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        cmd.setData(tl);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  unmarked task:\\n|    [T][ ] hello\\n\", cmd.execute());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":18}},{"path":"src/test/java/john/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    public void deadlineDateTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline\", \"23/8/2022\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[D][ ] Deadline (by: Aug 23 2022)\", deadline.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"D | 0 | Deadline | 23/8/2022\", deadline.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    public void deadlineDateTimeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline\", \"16/11/2000 2359\");","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[D][ ] Deadline (by: Nov 16 2000 11:59 PM)\", deadline.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"D | 0 | Deadline | 16/11/2000 2359\", deadline.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    public void markDeadlineTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(\"Mark Deadline\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"        deadline.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[D][X] Mark Deadline (by: Oct 20 2012 11:59 AM)\", deadline.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"D | 1 | Mark Deadline | 20/10/2012 1159\", deadline.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    public void unmarkDeadlineTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(\"Unmark Deadline\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        deadline.markAsUndone();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[D][ ] Unmark Deadline (by: Oct 20 2012 11:59 AM)\", deadline.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"D | 0 | Unmark Deadline | 20/10/2012 1159\", deadline.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"    public void isEqualDateDeadlineTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(\"Equal Deadline\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"        assertTrue(deadline.isEqualDate(LocalDate.parse(\"2012-10-20\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        assertFalse(deadline.isEqualDate(LocalDate.parse(\"2012-10-21\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"    public void isMatchingKeywordsDeadlineTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"        Deadline deadline \u003d new Deadline(\"Matching Keywords Deadline\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"        assertTrue(deadline.isMatchingKeyword(\"Dead\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"        assertFalse(deadline.isMatchingKeyword(\"Alive\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":56}},{"path":"src/test/java/john/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"public class EventTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    public void eventDateTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(\"Event\", \"23/8/2022\");","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[E][ ] Event (at: Aug 23 2022)\", event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"E | 0 | Event | 23/8/2022\", event.toStorageFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    public void eventDateTimeTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(\"Event\", \"16/11/2000 2359\");","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[E][ ] Event (at: Nov 16 2000 11:59 PM)\", event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"E | 0 | Event | 16/11/2000 2359\", event.toStorageFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    public void markEventTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(\"Mark event\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"        event.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[E][X] Mark event (at: Oct 20 2012 11:59 AM)\", event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"E | 1 | Mark event | 20/10/2012 1159\", event.toStorageFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    public void unmarkEventTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(\"Unmark event\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        event.markAsUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[E][ ] Unmark event (at: Oct 20 2012 11:59 AM)\", event.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"E | 0 | Unmark event | 20/10/2012 1159\", event.toStorageFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"    public void isEqualDateEventTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(\"Equal event\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"        assertTrue(event.isEqualDate(LocalDate.parse(\"2012-10-20\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        assertFalse(event.isEqualDate(LocalDate.parse(\"2012-10-21\")));","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"    public void isMatchingKeywordsEventTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"        Event event \u003d new Event(\"Matching Keywords Event\", \"20/10/2012 1159\");","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"        assertTrue(event.isMatchingKeyword(\"Even\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"        assertFalse(event.isMatchingKeyword(\"Odd\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"lesterong":56}},{"path":"src/test/java/john/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.task;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    public void todoTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"        Todo todo \u003d new Todo(\"Todo\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[T][ ] Todo\", todo.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"T | 0 | Todo\", todo.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    public void markTodoTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"        Todo todo \u003d new Todo(\"Mark Todo\");","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"        todo.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[T][X] Mark Todo\", todo.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"T | 1 | Mark Todo\", todo.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    public void unmarkTodoTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"        Todo todo \u003d new Todo(\"Unmark Todo\");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"        todo.markAsUndone();","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"[T][ ] Unmark Todo\", todo.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"T | 0 | Unmark Todo\", todo.toStorageFormat());","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"    public void isEqualDateTodoTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"        Todo todo \u003d new Todo(\"Equal Date\");","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"        assertFalse(todo.isEqualDate(LocalDate.parse(\"2022-12-30\")));","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"    public void isMatchingKeywordsDeadlineTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"        Todo todo \u003d new Todo(\"Matching Todo Keywords\");","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"        assertTrue(todo.isMatchingKeyword(\"do\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"        assertFalse(todo.isMatchingKeyword(\"dont\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":47}},{"path":"src/test/java/john/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"package john.ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"public class UiTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"    // Adapted from https://www.baeldung.com/java-testing-system-out-println","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"    public void showGreetTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  Welcome to JDuke -- Version 1.0\\n|  What can I do for you?\",","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"    public void showGoodbyeTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  Goodbye\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"lesterong"},"content":"    public void showErrorTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"lesterong"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"        ui.showErrorMessage(\"hello error\");","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  Error:\\n|  hello error\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"lesterong"},"content":"    public void showToUserTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"lesterong"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"lesterong"},"content":"        ui.showToUser(\"hello\", \"world\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"helloworld\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"lesterong"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"    public void showToUserWithIndentTest() {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"        ui.showToUserWithIndent(\"hello\", \"world\");","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"        assertEquals(\"|  hello\\n|  world\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    @AfterEach","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"    public void tearDown() {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"lesterong"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"lesterong"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"lesterong":62}},{"path":"text-ui-test/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"T | 1 | read book","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"D | 0 | return book | 6/6/2000","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"E | 0 | project meeting | 6/8/2022 1800","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"E | 0 | meeting | 12/8/2022 1200","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"T | 0 | sleep","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"lesterong":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lesterong"},"content":"hello","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"lesterong"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"lesterong"},"content":"todo cry","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"lesterong"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"lesterong"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"lesterong"},"content":"mark a","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"lesterong"},"content":"delete 0","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"lesterong"},"content":"deadline CS2103T Week 2 /in 18/8/2022","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"lesterong"},"content":"unmark","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"lesterong"},"content":"deadline CS2103T Week 2 /by 18/8/2022","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"lesterong"},"content":"deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"lesterong"},"content":"list 18/8/2022","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"lesterong"},"content":"list 19/8/2022","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"lesterong"},"content":"list 18","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"event this","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"event this /at","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"deadline /by 5","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"todo cry harder","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"lesterong"},"content":"event end of sem /at NEVER","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"event end of sem /at 10/12/2022","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"lesterong"},"content":"deadline homework /by 18/12/2000 1200","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"lesterong"},"content":"find","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"lesterong"},"content":"find homework","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"lesterong"},"content":"find e","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"lesterong"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"mark 1 2","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"delete 2","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"delete 999","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"lesterong"},"content":"mark -50","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"lesterong"},"content":"mark 1","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"lesterong":36}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lesterong"},"content":"if [ -e \"./ACTUAL_DATA.TXT\" ]","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"lesterong"},"content":"then","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"lesterong"},"content":"    rm ACTUAL_DATA.TXT","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"lesterong"},"content":"fi","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"lesterong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"lesterong"},"content":"# Creates a data directory and loads data.txt","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"lesterong"},"content":"mkdir data","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"lesterong"},"content":"cp data.txt data/tasks.txt","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"lesterong"},"content":"java -classpath ../bin john.John \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"lesterong"},"content":"# copies the final saved data","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"lesterong"},"content":"cp data/tasks.txt ACTUAL_DATA.txt","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"lesterong"},"content":"cp EXPECTED_DATA.TXT EXPECTED_DATA-UNIX.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"lesterong"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"lesterong"},"content":"# delete data directory and files","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"lesterong"},"content":"rm -rf data/","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"lesterong"},"content":"fi","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"lesterong"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"lesterong"},"content":"diff ACTUAL_DATA.TXT EXPECTED_DATA-UNIX.TXT","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"lesterong"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"lesterong"},"content":"then","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"lesterong"},"content":"    echo \"Data test result: PASSED\"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"lesterong"},"content":"    exit 0","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"lesterong"},"content":"else","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"lesterong"},"content":"    echo \"Data test result: FAILED\"","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lesterong":26,"-":36}}]

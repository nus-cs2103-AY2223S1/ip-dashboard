[{"path":"src/main/java/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"public class DateParser {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"    // DateTimeFormatter for the formats of date/time","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"    private static final DateTimeFormatter format \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd MM yyyy HH:mm\"))","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"dd MM yyyy\"))","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"            .toFormatter();","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"     * Converts a String of date to LocalDate object","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"     * @param date The String representation of the date.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"     * @return The LocalDate object of the date.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"     * @throws DateTimeException if the text cannot be parsed","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"    public static LocalDateTime parseToDate(String date) throws DateTimeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"        // https://stackoverflow.com/questions/48280447/java-8-datetimeformatter-with-optional-part","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"        TemporalAccessor temporalAccessor \u003d DateParser.format.parseBest(date, LocalDateTime::from, LocalDate::from);","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"        if (temporalAccessor instanceof LocalDateTime) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"            dateTime \u003d (LocalDateTime)temporalAccessor;","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"            dateTime \u003d ((LocalDate)temporalAccessor).atStartOfDay();","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        System.out.println(dateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        return dateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"     * Converts a LocalDate object to the String representation.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"     * @param date The LocalDate object of the date.","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"     * @return The String representation of the date.","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"    public static String dateToString(LocalDateTime date) {","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"        DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        return date.format(stringFormat);","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"HowSuen":49}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"    public Deadline(String description, String date) throws DateTimeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"        this.date \u003d DateParser.parseToDate(date);","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"        return \"[\" + TaskType.D + \"]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"                + DateParser.dateToString(this.date) + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    public String toCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"        return TaskType.D + \" | \" + super.toCommand() + \" /by \" + this.date;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"HowSuen":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"        System.out.println(\"Hello, I\u0027m Duke!\\n\" + logo);","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"        TasksList tasksList;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"            tasksList \u003d storage.createTaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"Loading from save...\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"            tasksList \u003d new TasksList();","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"        System.out.println(\"Duke: What can I do for you?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"            String[] words \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"            try {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"                    System.out.println(\"Duke: Bye! Hope to see you again soon!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"                    sc.close();","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"                    storage.writeToSave(tasksList);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"                if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"                    tasksList.listTasks();","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"                    continue;","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"                if (words[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"                    tasksList.markTask(words, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"                    continue;","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"                if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"                    tasksList.unmarkTask(words, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"                    continue;","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"                if (words[0].equals(\"todo\") || words[0].equals(\"deadline\") || words[0].equals(\"event\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"                    tasksList.addTask(words, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"                    continue;","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"                if (words[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"                    tasksList.deleteTask(words, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"                    continue;","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"                throw new DukeException(\"Unknown command. Please try again.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"                System.out.println(e);","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"            } finally {","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"                System.out.println();","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"HowSuen":53}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"        return \"☹ OOPS!!! Duke got an error!\\n\" + super.getMessage();","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"HowSuen":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"    public Event(String description, String date) throws DateTimeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"        this.date \u003d DateParser.parseToDate(date);","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"        return \"[\" + TaskType.E + \"]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"                + DateParser.dateToString(this.date) + \")\";","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    public String toCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"        return TaskType.E + \" | \" + super.toCommand() + \" /at \" + this.date;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"HowSuen":22}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"    private final Path path;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"    public Storage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"        this.path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"            initialiseSaveFile(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"     * Creates save file if it does not already exist.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"     * @param path The path to the save file","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs while creating save directory or save file","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"    public void initialiseSaveFile(Path path) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"        Path dataPath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"        if (!Files.exists(dataPath)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"            // Create \u0027data\u0027 directory if it does not exist","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"                Files.createDirectory(dataPath);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"                throw new DukeException(\"I/O Error occurred when creating save directory!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        if (!Files.exists(this.path)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"            // Create \u0027save.txt\u0027 file in \u0027data\u0027 directory if it does not exist","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"                Files.createFile(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"                throw new DukeException(\"I/O Error occurred when creating save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"     * Creates TaskList with history of commands from save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"     * @return TaskList from history of commands","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs in reading file or when adding previous commands","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"    public TasksList createTaskList() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"            List\u003cString\u003e history \u003d Files.readAllLines(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"            TasksList taskList \u003d new TasksList();","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"            for (String s : history) {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"                taskList.loadFromSave(s);","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"            return taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"I/O Error occurred when reading from save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"     * Overwrites the user\u0027s save file with the current tasks in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"     * @param tasksList The TasksList to save.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs while writing to save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"    public void writeToSave(TasksList tasksList) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"            if (tasksList.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"                Files.write(this.path, new byte[0]);","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"                return;","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"            StringBuilder sb \u003d tasksList.toStringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"            byte[] byteArray \u003d sb.toString().getBytes();","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"            Files.write(this.path, byteArray);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"I/O Error occurred while overwriting save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"     * Add task to save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"     * @param task The task to be added to the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs while reading from or writing to save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"    public void addTaskToSave(Task task) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"            List\u003cString\u003e history \u003d Files.readAllLines(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"            history.add(task.toCommand());","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"            for (String s : history) {","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"HowSuen"},"content":"                sb.append(s + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"HowSuen"},"content":"            Files.write(this.path, sb.toString().getBytes());","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"I/O Error occurred when reading from save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"     * Remove task from save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"HowSuen"},"content":"     * @param id The id of the task to be removed.","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs while reading from or writing to save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"HowSuen"},"content":"    public void deleteTaskFromSave(int id) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"HowSuen"},"content":"            List\u003cString\u003e history \u003d Files.readAllLines(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"            history.remove(id);","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"HowSuen"},"content":"            for (String s : history) {","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"HowSuen"},"content":"                sb.append(s + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"HowSuen"},"content":"            Files.write(this.path, sb.toString().getBytes());","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"HowSuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"I/O Error occurred when reading from save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"HowSuen"},"content":"     * Marks the Task in the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"HowSuen"},"content":"     * @param id The id of the task to be marked in the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs while reading from or writing to save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"HowSuen"},"content":"    public void markTaskInSave(int id) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"HowSuen"},"content":"            List\u003cString\u003e history \u003d Files.readAllLines(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"HowSuen"},"content":"            String[] command \u003d history.get(id).split(\" \\\\| \", 3);","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"HowSuen"},"content":"            String newLine \u003d command[0] + \" | 1 | \" + command[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"HowSuen"},"content":"            history.set(id, newLine);","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"HowSuen"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"HowSuen"},"content":"            for (String s : history) {","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"HowSuen"},"content":"                sb.append(s + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"HowSuen"},"content":"            Files.write(this.path, sb.toString().getBytes());","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"HowSuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"I/O Error occurred when reading from save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"HowSuen"},"content":"     * Unmarks the Task in the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"HowSuen"},"content":"     * @param id The id of the task to be unmarked in the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if error occurs while reading from or writing to save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"HowSuen"},"content":"    public void unmarkTaskInSave(int id) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"HowSuen"},"content":"            List\u003cString\u003e history \u003d Files.readAllLines(this.path);","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"HowSuen"},"content":"            String[] command \u003d history.get(id).split(\" \\\\| \", 3);","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"HowSuen"},"content":"            String newLine \u003d command[0] + \" | 0 | \" + command[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"HowSuen"},"content":"            history.set(id, newLine);","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"HowSuen"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"HowSuen"},"content":"            for (String s : history) {","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"HowSuen"},"content":"                sb.append(s + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"HowSuen"},"content":"            Files.write(this.path, sb.toString().getBytes());","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"HowSuen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"I/O Error occurred when reading from save file!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"HowSuen":167}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"    private String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"     * Sets completion status of this task to true.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    public void completeTask() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"     * Prints the completion status and the description of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"     * @return The completion status and description of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"        String status \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        String line \u003d String.format(\"[%s] %s\", status, this.description);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"        return line;","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"     * Returns the command to be saved in the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"     * @return The String representing the command of this task.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"    public String toCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        String completionStatus \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        return completionStatus + \" | \" + this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"     * Marks the task as completed and prints the task\u0027s description.","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"     * If the task was already marked as completed, tell the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"    public void mark() {","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"Duke: This task has already been marked as done.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"            return;","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        completeTask();","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"        System.out.println(\"Duke: Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"     * Marks the task as completed and prints the task\u0027s description.","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"     * If the task was already marked as completed, tell the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        if (!this.isDone) {","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"Duke: This task has already been marked as not done.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"            return;","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"        System.out.println(\"Duke: OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"        System.out.println(this);","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"HowSuen":66}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"    T, // ToDo","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"    D, // Deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"    E  // Event","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"HowSuen":5}},{"path":"src/main/java/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"import java.util.List;","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"public class TasksList {","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"    private final List\u003cTask\u003e tasksList;","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"    public TasksList() {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"        return this.tasksList.size() \u003d\u003d 0;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"     * Add Task (ToDo, Deadline, Event) to the list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException if command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    public void addTask(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"        String taskType \u003d command[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"            addTodo(command, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"            addDeadline(command, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"        case \"event\":","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"            addEvent(command, storage);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"     * Add To-do task to the list of tasks.","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"    public void addTodo(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify what task you wish to do:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"                    \"todo \u003ctask\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        String description \u003d command[1];","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"        System.out.println(\"Duke: Got it! Duke has added this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"        System.out.println(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"        this.tasksList.add(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"        int len \u003d this.tasksList.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"        String line \u003d String.format(\"Duke: Now you have %d task%s in the list.\",","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"                len, len !\u003d 1 ? \"s\" : \"\");","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        storage.addTaskToSave(newTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"     * Add Deadline task to the list of tasks.","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"    public void addDeadline(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify what task you wish to do:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"                    \"deadline \u003ctask\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"        String[] deadline \u003d command[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"        if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the date/time of this deadline:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"                    \"deadline \u003ctask\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"            Task newTask \u003d new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"Duke: Got it! Duke has added this task:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"            System.out.println(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.add(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"            int len \u003d this.tasksList.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"            String line \u003d String.format(\"Duke: Now you have %d task%s in the list.\",","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"                    len, len !\u003d 1 ? \"s\" : \"\");","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"            System.out.println(line);","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"            storage.addTaskToSave(newTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Uh oh! Please enter your date/time in this format:\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"                    \"dd mm yyyy hh:mm(optional)\");","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"     * Add Event task to the list of tasks.","lastModifiedDate":"2022-08-15"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-15"},{"lineNumber":96,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":98,"author":{"gitId":"HowSuen"},"content":"    public void addEvent(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify what task you wish to do:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":101,"author":{"gitId":"HowSuen"},"content":"                    \"event \u003ctask\u003e /at \u003cdate/time\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"HowSuen"},"content":"        String[] event \u003d command[1].split(\" /at \", 2);","lastModifiedDate":"2022-08-15"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"        if (event.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the date/time of this event:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"HowSuen"},"content":"                    \"event \u003ctask\u003e /at \u003cdate/time\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"HowSuen"},"content":"            Task newTask \u003d new Event(event[0], event[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":110,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"Duke: Got it! Duke has added this task:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"            System.out.println(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":112,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.add(newTask);","lastModifiedDate":"2022-08-14"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"            int len \u003d this.tasksList.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"            String line \u003d String.format(\"Duke: Now you have %d task%s in the list.\",","lastModifiedDate":"2022-08-15"},{"lineNumber":115,"author":{"gitId":"HowSuen"},"content":"                    len, len !\u003d 1 ? \"s\" : \"\");","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"HowSuen"},"content":"            System.out.println(line);","lastModifiedDate":"2022-08-14"},{"lineNumber":117,"author":{"gitId":"HowSuen"},"content":"            storage.addTaskToSave(newTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"HowSuen"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Uh oh! Please enter your date/time in this format:\\n\" +","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"HowSuen"},"content":"                    \"dd mm yyyy hh:mm(optional)\");","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":123,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":124,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":125,"author":{"gitId":"HowSuen"},"content":"     * Prints out the list of the history of tasks","lastModifiedDate":"2022-08-14"},{"lineNumber":126,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":127,"author":{"gitId":"HowSuen"},"content":"    public void listTasks() {","lastModifiedDate":"2022-08-14"},{"lineNumber":128,"author":{"gitId":"HowSuen"},"content":"        System.out.println(\"Duke: Here are the tasks in your list:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":129,"author":{"gitId":"HowSuen"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"*No tasks! ^_^*\");","lastModifiedDate":"2022-08-14"},{"lineNumber":131,"author":{"gitId":"HowSuen"},"content":"            return;","lastModifiedDate":"2022-08-14"},{"lineNumber":132,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":133,"author":{"gitId":"HowSuen"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2022-08-14"},{"lineNumber":134,"author":{"gitId":"HowSuen"},"content":"            String line \u003d String.format(\"%d. %s\", i + 1, this.tasksList.get(i));","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"HowSuen"},"content":"            System.out.println(line);","lastModifiedDate":"2022-08-14"},{"lineNumber":136,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":137,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":138,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":139,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":140,"author":{"gitId":"HowSuen"},"content":"     * Mark the task of the given id as done.","lastModifiedDate":"2022-08-14"},{"lineNumber":141,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":142,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":145,"author":{"gitId":"HowSuen"},"content":"    public void markTask(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"HowSuen"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":147,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the task to mark by its id:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":148,"author":{"gitId":"HowSuen"},"content":"                    \"mark \u003cid\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":149,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":150,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":151,"author":{"gitId":"HowSuen"},"content":"            int id \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":152,"author":{"gitId":"HowSuen"},"content":"            int len \u003d this.tasksList.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":153,"author":{"gitId":"HowSuen"},"content":"            if (id \u003c\u003d 0 || id \u003e len) {","lastModifiedDate":"2022-08-14"},{"lineNumber":154,"author":{"gitId":"HowSuen"},"content":"                throw new DukeException(\"Duke: Invalid task id!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":155,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":156,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.get(id - 1).mark();","lastModifiedDate":"2022-08-15"},{"lineNumber":157,"author":{"gitId":"HowSuen"},"content":"            storage.markTaskInSave(id - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"HowSuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":159,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the task to mark by its integer id:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":160,"author":{"gitId":"HowSuen"},"content":"                    \"mark \u003cid\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":161,"author":{"gitId":"HowSuen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"HowSuen"},"content":"            throw e;","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":164,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":165,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":166,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":167,"author":{"gitId":"HowSuen"},"content":"     * Mark the task of the given id as not done.","lastModifiedDate":"2022-08-14"},{"lineNumber":168,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":169,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-15"},{"lineNumber":170,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":171,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":172,"author":{"gitId":"HowSuen"},"content":"    public void unmarkTask(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"HowSuen"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":174,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the task to unmark by its id:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":175,"author":{"gitId":"HowSuen"},"content":"                    \"unmark \u003cid\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":176,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":177,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":178,"author":{"gitId":"HowSuen"},"content":"            int id \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":179,"author":{"gitId":"HowSuen"},"content":"            int len \u003d this.tasksList.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":180,"author":{"gitId":"HowSuen"},"content":"            if (id \u003c\u003d 0 || id \u003e len) {","lastModifiedDate":"2022-08-14"},{"lineNumber":181,"author":{"gitId":"HowSuen"},"content":"                throw new DukeException(\"Duke: Invalid task id!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":182,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":183,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.get(id - 1).unmark();","lastModifiedDate":"2022-08-15"},{"lineNumber":184,"author":{"gitId":"HowSuen"},"content":"            storage.unmarkTaskInSave(id - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"HowSuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":186,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the task to unmark by its integer id:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":187,"author":{"gitId":"HowSuen"},"content":"                    \"mark \u003cid\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":188,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":189,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":190,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":191,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-15"},{"lineNumber":192,"author":{"gitId":"HowSuen"},"content":"     * Delete the task of the given id from the list.","lastModifiedDate":"2022-08-15"},{"lineNumber":193,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-15"},{"lineNumber":194,"author":{"gitId":"HowSuen"},"content":"     * @param command The command represented by an array of Strings.","lastModifiedDate":"2022-08-15"},{"lineNumber":195,"author":{"gitId":"HowSuen"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-15"},{"lineNumber":196,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-15"},{"lineNumber":197,"author":{"gitId":"HowSuen"},"content":"    public void deleteTask(String[] command, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"HowSuen"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-15"},{"lineNumber":199,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the task to be deleted by its id:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":200,"author":{"gitId":"HowSuen"},"content":"                    \"delete \u003cid\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":201,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":202,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":203,"author":{"gitId":"HowSuen"},"content":"            int id \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":204,"author":{"gitId":"HowSuen"},"content":"            int len \u003d this.tasksList.size();","lastModifiedDate":"2022-08-15"},{"lineNumber":205,"author":{"gitId":"HowSuen"},"content":"            if (id \u003c\u003d 0 || id \u003e len) {","lastModifiedDate":"2022-08-15"},{"lineNumber":206,"author":{"gitId":"HowSuen"},"content":"                throw new DukeException(\"Duke: Invalid task id!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":207,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":208,"author":{"gitId":"HowSuen"},"content":"            System.out.println(\"Duke: Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":209,"author":{"gitId":"HowSuen"},"content":"            System.out.println(this.tasksList.get(id - 1));","lastModifiedDate":"2022-08-15"},{"lineNumber":210,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.remove(id - 1);","lastModifiedDate":"2022-08-15"},{"lineNumber":211,"author":{"gitId":"HowSuen"},"content":"            String line \u003d String.format(\"Duke: Now you have %d task%s in the list.\",","lastModifiedDate":"2022-08-15"},{"lineNumber":212,"author":{"gitId":"HowSuen"},"content":"                    len - 1, len - 1 !\u003d 1 ? \"s\" : \"\");","lastModifiedDate":"2022-08-15"},{"lineNumber":213,"author":{"gitId":"HowSuen"},"content":"            System.out.println(line);","lastModifiedDate":"2022-08-15"},{"lineNumber":214,"author":{"gitId":"HowSuen"},"content":"            storage.deleteTaskFromSave(id - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":215,"author":{"gitId":"HowSuen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":216,"author":{"gitId":"HowSuen"},"content":"            throw new DukeException(\"Duke: Please specify the task to delete by its integer id:\\n\" +","lastModifiedDate":"2022-08-15"},{"lineNumber":217,"author":{"gitId":"HowSuen"},"content":"                    \"mark \u003cid\u003e\");","lastModifiedDate":"2022-08-15"},{"lineNumber":218,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":219,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":220,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"HowSuen"},"content":"     * Converts the tasks in the current tasks list to StringBuilder","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"HowSuen"},"content":"     * @return The StringBuilder of all the tasks in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":225,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"HowSuen"},"content":"    public StringBuilder toStringBuilder() {","lastModifiedDate":"2022-08-21"},{"lineNumber":227,"author":{"gitId":"HowSuen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":228,"author":{"gitId":"HowSuen"},"content":"        for (Task t : this.tasksList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":229,"author":{"gitId":"HowSuen"},"content":"            sb.append(t.toCommand() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":230,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":231,"author":{"gitId":"HowSuen"},"content":"        return sb;","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":233,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":234,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":235,"author":{"gitId":"HowSuen"},"content":"     * Load the given task into the task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":236,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"HowSuen"},"content":"     * @param line The String representing the task from the save file.","lastModifiedDate":"2022-08-21"},{"lineNumber":238,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"HowSuen"},"content":"    public void loadFromSave(String line) {","lastModifiedDate":"2022-08-21"},{"lineNumber":240,"author":{"gitId":"HowSuen"},"content":"        String[] command \u003d line.split(\" \\\\| \", 3);","lastModifiedDate":"2022-08-21"},{"lineNumber":241,"author":{"gitId":"HowSuen"},"content":"        String taskType \u003d command[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":242,"author":{"gitId":"HowSuen"},"content":"        String completionStatus \u003d command[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":243,"author":{"gitId":"HowSuen"},"content":"        String details \u003d command[2];","lastModifiedDate":"2022-08-21"},{"lineNumber":244,"author":{"gitId":"HowSuen"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-21"},{"lineNumber":245,"author":{"gitId":"HowSuen"},"content":"        case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"HowSuen"},"content":"            Task todo \u003d new ToDo(details);","lastModifiedDate":"2022-08-21"},{"lineNumber":247,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.add(todo);","lastModifiedDate":"2022-08-21"},{"lineNumber":248,"author":{"gitId":"HowSuen"},"content":"            if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":249,"author":{"gitId":"HowSuen"},"content":"                todo.completeTask();","lastModifiedDate":"2022-08-21"},{"lineNumber":250,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":251,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":252,"author":{"gitId":"HowSuen"},"content":"        case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":253,"author":{"gitId":"HowSuen"},"content":"            String[] deadlineDate \u003d details.split(\" /by \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":254,"author":{"gitId":"HowSuen"},"content":"            Task deadline \u003d new Deadline(deadlineDate[0], deadlineDate[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":255,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.add(deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":256,"author":{"gitId":"HowSuen"},"content":"            if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":257,"author":{"gitId":"HowSuen"},"content":"                deadline.completeTask();","lastModifiedDate":"2022-08-21"},{"lineNumber":258,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":259,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":260,"author":{"gitId":"HowSuen"},"content":"        case \"E\":","lastModifiedDate":"2022-08-21"},{"lineNumber":261,"author":{"gitId":"HowSuen"},"content":"            String[] eventDate \u003d details.split(\" /at \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":262,"author":{"gitId":"HowSuen"},"content":"            Task event \u003d new Event(eventDate[0], eventDate[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":263,"author":{"gitId":"HowSuen"},"content":"            this.tasksList.add(event);","lastModifiedDate":"2022-08-21"},{"lineNumber":264,"author":{"gitId":"HowSuen"},"content":"            if (completionStatus.equals(\"1\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":265,"author":{"gitId":"HowSuen"},"content":"                event.completeTask();","lastModifiedDate":"2022-08-21"},{"lineNumber":266,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":267,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":268,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":269,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":270,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"HowSuen":270}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"        return \"[\" + TaskType.T + \"]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    public String toCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"        return TaskType.T + \" | \" + super.toCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"HowSuen":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"todo uninstall League of Legends","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"deadline MA1521 HW 1 /by 31 April","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"event birthday /at 8 August 00:00","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"todo delete this task","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"delete","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"delete random line","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"delete 4","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"mark","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"unmark","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"mark 420","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"mark abcdef","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"unmark -69","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"unmark alalalalalala","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"mark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"mark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"unmark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"todo","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"deadline","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"deadline CS1101S Assignment","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"event CS1231S Quiz","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"random","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"list5","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"markkkkk","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"HowSuen":32}}]

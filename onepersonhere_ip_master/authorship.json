[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"# Renaissance Duke","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"\u003e All new original Duke with a twist ","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"Renaissance Duke is a very **perculiar** chat bot that helps you keep track of your daily task! ðŸ™ƒ","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"Features:","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"- Differation of Task","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"- Search by date","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"- Search by Keyword","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"- Load \u0026 Save ","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"- Andâ€¦ more!","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"Commands:","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"1. date (search by date)","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"2. find (search by keyword)","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"3. deadline (add a dateline)","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"4. event (add a event)","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"5. todo (add a todo)","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"6. delete (delete a task)","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"7. list (list all the current task)","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"8. load (loads a task from file)","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"9. save (saves a task into file)","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"10. mark (marks the task as done)","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"11. unmark (unmarks the task as done)","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"12. exit (exits Duke) ","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"Download it [here](https://github.com/onepersonhere/ip/releases/tag/A-Jar)!","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"Future plans:","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":" - [x]  Managing more tasks","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":" - [ ] Reminder","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":" - [ ] Multiple language support","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":" - [ ] Voiceover","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"__________","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"To add more `Commands` to Renaissance Duke, do extend this `abstract` class:","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"```java","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":" public abstract class Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"\tprotected boolean isExit \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"     * Sets the exit flag.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"     * @return true if the exit flag is set, false otherwise.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"        return isExit;","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if an error occurs","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"    public abstract void execute(Ui ui, StorageList storageList) throws DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"onepersonhere":56,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"checkstyle {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    archiveVersion \u003d \"0.1\"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"onepersonhere":8,"-":39}},{"path":"default.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"[T][ ] borrow book","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"[D][ ] return book (by: 18:00, Tue, Oct 15 2019)","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"onepersonhere":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":" * Duke is a personal assistant Chat-bot that aims to help users to keep track of various things.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"    private static final String DEFAULT_FILE_NAME \u003d \"default.txt\";","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"    private StorageList storageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param filePath Path of the file to be used for the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        storageList \u003d new StorageList();","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"        ui \u003d new Ui(storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"            FileIO.load(storageList, filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"     * Main method that runs the program","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"     * @param args Arguments passed to the program","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"        new Duke(DEFAULT_FILE_NAME).run();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"     * Runs the program.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    public void run() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"        Output.GREETINGS.print();","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"            try {","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"                String commandStr \u003d ui.readCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"                Command command \u003d Parser.parse(commandStr);","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"                command.execute(ui, storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"     * Returns the Default file name.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"     * @return the DEFAULT_FILE_NAME","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"    public static String getDefaultFileName() {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"        return DEFAULT_FILE_NAME;","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"onepersonhere":64,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":" * DukeException is a custom exception class.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":" * It formats the error message passed in with \"â˜¹ OOPS!!!\" as header.","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"     * @param message the error message","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"        super(Output.wrapper(\"â˜¹ OOPS!!! \" + message + \"\\n\"));","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":16}},{"path":"src/main/java/duke/FileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":" * FileIO handles the loading and saving tasks in the file.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"public class FileIO {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"     * Save the list of tasks to a file.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"     * @param list List of tasks to save","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"     * @param filePath The path of the file to save to","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the file cannot be saved","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"    public static void save(StorageList list, String filePath) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"            createFile(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"                bw.write(list.get(i).toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"                bw.newLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"            bw.close();","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"File not found.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Error writing to file.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"     * @param list List of tasks to load into","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"     * @param filePath The path of the file to load from","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the file cannot be loaded","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"    public static void load(StorageList list, String filePath) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"            list.reset();","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"            createFile(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"            FileReader fr \u003d new FileReader(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"            String line;","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"                if (!line.equals(\"\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"                    parseLine(line, list);","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"            br.close();","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"File not found.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Error reading from file.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"     * Parses a line of text and adds the task to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"     * @param line The line of text to parse","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"     * @param list The list to add the task to","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"    private static void parseLine(String line, StorageList list) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"        String description \u003d getDescription(line);","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"        String addition \u003d getAddition(line);","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"        Task task;","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"        switch (line.charAt(1)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"            task \u003d new Deadline(description, addition);","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"            task \u003d new Event(description, addition);","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"        default:","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"            task \u003d new Task(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"onepersonhere"},"content":"        list.add(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"onepersonhere"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"onepersonhere"},"content":"     * @param line The line of text to parse","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"onepersonhere"},"content":"     * @return The description of the task","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"onepersonhere"},"content":"    private static String getDescription(String line) {","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"onepersonhere"},"content":"        if (line.indexOf(\u0027:\u0027) \u003d\u003d -1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"onepersonhere"},"content":"            return line.substring(7);","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"onepersonhere"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"onepersonhere"},"content":"            return line.substring(7, line.indexOf(\" (\") + 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"onepersonhere"},"content":"     * Returns the additional information of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"onepersonhere"},"content":"     * @param line The line of text to parse","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"onepersonhere"},"content":"     * @return The additional information of the task","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"onepersonhere"},"content":"    private static String getAddition(String line) {","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"onepersonhere"},"content":"        if (line.indexOf(\u0027:\u0027) \u003d\u003d -1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"onepersonhere"},"content":"            return \"\";","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"onepersonhere"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":121,"author":{"gitId":"onepersonhere"},"content":"            return line.substring(line.indexOf(\":\") + 2, line.indexOf(\")\"));","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"onepersonhere"},"content":"     * Creates the file if it doesn\u0027t exist.","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"onepersonhere"},"content":"     * @param filePath The path of the file to create","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"onepersonhere"},"content":"     * @throws IOException If the file cannot be created","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"onepersonhere"},"content":"    private static void createFile(String filePath) throws IOException {","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"onepersonhere"},"content":"        new File(filePath).createNewFile();","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"onepersonhere":134}},{"path":"src/main/java/duke/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":" * Enum for the various different outputs that the Chat-bot can give.","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"public enum Output {","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    GREETINGS(\" ____        _        \\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"            + \"Hello! I\u0027m Duke\\n\\t \"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"            + \"What can I do for you?\\n\"),","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    GOODBYE(\"Bye. Hope to see you again soon!\\n\"),","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"    LIST(\"Here are the task(s) in your list:\\n\"),","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    MARK(\"Nice! I\u0027ve marked this task as done:\\n\"),","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    UNMARK(\"OK, I\u0027ve marked this task as not done yet:\\n\"),","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    ADD(\"Got it. I\u0027ve added this task:\\n\"),","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"    DELETE(\"Noted. I\u0027ve removed this task:\\n\"),","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"    SAVE(\"Saving...\\n\"),","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"    LOAD(\"Loading...\\n\"),","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"    DATE(\"These tasks matches the date:\\n\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"    FIND(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"    private String output \u003d \"\";","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"     * Constructor for the Enums.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"     * @param s String that is to be initialised in the enum","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"    Output(String s) {","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"        this.output \u003d s;","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"     * Prints the enum output with the specified format.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"    public void print() {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"        echo(this.output);","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"     * Prints the format when a change of status has occurred.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"     * @param task The task where the change of status occurred","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"    public void changeStatus(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"        echo(this.output + \"\\t  \" + task + \"\\n\");","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"     * Prints the format when a new Task is modified.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"     * @param task Task to be modified","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"     * @param list List where the task is modified","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"    public void modifyTask(Task task, StorageList list) {","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"        echo(this.output + \"\\t  \" + task + \"\\n\" + getNumTask(list));","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"     * Returns the String representation of the number of tasks in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"     * @param list List where the tasks are stored","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"     * @return String representation of the number of tasks in the list","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"    private String getNumTask(StorageList list) {","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"        return \"\\t Now you have \" + list.getSize() + \" task(s) in the list.\\n\";","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"     * Prints the String format of the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"     * @param list List to be printed","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"    public void list(StorageList list) {","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"        echo(this.output + list.toString());","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"     * Prints the String representation of the list of tasks that matches the specified date.","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"     * @param list List of tasks to be printed","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"     * @param date Date to be matched","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"    public void listMatches(StorageList list, LocalDateTime date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"        echo(this.output + list.toString(date));","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"onepersonhere"},"content":"     * Prints the String representation of the list of tasks that matches the specified regex.","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"onepersonhere"},"content":"     * @param list List of tasks to be printed","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"onepersonhere"},"content":"     * @param regex Regular expression to be matched","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"onepersonhere"},"content":"    public void listMatches(StorageList list, String regex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"onepersonhere"},"content":"        echo(this.output + list.toString(regex));","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":106,"author":{"gitId":"onepersonhere"},"content":"     * Prints the specified output format.","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"onepersonhere"},"content":"     * @param s String to be printed out","lastModifiedDate":"2022-08-13"},{"lineNumber":109,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":110,"author":{"gitId":"onepersonhere"},"content":"    public static void echo(String s) {","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"onepersonhere"},"content":"        System.out.println(wrapper(s));","lastModifiedDate":"2022-08-14"},{"lineNumber":112,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":113,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":114,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":115,"author":{"gitId":"onepersonhere"},"content":"     * Wraps the String with the specified format.","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"onepersonhere"},"content":"     * @param s String to be wrapped","lastModifiedDate":"2022-08-14"},{"lineNumber":118,"author":{"gitId":"onepersonhere"},"content":"     * @return Wrapped String","lastModifiedDate":"2022-08-14"},{"lineNumber":119,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":120,"author":{"gitId":"onepersonhere"},"content":"    public static String wrapper(String s) {","lastModifiedDate":"2022-08-14"},{"lineNumber":121,"author":{"gitId":"onepersonhere"},"content":"        return \"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-08-14"},{"lineNumber":122,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t \" + s","lastModifiedDate":"2022-08-14"},{"lineNumber":123,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t____________________________________________________________\";","lastModifiedDate":"2022-08-14"},{"lineNumber":124,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":125,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"onepersonhere":125}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.command.LoadCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"import duke.command.MatchCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"import duke.command.SaveCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"     * Parses the user command and returns the corresponding command object.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"     * @param command The user command","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"     * @return The corresponding command object","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"        switch (command) {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"        case \"list\":","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"            return new MarkCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"        case \"event\":","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"            return new AddCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"            return new DeleteCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"        case \"save\":","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"            return new SaveCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"        case \"load\":","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"            return new LoadCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"        case \"date\":","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"            return new MatchCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"     * Finds the String between first command and second command (if exist).","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"     * @param command First command","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"     * @return String between first command and second command (if exist)","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"    public static String findFirstCommand(String input, String command) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"        int endOfCommand \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"        int beginIndex \u003d input.indexOf(command) + command.length() + 1;","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"        if (beginIndex \u003e input.length()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"        return endOfCommand \u003d\u003d -1","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"                ? input.substring(beginIndex)","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"                : input.substring(beginIndex, endOfCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"     * Finds the String between second command (if exist) and end.","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"     * @param command Second command","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"     * @return String between second command (if exist) and end","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"    public static String findSecondCommand(String input, String command) {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"        return input.contains(command) \u0026\u0026 !command.equals(\"\")","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"                ? input.substring(input.indexOf(command) + command.length() + 1)","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"                : \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"     * Parses the user input and creates a Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"     * @param command Command that the user inputs","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList StorageList object","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"onepersonhere"},"content":"     * @param secCommand  Second command that the user inputs","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"onepersonhere"},"content":"    public static void parseTask(String input, String command, StorageList storageList, String secCommand) {","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"onepersonhere"},"content":"            String desc \u003d findFirstCommand(input, command);","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"onepersonhere"},"content":"            String secondCommand \u003d findSecondCommand(input, secCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"onepersonhere"},"content":"            switch (command) {","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"onepersonhere"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"onepersonhere"},"content":"                addTask(new Deadline(desc, secondCommand), storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"onepersonhere"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"onepersonhere"},"content":"            case \"event\":","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"onepersonhere"},"content":"                addTask(new Event(desc, secondCommand), storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"onepersonhere"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"onepersonhere"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"onepersonhere"},"content":"                addTask(new Todo(desc), storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"onepersonhere"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"onepersonhere"},"content":"            default:","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"onepersonhere"},"content":"            FileIO.save(storageList, \"./default.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"onepersonhere"},"content":"     * Adds a Task to the StorageList, print out the appropriate String.","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"onepersonhere"},"content":"     * @param task Task to be added to the StorageList","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList StorageList to be added to","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"onepersonhere"},"content":"    private static void addTask(Task task, StorageList storageList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"onepersonhere"},"content":"        storageList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"onepersonhere"},"content":"        Output.ADD.modifyTask(task, storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"onepersonhere"},"content":"     * Finds the index of the Task that the user wants to mark/unmark/delete.","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"onepersonhere"},"content":"     * @return Index of the Task","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"onepersonhere"},"content":"    public static int getIndex(String input) {","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"onepersonhere"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":138}},{"path":"src/main/java/duke/StorageList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import java.util.List;","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":" * StorageList is a class that stores a list of strings and","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":" * provides methods to manipulate the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"public class StorageList {","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     * Adds a string to the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"     * @param t Task to be added to the list","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"    public void add(Task t) {","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        list.add(t);","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"     * Returns the Task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"     * @param index Index of the Task to be returned","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"     * @return Task at the specified index","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"            return list.get(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"     * Marks the Task at the specified index as completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"     * @param i Index of the Task to be marked as completed","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"    public void mark(int i) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"            list.get(i).mark();","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"     * Unmarks the Task at the specified index as completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"     * @param i Index of the Task to be unmarked as completed","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"    public void unmark(int i) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"            list.get(i).unmark();","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"     * @return Size of the list","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"        return list.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"     * Deletes the Task at the specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"     * @param i Index of the Task to be deleted","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"    public void delete(int i) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"            list.remove(i);","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"onepersonhere"},"content":"     * Resets the list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"onepersonhere"},"content":"    public void reset() {","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"onepersonhere"},"content":"        list.clear();","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"onepersonhere"},"content":"     * An overloaded method that return the String representation of the list of task in which the date is matched.","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"onepersonhere"},"content":"     * @param date Date to be matched","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"onepersonhere"},"content":"     * @return String representation of the list of task with correct date","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"onepersonhere"},"content":"    public String toString(LocalDateTime date) {","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"onepersonhere"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"onepersonhere"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"onepersonhere"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"onepersonhere"},"content":"            if (t instanceof Deadline \u0026\u0026 ((Deadline) t).getDateTime().equals(date)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"onepersonhere"},"content":"                sb.append(\"\\t \" + i + \".\" + t.toString() + \"\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"onepersonhere"},"content":"                i++;","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"onepersonhere"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"onepersonhere"},"content":"     * An overloaded method that return the String representation of the list of task in which the regex is matched.","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"onepersonhere"},"content":"     * @param regex Regular expression to be matched","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"onepersonhere"},"content":"     * @return String representation of the list of task with correct regex","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"onepersonhere"},"content":"    public String toString(String regex) {","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"onepersonhere"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"onepersonhere"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"onepersonhere"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"onepersonhere"},"content":"        for (Task t : list) {","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"onepersonhere"},"content":"            Matcher matcher \u003d pattern.matcher(t.getDescription());","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"onepersonhere"},"content":"            if (matcher.find()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"onepersonhere"},"content":"                sb.append(\"\\t \" + i + \".\" + t.toString() + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"onepersonhere"},"content":"                i++;","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"onepersonhere"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":139,"author":{"gitId":"onepersonhere"},"content":"     * Returns the list of strings.","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"onepersonhere"},"content":"     * @return String representation of the list of strings","lastModifiedDate":"2022-08-13"},{"lineNumber":142,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":143,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":144,"author":{"gitId":"onepersonhere"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":145,"author":{"gitId":"onepersonhere"},"content":"        String ans \u003d \"\";","lastModifiedDate":"2022-08-14"},{"lineNumber":146,"author":{"gitId":"onepersonhere"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-08-13"},{"lineNumber":147,"author":{"gitId":"onepersonhere"},"content":"            Task t \u003d list.get(i);","lastModifiedDate":"2022-08-13"},{"lineNumber":148,"author":{"gitId":"onepersonhere"},"content":"            ans +\u003d \"\\t \" + (i + 1) + \".\" + t + \"\\n\";","lastModifiedDate":"2022-08-14"},{"lineNumber":149,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":150,"author":{"gitId":"onepersonhere"},"content":"        return ans;","lastModifiedDate":"2022-08-13"},{"lineNumber":151,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":152,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"onepersonhere":152}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"public class Ui {","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm, E, MMM dd yyyy\");","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    private StorageList storageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    private String lastInput;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    private String lastCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList StorageList to be used","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    public Ui(StorageList storageList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        this.storageList \u003d storageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"     * Handles the user input and calls the appropriate method.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"     * @return true if the user wants to continue, false otherwise","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d SCANNER.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"        lastInput \u003d input;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"        lastCommand \u003d command;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"        return command;","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"     * Return the formatter for the DateTime input.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"     * @return DateTimeFormatter","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"    public static DateTimeFormatter getInputFormatter() {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"        return INPUT_FORMATTER;","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"     * Return the formatter for the DateTime output.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"     * @return DateTimeFormatter","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"    public static DateTimeFormatter getOutputFormatter() {","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"        return OUTPUT_FORMATTER;","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"     * Returns the last input.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"     * @return last input","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"    public String getLastInput() {","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"        return lastInput;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"     * Returns the last command.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"     * @return last command","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"    public String getLastCommand() {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"        return lastCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"     * Sets the last input.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"     * @param lastInput last input","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"    public void setLastInput(String lastInput) {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"        this.lastInput \u003d lastInput;","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"     * Sets the last command.","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"     * @param lastCommand last command","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"    public void setLastCommand(String lastCommand) {","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"        this.lastCommand \u003d lastCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":93}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":" * Add a new Task to the StorageList.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"     * Executes the add command.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d ui.getLastInput();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        String command \u003d ui.getLastCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        String secCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        switch (command) {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            secCommand \u003d \"/by\";","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"        case \"event\":","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"            secCommand \u003d \"/at\";","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"            secCommand \u003d \"\";","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"Invalid command.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"        Parser.parseTask(input, command, storageList, secCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":39}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":" * The abstract class for all commands.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Sets the exit flag.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @return true if the exit flag is set, false otherwise.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        return isExit;","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if an error occurs","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"    public abstract void execute(Ui ui, StorageList storageList) throws DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" * Delete a specified Task from the StorageList.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     * Executes the delete command.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        int index \u003d Parser.getIndex(ui.getLastInput());","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        Task task \u003d storageList.get(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        storageList.delete(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"        Output.DELETE.modifyTask(task, storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":28}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":" * Exit Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"     * Executes the exit command.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        Output.GOODBYE.print();","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"        isExit \u003d true;","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":" * Searches for the list of Tasks that matches the given keyword/regex.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Executes the find command.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param ui The user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList The storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d ui.getLastInput();","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        String command \u003d ui.getLastCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        Output.FIND.listMatches(storageList, Parser.findFirstCommand(input, command));","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"onepersonhere":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":" * Lists the tasks in the StorageList.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"     * Executes the list command.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        Output.LIST.list(storageList);","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":21}},{"path":"src/main/java/duke/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.FileIO;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" * Loads the tasks from the file.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     * Executes the load command.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        String filename \u003d Duke.getDefaultFileName();","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d ui.getLastInput();","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            filename \u003d input.split(\" \")[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"        FileIO.load(storageList, filename);","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"        Output.LOAD.print();","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":" * Marks the specified Task in the StorageList.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Executes the mark command.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        int index \u003d Parser.getIndex(ui.getLastInput());","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        storageList.mark(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        Output.MARK.changeStatus(storageList.get(index));","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":26}},{"path":"src/main/java/duke/command/MatchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":" * Matches the deadlines with the provided date in the StorageList.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"public class MatchCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * Executes the match command.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d ui.getLastInput();","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        String command \u003d ui.getLastCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"        Output.DATE.listMatches(storageList,","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"                LocalDateTime.parse(Parser.findFirstCommand(input, command), Ui.getInputFormatter()));","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":29}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.FileIO;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" * Saves the StorageList to a file.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     * Executes the save command.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        String filename \u003d Duke.getDefaultFileName();","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d ui.getLastInput();","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            filename \u003d input.split(\" \")[1];","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"        FileIO.save(storageList, filename);","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"        Output.SAVE.print();","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":32}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import duke.Output;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.StorageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":" * Unmarks the specified Task in the StorageList.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Executes the unmark command.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param ui the user interface","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList the storage list","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    public void execute(Ui ui, StorageList storageList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        int index \u003d Parser.getIndex(ui.getLastInput());","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        storageList.unmark(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        Output.UNMARK.changeStatus(storageList.get(index));","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"onepersonhere":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":" * This class represents a deadline which is {@code by} a certain date.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Constructs a deadline with a description and a date.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * @param by the date of the deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     * @throws DukeException if the date is of invalid format","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"            this.dateTime \u003d LocalDateTime.parse(by, Ui.getInputFormatter());","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"                this.dateTime \u003d LocalDateTime.parse(by, Ui.getOutputFormatter());","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"                throw new DukeException(\"Invalid date format. Use yyyy-mm-dd HHmm.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"     * Returns the description of the task, with a Deadline tag.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"     * @return Description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + dateTime.format(Ui.getOutputFormatter()) + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":" * This class represents an event, {@code at} a location.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"    protected String at;","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"     * Constructs an event with a description and a location.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"     * @param at the location of the event","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"     * Returns the description of the task, with an event tag.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"     * @return Description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":" * A class to represent a task containing description and completion status.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"    protected final String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"     * Constructs a task with a description.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"     * @return String representation of the completion status of the task","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"        return isDone","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"                ? \"X\" // done task marked as X","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"                : \" \";","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"    public void mark() {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"     * Unmarks the task as not completed.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"     * Returns the dateTime of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"     * @return LocalDateTime of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"        return dateTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"     * Returns the formatted description of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"     * @return String formatted description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"     * @return String raw description of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"        return description;","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"onepersonhere":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":" * A class to represent a to-do item.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"     * Constructs a to-do item.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"     * @param description the description of the to-do item.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"     * Returns the description of the task, with a to-do tag.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     * @return Description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":25}},{"path":"src/test/java/duke/AddTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"public class AddTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    private StorageList storageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"        storageList \u003d new StorageList();","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"        ui \u003d new Ui(storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"    public void addTodoTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"todo borrow book\");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"todo\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"            assert (storageList.get(0) instanceof Todo \u0026\u0026 storageList.get(0).toString().equals(\"[T][ ] borrow book\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"deadline return book /by 2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"deadline\");","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"            assert (storageList.get(0) instanceof Deadline","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"                    \u0026\u0026 storageList.get(0).toString().equals(\"[D][ ] return book (by: 18:00, Tue, Oct 15 2019)\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"    public void addEventTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"event project meeting /at Mon 2-4pm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"event\");","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"            assert (storageList.get(0) instanceof Event","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"                    \u0026\u0026 storageList.get(0).toString().equals(\"[E][ ] project meeting (at: Mon 2-4pm)\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"    public void addTodoEmptyTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"todo\");","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"todo\");","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"            assert (e.getMessage().equals(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"    public void addDeadlineEmptyTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"deadline\");","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"deadline\");","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"            assert (e.getMessage().equals(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"    public void addEventEmptyTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"event\");","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"event\");","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"            assert (e.getMessage().equals(\"â˜¹ OOPS!!! The description of a event cannot be empty.\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"onepersonhere":91}},{"path":"src/test/java/duke/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"public class ListTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"    private StorageList storageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"        storageList \u003d new StorageList();","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"        ui \u003d new Ui(storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"todo borrow book\");","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"todo\");","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"deadline return book /by 2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"deadline\");","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"event project meeting /at Mon 2-4pm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"event\");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"    public void listTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"        String actualList \u003d storageList.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"        String expectedList \u003d \"\\t 1.[T][ ] borrow book\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t 2.[D][ ] return book (by: 18:00, Tue, Oct 15 2019)\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t 3.[E][ ] project meeting (at: Mon 2-4pm)\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"    public void deleteTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"delete 1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"delete\");","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"            new DeleteCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"            String actualList \u003d storageList.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"            String expectedList \u003d \"\\t 1.[D][ ] return book (by: 18:00, Tue, Oct 15 2019)\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"                    + \"\\t 2.[E][ ] project meeting (at: Mon 2-4pm)\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"            assertEquals(expectedList, actualList);","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"onepersonhere":58}},{"path":"src/test/java/duke/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"public class MarkTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"    private StorageList storageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"        storageList \u003d new StorageList();","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"        ui \u003d new Ui(storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastInput(\"todo borrow book\");","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        ui.setLastCommand(\"todo\");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"    public void markTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"mark 1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"mark\");","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"            new MarkCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"            assert (storageList.get(0) instanceof Todo \u0026\u0026 storageList.get(0).toString().equals(\"[T][X] borrow book\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"    public void unmarkTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"mark 1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"mark\");","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"            new MarkCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"unmark 1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"unmark\");","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"            new UnmarkCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"            assert (storageList.get(0) instanceof Todo \u0026\u0026 storageList.get(0).toString().equals(\"[T][ ] borrow book\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"    public void indexOutOfBoundTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"        String expected \u003d \"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t â˜¹ OOPS!!! Invalid index.\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t____________________________________________________________\";","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"mark 100\");","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"mark\");","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"            new MarkCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"            assertEquals(expected, e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"onepersonhere":71}},{"path":"src/test/java/duke/MatchingTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"public class MatchingTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    private StorageList storageList;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"        storageList \u003d new StorageList();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"        ui \u003d new Ui(storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"todo borrow book\");","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"todo\");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"deadline return book /by 2019-10-15 1800\");","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"deadline\");","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastInput(\"event project meeting /at Mon 2-4pm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"            ui.setLastCommand(\"event\");","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"            new AddCommand().execute(ui, storageList);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"    public void matchDateTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"        String input \u003d \"date 2019-10-15 1800\";","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"        String command \u003d \"date\";","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"            String actualList \u003d storageList.toString(","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"                    LocalDateTime.parse(Parser.findFirstCommand(input, command), Ui.getInputFormatter()));","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"            String expectedList \u003d \"\\t 1.[D][ ] return book (by: 18:00, Tue, Oct 15 2019)\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"            assertEquals(expectedList, actualList);","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"    public void matchRegexTest() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"        String actualList \u003d storageList.toString(\"book\");","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"        String expectedList \u003d \"\\t 1.[T][ ] borrow book\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"                + \"\\t 2.[D][ ] return book (by: 18:00, Tue, Oct 15 2019)\\n\";","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"onepersonhere":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"todo borrow book","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"deadline return book /by 2019-10-15 1800","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"todo","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"deadline","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"event","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"blah","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"mark 100","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"unmark 100","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"delete 3","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"delete 3","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"save","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"save ./save/test.txt","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"load ","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"list","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"date 2019-10-15 1800","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":22}}]

[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"  protected String by;","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"  public Deadline(String description, String by) {","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"    super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"    this.by \u003d by;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"   * Returns the description of the task, with a Deadline tag","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"   * @return Description of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"  @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"  public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":" * Duke is a personal assistant Chat-bot that aims to help users to keep track of various things","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"     * Main method that runs the program","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"     * @param args Arguments passed to the program","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"        Output.GREETINGS.print();","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"        commandParser();","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"     * Parses the user input and calls the appropriate method","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"    private static void commandParser() {","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"        boolean endLoop \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"        StorageList storageList \u003d new StorageList();","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"        while (!endLoop) {","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"            switch (command) {","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"                case \"bye\":","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"                    Output.GOODBYE.print();","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"                    endLoop \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"                case \"list\":","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"                    Output.LIST.list(storageList);","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"                    int index \u003d getIndex(input);","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"                    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"                        storageList.mark(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"                        Output.MARK.changeStatus(storageList.get(index));","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"                    }","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"                    ","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"                    index \u003d getIndex(input);","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"                    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"                        storageList.unmark(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"                        Output.UNMARK.changeStatus(storageList.get(index));","lastModifiedDate":"2022-08-13"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"                    }","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"                    parseTask(input, command, storageList, \"/by\");","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"                case \"event\":","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"                    parseTask(input, command, storageList, \"/at\");","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"                    parseTask(input, command, storageList, \"\");","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"                    index \u003d getIndex(input);","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"                    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"                        Task task \u003d storageList.get(index);","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"                        storageList.delete(index);","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"                        Output.DELETE.modifyTask(task, storageList);","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"                    }","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"                default:","lastModifiedDate":"2022-08-13"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"                    System.out.println(new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\").getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"     * Finds the String between first command and second command (if exist)","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-14"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"     * @param command First command","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"     * @return String between first command and second command (if exist)","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"    private static String findFirstCommand(String input, String command) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"        int endOfCommand \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"        int beginIndex \u003d input.indexOf(command) + command.length() + 1;","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"        if (beginIndex \u003e input.length()) {","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"            throw new DukeException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"onepersonhere"},"content":"        return endOfCommand \u003d\u003d -1","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"onepersonhere"},"content":"                ? input.substring(beginIndex)","lastModifiedDate":"2022-08-14"},{"lineNumber":95,"author":{"gitId":"onepersonhere"},"content":"                : input.substring(beginIndex, endOfCommand);","lastModifiedDate":"2022-08-14"},{"lineNumber":96,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":97,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":98,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":99,"author":{"gitId":"onepersonhere"},"content":"     * Finds the String between second command (if exist) and end","lastModifiedDate":"2022-08-14"},{"lineNumber":100,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-14"},{"lineNumber":101,"author":{"gitId":"onepersonhere"},"content":"     * @param command Second command","lastModifiedDate":"2022-08-14"},{"lineNumber":102,"author":{"gitId":"onepersonhere"},"content":"     * @return String between second command (if exist) and end","lastModifiedDate":"2022-08-14"},{"lineNumber":103,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":104,"author":{"gitId":"onepersonhere"},"content":"    private static String findSecondCommand(String input, String command) {","lastModifiedDate":"2022-08-14"},{"lineNumber":105,"author":{"gitId":"onepersonhere"},"content":"        return input.contains(command) \u0026\u0026 !command.equals(\"\")","lastModifiedDate":"2022-08-14"},{"lineNumber":106,"author":{"gitId":"onepersonhere"},"content":"                ? input.substring(input.indexOf(command) + command.length() + 1)","lastModifiedDate":"2022-08-14"},{"lineNumber":107,"author":{"gitId":"onepersonhere"},"content":"                : \"\";","lastModifiedDate":"2022-08-14"},{"lineNumber":108,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":109,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":110,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":111,"author":{"gitId":"onepersonhere"},"content":"     * Parses the user input and creates a Task object","lastModifiedDate":"2022-08-14"},{"lineNumber":112,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-14"},{"lineNumber":113,"author":{"gitId":"onepersonhere"},"content":"     * @param command Command that the user inputs","lastModifiedDate":"2022-08-14"},{"lineNumber":114,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList StorageList object","lastModifiedDate":"2022-08-14"},{"lineNumber":115,"author":{"gitId":"onepersonhere"},"content":"     * @param secCommand Second command that the user inputs","lastModifiedDate":"2022-08-14"},{"lineNumber":116,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":117,"author":{"gitId":"onepersonhere"},"content":"    private static void parseTask(String input, String command, StorageList storageList, String secCommand) {","lastModifiedDate":"2022-08-14"},{"lineNumber":118,"author":{"gitId":"onepersonhere"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":119,"author":{"gitId":"onepersonhere"},"content":"            String desc \u003d findFirstCommand(input, command);","lastModifiedDate":"2022-08-14"},{"lineNumber":120,"author":{"gitId":"onepersonhere"},"content":"            String secondCommand \u003d findSecondCommand(input, secCommand);","lastModifiedDate":"2022-08-14"},{"lineNumber":121,"author":{"gitId":"onepersonhere"},"content":"            switch (command) {","lastModifiedDate":"2022-08-14"},{"lineNumber":122,"author":{"gitId":"onepersonhere"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-14"},{"lineNumber":123,"author":{"gitId":"onepersonhere"},"content":"                    addTask(new Deadline(desc, secondCommand), storageList);","lastModifiedDate":"2022-08-14"},{"lineNumber":124,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":125,"author":{"gitId":"onepersonhere"},"content":"                case \"event\":","lastModifiedDate":"2022-08-14"},{"lineNumber":126,"author":{"gitId":"onepersonhere"},"content":"                    addTask(new Event(desc, secondCommand), storageList);","lastModifiedDate":"2022-08-14"},{"lineNumber":127,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":128,"author":{"gitId":"onepersonhere"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-14"},{"lineNumber":129,"author":{"gitId":"onepersonhere"},"content":"                    addTask(new Todo(desc), storageList);","lastModifiedDate":"2022-08-14"},{"lineNumber":130,"author":{"gitId":"onepersonhere"},"content":"                    break;","lastModifiedDate":"2022-08-14"},{"lineNumber":131,"author":{"gitId":"onepersonhere"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":132,"author":{"gitId":"onepersonhere"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":133,"author":{"gitId":"onepersonhere"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":134,"author":{"gitId":"onepersonhere"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":135,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":136,"author":{"gitId":"onepersonhere"},"content":"    ","lastModifiedDate":"2022-08-14"},{"lineNumber":137,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":138,"author":{"gitId":"onepersonhere"},"content":"     * Adds a Task to the StorageList, print out the appropriate String","lastModifiedDate":"2022-08-14"},{"lineNumber":139,"author":{"gitId":"onepersonhere"},"content":"     * @param task Task to be added to the StorageList","lastModifiedDate":"2022-08-14"},{"lineNumber":140,"author":{"gitId":"onepersonhere"},"content":"     * @param storageList StorageList to be added to","lastModifiedDate":"2022-08-14"},{"lineNumber":141,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":142,"author":{"gitId":"onepersonhere"},"content":"    private static void addTask(Task task, StorageList storageList) {","lastModifiedDate":"2022-08-14"},{"lineNumber":143,"author":{"gitId":"onepersonhere"},"content":"        storageList.add(task);","lastModifiedDate":"2022-08-14"},{"lineNumber":144,"author":{"gitId":"onepersonhere"},"content":"        Output.ADD.modifyTask(task, storageList);","lastModifiedDate":"2022-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":147,"author":{"gitId":"onepersonhere"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":148,"author":{"gitId":"onepersonhere"},"content":"     * Finds the index of the Task that the user wants to mark/unmark/delete","lastModifiedDate":"2022-08-14"},{"lineNumber":149,"author":{"gitId":"onepersonhere"},"content":"     * @param input User input","lastModifiedDate":"2022-08-14"},{"lineNumber":150,"author":{"gitId":"onepersonhere"},"content":"     * @return Index of the Task","lastModifiedDate":"2022-08-14"},{"lineNumber":151,"author":{"gitId":"onepersonhere"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":152,"author":{"gitId":"onepersonhere"},"content":"    private static int getIndex(String input) {","lastModifiedDate":"2022-08-14"},{"lineNumber":153,"author":{"gitId":"onepersonhere"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"onepersonhere":150,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"  public DukeException(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"    super(Output.wrapper(\"☹ OOPS!!! \" + message + \"\\n\"));","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"  protected String at;","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"  public Event(String description, String at) {","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"    super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"    this.at \u003d at;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"   * Returns the description of the task, with an event tag","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"   * @return Description of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"  @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"  public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"    return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":16}},{"path":"src/main/java/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":" * Enum for the various different outputs that the Chat-bot can give.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"public enum Output{","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"  GREETINGS (\" ____        _        \\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"          + \"|  _ \\\\ _   _| | _____ \\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"          + \"| | | | | | | |/ / _ \\\\\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"          + \"| |_| | |_| |   \u003c  __/\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"          + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"          + \"Hello! I\u0027m Duke\\n\\t \"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"          + \"What can I do for you?\\n\"),","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"  GOODBYE (\"Bye. Hope to see you again soon!\\n\"),","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"  LIST(\"Here are the task(s) in your list:\\n\"),","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"  MARK(\"Nice! I\u0027ve marked this task as done:\\n\"),","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"  UNMARK(\"OK, I\u0027ve marked this task as not done yet:\\n\"),","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"  ADD(\"Got it. I\u0027ve added this task:\\n\"),","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"  DELETE(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"  private String output \u003d \"\";","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"   * Constructor for the Enums","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"   * @param s String that is to be initialised in the enum","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"  Output(String s){","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"    this.output \u003d s;","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"   * Prints the enum output with the specified format","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"  void print() {","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"    echo(this.output);","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"   * Prints the format when a change of status has occurred","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"   * @param task The task where the change of status occurred","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"  void changeStatus(Task task) {","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"    echo(this.output + \"\\t  \" + task + \"\\n\");","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"   * Prints the format when a new Task is modified","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"   * @param task Task to be modified","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"   * @param list List where the task is modified","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"  void modifyTask(Task task, StorageList list) {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"    echo(this.output + \"\\t  \" + task + \"\\n\" + getNumTask(list));","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"   * Returns the String representation of the number of tasks in the list","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"   * @param list List where the tasks are stored","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"   * @return String representation of the number of tasks in the list","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"  private String getNumTask(StorageList list){","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"    return \"\\t Now you have \" + list.getSize() + \" task(s) in the list.\\n\";","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"   * Prints the String format of the list","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"   * @param list List to be printed","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"  void list(StorageList list) {","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"    echo(this.output + list.toString());","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"   * Prints the specified output format","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"   * @param s String to be printed out","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"  static void echo(String s) {","lastModifiedDate":"2022-08-13"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"    System.out.println(wrapper(s));","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"   * Wraps the String with the specified format","lastModifiedDate":"2022-08-14"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"   * @param s String to be wrapped","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"   * @return Wrapped String","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"  public static String wrapper(String s) {","lastModifiedDate":"2022-08-14"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"    return \"\\t____________________________________________________________\\n\" ","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"            + \"\\t \" + s","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"            + \"\\t____________________________________________________________\";","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"onepersonhere":88}},{"path":"src/main/java/StorageList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"import java.util.List;","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":" * StorageList is a class that stores a list of strings","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"public class StorageList {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"  private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"   * Adds a string to the list","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"   * @param t Task to be added to the list","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"  public void add(Task t) {","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"    list.add(t);","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"   * Returns the Task at the specified index","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"   * @param index Index of the Task to be returned","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"   * @return Task at the specified index","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"   * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"  public Task get(int index) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"      return list.get(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"      throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"   * Marks the Task at the specified index as completed","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"   * @param i Index of the Task to be marked as completed","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"   * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"  public void mark(int i) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"      list.get(i).mark();","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"      throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"onepersonhere"},"content":"   * Unmarks the Task at the specified index as completed","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"onepersonhere"},"content":"   * @param i Index of the Task to be unmarked as completed","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"onepersonhere"},"content":"   * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":50,"author":{"gitId":"onepersonhere"},"content":"  public void unmark(int i) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"onepersonhere"},"content":"    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"onepersonhere"},"content":"      list.get(i).unmark();","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"onepersonhere"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"onepersonhere"},"content":"      throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":58,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"onepersonhere"},"content":"   * Returns the size of the list","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"onepersonhere"},"content":"   * @return Size of the list","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"onepersonhere"},"content":"  public int getSize() {","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"onepersonhere"},"content":"    return list.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"onepersonhere"},"content":"  ","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"onepersonhere"},"content":"   * Deletes the Task at the specified index","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"onepersonhere"},"content":"   * @param i Index of the Task to be deleted","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"onepersonhere"},"content":"   * @throws DukeException Thrown when the index is out of bounds","lastModifiedDate":"2022-08-14"},{"lineNumber":70,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"onepersonhere"},"content":"  public void delete(int i) throws DukeException{","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"onepersonhere"},"content":"    try {","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"onepersonhere"},"content":"      list.remove(i);","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"onepersonhere"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"onepersonhere"},"content":"      throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"onepersonhere"},"content":"  ","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"onepersonhere"},"content":"   * Returns the list of strings","lastModifiedDate":"2022-08-13"},{"lineNumber":81,"author":{"gitId":"onepersonhere"},"content":"   * @return String representation of the list of strings","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":83,"author":{"gitId":"onepersonhere"},"content":"  @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"onepersonhere"},"content":"  public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"onepersonhere"},"content":"    String ans \u003d \"\";","lastModifiedDate":"2022-08-14"},{"lineNumber":86,"author":{"gitId":"onepersonhere"},"content":"    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"onepersonhere"},"content":"      Task t \u003d list.get(i);","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"onepersonhere"},"content":"      ans +\u003d \"\\t \" + (i+1) + \".\" + t + \"\\n\";","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"onepersonhere"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"onepersonhere"},"content":"    return ans;","lastModifiedDate":"2022-08-13"},{"lineNumber":91,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":92,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"onepersonhere":92}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":" * A-Class to represent a task containing description and completion status.","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"  protected final String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"  protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"  public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"    this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"   * Returns the completion status of the task","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"   * @return String representation of the completion status of the task","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"onepersonhere"},"content":"    return isDone","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"onepersonhere"},"content":"            ? \"X\" // done task marked as X","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"onepersonhere"},"content":"            : \" \";","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"onepersonhere"},"content":"   * Marks the task as completed","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"onepersonhere"},"content":"  public void mark() {","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"onepersonhere"},"content":"    isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"onepersonhere"},"content":"   * Unmarks the task as not completed","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"onepersonhere"},"content":"  public void unmark() {","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"onepersonhere"},"content":"    isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"onepersonhere"},"content":"   * Returns the description of the task.","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"onepersonhere"},"content":"   * @return Description of the task.","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"onepersonhere"},"content":"  @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":42,"author":{"gitId":"onepersonhere"},"content":"  public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":43,"author":{"gitId":"onepersonhere"},"content":"    return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"onepersonhere":45}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"  public Todo(String description) {","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"    super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"  /**","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"   * Returns the description of the task, with a to-do tag","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"   * @return Description of the task.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"   */","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"  @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"  public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"  }","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"onepersonhere"},"content":"todo borrow book","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"onepersonhere"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"onepersonhere"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"onepersonhere"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"onepersonhere"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"onepersonhere"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"onepersonhere"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"onepersonhere"},"content":"todo","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"onepersonhere"},"content":"deadline","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"onepersonhere"},"content":"event","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"onepersonhere"},"content":"blah","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"onepersonhere"},"content":"mark 100","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"onepersonhere"},"content":"unmark 100","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"onepersonhere"},"content":"delete 3","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"onepersonhere"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"onepersonhere"},"content":"delete 3","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"onepersonhere"},"content":"bye","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"onepersonhere":17}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"# Duke - Your virtual assistant","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"![alt text](https://github.com/GarethOng/ip/blob/2eda2a88bb442974c426a880c2222cc9f2a74d03/docs/Ui.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"\u003e \"For every minute spent organizing, an hour is earned.\" -Benjamin Franklin","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"## Introduction","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"Duke is your **simple** solution to ","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"becoming the organized person that you dreamt of being.","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"Keep all your todos, deadlines and events with Duke and never have to worry about being organised again.","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"## Features","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"- Track ToDos, Deadlines and Events","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"- Mark and unmark task status as done","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"- List out all existing task","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"- Delete task","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"- Sort task in chronological or lexicographical order","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"## Getting Started","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"1. Download the latest release [here](https://github.com/GarethOng/ip/releases)","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"2. Simply double-click the jar file to get started!","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"3. alternatively you can run the following in your device\u0027s CLI:","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"java -jar duke.jar","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"## Feature: Adding ToDo","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"To add a ToDo task:","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"todo [task\u0027s description]","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"For example to add a todo task for doing homework:","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"todo homework","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"## Feature: Adding Deadline","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"To add a Deadline task:","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"deadline [task\u0027s description] /by [date in YYYY-MM-DD hh:mm]","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"For example to add an ip submission by 17/9/2022 5:59 am:","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"deadline ip submission /by 2022-17-09 05:59","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"## Feature: Adding Event","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"To add a Deadline task:","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"event [task\u0027s description] /at [date in YYYY-MM-DD hh:mm]","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"For example to add a CS2101 presentation at 12/9/2022 8:00 am:","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"event CS2101 presentation /at 2022-12-09 08:00","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"## Feature: List","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"To get a list of all tasks added:","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"list","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"which will display:","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"2. [D][]ip submission (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"3. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"## Feature: Mark task as done","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"Given the above list, you can perform:","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"mark 2","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"To mark the second task as done,","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"2. [D][X]ip submission (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"3. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"## Feature: Unmark task as done","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"Given the above list, you can perform:","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"unmark 2","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"To unmark the second task as done,","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"2. [D][]ip submission (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"3. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"## Feature: Delete","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"Suppose we want to delete the second task in the above list:","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"delete 2","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"Which results in our list becoming:","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"2. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"## Feature: Sorting Chronologically","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"You can specify if you want to sort either the events or the ","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"deadlines in the list in either an increasing or decreasing manner:","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"sort [deadline/ event] chrono [increasing/ decreasing]","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"Suppose we want to sort the deadlines in the following list of task:","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"1. [D][]homework 4 (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"2. [D][]homework 1 (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"3. [D][]homework 3 (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"4. [D][]homework 2 (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"We just need to input the following:","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"sort deadlines chrono increasing","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"which will return:","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"1. [D][]homework 1 (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"2. [D][]homework 2 (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"3. [D][]homework 3 (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"4. [D][]homework 4 (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"## Feature: Sorting Lexicographically","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"You can specify if you want to sort either the events or the","lastModifiedDate":"2022-09-13"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"deadlines in the list in either an increasing or decreasing manner:","lastModifiedDate":"2022-09-13"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"sort [deadline/ event] lexi [increasing/ decreasing]","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"Suppose we want to sort the deadlines in the following list of task:","lastModifiedDate":"2022-09-13"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"1. [D][]def (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"2. [D][]cde (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"3. [D][]abc (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"4. [D][]efg (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"We just need to input the following:","lastModifiedDate":"2022-09-13"},{"lineNumber":145,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"sort deadlines lexi increasing","lastModifiedDate":"2022-09-13"},{"lineNumber":147,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":148,"author":{"gitId":"GarethOng"},"content":"which will return:","lastModifiedDate":"2022-09-13"},{"lineNumber":149,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-13"},{"lineNumber":150,"author":{"gitId":"GarethOng"},"content":"1. [D][]abc (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":151,"author":{"gitId":"GarethOng"},"content":"2. [D][]cde (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":152,"author":{"gitId":"GarethOng"},"content":"3. [D][]def (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":153,"author":{"gitId":"GarethOng"},"content":"4. [D][]efg (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GarethOng":149,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"checkstyle {","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GarethOng":21,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"# Duke - Your virtual assistant","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"![alt text](https://github.com/GarethOng/ip/blob/1334b2beda4d5f59c2cfb14353069f51d0b3160e/docs/Ui.png)","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"\u003e \"For every minute spent organizing, an hour is earned.\" -Benjamin Franklin","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"## Introduction","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"Duke is your **simple** solution to","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"becoming the organized person that you dreamt of being.","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"Keep all your todos, deadlines and events with Duke and never have to worry about being organised again.","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"- Track ToDos, Deadlines and Events","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"- Mark and unmark task status as done","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"- List out all existing task","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"- Delete task","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"- Sort task in chronological or lexicographical order","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"## Getting Started","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"1. Download the latest release [here](https://github.com/GarethOng/ip/releases)","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"2. Simply double-click the jar file to get started!","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"3. alternatively you can run the following in your device\u0027s CLI:","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"java -jar duke.jar","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"## Feature: Adding ToDo","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"To add a ToDo task:","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"todo [task\u0027s description]","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"For example to add a todo task for doing homework:","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"todo homework","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"## Feature: Adding Deadline","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"To add a Deadline task:","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"deadline [task\u0027s description] /by [date in YYYY-MM-DD hh:mm]","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"For example to add an ip submission by 17/9/2022 5:59 am:","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"deadline ip submission /by 2022-17-09 05:59","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"## Feature: Adding Event","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"To add a Deadline task:","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"event [task\u0027s description] /at [date in YYYY-MM-DD hh:mm]","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"For example to add a CS2101 presentation at 12/9/2022 8:00 am:","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"event CS2101 presentation /at 2022-12-09 08:00","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"## Feature: List","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"To get a list of all tasks added:","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"which will display:","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"2. [D][]ip submission (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"3. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"## Feature: Mark task as done","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"Given the above list, you can perform:","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"mark 2","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"To mark the second task as done,","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"2. [D][X]ip submission (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"3. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"## Feature: Unmark task as done","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"Given the above list, you can perform:","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"unmark 2","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"To unmark the second task as done,","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"2. [D][]ip submission (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"3. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"## Feature: Delete","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"Suppose we want to delete the second task in the above list:","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"delete 2","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"Which results in our list becoming:","lastModifiedDate":"2022-09-14"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"1. [T][]homework","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"2. [E][]CS2101 presentation (at: Sep 12 2022, 8:00 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"## Feature: Sorting Chronologically","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"You can specify if you want to sort either the events or the","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"deadlines in the list in either an increasing or decreasing manner:","lastModifiedDate":"2022-09-14"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"sort [deadline/ event] chrono [increasing/ decreasing]","lastModifiedDate":"2022-09-14"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"Suppose we want to sort the deadlines in the following list of task:","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"1. [D][]homework 4 (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"2. [D][]homework 1 (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"3. [D][]homework 3 (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"4. [D][]homework 2 (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"We just need to input the following:","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"sort deadlines chrono increasing","lastModifiedDate":"2022-09-14"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"which will return:","lastModifiedDate":"2022-09-14"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"1. [D][]homework 1 (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"2. [D][]homework 2 (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"3. [D][]homework 3 (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"4. [D][]homework 4 (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"## Feature: Sorting Lexicographically","lastModifiedDate":"2022-09-14"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"You can specify if you want to sort either the events or the","lastModifiedDate":"2022-09-14"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"deadlines in the list in either an increasing or decreasing manner:","lastModifiedDate":"2022-09-14"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"sort [deadline/ event] lexi [increasing/ decreasing]","lastModifiedDate":"2022-09-14"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"Suppose we want to sort the deadlines in the following list of task:","lastModifiedDate":"2022-09-14"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"1. [D][]def (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"2. [D][]cde (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"3. [D][]abc (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"4. [D][]efg (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"We just need to input the following:","lastModifiedDate":"2022-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"sort deadlines lexi increasing","lastModifiedDate":"2022-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":148,"author":{"gitId":"GarethOng"},"content":"which will return:","lastModifiedDate":"2022-09-14"},{"lineNumber":149,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":150,"author":{"gitId":"GarethOng"},"content":"1. [D][]abc (by:Sep 19 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":151,"author":{"gitId":"GarethOng"},"content":"2. [D][]cde (by:Sep 15 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":152,"author":{"gitId":"GarethOng"},"content":"3. [D][]def (by:Sep 22 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":153,"author":{"gitId":"GarethOng"},"content":"4. [D][]efg (by:Sep 17 2022, 5:59 am)","lastModifiedDate":"2022-09-14"},{"lineNumber":154,"author":{"gitId":"GarethOng"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":155,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"GarethOng":136,"-":19}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperDeadlineFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":" * a description of a task and a deadline","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    private static final DateTimeFormatter TIME_FORMAT \u003d","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"            DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    private LocalTime time;","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    private LocalDate date;","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    private String by;","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"     * Deadline consist of description and deadline.","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"     * @param description description of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"     * @param by deadline of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"     * @throws ImproperDeadlineFormatException if deadline does not follow the format of","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"     *                                         deadline (description) /by YYYY-MM-DD hh:mm","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    public Deadline(String description, String by) throws ImproperDeadlineFormatException {","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        this.by \u003d by; // by: \" YYYY-MM-DD hh:mm\"","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"            String[] arr \u003d by.split(\" \"); // arr: [\"\", \"YYYY-MM-DD\", \"hh:mm\"]","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"            this.date \u003d LocalDate.parse(arr[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"            this.time \u003d LocalTime.parse(arr[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"            throw new ImproperDeadlineFormatException();","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"            throw new ImproperDeadlineFormatException();","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"     * Returns String representation of deadline","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"     * @return String representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"        return \"[D] \"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"                + this.getStatusIcon()","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"                + \" \" + super.description","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"                + \" (by: \"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"                + date.format(DATE_FORMAT)","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"                + \", \"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"                + time.format(TIME_FORMAT)","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"                + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"     * Returns String representation in","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"     * \"D|0 or 1|task|by|\"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"     * where 1 represents the task is marked and 0 otherwise","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"     * @return String representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"    public String toSaveVersion() {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"            return \"D|1|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"                    + super.description","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"                    + \"|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"                    + this.by","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"        return \"D|0|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"                + super.description","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"                + \"|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"                + this.by","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"                + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"     * Returns true if two deadlines share the same","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"     * description and deadline.","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"     * @param obj target Object of comparison","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"     * @return boolean.","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"            Deadline x \u003d (Deadline) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"            if (this.description \u003d\u003d null","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"                    || this.by \u003d\u003d null","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"                    || x.description \u003d\u003d null","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"                    || x.by \u003d\u003d null) {","lastModifiedDate":"2022-09-06"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"                return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"            return this.description.equals(x.description)","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"                    \u0026\u0026 this.by.equals(x.by);","lastModifiedDate":"2022-09-06"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"     * Returns date and time representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"    private LocalDateTime getDateTime() {","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"        return LocalDateTime.of(this.date, this.time);","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"     * Returns 1 if this deadline\u0027s deadline is larger than","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"     * target\u0027s deadline.","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"     * 0 if both deadlines are the same.","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"     * -1 if deadline is smaller than target\u0027s deadline.","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"     * @param deadline target deadline of comparison.","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"     * @return int.","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"    public int compareChronologically(Deadline deadline) {","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"        return this.getDateTime().compareTo(deadline.getDateTime());","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"GarethOng"},"content":"     * Returns 1 if this deadline\u0027s description\u0027s is larger than","lastModifiedDate":"2022-09-13"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"     * target\u0027s description.","lastModifiedDate":"2022-09-13"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"     * 0 if both description are the same.","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"     * -1 if description is smaller than target\u0027s description.","lastModifiedDate":"2022-09-13"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"     * @param deadline target deadline of comparison.","lastModifiedDate":"2022-09-13"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"     * @return int.","lastModifiedDate":"2022-09-13"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"    public int compareLexicographically(Deadline deadline) {","lastModifiedDate":"2022-09-08"},{"lineNumber":145,"author":{"gitId":"GarethOng"},"content":"        return this.description.compareTo(deadline.description);","lastModifiedDate":"2022-09-08"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":147,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":147}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"    private void flip() {","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"        db.flip();","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"        return db;","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"GarethOng":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" * Represents the main entry of the Duke GUI.","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":" * a collection of Ui, taskList and storage","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"public class Duke {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"     * Duke object consist of Ui, taskList and storage","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    public Duke() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"        this.storage.isCreated();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"            this.storage.load(this.taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"            System.out.println(\"PLEASE RESTART DUKE\");","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"            System.out.println(\"CORRUPTED DATA\");","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"     * Returns string output of duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"     * @param input user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"     * @return String.","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"            return c.execute(this.ui, this.taskList, this.storage);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"GarethOng":51}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperEventFormatException;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" * Represents an event.","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object has a description of task","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":" * and the allocated time for the event.","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    private static final DateTimeFormatter TIME_FORMAT \u003d","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"            DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    private LocalDate date;","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    private LocalTime time;","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    private String at;","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     * Event consist of description and allocated time slot.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"     * @param description description of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"     * @param at allocated time slot of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"     * @throws ImproperEventFormatException if event does not follow the format of","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"     *                                         event (description) /at YYYY-MM-DD hh:mm","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"    public Event(String description, String at) throws ImproperEventFormatException {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"            String[] arr \u003d at.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"            this.date \u003d LocalDate.parse(arr[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"            this.time \u003d LocalTime.parse(arr[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"            throw new ImproperEventFormatException();","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"            throw new ImproperEventFormatException();","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"     * Returns String representation of event","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"     * @return String representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"        return \"[E] \" + this.getStatusIcon() + \" \"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"                + super.description","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"                + \" (at: \"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"                + date.format(DATE_FORMAT)","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"                + \", \"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"                + time.format(TIME_FORMAT)","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"                + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"     * Returns String representation in","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"     * \"E|0 or 1|task|at|\"","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"     * where 1 represents the task is marked and 0 otherwise","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"     * @return String representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"    public String toSaveVersion() {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"            return \"E|1|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"                    + super.description","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"                    + \"|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"                    + this.at","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"            return \"E|0|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"                    + super.description","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"                    + \"|\"","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"                    + this.at","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"     * Returns date and time representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"    private LocalDateTime getDateTime() {","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"        return LocalDateTime.of(this.date, this.time);","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"     * Returns 1 if this event\u0027s time slot is larger than","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"     * target\u0027s time slot.","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"     * 0 if both time slot are the same.","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"     * -1 if time slot is smaller than target\u0027s time slot.","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"     * @param event target event of comparison.","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"     * @return int.","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"    public int compareChronologically(Event event) {","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"        return this.getDateTime().compareTo(event.getDateTime());","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"     * Returns 1 if this event\u0027s description\u0027s is larger than","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"     * target\u0027s description.","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"     * 0 if both description are the same.","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"     * -1 if description is smaller than target\u0027s description.","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"     * @param event target event of comparison.","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"     * @return int.","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"    public int compareLexicographically(Event event) {","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"        return this.description.compareTo(event.description);","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"     * Returns true if two events share the same","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"     * description and allocated time slot.","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"     * @param obj target Object of comparison","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"GarethOng"},"content":"     * @return boolean.","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2022-09-06"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"            Event x \u003d (Event) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"            if (this.description \u003d\u003d null","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"GarethOng"},"content":"                    || this.at \u003d\u003d null","lastModifiedDate":"2022-09-06"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"                    || x.description \u003d\u003d null","lastModifiedDate":"2022-09-06"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"                    || x.at \u003d\u003d null) {","lastModifiedDate":"2022-09-06"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"                return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"            return this.description.equals(x.description)","lastModifiedDate":"2022-09-06"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"                    \u0026\u0026 this.at.equals(x.at);","lastModifiedDate":"2022-09-06"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":145,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":147,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":147}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"public class Launcher {","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"GarethOng":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"            stage.show();","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"GarethOng":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"    public void greet() {","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.showGreet(), dukeImage));","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"        );","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"GarethOng":56}},{"path":"src/main/java/duke/Order.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Represents order of sorting either in increasing or decreasing.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public enum Order {","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    increasing,","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    decreasing","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"GarethOng":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import duke.command.MarkStatusCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"import duke.command.UnmarkStatusCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.BlankCommandException;","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.BlankDescriptionException;","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.CommandNotFoundException;","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperDeadlineFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperEventFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.InvalidNumberException;","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.NoDateException;","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":" * Represents a parser to understand instruction coming from user.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":" * Reads user input and outputs the relevant command.","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"public class Parser {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     * Returns interpreted command of user input.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"     * @param input User input.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"     * @return interpreted Command.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"     * @throws BlankCommandException If input is blank.","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"     * @throws BlankDescriptionException If description is blank","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"     *                                   when user is inputting","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"     *                                   complex instruction.","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"            throw new BlankCommandException();","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"        // inputArr: [\"keyword\", \"description\"]","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"        String keyword \u003d inputArr[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"            return parseSimpleCommand(keyword);","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"        if (inputArr[1].isBlank()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"            throw new BlankDescriptionException();","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"        String description \u003d inputArr[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"        return parseComplexCommand(keyword, description);","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"    private static Command parseSimpleCommand(String keyword) throws CommandNotFoundException {","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"        case (\"bye\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"        case (\"list\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"            throw new CommandNotFoundException(keyword);","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"    private static Command parseComplexCommand(String keyword, String description) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"        case (\"find\"):","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"            return new FindCommand(description);","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"        case (\"todo\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"            ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"            return new AddCommand(toDo);","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"        case (\"deadline\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"            // description: \"(deadlineTask) /by (by)\"","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"            String[] deadlineArr \u003d description.split(\" /by\", 2);","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"            // deadlineArr: [\"deadlineTask\", \" by\"]","lastModifiedDate":"2022-09-06"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"            if (deadlineArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"                throw new ImproperDeadlineFormatException();","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"            String deadlineTask \u003d deadlineArr[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"            String by \u003d deadlineArr[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"            if (by.isBlank()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"                throw new NoDateException();","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"            Deadline deadline \u003d new Deadline(deadlineTask, by);","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"        case (\"event\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"            // description: \"(EventTask) /at (at)\"","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"            String[] eventArr \u003d description.split(\" /at\", 2);","lastModifiedDate":"2022-09-06"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"            // eventArr: [\"eventTask\", \"at\"]","lastModifiedDate":"2022-09-06"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"            if (eventArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"                throw new ImproperEventFormatException();","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"            String evenTask \u003d eventArr[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"            String at \u003d eventArr[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"            if (at.isBlank()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"                throw new NoDateException();","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"            Event event \u003d new Event(evenTask, at);","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"            return new AddCommand(event);","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"        case (\"sort\"):","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"            // description: \"(deadline/ event) (chrono/ lexi) (increasing/ decreasing)\"","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"            String[] sortArr \u003d description.split(\" \", 3);","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"            // sortArr: [\"(deadline/ event)\", \"chrono/ lexi)\", \"increasing/ decreasing)\"]","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"            if (sortArr.length \u003c 3) {","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"                throw new ImproperEventFormatException();","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"            if (sortArr[1].equals(\"chrono\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"                return new SortCommand(","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"                        TypeOfTask.valueOf(sortArr[0]),","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"                        Order.valueOf(sortArr[2]),","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"                        true","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"                );","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"            if (sortArr[1].equals(\"lexi\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"                return new SortCommand(","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"                        TypeOfTask.valueOf(sortArr[0]),","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"                        Order.valueOf(sortArr[2]),","lastModifiedDate":"2022-09-08"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"                        false","lastModifiedDate":"2022-09-08"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"                );","lastModifiedDate":"2022-09-08"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"            throw new ImproperEventFormatException();","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"        case (\"mark\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"                int x \u003d Integer.valueOf(description);","lastModifiedDate":"2022-09-06"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"                return new MarkStatusCommand(x);","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"GarethOng"},"content":"        case (\"unmark\"):","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"                int x \u003d Integer.valueOf(description);","lastModifiedDate":"2022-09-06"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"                return new UnmarkStatusCommand(x);","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"GarethOng"},"content":"        case (\"delete\"):","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"                int x \u003d Integer.valueOf(description);","lastModifiedDate":"2022-09-06"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"                return new DeleteCommand(x);","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"        default:","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"            throw new CommandNotFoundException(description);","lastModifiedDate":"2022-09-06"},{"lineNumber":145,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":147,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"GarethOng":147}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperDeadlineFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperEventFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":" * Represents a storage of task generated by user.","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":" * a collection of Tasks  e.g., \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"public class Storage {","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    private static final String FILE_NAME \u003d \"storage.txt\";","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    private static final String DIVIDER \u003d \"[|]\";","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    private final File storageFile;","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    public Storage() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"        this.storageFile \u003d new File(FILE_NAME);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"     * Checks if storage.txt file has been created.","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     * If not created, storage.txt file will created in","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"     * ./storage.txt or .\\storage.txt","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    public void isCreated() {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            this.storageFile.createNewFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"            System.out.println(\"COULD NOT CREATE NEW FILE\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"                    + \"REASON: \"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"                    + e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"     * Load data stored in storage.txt file into the","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"     * taskList","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"     * @param taskList target taskList where data from storage.txt","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"     *                 will be stored into.","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"     * @throws FileNotFoundException If storage.txt file not found.","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"     * @throws ImproperDeadlineFormatException If deadline data not formatted correctly.","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"     * @throws ImproperEventFormatException If event data not formatted correctly.","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"    public void load(TaskList taskList)","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"            throws FileNotFoundException,","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"            ImproperDeadlineFormatException,","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"            ImproperEventFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"        assert taskList.size() \u003d\u003d 0 : \"task list should be empty before loading existing data\";","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"        Scanner reader \u003d new Scanner(this.storageFile);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"        while (reader.hasNext()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"            String curr \u003d reader.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"            // curr: T/D/E|0/1|task|date","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"            String[] currArr \u003d curr.split(DIVIDER);","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"            // currArr: [\"T/D/E\", \"0/1\", \"task\", \"date\"]","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"            String currKeyword \u003d currArr[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"            String isDone \u003d currArr[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"            switch (currKeyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"            case (\"T\"):","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"                    Task toDo \u003d new ToDo(currArr[2]);","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"                    toDo.toggleStatus();","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"                    taskList.addTask(toDo);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"                taskList.addTask(new ToDo(currArr[2]));","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"            case (\"D\"):","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"                    Task deadline \u003d new Deadline(currArr[2], currArr[3]);","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"                    deadline.toggleStatus();","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"                    taskList.addTask(deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"                taskList.addTask(new Deadline(currArr[2], currArr[3]));","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"            case (\"E\"):","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"                    Task event \u003d new Event(currArr[2], currArr[3]);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"                    event.toggleStatus();","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"                    taskList.addTask(event);","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"                taskList.addTask(new Event(currArr[2], currArr[3]));","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"            default:","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"     * Updates the data stored in the storage.txt file.","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"     * @param taskList target taskList to extract new data from.","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"            storageFile.delete();","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"            FileWriter writer \u003d new FileWriter(FILE_NAME);","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"            writer.write(taskList.generateSave());","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"            writer.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"            System.out.println(\"CANNOT SAVE\");","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"GarethOng":114}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import java.util.List;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" * Represents a Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object has","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":" * description and done status","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"     * Returns a task with a description and","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"     * is undone.","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"     * @param description description of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     * Returns string representation of task status.","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"     * @return string representation of task status.","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"     * Change the status of the task.","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"    public void toggleStatus() {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"        this.isDone \u003d !isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"     * Returns boolean representation of task status.","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"     * @return boolean.","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"     * Compares if two task are the same.","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"     * @param obj Object of comparison.","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"     * @return string representation of task status.","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"            Task x \u003d (Task) obj;","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"            if (this.description \u003d\u003d null || x.description \u003d\u003d null) {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"                return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"            return this.description.equals(x.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"     * Returns true if description matches keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"     * @param keyword target keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"     * @return boolean.","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"    public boolean isMatchKeyword(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"        Stream\u003cString\u003e matched \u003d Arrays.stream(","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"                this.description.split(\" \"));","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"        List\u003cString\u003e filtered \u003d matched","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"                .filter(str -\u003e str.equals(keyword))","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"        return filtered.size() \u003e 0;","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"     * Returns compact string representation of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"     * @return string representation.","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"    public abstract String toSaveVersion();","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":93}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import java.util.List;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.CannotFindTaskException;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.CannotSortException;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.NoMatchingKeywordException;","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.TaskMarkedException;","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.TaskUnmarkedException;","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":" * Represents a list of tasks generated by user.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":" * a collection of Task","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"public class TaskList {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * Creates a taskList that can hold","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     * size of 100 tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"     * Creates a taskList from an existing list of task.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"    public TaskList(List\u003c? extends Task\u003e taskList) {","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"     * Adds task to the taskList","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"     * @param task target task to be added to taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"     * Returns a taskList that fits the target keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"     * @param keyword target keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"     * @return taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"     * @throws NoMatchingKeywordException If no task matches keyword.","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"    public TaskList findTask(String keyword) throws NoMatchingKeywordException {","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"        assert !keyword.isBlank() : \"keyword should not be blank\";","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"        List\u003cTask\u003e filtered \u003d this.taskList.stream()","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"                .filter(task -\u003e task.isMatchKeyword(keyword))","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"        TaskList filteredTaskList \u003d new TaskList(filtered);","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"        if (filteredTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"            throw new NoMatchingKeywordException(keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"        return new TaskList(filtered);","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"     * Returns list of deadlines sorted in chronological order.","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"     * @param order decreasing or increasing order.","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"     * @return TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"    public TaskList sortDeadlineChronologically(Order order) {","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"        Comparator\u003cDeadline\u003e deadlineComparator \u003d (d1, d2) -\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"                d1.compareChronologically(d2);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"        Stream\u003cDeadline\u003e deadlineStream \u003d taskList","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"                .stream()","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"                .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"                .map(task -\u003e (Deadline) task);","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"        if (order \u003d\u003d Order.decreasing) {","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"            List\u003cDeadline\u003e result \u003d deadlineStream","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"                    .sorted(deadlineComparator.reversed())","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"            return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"        List\u003cDeadline\u003e result \u003d deadlineStream","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"                .sorted(deadlineComparator)","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"        return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"     * Returns list of deadlines sorted in lexicographical order.","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"     * @param order decreasing or increasing order.","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"     * @return TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"    public TaskList sortDeadlineLexicographically(Order order) {","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"        Comparator\u003cDeadline\u003e deadlineComparator \u003d (d1, d2) -\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"                d1.compareLexicographically(d2);","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"        Stream\u003cDeadline\u003e deadlineStream \u003d taskList.stream()","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"                .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"                .map(task -\u003e (Deadline) task);","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"        if (order \u003d\u003d Order.increasing) {","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"            List\u003cDeadline\u003e result \u003d deadlineStream","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"                    .sorted(deadlineComparator.reversed())","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"            return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"        List\u003cTask\u003e result \u003d deadlineStream","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"                .sorted(deadlineComparator)","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"        return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"     * Returns list of events sorted in chronological order.","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"     * @param order decreasing or increasing order.","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"     * @return TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"    public TaskList sortEventChronologically(Order order) {","lastModifiedDate":"2022-09-08"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"        Comparator\u003cEvent\u003e eventComparator \u003d (e1, e2) -\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"                e1.compareChronologically(e2);","lastModifiedDate":"2022-09-08"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"        Stream\u003cEvent\u003e eventStream \u003d taskList","lastModifiedDate":"2022-09-08"},{"lineNumber":129,"author":{"gitId":"GarethOng"},"content":"                .stream()","lastModifiedDate":"2022-09-08"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"                .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2022-09-08"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"                .map(task -\u003e (Event) task);","lastModifiedDate":"2022-09-08"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"        if (order \u003d\u003d Order.decreasing) {","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"            List\u003cEvent\u003e result \u003d eventStream","lastModifiedDate":"2022-09-08"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"                    .sorted(eventComparator.reversed())","lastModifiedDate":"2022-09-08"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":136,"author":{"gitId":"GarethOng"},"content":"            return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"        List\u003cEvent\u003e result \u003d eventStream","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"                .sorted(eventComparator)","lastModifiedDate":"2022-09-08"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"        return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":145,"author":{"gitId":"GarethOng"},"content":"     * Returns list of events sorted in lexicographical order.","lastModifiedDate":"2022-09-13"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":147,"author":{"gitId":"GarethOng"},"content":"     * @param order decreasing or increasing order.","lastModifiedDate":"2022-09-13"},{"lineNumber":148,"author":{"gitId":"GarethOng"},"content":"     * @return TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":149,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":150,"author":{"gitId":"GarethOng"},"content":"    public TaskList sortEventLexicographically(Order order) {","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"GarethOng"},"content":"        Comparator\u003cEvent\u003e eventComparator \u003d (e1, e2) -\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":152,"author":{"gitId":"GarethOng"},"content":"                e1.compareLexicographically(e2);","lastModifiedDate":"2022-09-08"},{"lineNumber":153,"author":{"gitId":"GarethOng"},"content":"        Stream\u003cEvent\u003e eventStream \u003d taskList.stream()","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"GarethOng"},"content":"                .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"GarethOng"},"content":"                .map(task -\u003e (Event) task);","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"GarethOng"},"content":"        if (order \u003d\u003d Order.increasing) {","lastModifiedDate":"2022-09-08"},{"lineNumber":157,"author":{"gitId":"GarethOng"},"content":"            List\u003cEvent\u003e result \u003d eventStream","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"GarethOng"},"content":"                    .sorted(eventComparator.reversed())","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"GarethOng"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":160,"author":{"gitId":"GarethOng"},"content":"            return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":161,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":162,"author":{"gitId":"GarethOng"},"content":"        List\u003cTask\u003e result \u003d eventStream","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"GarethOng"},"content":"                .sorted(eventComparator)","lastModifiedDate":"2022-09-08"},{"lineNumber":164,"author":{"gitId":"GarethOng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-08"},{"lineNumber":165,"author":{"gitId":"GarethOng"},"content":"        return new TaskList(result);","lastModifiedDate":"2022-09-08"},{"lineNumber":166,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":167,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":168,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":169,"author":{"gitId":"GarethOng"},"content":"     * Returns list of deadlines or events","lastModifiedDate":"2022-09-13"},{"lineNumber":170,"author":{"gitId":"GarethOng"},"content":"     * sorted in lexicographical order.","lastModifiedDate":"2022-09-13"},{"lineNumber":171,"author":{"gitId":"GarethOng"},"content":"     * @param typeOfTask deadline or event.","lastModifiedDate":"2022-09-13"},{"lineNumber":172,"author":{"gitId":"GarethOng"},"content":"     * @param order decreasing or increasing order.","lastModifiedDate":"2022-09-13"},{"lineNumber":173,"author":{"gitId":"GarethOng"},"content":"     * @return TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":174,"author":{"gitId":"GarethOng"},"content":"     * @throws CannotSortException if taskList cannot be sorted.","lastModifiedDate":"2022-09-13"},{"lineNumber":175,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":176,"author":{"gitId":"GarethOng"},"content":"    public TaskList sortLexicographically(","lastModifiedDate":"2022-09-13"},{"lineNumber":177,"author":{"gitId":"GarethOng"},"content":"            TypeOfTask typeOfTask,","lastModifiedDate":"2022-09-13"},{"lineNumber":178,"author":{"gitId":"GarethOng"},"content":"            Order order)","lastModifiedDate":"2022-09-13"},{"lineNumber":179,"author":{"gitId":"GarethOng"},"content":"            throws CannotSortException {","lastModifiedDate":"2022-09-13"},{"lineNumber":180,"author":{"gitId":"GarethOng"},"content":"        if (typeOfTask \u003d\u003d TypeOfTask.deadline) {","lastModifiedDate":"2022-09-08"},{"lineNumber":181,"author":{"gitId":"GarethOng"},"content":"            return sortDeadlineLexicographically(order);","lastModifiedDate":"2022-09-08"},{"lineNumber":182,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":183,"author":{"gitId":"GarethOng"},"content":"        if (typeOfTask \u003d\u003d TypeOfTask.event) {","lastModifiedDate":"2022-09-08"},{"lineNumber":184,"author":{"gitId":"GarethOng"},"content":"            return sortEventLexicographically(order);","lastModifiedDate":"2022-09-08"},{"lineNumber":185,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":186,"author":{"gitId":"GarethOng"},"content":"        throw new CannotSortException(\"CANNOT SORT TODO LEXICOGRAPHICALLY\");","lastModifiedDate":"2022-09-08"},{"lineNumber":187,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":188,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":189,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":190,"author":{"gitId":"GarethOng"},"content":"     * Returns list of deadlines or events","lastModifiedDate":"2022-09-13"},{"lineNumber":191,"author":{"gitId":"GarethOng"},"content":"     * sorted in chronological order.","lastModifiedDate":"2022-09-13"},{"lineNumber":192,"author":{"gitId":"GarethOng"},"content":"     * @param typeOfTask deadline or event.","lastModifiedDate":"2022-09-13"},{"lineNumber":193,"author":{"gitId":"GarethOng"},"content":"     * @param order decreasing or increasing order.","lastModifiedDate":"2022-09-13"},{"lineNumber":194,"author":{"gitId":"GarethOng"},"content":"     * @return TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":195,"author":{"gitId":"GarethOng"},"content":"     * @throws CannotSortException if taskList cannot be sorted.","lastModifiedDate":"2022-09-13"},{"lineNumber":196,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":197,"author":{"gitId":"GarethOng"},"content":"    public TaskList sortChronologically(","lastModifiedDate":"2022-09-13"},{"lineNumber":198,"author":{"gitId":"GarethOng"},"content":"            TypeOfTask typeOfTask,","lastModifiedDate":"2022-09-13"},{"lineNumber":199,"author":{"gitId":"GarethOng"},"content":"            Order order)","lastModifiedDate":"2022-09-13"},{"lineNumber":200,"author":{"gitId":"GarethOng"},"content":"            throws CannotSortException {","lastModifiedDate":"2022-09-13"},{"lineNumber":201,"author":{"gitId":"GarethOng"},"content":"        if (typeOfTask \u003d\u003d TypeOfTask.deadline) {","lastModifiedDate":"2022-09-08"},{"lineNumber":202,"author":{"gitId":"GarethOng"},"content":"            return sortDeadlineChronologically(order);","lastModifiedDate":"2022-09-08"},{"lineNumber":203,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":204,"author":{"gitId":"GarethOng"},"content":"        if (typeOfTask \u003d\u003d TypeOfTask.event) {","lastModifiedDate":"2022-09-08"},{"lineNumber":205,"author":{"gitId":"GarethOng"},"content":"            return sortEventChronologically(order);","lastModifiedDate":"2022-09-08"},{"lineNumber":206,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":207,"author":{"gitId":"GarethOng"},"content":"        throw new CannotSortException(\"CANNOT SORT TODO CHRONOLOGICALLY\");","lastModifiedDate":"2022-09-08"},{"lineNumber":208,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":209,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":210,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":211,"author":{"gitId":"GarethOng"},"content":"     * Returns a task that gets marked.","lastModifiedDate":"2022-09-13"},{"lineNumber":212,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":213,"author":{"gitId":"GarethOng"},"content":"     * @param task target task.","lastModifiedDate":"2022-09-13"},{"lineNumber":214,"author":{"gitId":"GarethOng"},"content":"     * @return Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":215,"author":{"gitId":"GarethOng"},"content":"     * @throws TaskMarkedException if target task already marked.","lastModifiedDate":"2022-09-13"},{"lineNumber":216,"author":{"gitId":"GarethOng"},"content":"     * @throws CannotFindTaskException if target task cannot be found.","lastModifiedDate":"2022-09-13"},{"lineNumber":217,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":218,"author":{"gitId":"GarethOng"},"content":"    public Task markStatus(int task) throws TaskMarkedException, CannotFindTaskException {","lastModifiedDate":"2022-09-13"},{"lineNumber":219,"author":{"gitId":"GarethOng"},"content":"        assert task \u003e\u003d 0 : \"task index should be more than or equal to 0\";","lastModifiedDate":"2022-09-06"},{"lineNumber":220,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":221,"author":{"gitId":"GarethOng"},"content":"            Task curr \u003d taskList.get(task - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":222,"author":{"gitId":"GarethOng"},"content":"            if (curr.isDone()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":223,"author":{"gitId":"GarethOng"},"content":"                throw new TaskMarkedException(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"GarethOng"},"content":"            curr.toggleStatus();","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"GarethOng"},"content":"            return curr;","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"GarethOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":228,"author":{"gitId":"GarethOng"},"content":"            throw new CannotFindTaskException();","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":230,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":232,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":233,"author":{"gitId":"GarethOng"},"content":"     * Returns a task to get unmarked.","lastModifiedDate":"2022-09-13"},{"lineNumber":234,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":235,"author":{"gitId":"GarethOng"},"content":"     * @param task target task.","lastModifiedDate":"2022-09-13"},{"lineNumber":236,"author":{"gitId":"GarethOng"},"content":"     * @return Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":237,"author":{"gitId":"GarethOng"},"content":"     * @throws TaskUnmarkedException if target task already unmarked.","lastModifiedDate":"2022-09-13"},{"lineNumber":238,"author":{"gitId":"GarethOng"},"content":"     * @throws CannotFindTaskException if target task cannot be found.","lastModifiedDate":"2022-09-13"},{"lineNumber":239,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":240,"author":{"gitId":"GarethOng"},"content":"    public Task unmarkStatus(int task) throws TaskUnmarkedException, CannotFindTaskException {","lastModifiedDate":"2022-09-13"},{"lineNumber":241,"author":{"gitId":"GarethOng"},"content":"        assert task \u003e\u003d 0 : \"task index should be more than or equal to 0\";","lastModifiedDate":"2022-09-06"},{"lineNumber":242,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"GarethOng"},"content":"            Task curr \u003d taskList.get(task - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":244,"author":{"gitId":"GarethOng"},"content":"            if (!curr.isDone()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":245,"author":{"gitId":"GarethOng"},"content":"                throw new TaskUnmarkedException(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":246,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"GarethOng"},"content":"            curr.toggleStatus();","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"GarethOng"},"content":"            return curr;","lastModifiedDate":"2022-08-18"},{"lineNumber":249,"author":{"gitId":"GarethOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"GarethOng"},"content":"            throw new CannotFindTaskException();","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":252,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":254,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":255,"author":{"gitId":"GarethOng"},"content":"     * Find target task and delete it.","lastModifiedDate":"2022-09-13"},{"lineNumber":256,"author":{"gitId":"GarethOng"},"content":"     * Return task that is deleted.","lastModifiedDate":"2022-09-13"},{"lineNumber":257,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":258,"author":{"gitId":"GarethOng"},"content":"     * @param task index of task","lastModifiedDate":"2022-09-13"},{"lineNumber":259,"author":{"gitId":"GarethOng"},"content":"     * @return Task.","lastModifiedDate":"2022-09-13"},{"lineNumber":260,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":261,"author":{"gitId":"GarethOng"},"content":"    public Task deleteTask(int task) throws CannotFindTaskException {","lastModifiedDate":"2022-09-13"},{"lineNumber":262,"author":{"gitId":"GarethOng"},"content":"        assert task \u003e\u003d 0 : \"task index should be more than or equal to 0\";","lastModifiedDate":"2022-09-06"},{"lineNumber":263,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":264,"author":{"gitId":"GarethOng"},"content":"            Task curr \u003d taskList.get(task - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":265,"author":{"gitId":"GarethOng"},"content":"            taskList.remove(task - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":266,"author":{"gitId":"GarethOng"},"content":"            return curr;","lastModifiedDate":"2022-08-19"},{"lineNumber":267,"author":{"gitId":"GarethOng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":268,"author":{"gitId":"GarethOng"},"content":"            throw new CannotFindTaskException();","lastModifiedDate":"2022-08-19"},{"lineNumber":269,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":270,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":271,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":272,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":273,"author":{"gitId":"GarethOng"},"content":"     * Returns string representation of TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":274,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":275,"author":{"gitId":"GarethOng"},"content":"     * @return String.","lastModifiedDate":"2022-09-13"},{"lineNumber":276,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":277,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":278,"author":{"gitId":"GarethOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":279,"author":{"gitId":"GarethOng"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-18"},{"lineNumber":280,"author":{"gitId":"GarethOng"},"content":"        Object[] taskArr \u003d this.taskList.toArray();","lastModifiedDate":"2022-09-08"},{"lineNumber":281,"author":{"gitId":"GarethOng"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":282,"author":{"gitId":"GarethOng"},"content":"            result +\u003d (i + 1)","lastModifiedDate":"2022-08-26"},{"lineNumber":283,"author":{"gitId":"GarethOng"},"content":"                    + \". \"","lastModifiedDate":"2022-08-26"},{"lineNumber":284,"author":{"gitId":"GarethOng"},"content":"                    + taskArr[i].toString()","lastModifiedDate":"2022-08-26"},{"lineNumber":285,"author":{"gitId":"GarethOng"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":286,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":287,"author":{"gitId":"GarethOng"},"content":"        return result;","lastModifiedDate":"2022-08-18"},{"lineNumber":288,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":289,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":290,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":291,"author":{"gitId":"GarethOng"},"content":"     * Returns int size of taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":292,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":293,"author":{"gitId":"GarethOng"},"content":"     * @return int.","lastModifiedDate":"2022-09-13"},{"lineNumber":294,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":295,"author":{"gitId":"GarethOng"},"content":"    public int size() {","lastModifiedDate":"2022-08-26"},{"lineNumber":296,"author":{"gitId":"GarethOng"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":297,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":298,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":299,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":300,"author":{"gitId":"GarethOng"},"content":"     * Returns int size of taskList with greetings.","lastModifiedDate":"2022-09-13"},{"lineNumber":301,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":302,"author":{"gitId":"GarethOng"},"content":"     * @return String.","lastModifiedDate":"2022-09-13"},{"lineNumber":303,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":304,"author":{"gitId":"GarethOng"},"content":"    public String numOfTask() {","lastModifiedDate":"2022-08-18"},{"lineNumber":305,"author":{"gitId":"GarethOng"},"content":"        if (taskList.size() \u003e 1) {","lastModifiedDate":"2022-08-18"},{"lineNumber":306,"author":{"gitId":"GarethOng"},"content":"            return \"YOU HAVE \"","lastModifiedDate":"2022-08-26"},{"lineNumber":307,"author":{"gitId":"GarethOng"},"content":"                    + taskList.size()","lastModifiedDate":"2022-08-26"},{"lineNumber":308,"author":{"gitId":"GarethOng"},"content":"                    + \" TASKS!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":309,"author":{"gitId":"GarethOng"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":310,"author":{"gitId":"GarethOng"},"content":"            return \"YOU HAVE \"","lastModifiedDate":"2022-08-26"},{"lineNumber":311,"author":{"gitId":"GarethOng"},"content":"                    + taskList.size()","lastModifiedDate":"2022-08-26"},{"lineNumber":312,"author":{"gitId":"GarethOng"},"content":"                    + \" TASK!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":313,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":314,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":315,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":316,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":317,"author":{"gitId":"GarethOng"},"content":"     * Returns compact String representation","lastModifiedDate":"2022-09-13"},{"lineNumber":318,"author":{"gitId":"GarethOng"},"content":"     * of taskList","lastModifiedDate":"2022-09-13"},{"lineNumber":319,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":320,"author":{"gitId":"GarethOng"},"content":"     * @return String.","lastModifiedDate":"2022-09-13"},{"lineNumber":321,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":322,"author":{"gitId":"GarethOng"},"content":"    public String generateSave() {","lastModifiedDate":"2022-08-23"},{"lineNumber":323,"author":{"gitId":"GarethOng"},"content":"        String result \u003d taskList","lastModifiedDate":"2022-09-08"},{"lineNumber":324,"author":{"gitId":"GarethOng"},"content":"                .stream()","lastModifiedDate":"2022-09-08"},{"lineNumber":325,"author":{"gitId":"GarethOng"},"content":"                .map(task -\u003e task.toSaveVersion())","lastModifiedDate":"2022-09-08"},{"lineNumber":326,"author":{"gitId":"GarethOng"},"content":"                .reduce(\"\", (res, task) -\u003e res + task);","lastModifiedDate":"2022-09-08"},{"lineNumber":327,"author":{"gitId":"GarethOng"},"content":"        return result;","lastModifiedDate":"2022-08-23"},{"lineNumber":328,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":329,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":329}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Represents a ToDo task where it only has description with no time expiry.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"     * @return String representation in","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"     *         \"[T] [status] task\"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"        return \"[T] \"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"                + this.getStatusIcon()","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"                + \" \"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"                + super.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * return String representation to be stored in Storage","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     * @return String representation in","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"     *         \"T|0 or 1|task\"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     *         where 1 represents the task is marked and 0 otherwise","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"    public String toSaveVersion() {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"            return \"T|1|\"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"                    + super.description","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"            return \"T|0|\"","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"                    + super.description","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":42}},{"path":"src/main/java/duke/TypeOfTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Represents type of task (event, deadline, todo).","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public enum TypeOfTask {","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    event,","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    deadline,","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    todo;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"GarethOng":10}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Represents a Ui representation of Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" * A \u003ccode\u003eUi\u003c/code\u003e object corresponds to","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":" * user interface of Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"public class Ui {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    private static final String GREETING \u003d \"HELLO MY FRIEND! HOW CAN I HELP YOU?\";","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    private static final String BYE \u003d \"GOOD BYE! SEE YOU IN WHILE!\";","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"     * Returns string representation of greeting.","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"     * @return String.","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    public static String showGreet() {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"        return GREETING;","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"     * Returns string representation of bye.","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     * @return String.","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    public String showBye() {","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        return BYE;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"     * Returns task successfully added to taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"     * @param task task to be added.","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"     * @param numOfTask number of task inside taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"     * @return String representation of task added.","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"    public String addSuccess(Task task, String numOfTask) {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"        assert !task.toString().isBlank() : \"task content should not be blank\";","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"        assert !numOfTask.isBlank() : \"number of task should not be blank\";","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"        return \"Added: \" + task.toString() + \"\\n\" + numOfTask;","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"     * Returns list of all tasks.","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"     * @param taskList task to be added.","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"     * @return String representation of all task inside the taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"        return taskList.toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"     * Returns taskList of task found.","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"     * @param findList taskList found.","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"     * @return String representation of taskList found.","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"    public String showFind(TaskList findList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"        return \"HERE ARE THE TASKS THAT YOU REQUESTED:\\n\"","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"                + findList.toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"     * Returns task toggled successfully.","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"     * @param task task to be toggled.","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"     * @return String representation of task toggled.","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"    public String showToggleSuccess(Task task) {","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"        assert !task.toString().isBlank() : \"task content should not be blank\";","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"            return \"I HAVE CHANGED:\\n\" + task.toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"            return \"GOOD JOB MY FRIEND!\\n\" + task.toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"     * Returns task successfully deleted.","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"     * @param task task to be deleted.","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"     * @param numOfTask number of task inside taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"     * @return String representation of task deleted.","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"    public String showDeleteSuccess(Task task, String numOfTask) {","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"        assert !task.toString().isBlank() : \"task content should not be blank\";","lastModifiedDate":"2022-09-06"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"        return \"Deleted: \" + task.toString() + \"\\n\" + numOfTask;","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"GarethOng":91}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" * Representation of a command to add task to the taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    private Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"     * Represents a command to add task into UI and Storage","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"     * Attempts to add task to Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     * If successful, Ui shows success.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * @throws DukeException if task description does not fit specified format.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"        return ui.addSuccess(task, taskList.numOfTask());","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof AddCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"            AddCommand x \u003d (AddCommand) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"            if (this.task \u003d\u003d null || x.task \u003d\u003d null) {","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"                return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"            return this.task.equals(x.task);","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":46}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" * Representation of a command passed to Duke to be processed.","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"     * Change if the current command is an exit command.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    public void toggleExit() {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"        this.isExit \u003d !isExit;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     * Return if Command signals exit.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * @return isExit status of Command","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    public Boolean isExit() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    public abstract String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"GarethOng":33}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" * Representation of a command to delete task to the taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"    private int deleteTask;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"     * Command that represents the removal of task from Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    public DeleteCommand(int deleteTask) {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"        this.deleteTask \u003d deleteTask;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     * Attempts to remove task specified from the taskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * If successful, Ui shows success on CLI.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     * @throws DukeException when task specified is in improper format","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"     *         or task cannot be found.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"        Task success \u003d taskList.deleteTask(this.deleteTask);","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"        return ui.showDeleteSuccess(success, taskList.numOfTask());","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"            DeleteCommand x \u003d (DeleteCommand) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"            return this.deleteTask \u003d\u003d (x.deleteTask);","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"GarethOng":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":" * Representation of a command for Duke to perform exit.","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"     * Duke exits","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"        toggleExit();","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"        return ui.showBye();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof ExitCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"            return true;","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"GarethOng":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.NoMatchingKeywordException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" * Representation of a command to find a task in taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    private String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"     * Attempts to find task specified from the taskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"     * If successful, Ui shows success on CLI.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"     * @throws DukeException when task specified is in improper format","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"     *         or task cannot be found.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) throws NoMatchingKeywordException {","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        TaskList success \u003d taskList.findTask(this.keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"        return ui.showFind(success);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof FindCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            FindCommand x \u003d (FindCommand) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"            if (this.keyword \u003d\u003d null || x.keyword \u003d\u003d null) {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"                return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"            return this.keyword.equals(x.keyword);","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"GarethOng":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":" * Representation of a command to list out all task in taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"     * Display list of current task to user.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof ListCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"            return true;","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":27}},{"path":"src/main/java/duke/command/MarkStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" * Representation of a command to mark a task as done.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"public class MarkStatusCommand extends Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    private int toggleTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"     * Representation of a command to mark a task with a specified index.","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    public MarkStatusCommand(int toggleTask) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"        this.toggleTask \u003d toggleTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     * Mark task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * @throws DukeException if task cannot be found within the taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        Task success \u003d taskList.markStatus(this.toggleTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"        return ui.showToggleSuccess(success);","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof MarkStatusCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"            MarkStatusCommand x \u003d (MarkStatusCommand) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"            return this.toggleTask \u003d\u003d x.toggleTask;","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":43}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Order;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.TypeOfTask;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.CannotSortException;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":" * Represents a Sort Command","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    private TypeOfTask typeOfTask;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    private Order order;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    private boolean isChronological;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"     * SortCommand that compose of typeOfTask, order","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"     * and isChronological","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"     * @param typeOfTask typeOfTask.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"     * @param order order.","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"     * @param isChronological if sorting is chronological.","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"    public SortCommand(TypeOfTask typeOfTask, Order order, boolean isChronological) {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"        this.isChronological \u003d isChronological;","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"     * Returns Ui output of successfully sorting the taskList","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"     * @param ui ui of Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"     * @param taskList taskList to be sorted.","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"     * @param storage storage where task is stored.","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"     * @throws CannotSortException if taskList cannot be sorted.","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) throws CannotSortException {","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"        if (isChronological) {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"            TaskList sortedTaskList \u003d taskList.sortChronologically(typeOfTask, order);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"            return ui.showList(sortedTaskList);","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"        TaskList sortedTaskList \u003d taskList.sortLexicographically(typeOfTask, order);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"        return ui.showList(sortedTaskList);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"GarethOng":50}},{"path":"src/main/java/duke/command/UnmarkStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.command;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":" * Representation of a command to unmark a task as done.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"public class UnmarkStatusCommand extends Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    private int toggleTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    public UnmarkStatusCommand(int toggleTask) {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"        this.toggleTask \u003d toggleTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    /*","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"     * Unmark a task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"     * @throws DukeException when task unable to be found in taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"        Task success \u003d taskList.unmarkStatus(this.toggleTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        return ui.showToggleSuccess(success);","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"        if (obj instanceof UnmarkStatusCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"            UnmarkStatusCommand x \u003d (UnmarkStatusCommand) obj;","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            return this.toggleTask \u003d\u003d x.toggleTask;","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":38}},{"path":"src/main/java/duke/exceptions/BlankCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user provides a blank input","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class BlankCommandException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    public BlankCommandException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        super(\"BROTHER!\\nYOU CANNOT GIVE ME BLANK :(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":11}},{"path":"src/main/java/duke/exceptions/BlankDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user input complex instruction","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" * without description","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"public class BlankDescriptionException extends DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    public BlankDescriptionException() {","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        super(\"DESCRIPTION OF TASK CANNOT BE BLANK\");","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"GarethOng":11}},{"path":"src/main/java/duke/exceptions/CannotFindTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception when Duke cannot find specified task.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class CannotFindTaskException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    public CannotFindTaskException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"        super(\"BROTHER!\\nI CANNOT FIND THE TASK THAT YOU WANT TO MODIFY!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":10}},{"path":"src/main/java/duke/exceptions/CannotSortException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where Duke cannot sort taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class CannotSortException extends DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    public CannotSortException(String message) {","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"        super(message);","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"GarethOng":10}},{"path":"src/main/java/duke/exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user input does not match valid commands.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class CommandNotFoundException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    public CommandNotFoundException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        super(message + \" DOES NOT EXISTS\");","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":12}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user error when interacting with Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"GarethOng":10}},{"path":"src/main/java/duke/exceptions/ImproperDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user input does not follow","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" * the specified format for deadlines.","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"public class ImproperDeadlineFormatException extends DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"     * Provide user with the specified format to create","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"     * a Deadline via Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    public ImproperDeadlineFormatException() {","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"        super(\"IMPROPER DEADLINE FORMAT. KINDLY FOLLOW:\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"                + \"deadline task /by YYYY-MM-DD hh:mm\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"                + \"i.e deadline CS2109S PS1\"","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"                + \" /at 2000-10-10 23:00\");","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"GarethOng":19}},{"path":"src/main/java/duke/exceptions/ImproperEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" * user event input does not meet specified format.","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"public class ImproperEventFormatException extends DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"     * Provide user with the specified format to create","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"     * an Event via Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    public ImproperEventFormatException() {","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"        super(\"IMPROPER EVENT FORMAT. KINDLY FOLLOW:\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"                + \"event task /at YYYY-MM-DD hh:mm\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"                + \"i.e event cry\"","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"                + \" /at 2000-10-10 23:00\");","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"GarethOng":19}},{"path":"src/main/java/duke/exceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user specified an index that is out of bound of taskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class InvalidNumberException extends DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        super(\"PLEASE PROVIDE A VALID NUMBER!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"GarethOng":11}},{"path":"src/main/java/duke/exceptions/NoDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where user did not input date of deadline/ event.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class NoDateException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    public NoDateException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        super(\"YOU DID NOT PROVIDE A DATE!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":11}},{"path":"src/main/java/duke/exceptions/NoMatchingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where no task matches user\u0027s input.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class NoMatchingKeywordException extends DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    public NoMatchingKeywordException(String msg) {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"        super(\"NO TASK FOUND BASED ON: \" + msg);","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"GarethOng":10}},{"path":"src/main/java/duke/exceptions/TaskMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where task to be marked already marked.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class TaskMarkedException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"     * Informs user that task that specified to be marked","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"     * is already marked.","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"    public TaskMarkedException(int message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"        super(\"TASK \" + message + \" ALREADY MARKED!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":16}},{"path":"src/main/java/duke/exceptions/TaskUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":" * Representation of an exception where task to be unmarked is already unmarked.","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"public class TaskUnmarkedException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    public TaskUnmarkedException(int message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"        super(\"TASK \" + message + \" IS ALREADY UNMARKED!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"GarethOng":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"            \u003cFont name\u003d\"American Typewriter\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"59.0\" fitWidth\u003d\"59.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"GarethOng":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #45AAFF;\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"GarethOng":16}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"            Deadline unmarkedTest \u003d new Deadline(\"unmarkedDeadline\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"            Deadline markedTest \u003d new Deadline(\"markedDeadline\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"            markedTest.toggleStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"            String unmarkedTestExpected \u003d \"[D] [ ] unmarkedDeadline (by: Oct 10 2022, 6:00 PM)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"            String markedTestExpected \u003d \"[D] [X] markedDeadline (by: Oct 10 2022, 6:00 PM)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"            assertEquals(unmarkedTestExpected, unmarkedTest.toString(), \"toString an unmarked deadline.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"            assertEquals(markedTestExpected, markedTest.toString(), \"toString a marked deadline.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    void testToSaveVersion() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"            Deadline unmarkedTest \u003d new Deadline(\"unmarkedDeadline\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"            Deadline markedTest \u003d new Deadline(\"markedDeadline\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"            markedTest.toggleStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"            String unmarkedTestExpected \u003d \"D|0|unmarkedDeadline| 2022-10-10 18:00\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"            String markedTestExpected \u003d \"D|1|markedDeadline| 2022-10-10 18:00\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"            assertEquals(unmarkedTestExpected, unmarkedTest.toSaveVersion(), \"toSaveVersion an unmarked deadline.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            assertEquals(markedTestExpected, markedTest.toSaveVersion(), \"toSaveVersion a marked deadline.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"GarethOng":39}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"public class EventTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"    void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"            Event unmarkedTest \u003d new Event(\"unmarkedEvent\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"            Event markedTest \u003d new Event(\"markedEvent\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"            markedTest.toggleStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"            String unmarkedTestExpected \u003d \"[E] [ ] unmarkedEvent (at: Oct 10 2022, 6:00 PM)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"            String markedTestExpected \u003d \"[E] [X] markedEvent (at: Oct 10 2022, 6:00 PM)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"            assertEquals(unmarkedTestExpected, unmarkedTest.toString(), \"toString an unmarked event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"            assertEquals(markedTestExpected, markedTest.toString(), \"toString a marked event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"    void testToSaveVersion() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"            Event unmarkedTest \u003d new Event(\"unmarkedEvent\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"            Event markedTest \u003d new Event(\"markedEvent\", \" 2022-10-10 18:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"            markedTest.toggleStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"            String unmarkedTestExpected \u003d \"E|0|unmarkedEvent| 2022-10-10 18:00\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"            String markedTestExpected \u003d \"E|1|markedEvent| 2022-10-10 18:00\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"            assertEquals(unmarkedTestExpected, unmarkedTest.toSaveVersion(), \"toSaveVersion an unmarked event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            assertEquals(markedTestExpected, markedTest.toSaveVersion(), \"toSaveVersion a marked event.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"GarethOng":39}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    void testParse() {","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"            Command parseByeTest \u003d Parser.parse(\"bye\");","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"            ExitCommand parseByeExpected \u003d new ExitCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"            Command parseListTest \u003d Parser.parse(\"list\");","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"            ListCommand parseListExpected \u003d new ListCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"            Command parseFindTest \u003d Parser.parse(\"find test\");","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"            FindCommand parseFindExpected \u003d new FindCommand(\"test\");","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"            Command parseToDoTest \u003d Parser.parse(\"todo test\");","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"            ToDo toDo \u003d new ToDo(\"test\");","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"            AddCommand parseToDoExpected \u003d new AddCommand(toDo);","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"            Command parseDeadlineTest \u003d Parser.parse(\"deadline \" +","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"                    \"test /by 2000-10-10 23:00\");","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"            Deadline deadline \u003d new Deadline(\"test\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"            AddCommand parseDeadlineExpected \u003d new AddCommand(deadline);","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"            Command parseEventTest \u003d Parser.parse(\"event \" +","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"                    \"test /at 2000-10-10 23:00\");","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"            Event event \u003d new Event(\"test\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"            AddCommand parseEventExpected \u003d new AddCommand(event);","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            Command parseMarkEventTest \u003d Parser.parse(\"mark 0\");","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"            MarkStatusCommand parseMarkEventExpected \u003d","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"                    new MarkStatusCommand(0);","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"            Command parseUnMarkEventTest \u003d Parser.parse(\"unmark 0\");","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"            UnmarkStatusCommand parseUnMarkEventExpected \u003d","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"                    new UnmarkStatusCommand(0);","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"            Command parseDeleteTest \u003d Parser.parse(\"delete 0\");","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"            DeleteCommand parseDeleteExpected \u003d new DeleteCommand(0);","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseByeTest.equals(parseByeExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse bye command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseListTest.equals(parseListExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse list command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseFindTest.equals(parseFindExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse find command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseToDoTest.equals(parseToDoExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse todo command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseDeadlineTest.equals(parseDeadlineExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse deadline command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseEventTest.equals(parseEventExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse event command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseMarkEventTest.equals(parseMarkEventExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse mark task command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseUnMarkEventTest.equals(parseUnMarkEventExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse unmark task command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"            assertEquals(parseDeleteTest.equals(parseDeleteExpected),","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"                    true, \"parse delete task command\");","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"GarethOng":68}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperDeadlineFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.ImproperEventFormatException;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import duke.exceptions.NoMatchingKeywordException;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"public class TaskListTest {","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"    // sample task","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"    ToDo toDo1 \u003d new ToDo(\"test1\");","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"    ToDo toDo2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"    ToDo toDo3 \u003d new ToDo(\"test3\");","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"    Deadline deadline1;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"    Deadline deadline2;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    Deadline deadline3;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    Event event1;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    Event event2;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"    Event event3;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"    {","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"            deadline1 \u003d new Deadline(\"test1\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"            deadline2 \u003d new Deadline(\"test2\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"            deadline3 \u003d new Deadline(\"test3\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"            event1 \u003d new Event(\"test1\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"            event2 \u003d new Event(\"test2\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"            event3 \u003d new Event(\"test3\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperDeadlineFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperEventFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"    void testToString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo1);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo2);","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo3);","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"        String actual \u003d testTaskList.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + toDo1.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + toDo2.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + toDo3.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + deadline1.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + deadline2.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"6. \" + deadline3.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"7. \" + event1.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"8. \" + event2.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"9. \" + event3.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"        assertEquals(actual, expected, \"toString a taskList\");","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"    void testFindTask() {","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo1);","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo2);","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo3);","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"        TaskList output;","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"GarethOng"},"content":"            output \u003d testTaskList.findTask(\"test1\");","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"        } catch (NoMatchingKeywordException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"GarethOng"},"content":"        String actual \u003d output.toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + toDo1.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + deadline1.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + event1.toString() + \"\\n\";","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"    void testGenerateSave() {","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo1);","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo2);","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(toDo3);","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"        String actual \u003d testTaskList.generateSave();","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d toDo1.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"GarethOng"},"content":"                + toDo2.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"                + toDo3.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"                + deadline1.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"                + deadline2.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"                + deadline3.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"                + event1.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"                + event2.toSaveVersion()","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"GarethOng"},"content":"                + event3.toSaveVersion();","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"GarethOng"},"content":"    void testSortDeadlineChronologicallyIncreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline1;","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline2;","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline3;","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline4;","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline5;","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"GarethOng"},"content":"            deadline1 \u003d new Deadline(\"test1\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"GarethOng"},"content":"            deadline2 \u003d new Deadline(\"test2\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"GarethOng"},"content":"            deadline3 \u003d new Deadline(\"test3\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"GarethOng"},"content":"            deadline4 \u003d new Deadline(\"test4\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"GarethOng"},"content":"            deadline5 \u003d new Deadline(\"test5\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperDeadlineFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":132,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":133,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":134,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline5);","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-13"},{"lineNumber":137,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-13"},{"lineNumber":138,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline4);","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":140,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + deadline1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":142,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + deadline2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":143,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + deadline3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":144,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + deadline4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":145,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + deadline5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":146,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList.sortDeadlineChronologically(Order.increasing).toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":147,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":148,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":149,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":150,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":151,"author":{"gitId":"GarethOng"},"content":"    void testSortDeadlineChronologicallyDecreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":152,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline1;","lastModifiedDate":"2022-09-13"},{"lineNumber":153,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline2;","lastModifiedDate":"2022-09-13"},{"lineNumber":154,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline3;","lastModifiedDate":"2022-09-13"},{"lineNumber":155,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline4;","lastModifiedDate":"2022-09-13"},{"lineNumber":156,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline5;","lastModifiedDate":"2022-09-13"},{"lineNumber":157,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":158,"author":{"gitId":"GarethOng"},"content":"            deadline1 \u003d new Deadline(\"test1\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":159,"author":{"gitId":"GarethOng"},"content":"            deadline2 \u003d new Deadline(\"test2\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":160,"author":{"gitId":"GarethOng"},"content":"            deadline3 \u003d new Deadline(\"test3\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":161,"author":{"gitId":"GarethOng"},"content":"            deadline4 \u003d new Deadline(\"test4\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":162,"author":{"gitId":"GarethOng"},"content":"            deadline5 \u003d new Deadline(\"test5\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":163,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperDeadlineFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":164,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":165,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":166,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":167,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-13"},{"lineNumber":168,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline5);","lastModifiedDate":"2022-09-13"},{"lineNumber":169,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-13"},{"lineNumber":170,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-13"},{"lineNumber":171,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline4);","lastModifiedDate":"2022-09-13"},{"lineNumber":172,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":173,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":174,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + deadline5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":175,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + deadline4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":176,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + deadline3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":177,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + deadline2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":178,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + deadline1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":179,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList","lastModifiedDate":"2022-09-13"},{"lineNumber":180,"author":{"gitId":"GarethOng"},"content":"                        .sortDeadlineChronologically(Order.decreasing)","lastModifiedDate":"2022-09-13"},{"lineNumber":181,"author":{"gitId":"GarethOng"},"content":"                        .toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":182,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":183,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":184,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":185,"author":{"gitId":"GarethOng"},"content":"    void testSortEventChronologicallyIncreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":186,"author":{"gitId":"GarethOng"},"content":"        Event event1;","lastModifiedDate":"2022-09-13"},{"lineNumber":187,"author":{"gitId":"GarethOng"},"content":"        Event event2;","lastModifiedDate":"2022-09-13"},{"lineNumber":188,"author":{"gitId":"GarethOng"},"content":"        Event event3;","lastModifiedDate":"2022-09-13"},{"lineNumber":189,"author":{"gitId":"GarethOng"},"content":"        Event event4;","lastModifiedDate":"2022-09-13"},{"lineNumber":190,"author":{"gitId":"GarethOng"},"content":"        Event event5;","lastModifiedDate":"2022-09-13"},{"lineNumber":191,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":192,"author":{"gitId":"GarethOng"},"content":"            event1 \u003d new Event(\"test1\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":193,"author":{"gitId":"GarethOng"},"content":"            event2 \u003d new Event(\"test2\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":194,"author":{"gitId":"GarethOng"},"content":"            event3 \u003d new Event(\"test3\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":195,"author":{"gitId":"GarethOng"},"content":"            event4 \u003d new Event(\"test4\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":196,"author":{"gitId":"GarethOng"},"content":"            event5 \u003d new Event(\"test5\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":197,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperEventFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":198,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":199,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":200,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":201,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-13"},{"lineNumber":202,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-13"},{"lineNumber":203,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-13"},{"lineNumber":204,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event5);","lastModifiedDate":"2022-09-13"},{"lineNumber":205,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event4);","lastModifiedDate":"2022-09-13"},{"lineNumber":206,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":207,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":208,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + event1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":209,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + event2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":210,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + event3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":211,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + event4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":212,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + event5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":213,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList.sortEventChronologically(Order.increasing).toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":214,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":215,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":216,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":217,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":218,"author":{"gitId":"GarethOng"},"content":"    void testSortEventChronologicallyDecreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":219,"author":{"gitId":"GarethOng"},"content":"        Event event1;","lastModifiedDate":"2022-09-13"},{"lineNumber":220,"author":{"gitId":"GarethOng"},"content":"        Event event2;","lastModifiedDate":"2022-09-13"},{"lineNumber":221,"author":{"gitId":"GarethOng"},"content":"        Event event3;","lastModifiedDate":"2022-09-13"},{"lineNumber":222,"author":{"gitId":"GarethOng"},"content":"        Event event4;","lastModifiedDate":"2022-09-13"},{"lineNumber":223,"author":{"gitId":"GarethOng"},"content":"        Event event5;","lastModifiedDate":"2022-09-13"},{"lineNumber":224,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":225,"author":{"gitId":"GarethOng"},"content":"            event1 \u003d new Event(\"test1\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":226,"author":{"gitId":"GarethOng"},"content":"            event2 \u003d new Event(\"test2\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":227,"author":{"gitId":"GarethOng"},"content":"            event3 \u003d new Event(\"test3\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":228,"author":{"gitId":"GarethOng"},"content":"            event4 \u003d new Event(\"test4\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":229,"author":{"gitId":"GarethOng"},"content":"            event5 \u003d new Event(\"test5\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":230,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperEventFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":231,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":232,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":233,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":234,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-13"},{"lineNumber":235,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-13"},{"lineNumber":236,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-13"},{"lineNumber":237,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event5);","lastModifiedDate":"2022-09-13"},{"lineNumber":238,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event4);","lastModifiedDate":"2022-09-13"},{"lineNumber":239,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":240,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":241,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + event5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":242,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + event4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":243,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + event3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":244,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + event2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":245,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + event1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":246,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList.sortEventChronologically(Order.decreasing).toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":247,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":248,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":249,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":250,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":251,"author":{"gitId":"GarethOng"},"content":"    void testSortDeadlineLexicographicallyDecreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":252,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline1;","lastModifiedDate":"2022-09-13"},{"lineNumber":253,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline2;","lastModifiedDate":"2022-09-13"},{"lineNumber":254,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline3;","lastModifiedDate":"2022-09-13"},{"lineNumber":255,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline4;","lastModifiedDate":"2022-09-13"},{"lineNumber":256,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline5;","lastModifiedDate":"2022-09-13"},{"lineNumber":257,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":258,"author":{"gitId":"GarethOng"},"content":"            deadline1 \u003d new Deadline(\"a\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":259,"author":{"gitId":"GarethOng"},"content":"            deadline2 \u003d new Deadline(\"b\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":260,"author":{"gitId":"GarethOng"},"content":"            deadline3 \u003d new Deadline(\"c\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":261,"author":{"gitId":"GarethOng"},"content":"            deadline4 \u003d new Deadline(\"d\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":262,"author":{"gitId":"GarethOng"},"content":"            deadline5 \u003d new Deadline(\"e\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":263,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperDeadlineFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":264,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":265,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":266,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":267,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-13"},{"lineNumber":268,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline5);","lastModifiedDate":"2022-09-13"},{"lineNumber":269,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-13"},{"lineNumber":270,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-13"},{"lineNumber":271,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline4);","lastModifiedDate":"2022-09-13"},{"lineNumber":272,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":273,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":274,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + deadline1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":275,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + deadline2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":276,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + deadline3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":277,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + deadline4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":278,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + deadline5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":279,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList","lastModifiedDate":"2022-09-13"},{"lineNumber":280,"author":{"gitId":"GarethOng"},"content":"                        .sortDeadlineLexicographically(Order.decreasing)","lastModifiedDate":"2022-09-13"},{"lineNumber":281,"author":{"gitId":"GarethOng"},"content":"                        .toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":282,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":283,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":284,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":285,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":286,"author":{"gitId":"GarethOng"},"content":"    void testSortDeadlineLexicographicallyIncreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":287,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline1;","lastModifiedDate":"2022-09-13"},{"lineNumber":288,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline2;","lastModifiedDate":"2022-09-13"},{"lineNumber":289,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline3;","lastModifiedDate":"2022-09-13"},{"lineNumber":290,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline4;","lastModifiedDate":"2022-09-13"},{"lineNumber":291,"author":{"gitId":"GarethOng"},"content":"        Deadline deadline5;","lastModifiedDate":"2022-09-13"},{"lineNumber":292,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":293,"author":{"gitId":"GarethOng"},"content":"            deadline1 \u003d new Deadline(\"a\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":294,"author":{"gitId":"GarethOng"},"content":"            deadline2 \u003d new Deadline(\"b\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":295,"author":{"gitId":"GarethOng"},"content":"            deadline3 \u003d new Deadline(\"c\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":296,"author":{"gitId":"GarethOng"},"content":"            deadline4 \u003d new Deadline(\"d\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":297,"author":{"gitId":"GarethOng"},"content":"            deadline5 \u003d new Deadline(\"e\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":298,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperDeadlineFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":299,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":300,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":301,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":302,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline2);","lastModifiedDate":"2022-09-13"},{"lineNumber":303,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline5);","lastModifiedDate":"2022-09-13"},{"lineNumber":304,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline1);","lastModifiedDate":"2022-09-13"},{"lineNumber":305,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline3);","lastModifiedDate":"2022-09-13"},{"lineNumber":306,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(deadline4);","lastModifiedDate":"2022-09-13"},{"lineNumber":307,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":308,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":309,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + deadline5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":310,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + deadline4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":311,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + deadline3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":312,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + deadline2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":313,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + deadline1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":314,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList","lastModifiedDate":"2022-09-13"},{"lineNumber":315,"author":{"gitId":"GarethOng"},"content":"                        .sortDeadlineLexicographically(Order.increasing)","lastModifiedDate":"2022-09-13"},{"lineNumber":316,"author":{"gitId":"GarethOng"},"content":"                        .toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":317,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":318,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":319,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":320,"author":{"gitId":"GarethOng"},"content":"    void testSortEventLexicographicallyDecreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":321,"author":{"gitId":"GarethOng"},"content":"        Event event1;","lastModifiedDate":"2022-09-13"},{"lineNumber":322,"author":{"gitId":"GarethOng"},"content":"        Event event2;","lastModifiedDate":"2022-09-13"},{"lineNumber":323,"author":{"gitId":"GarethOng"},"content":"        Event event3;","lastModifiedDate":"2022-09-13"},{"lineNumber":324,"author":{"gitId":"GarethOng"},"content":"        Event event4;","lastModifiedDate":"2022-09-13"},{"lineNumber":325,"author":{"gitId":"GarethOng"},"content":"        Event event5;","lastModifiedDate":"2022-09-13"},{"lineNumber":326,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":327,"author":{"gitId":"GarethOng"},"content":"            event1 \u003d new Event(\"a\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":328,"author":{"gitId":"GarethOng"},"content":"            event2 \u003d new Event(\"b\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":329,"author":{"gitId":"GarethOng"},"content":"            event3 \u003d new Event(\"c\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":330,"author":{"gitId":"GarethOng"},"content":"            event4 \u003d new Event(\"d\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":331,"author":{"gitId":"GarethOng"},"content":"            event5 \u003d new Event(\"e\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":332,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperEventFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":333,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":334,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":335,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":336,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-13"},{"lineNumber":337,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-13"},{"lineNumber":338,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-13"},{"lineNumber":339,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event5);","lastModifiedDate":"2022-09-13"},{"lineNumber":340,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event4);","lastModifiedDate":"2022-09-13"},{"lineNumber":341,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":342,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":343,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + event1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":344,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + event2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":345,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + event3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":346,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + event4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":347,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + event5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":348,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList","lastModifiedDate":"2022-09-13"},{"lineNumber":349,"author":{"gitId":"GarethOng"},"content":"                        .sortEventLexicographically(Order.decreasing)","lastModifiedDate":"2022-09-13"},{"lineNumber":350,"author":{"gitId":"GarethOng"},"content":"                        .toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":351,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":352,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":353,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":354,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":355,"author":{"gitId":"GarethOng"},"content":"    void testSortEventLexicographicallyIncreasing() {","lastModifiedDate":"2022-09-13"},{"lineNumber":356,"author":{"gitId":"GarethOng"},"content":"        Event event1;","lastModifiedDate":"2022-09-13"},{"lineNumber":357,"author":{"gitId":"GarethOng"},"content":"        Event event2;","lastModifiedDate":"2022-09-13"},{"lineNumber":358,"author":{"gitId":"GarethOng"},"content":"        Event event3;","lastModifiedDate":"2022-09-13"},{"lineNumber":359,"author":{"gitId":"GarethOng"},"content":"        Event event4;","lastModifiedDate":"2022-09-13"},{"lineNumber":360,"author":{"gitId":"GarethOng"},"content":"        Event event5;","lastModifiedDate":"2022-09-13"},{"lineNumber":361,"author":{"gitId":"GarethOng"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":362,"author":{"gitId":"GarethOng"},"content":"            event1 \u003d new Event(\"a\", \" 2000-10-10 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":363,"author":{"gitId":"GarethOng"},"content":"            event2 \u003d new Event(\"b\", \" 2000-10-11 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":364,"author":{"gitId":"GarethOng"},"content":"            event3 \u003d new Event(\"c\", \" 2000-10-12 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":365,"author":{"gitId":"GarethOng"},"content":"            event4 \u003d new Event(\"d\", \" 2000-10-13 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":366,"author":{"gitId":"GarethOng"},"content":"            event5 \u003d new Event(\"e\", \" 2000-10-14 23:00\");","lastModifiedDate":"2022-09-13"},{"lineNumber":367,"author":{"gitId":"GarethOng"},"content":"        } catch (ImproperEventFormatException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":368,"author":{"gitId":"GarethOng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-13"},{"lineNumber":369,"author":{"gitId":"GarethOng"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":370,"author":{"gitId":"GarethOng"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":371,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event2);","lastModifiedDate":"2022-09-13"},{"lineNumber":372,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event1);","lastModifiedDate":"2022-09-13"},{"lineNumber":373,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event3);","lastModifiedDate":"2022-09-13"},{"lineNumber":374,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event5);","lastModifiedDate":"2022-09-13"},{"lineNumber":375,"author":{"gitId":"GarethOng"},"content":"        testTaskList.addTask(event4);","lastModifiedDate":"2022-09-13"},{"lineNumber":376,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":377,"author":{"gitId":"GarethOng"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-09-13"},{"lineNumber":378,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"1. \" + event5.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":379,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"2. \" + event4.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":380,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"3. \" + event3.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":381,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"4. \" + event2.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":382,"author":{"gitId":"GarethOng"},"content":"        expected +\u003d \"5. \" + event1.toString() + \"\\n\";","lastModifiedDate":"2022-09-13"},{"lineNumber":383,"author":{"gitId":"GarethOng"},"content":"        assertEquals(testTaskList","lastModifiedDate":"2022-09-13"},{"lineNumber":384,"author":{"gitId":"GarethOng"},"content":"                        .sortEventLexicographically(Order.increasing)","lastModifiedDate":"2022-09-13"},{"lineNumber":385,"author":{"gitId":"GarethOng"},"content":"                        .toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":386,"author":{"gitId":"GarethOng"},"content":"                , expected);","lastModifiedDate":"2022-09-13"},{"lineNumber":387,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":388,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"GarethOng":388}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"public class ToDoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"    void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"        ToDo unmarkedTest \u003d new ToDo(\"unmarkedTest\");","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"        ToDo markedTest \u003d new ToDo(\"markedTest\");","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"        markedTest.toggleStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"        String unmarkedTestExpected \u003d \"[T] [ ] unmarkedTest\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"        String markedTestExpected \u003d \"[T] [X] markedTest\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"        assertEquals(unmarkedTestExpected, unmarkedTest.toString(), \"toString an unmarked todo.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"        assertEquals(markedTestExpected, markedTest.toString(), \"toString a marked todo.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"    void testToSaveVersion() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"        ToDo unmarkedTest \u003d new ToDo(\"unmarkedTest\");","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"        ToDo markedTest \u003d new ToDo(\"markedTest\");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"        markedTest.toggleStatus();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"        String unmarkedTestExpected \u003d \"T|0|unmarkedTest\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"        String markedTestExpected \u003d \"T|1|markedTest\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"        assertEquals(unmarkedTestExpected, unmarkedTest.toSaveVersion(), \"toSaveVersion an unmarked todo.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"        assertEquals(markedTestExpected, markedTest.toSaveVersion(), \"toSaveVersion a marked todo.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"GarethOng":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"todo finish CS2103T","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"bye","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"GarethOng":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/duke/*.java ../src/duke/exceptions/*.java ../src/duke/Duke.java","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GarethOng":1,"-":37}}]

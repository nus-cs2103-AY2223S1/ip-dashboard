[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"# IANA","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"### Iana is a simple task tracker that remembers your tasks for you. It\u0027s","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"* GUI-based","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"* Easy to learn","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"* *SUPER* fast to use","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"* Completely **FREE**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"### Try it right **now** by","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"1. Downloading from here","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"2. Double-click it","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"3. Add your tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"4. Let it manage your tasks :metal:","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"### Features:","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"- [x] Manage (add, delete, mark) tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"- [ ] Manage deadlines (coming soon)","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"### For java programmers, this is the `main` method:","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"```javascript","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"public class Main {","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":5,"yunruu":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"    mainClassName \u003d \"iana.Launcher\"","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"checkstyle {","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"    toolVersion \u003d \u002710.3\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"-":40,"yunruu":20}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":85,"yunruu":4}},{"path":"src/main/java/iana/Iana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.command.Command;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.parser.Parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import iana.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":" * Represents the command line interface Iana used to manage tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"public class Iana {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    public Iana() {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"            Storage.initialise();   ","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"            tasks \u003d Storage.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"        } catch (IanaException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"            ui.say(e.getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"     * Get response from Iana given user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     * @param input the user input to be responded to.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s response.","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"            return command.execute(tasks, ui);","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        } catch (IanaException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"     * Checks if user input is an exit command.","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"     * @param input the user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"     * @return true if user input is exit command.","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"    public boolean isExitCommand(String input) {","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"            return command.isExit();","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        } catch (IanaException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"            return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"yunruu":55}},{"path":"src/main/java/iana/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"public class Launcher {","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"        Application.launch(iana.ui.Main.class, args);","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yunruu":12}},{"path":"src/main/java/iana/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" * Command that adds a new task to the list.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    private String taskInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * Constructor for AddTaskCommand.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * @param taskInput the full input that describes the task.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    public AddTaskCommand(String taskInput) {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        this.taskInput \u003d taskInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * Runs the command to try to add a new task.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) throws IanaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        Task newTask \u003d Task.of(this.taskInput, false);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        return ui.sayTaskAdded(newTask);","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"     * Returns false since command is not an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":40}},{"path":"src/main/java/iana/command/AnotherCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":" * Command that requests user for a new command.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"public class AnotherCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"     * Ask user to input a new command.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"        return ui.askNewCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     * Returns false as command is not exit. ","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":26}},{"path":"src/main/java/iana/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * Represents a command that Iana can run.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"     * Runs the command.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * @param ui the interface that handles interaction between Iana and user.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * @param storage the storage that stores the user\u0027s list of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     * @return response to command execution.","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    public abstract String execute(TaskList tasks, Ui ui) throws IanaException;","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * Returns a boolean of whether the command class is an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     * @return true if command is exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":28}},{"path":"src/main/java/iana/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" * Command that deletes a task.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    private String taskNum;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    ","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * @param taskNum the task number to be deleted from the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    public DeleteCommand(String taskNum) {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * Runs the command to delete task.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) throws IanaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"            int taskNumber \u003d Integer.parseInt(this.taskNum) - 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"            Task deletedTask \u003d tasks.delete(taskNumber);","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"            return ui.sayTaskDeleted(deletedTask, tasks.size());","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"This task number does not exist! ^^\");","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Oops! Delete a task number instead \u003c[u_u]\u003e\");","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"     * Returns false.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":46}},{"path":"src/main/java/iana/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" * Command that exits the program.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * Runs the command to exit the program.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) throws IanaException{","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"        Storage.store(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"        return ui.sayBye();","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * Returns true as command is exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        return true;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":29}},{"path":"src/main/java/iana/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":" * Command to tasks with given keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"    private String keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    ","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"     * Constructor for FindCommand class.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * @param keyword the specified word used to search for tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     * Gets task list containing tasks containing specified keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"        TaskList list \u003d tasks.findKeyword(this.keyword);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        return ui.list(list);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     * Returns false as command is not exit.","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"yunruu":37}},{"path":"src/main/java/iana/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":" * Command to list out all current tasks in task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"    ","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"     * Runs command to list out all current tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"        return ui.list(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     * Returns false as command is not an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":26}},{"path":"src/main/java/iana/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * Command that marks task as completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    public String taskNum;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    ","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * @param taskNum task number to be marked as completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    public MarkCommand(String taskNum) {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * Runs command to mark task.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) throws IanaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"            int taskNumber \u003d Integer.parseInt(this.taskNum) - 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"            tasks.mark(taskNumber);","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"            String markedTask \u003d tasks.printTaskString(taskNumber);","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"            return ui.sayTaskMarked(markedTask);","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Hey, this task does not exist!! \u003e:C\");","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"     * Returns false as command is not an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":44}},{"path":"src/main/java/iana/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.command;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * Command to mark a task in the task list as incomplete.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    public String taskNum;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * Constructor for UnmarkCommand class.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * @param taskNum task number to be unmarked.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    public UnmarkCommand(String taskNum) {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * Runs command to unmark a task.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    public String execute(TaskList tasks, Ui ui) throws IanaException {","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"            int taskNumber \u003d Integer.parseInt(this.taskNum) - 1;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"            tasks.unmark(taskNumber);","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"            return ui.sayTaskUnmarked(tasks.printTaskString(taskNumber));","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Hey, this task does not exist!! \u003e:C\");","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"     * Returns false as command is not an exit command.","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        return false;","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":43}},{"path":"src/main/java/iana/exception/IanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.exception;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":" * Exception thrown by the program.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"public class IanaException extends Exception {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"     * Constructor for IanaException.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"     * @param errorMessage message that program will display if exception is thrown.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    public IanaException(String errorMessage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yunruu":16}},{"path":"src/main/java/iana/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"// import iana.command.Actions;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.command.AddTaskCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.command.AnotherCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import iana.command.Command;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import iana.command.DeleteCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import iana.command.ExitCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import iana.command.FindCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import iana.command.ListCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import iana.command.MarkCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import iana.command.UnmarkCommand;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":" * Parser that takes in command line arguments.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"public class Parser {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     * Parses full user input.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * @param input user\u0027s command line input.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * @return command that matches user\u0027s input.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if user\u0027s input does not match correct format.","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    public static Command parse(String input) throws IanaException {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        String[] taskArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"        String action \u003d taskArray[0];","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"        switch(action) {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"            case \"bye\": ","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"            case \"list\":","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"            return new DeleteCommand(taskArray[1]);","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"            return new MarkCommand(taskArray[1]);","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"            return new UnmarkCommand(taskArray[1]);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"            case \"event\":","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"            return new AddTaskCommand(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"            case \"find\":","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"            return new FindCommand(taskArray[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"            default:","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"            return new AnotherCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":61}},{"path":"src/main/java/iana/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":" * Stores tasks and their relevant information.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"public class Storage {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    private static final String FILE_STRING \u003d \"data/DataStorage.txt\";","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    public static void initialise() throws IanaException {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"            Path filePath \u003d Paths.get(Storage.FILE_STRING);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"                File file \u003d new File(Storage.FILE_STRING);","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"                file.createNewFile();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"                TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"                Storage.store(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Oh no, the storage file is corrupted!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"     * Reads tasks\u0027 data from storage file and returns the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"     * @return task list of stored data.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if file or folder does not exist or file is corrupted.","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    public static TaskList load() throws IanaException {","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"            FileInputStream fileIn \u003d new FileInputStream(Storage.FILE_STRING);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"            taskList \u003d (TaskList) in.readObject();","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"            in.close();","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"            fileIn.close();","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"            if (taskList \u003d\u003d null) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"                return new TaskList();","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"            return taskList;","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"File not found!xx\");","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Oh no, the storage file is corrupted! :(\");","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Class not found\");","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"    } ","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"     * Saves task list data into storage file.","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"     * @param taskList task list of tasks to be stored.","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if file or folder does not exist.","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"    public static void store(TaskList taskList) throws IanaException {","lastModifiedDate":"2022-09-02"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(Storage.FILE_STRING);","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"            ObjectOutputStream objOut \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"            objOut.writeObject(taskList);","lastModifiedDate":"2022-09-02"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"            objOut.close();","lastModifiedDate":"2022-09-02"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"            fileOut.close();","lastModifiedDate":"2022-09-02"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Naur, I can\u0027t seem to store the tasks!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"yunruu":83}},{"path":"src/main/java/iana/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.utils.DateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * Deadline task.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public class Deadline extends Task implements Serializable {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    protected String endTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * @param task string of task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * @param endTime deadline time.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     * @param isCompleted true if task has been completed","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    public Deadline(String task, String endTime, boolean isCompleted) {","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"        super(task, \"deadline\", isCompleted);","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"        this.endTime \u003d DateTime.parseToString(endTime);","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of deadline to be saved in storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    public String toFileData() {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        return \"D | \" + super.toFileData() + \"| \" + this.endTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of deadline.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), endTime);","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yunruu":40}},{"path":"src/main/java/iana/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.utils.DateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * Event task.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public class Event extends Task implements Serializable {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    protected String eventTime;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    protected String event;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * Constructor for Event class.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * @param event full event description.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     * @param eventTime time the event occurs.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"     * @param isCompleted true if event has ended.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    public Event(String event, String eventTime, boolean isCompleted) {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"        super(event, \"event\", isCompleted);","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"        this.eventTime \u003d DateTime.parseToString(eventTime);","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"     * String representation of event to be saved in storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    public String toFileData() {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"        return \"E | \" + super.toFileData() + \"| \" + this.eventTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"     * String representation of event.","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    public String toString() { ","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.eventTime);","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yunruu":41}},{"path":"src/main/java/iana/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * Task class to represent the tasks to be added into task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    protected final String task;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    protected final String taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * Factory method to create a new task.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     * @param taskString user input of task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"     * @param isCompleted true if task has been completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     * @return the task if it is correctly entered into program.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if user input contains format error.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    public static Task of(String taskString, boolean isCompleted) throws IanaException {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"        String[] textArr \u003d taskString.split(\" \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"        String startText \u003d textArr[0].trim();","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        String[] taskArray;","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"            switch(TaskType.valueOf(startText)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"                case todo:","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"                taskArray \u003d check(textArr, \"todo\");","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"                Todo newTodo \u003d new Todo(taskArray[0], isCompleted);","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"                return newTodo;","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"                    ","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"                case event:","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"                taskArray \u003d check(textArr, \"event\");","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"                Event newEvent \u003d new Event(taskArray[0], taskArray[1], isCompleted);","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"                return newEvent;","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"                case deadline:","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"                taskArray \u003d check(textArr, \"deadline\");","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"                Deadline newDeadline \u003d new Deadline(taskArray[0], taskArray[1], isCompleted);","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"                return newDeadline;","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"                default:","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"                throw new IanaException(\"Invalid tasks!\");","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"            } ","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Invalid task!! \u003e:C\");","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"     * Verifies whether task to be added is in the correct format.","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"     * @param textArray array of strings containing task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"     * @param taskType type of task to be created.","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"     * @return array of string containing only relevant task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if task input is in the wrong format.","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"    private static String[] check(String[] textArray, String taskType) throws IanaException {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"        if (textArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(String.format(\"Oops! Your %s cannot be empty! :-(\", taskType));","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"        String[] taskArray \u003d {};","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"        switch(TaskType.valueOf(taskType)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"            case event:","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"            taskArray \u003d textArray[1].split(\"/at \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"            if (taskArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                throw new IanaException(\"Try again with the format EVENT \u003cevent\u003e /at \u003cevent time\u003e !! :-)\");","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"            ","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"            case deadline:","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"            taskArray \u003d textArray[1].split(\"/by \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"            if (taskArray.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"                throw new IanaException(\"Use the format \u003cdeadline\u003e /by \u003cdeadline time\u003e to create a deadline!! :D\");","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"            ","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"            case todo:","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"            String[] temp \u003d {textArray[1]};","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"            taskArray \u003d temp;","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"            default:","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Sorry, this is an invalid task type!! D-:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"        return taskArray;","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"     * Task to be created.","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"     * @param task full user input of task description.","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"     * @param taskType type of task to be created.","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"     * @param isCompleted whether task is completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"    protected Task(String task, String taskType, boolean isCompleted) {","lastModifiedDate":"2022-08-30"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"yunruu"},"content":"    ","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"yunruu"},"content":"     * Change whether task is completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"yunruu"},"content":"     * @param isCompleted true if task is completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"    public void toggleComplete(boolean isCompleted) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"yunruu"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"yunruu"},"content":"     * Checks if task description contains keyword.","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"yunruu"},"content":"     * @param keyword the keyword of interest.","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"yunruu"},"content":"     * @return true if task contains keyword.","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"yunruu"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"yunruu"},"content":"        String key \u003d keyword.trim();","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"yunruu"},"content":"        return this.task.contains(key);","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"yunruu"},"content":" ","lastModifiedDate":"2022-08-31"},{"lineNumber":128,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of task to be stored in storage.","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"yunruu"},"content":"     * @return string representation.","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"yunruu"},"content":"    public String toFileData() {","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"yunruu"},"content":"        return String.format(\"%d | %s\", this.isCompleted ? 1 : 0, this.task);","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":138,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of task.","lastModifiedDate":"2022-08-31"},{"lineNumber":139,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":141,"author":{"gitId":"yunruu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":142,"author":{"gitId":"yunruu"},"content":"        return String.format(\"%s %s\", this.isCompleted ? \"[X]\" : \"[ ]\", this.task);","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"yunruu":144}},{"path":"src/main/java/iana/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" * Represents the list that contains and manage all the current tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * Constructor for an empty task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     * Constructor for a task list given an ArrayList of Task.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * @param taskList ArrayList of task that contains current tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     * Get the number of tasks in the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"     * @return number of tasks.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    public int size() {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"     * Add a new task into the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"     * @param newTask new task to be added.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if task is in the incorrect format.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"     * @param taskNumber id of task to be deleted.","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"     * @return task that is deleted.","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException if task number does not exist in current task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"    public Task delete(int taskNumber) throws IanaException {","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"        if (taskNumber \u003e this.taskList.size()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Oops!! This task number is invalid. Try to delete another task! xx\");","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        Task deleted \u003d this.taskList.remove(taskNumber);","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"        return deleted;","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"     * Marks the task as completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"     * @param taskNumber id of task to be marked.","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"    public void mark(int taskNumber) {","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"        this.taskList.get(taskNumber).toggleComplete(true);","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"     * @param taskNumber id of task to be unmarked.","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"    public void unmark(int taskNumber) {","lastModifiedDate":"2022-08-30"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"        this.taskList.get(taskNumber).toggleComplete(false);","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"     * Find tasks with specified keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"     * @param keyword keyword of task.","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"     * @return a list of all tasks with the keyword.","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"    public TaskList findKeyword(String keyword) {","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"            if (!task.containsKeyword(keyword)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"                list.add(task);","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"        return list;","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"     * Return string representation of task.","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"     * @param taskNumber id of task to be printed.","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"     * @return string representation of task.","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"    public String printTaskString(int taskNumber) {","lastModifiedDate":"2022-08-30"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"        return this.taskList.get(taskNumber).toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":107,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":108,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"yunruu"},"content":"     * Return string representation of task list to be stored in storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":110,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":111,"author":{"gitId":"yunruu"},"content":"     * @return string representation of task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":112,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"    public String toFileData() {","lastModifiedDate":"2022-08-30"},{"lineNumber":114,"author":{"gitId":"yunruu"},"content":"        String fileString \u003d \"\";","lastModifiedDate":"2022-08-30"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":116,"author":{"gitId":"yunruu"},"content":"            fileString \u003d fileString + task.toFileData() + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":117,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":118,"author":{"gitId":"yunruu"},"content":"        return fileString;","lastModifiedDate":"2022-08-30"},{"lineNumber":119,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":120,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":121,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":123,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":124,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":125,"author":{"gitId":"yunruu"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":126,"author":{"gitId":"yunruu"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-08-30"},{"lineNumber":127,"author":{"gitId":"yunruu"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":128,"author":{"gitId":"yunruu"},"content":"            Task task \u003d this.taskList.get(i);","lastModifiedDate":"2022-08-30"},{"lineNumber":129,"author":{"gitId":"yunruu"},"content":"            str \u003d str + String.format(\"\\t   %d. %s\", i + 1, task.toString()) + \"\\n\";","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":131,"author":{"gitId":"yunruu"},"content":"        return str;","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":133,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":133}},{"path":"src/main/java/iana/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":" * Enum for the different types of tasks recognised.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"     * A todo task.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    todo,","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * An event task with time description.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    event,","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"     * A deadline task with time description.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    deadline","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yunruu":22}},{"path":"src/main/java/iana/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":" * Todo task.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"public class Todo extends Task implements Serializable {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"     * @param task full user input for todo description.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * @param isCompleted true if todo is completed.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    public Todo(String task, boolean isCompleted) {","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"        super(task, \"todo\", isCompleted);","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of todo to be stored in storage.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    public String toFileData() {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"        return \"T | \" + super.toFileData();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"     * Returns string representation of todo.","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"    public String toString() { ","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"yunruu":35}},{"path":"src/main/java/iana/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import iana.Iana;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import iana.ui.controller.MainWindow;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    private Iana iana \u003d new Iana();","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setIana(iana);","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"            stage.show();","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yunruu":32}},{"path":"src/main/java/iana/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import iana.tasks.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":" * User interface that will interact with user.","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"public class Ui {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    private Scanner sc;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"     * Constructor for Ui class to initialise system scanner.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    public Ui() {","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     * Returns desired message.","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     * @param msg the message to be printed.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * @return message to be printed.","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    public String say(String msg) {","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        return msg;","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     * Returns task list of all current tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"     * @param tasks task list to be printed out.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s response and task list.","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    public String list(TaskList tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"        String listMessage \u003d \"\u003e Sure! @-@ These are the tasks you have left: \\n\" + tasks.toString();","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        return listMessage;","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"     * Returns goodbye message.","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s goodbye message.","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"    public String sayBye() {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"        return say(\"\u003e See you next time, goodbye! :P\");","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"     * Returns welcome message.","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s welcome message.","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"    public String sayHi() {","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        return say(\"\u003e Hello there~ I\u0027m your assistant IANA.\\n\\t How can I help you today? ^_^\");","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"     * Returns message to request new user input.","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s request for a new input.","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"    public String askNewCommand() {","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"        return say(\"\u003e Oops, my vocabulary is limited! Try another action \u003e_\u003c\");","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"     * Returns task information that is added to task list.","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"     * @param task task to be returned.","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s response and added task information. ","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"    public String sayTaskAdded(Task task) {","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"        return say(String.format(\"\u003e Okay :). Remember to complete the task:\\n\\t   %s\", task.toString()));","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"     * Returns information of task that is deleted from task list.","lastModifiedDate":"2022-09-12"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"     * @param task task that is deleted.","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"     * @param listSize number of tasks left in the task list.","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s response, deleted task information, and number of tasks left.","lastModifiedDate":"2022-09-12"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"    public String sayTaskDeleted(Task task, int listSize) {","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"        return say(String.format(\"\u003e Nice! I\u0027ve removed the task:\\n\\t   %s\\n\\tNow there\u0027s %d tasks left!! Good job! [:\", ","lastModifiedDate":"2022-09-12"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"        task.toString(), listSize));","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"     * Returns information of task that is marked.","lastModifiedDate":"2022-09-12"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"     *  ","lastModifiedDate":"2022-09-12"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"     * @param markedTask the description of task that is marked.","lastModifiedDate":"2022-09-12"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s response and marked task description.","lastModifiedDate":"2022-09-12"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"    public String sayTaskMarked(String markedTask) {","lastModifiedDate":"2022-09-12"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"        String markedMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-09-12"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"        return String.format(\"%s\\t   %s\", markedMsg, markedTask);","lastModifiedDate":"2022-09-12"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"     * Returns information of task that is unmarked.","lastModifiedDate":"2022-09-12"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"     *  ","lastModifiedDate":"2022-09-12"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"     * @param markedTask the description of task that is unmarked.","lastModifiedDate":"2022-09-12"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"     * @return IANA\u0027s response and unmarked task description.","lastModifiedDate":"2022-09-12"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":107,"author":{"gitId":"yunruu"},"content":"    public String sayTaskUnmarked(String unmarkedTask) {","lastModifiedDate":"2022-09-12"},{"lineNumber":108,"author":{"gitId":"yunruu"},"content":"        String unmarkedMsg \u003d \"Aw man, I\u0027ve unmarked the following task:\\n\";","lastModifiedDate":"2022-09-12"},{"lineNumber":109,"author":{"gitId":"yunruu"},"content":"        return String.format(\"%s\\t   %s\", unmarkedMsg, unmarkedTask);","lastModifiedDate":"2022-09-12"},{"lineNumber":110,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":111,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":112,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"     * Reads user input from command line.","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"     * @return the user\u0027s input.","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"yunruu"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-30"},{"lineNumber":118,"author":{"gitId":"yunruu"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-08-30"},{"lineNumber":119,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":120,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"yunruu":120}},{"path":"src/main/java/iana/ui/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.ui.controller;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"     * Constructor for DialogBox","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"    private void flip() {","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"     * Returns a Dialogbox for user with given text and image.","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"     * @param text the given text to be displayed.","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"     * @param img the given image to be used as display picture.","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"   /**","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"     * Returns a Dialogbox for Iana with given text and image.","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"     * @param text the given text to be displayed.","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"     * @param img the given image to be used as display picture.","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"    public static DialogBox getIanaDialog(String text, Image img) {","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"        db.flip();","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"        return db;","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yunruu":75}},{"path":"src/main/java/iana/ui/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.ui.controller;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"import iana.Iana;","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    private Iana iana;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    private Image ianaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.jpg\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"     * Initialize main window.","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"     * Initialize Iana.","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    public void setIana(Iana i) {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        iana \u003d i;","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing iana\u0027s reply and then appends them to","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        String response \u003d iana.getResponse(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"            DialogBox.getIanaDialog(response, ianaImage)","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"        );","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yunruu":58}},{"path":"src/main/java/iana/utils/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.utils;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import iana.exception.IanaException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":" * Utility to convert tasks\u0027 date time format into a standardized format.","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"public class DateTime {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT_1 \u003d DateTimeFormatter.ofPattern(\"yyyy-dd-MM HH:mm\");","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyy HH:mm\");","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    ","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * Parse date time string.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     * @param timeInput date time input to be parsed.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"     * @return string representation of date time in standardized format.","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    public static String parseToString(String timeInput) {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"            return OUTPUT_FORMAT.format(parseToLocalDateTime(timeInput));","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"        } catch (IanaException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"            return timeInput;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"     * Parse date time string.","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     * ","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"     * @param timeInput date time input to be parsed.","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"     * @return localdatetime representation of date time in standardized format.","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"     * @throws IanaException","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    public static LocalDateTime parseToLocalDateTime(String timeInput) throws IanaException {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"        LocalDateTime timeOutput;","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"             timeOutput \u003d LocalDateTime.parse(timeInput, INPUT_FORMAT_1);","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"            throw new IanaException(\"Wrong date time format!!\");","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        return timeOutput;","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"yunruu":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.9976931348623157E308\" maxWidth\u003d\"1.9976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yunruu":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"iana.ui.controller.MainWindow\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"76.0\" text\u003d\"ENTER\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"            \u003cFont name\u003d\"Trebuchet MS\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"392.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"yunruu":23}},{"path":"src/test/java/iana/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"public class EventTest {","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"        Event event \u003d new Event(\"event pool party\", \"9 Dec, 10pm\", false);","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"        assertEquals(\"[E][] event pool party (at: 9 Dec 10pm)\", event.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"yunruu":12}},{"path":"src/test/java/iana/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package iana.tasks;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"        Todo todo \u003d new Todo(\"Leetcode grind hard\", false);","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"        assertEquals(\"[T][] Leetcode grind hard\", todo.toString());","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"yunruu":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"todo read book","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"event party /at Marina","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"yunruu":2}},{"path":"data/DataStorage.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"yunruu":0}}]

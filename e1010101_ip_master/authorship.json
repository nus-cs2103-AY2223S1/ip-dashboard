[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"# henry.Main project template","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"3. After that, locate the `src/main/java/henry.Main.java` file, right-click it, and choose `Run henry.Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"e1010101":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"checkstyle {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    archiveBaseName \u003d \"henry\"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"e1010101":21,"-":39}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * The command class is the base for all commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * It only has one method, execute, which returns a CommandResult.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * This method is to be implemented by all subclasses of Command.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"public class Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"     * Returns a CommandResult object based on the type of Command","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * executed.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * @return","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        throw new UnsupportedOperationException(\"Cannot execute abstract command!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * Sets the task list to be used by the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * The task list is then modified by various commands, such as the {@link TodoCommand}.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * Some commands do not require a task list, and therefore this method is","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * not called in the execution of the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * @param taskList a TaskList object the represents the list of tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    public void setData(TaskList taskList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":36}},{"path":"src/main/java/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * CommandResult is returned by all Commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * It contains two methods; getTaskList, which returns","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" * the TaskList modified by the Command (if applicable),","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * and toString, which returns the feedback specified","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * when the CommandResult is constructed.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private final String feedback;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private final TaskList list;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public CommandResult(String feedback) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        this(feedback, null);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * Constructs a CommandResult with the given feedback and TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * @param feedback the feedback to be displayed to the user. Usually","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     *                 a success or error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param list     the TaskList modified by the Command (if applicable).","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public CommandResult(String feedback, TaskList list) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     * Gets the task list from the CommandResult, if it exists.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * @return the task list if it is present, otherwise returns an empty optional.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    public Optional\u003cTaskList\u003e getTaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        return Optional.ofNullable(list);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        return feedback;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":48}},{"path":"src/main/java/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * An enum for task-creation commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"public enum Commands {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"e1010101":10}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * Responsible for adding Deadline tasks to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Deadline tasks are tasks with a deadline date and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n\\t\\t\\t %1$s.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public DeadlineCommand(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        this.task \u003d new Task(Commands.DEADLINE, description, dateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.addTask(task)), taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":25}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Responsible for deletion of tasks from the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"I\u0027VE DELETED THIS TASK:\\n\\t\\t\\t: %1$s.\";","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    private final int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.deleteTask(index)));","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":21}},{"path":"src/main/java/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Handles the Echo command, which reads the user\u0027s","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * input and prints it to the console.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"echo\";","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    private final String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public EchoCommand(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":20}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * Responsible for adding Event tasks to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Event tasks are tasks with a date and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n\\t\\t\\t %1$s.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public EventCommand(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        this.task \u003d new Task(Commands.EVENT, description, dateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.addTask(task)), taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":25}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * Responsible for finding tasks given a search term.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"I\u0027VE FOUND THESE MATCHING TASKS:\\n\\t\\t\\t %1$s\";","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final String[] termsToFind;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * Creates a new FindCommand with the given search terms.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     * @param searchTerms a variable amount of search terms","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public FindCommand(String... searchTerms) {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        int argsLength \u003d searchTerms.length;","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        termsToFind \u003d new String[argsLength];","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 0; i \u003c termsToFind.length; i++) {","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"            termsToFind[i] \u003d searchTerms[i].toLowerCase();","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        boolean flag;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"            flag \u003d true;","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"            for (String term : termsToFind) {","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"                if (!task.toSimpleString().contains(term)) {","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"                    flag \u003d false;","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"                    break;","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"                }","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            if (flag) {","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"                sb.append(\" \").append(i).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"                i++;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sb.toString().trim()));","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"e1010101":51}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Command that prints the existing task list","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * to the console.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(taskList.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":15}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Responsible for setting the state of a task","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * to \"complete\".","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"I\u0027VE MARKED THIS TASK AS DONE:\\n\\t\\t\\t %1$s.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        Task task \u003d taskList.getTasks().get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        task.setComplete(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        taskList.getTasks().set(index, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task));","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":27}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Responsible for adding Todo tasks to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * Todo tasks are tasks with only a description.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n\\t\\t\\t %1$s.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        this.task \u003d new Task(Commands.TODO, description, null);","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.addTask(task)), taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":23}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Responsible for setting the state of a task","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * to \"incomplete\".","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"I\u0027VE UNMARKED THIS TASK AS DONE:\\n\\t\\t\\t %1$s.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        Task task \u003d taskList.getTasks().get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        task.setComplete(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        taskList.getTasks().set(index, task);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task));","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":26}},{"path":"src/main/java/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package components;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        db.flip();","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    private void flip() {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"e1010101":61}},{"path":"src/main/java/components/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package components;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Henry;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private Henry henry;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    public void setHenry(Henry h) {","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        henry \u003d h;","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        String response \u003d henry.getResponse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        );","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":57}},{"path":"src/main/java/exceptions/HenryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package exceptions;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * The exception class that handles errors related","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * to Henry.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class HenryException extends RuntimeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public HenryException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":12}},{"path":"src/main/java/henry/Henry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import command.CommandResult;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * The base class of the Henry application.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * All functions of Henry pass through this class.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class Henry {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private static final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private static final Path FILE_PATH \u003d java.nio.file.Paths.get(home, \"Desktop\", \"henry.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    private final Image user \u003d","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    private final Image duke \u003d","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * The constructor for the logical component of Henry.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * When Henry is instantiated, a new UI, Storage, TaskList","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     * and Parser classes are also created.","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public Henry() {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        storage \u003d new Storage(FILE_PATH.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"            Platform.exit();","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"            return \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        Command parsed \u003d parser.parseCommand(input);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d executeCommand(parsed);","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        return result.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"     * Activates the program. The program will take input from","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * the user and perform the adequate actions until the \"bye\"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * command is entered.","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     * @deprecated As of 30/8/2022: program now runs on JavaFX","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    @Deprecated","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    public void runProgram() {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        Command command;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        String input;","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"        do {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"            System.out.print(\"\\n\u003e \");","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"            input \u003d ui.getInput();","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"                close();","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"            command \u003d parser.parseCommand(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"            ui.output(result.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        } while (true);","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"            command.setData(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"            if (result.getTaskList().isPresent()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"                storage.appendToFile(result.getTaskList().get().toSimpleString());","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"            return result;","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"    private void close() {","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        ui.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":97}},{"path":"src/main/java/henry/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"e1010101":12}},{"path":"src/main/java/henry/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import components.MainWindow;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * Driver class for Henry","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private final Henry henry \u003d new Henry();","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * henry.Main method in which a Henry instance is created.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * @param args standard command line arguments, not","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     *             applicable to this program.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        Henry henry \u003d new Henry();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        henry.runProgram();","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHenry(henry);","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"            stage.show();","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":43}},{"path":"src/main/java/henry/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import command.DeleteCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import command.EchoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import command.EventCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import command.FindCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import command.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import command.MarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import command.TodoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":" * The parser class is responsible for parsing the user input and","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":" * creating the appropriate command.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S*)(?\u003cargs\u003e.*)\");","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private static final Pattern DEADLINE_FORMAT \u003d Pattern.compile(\"(?\u003cdesc\u003e.+) /by \"","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"                                                                   + \"(?\u003cdateTime\u003e\\\\d{2}-\\\\d{2}-\\\\d{4} \"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"                                                                   + \"\\\\d{2}:\\\\d{2})\");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private static final Pattern EVENT_FORMAT \u003d Pattern.compile(\"(?\u003cdesc\u003e.+) /at \"","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"                                                                + \"(?\u003cdateTime\u003e\\\\d{2}-\\\\d{2}-\\\\d{4} \"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"                                                                + \"\\\\d{2}:\\\\d{2})\");","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private static final String DATE_FORMATTER \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMATTER);","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * Parses a command from a string. There are two types of commands:","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * single-argument commands, and double-argument commands. The function","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * first checks if the command matches the appropriate pattern. If it does,","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * then the corresponding command is returned. If not, then an exception is thrown.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * @param text the string to be parsed.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * @return the command corresponding to the string, or an exception if the string is malformed.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    public Command parseCommand(String text) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(text.trim());","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"UNKNOWN COMMAND!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        String command \u003d matcher.group(\"command\").trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        String args \u003d matcher.group(\"args\").trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        switch (command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        case EchoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"            return new EchoCommand(args);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            if (isArgsFormattedCorrectly(args)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(\"ARGUMENT IS NOT A NUMBER!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"            return new MarkCommand(Integer.parseInt(args));","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"            if (isArgsFormattedCorrectly(args)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(\"ARGUMENT IS NOT A NUMBER!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"            return new UnmarkCommand(Integer.parseInt(args.trim()));","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"            if (isArgsFormattedCorrectly(args)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(\"ARGUMENT IS NOT A NUMBER!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"            return new DeleteCommand(Integer.parseInt(args.trim()));","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"            return new FindCommand(parseFindArgs(args.trim()));","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"            return new TodoCommand(args);","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"            return parseDeadlineArgs(args);","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"            return parseEventArgs(args);","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"UNKNOWN COMMAND!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"    private String[] parseFindArgs(String args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"        return args.split(\" \");","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"    private Command parseDeadlineArgs(String args) {","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"        Matcher matcher \u003d DEADLINE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"ARGUMENT HAS THE WRONG FORMAT!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        String description \u003d matcher.group(\"desc\");","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        String dateTime \u003d matcher.group(\"dateTime\");","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"            return new DeadlineCommand(description, LocalDateTime.parse(dateTime, formatter));","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"DATE AND TIME NUMBERS ARE OUT OF RANGE!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"    private Command parseEventArgs(String args) {","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"        Matcher matcher \u003d EVENT_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"ARGUMENT HAS THE WRONG FORMAT!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"        String description \u003d matcher.group(\"desc\");","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"        String dateTime \u003d matcher.group(\"dateTime\");","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"            return new EventCommand(description, LocalDateTime.parse(dateTime, formatter));","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"DATE AND TIME NUMBERS ARE OUT OF RANGE!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"    private boolean isArgsFormattedCorrectly(String args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"        return !args.matches(\"\\\\d+\");","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":121}},{"path":"src/main/java/henry/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import command.Commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" * Storage is responsible for loading the task list from","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" * the file, and also writing any changes to the task","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":" * list to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * When a Storage class is initialised, it tries to","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * read the file at the specified filepath. If the file exists,","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * the tasks will be loaded from the file. If not, a new file will be","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * created at the filepath.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * @param filePath the filepath where the task list is stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"            File savedList \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"            if (savedList.createNewFile()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"                tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"                tasks \u003d parseTasksFromFile(savedList);","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     * Returns the loaded list of tasks. Storage first parses","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * tasks from a given file, which is then stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     * @return a TaskList containing tasks loaded from a file","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    private List\u003cTask\u003e parseTasksFromFile(File savedList) throws FileNotFoundException {","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        Scanner s \u003d new Scanner(savedList);","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"            String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"            Commands type;","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"            String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"            LocalDateTime date \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"            boolean isComplete;","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"            String prefix;","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"            String cleaned;","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"            prefix \u003d tokens[0].trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"            switch (prefix) {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"            case \"T\":","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"                type \u003d Commands.TODO;","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"                isComplete \u003d tokens[1].trim().equals(\"1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"                description \u003d tokens[2].trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"            case \"D\":","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"                type \u003d Commands.DEADLINE;","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"                isComplete \u003d tokens[1].trim().equals(\"1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"                description \u003d tokens[2].trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"                cleaned \u003d tokens[3].replace(\"(by:\", \"\").replace(\")\", \"\").trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"                date \u003d parseDateTime(cleaned.split(\" \")[0], cleaned.split(\" \")[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"            default:","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"                type \u003d Commands.EVENT;","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"                isComplete \u003d tokens[1].trim().equals(\"1\");","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"                description \u003d tokens[2].trim();","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"                cleaned \u003d tokens[3].replace(\"(at:\", \"\").replace(\")\", \"\").trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"                date \u003d parseDateTime(cleaned.split(\" \")[0], cleaned.split(\" \")[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"            tasks.add(new Task(type, description, date, isComplete));","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"    private LocalDateTime parseDateTime(String date, String time) {","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"        String[] tokens \u003d date.split(\"-\");","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        String[] timeTokens \u003d time.split(\":\");","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        return LocalDate.of(Integer.parseInt(tokens[2]), Integer.parseInt(tokens[1]), Integer.parseInt(tokens[0]))","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"                        .atTime(Integer.parseInt(timeTokens[0]), Integer.parseInt(timeTokens[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"     * Appends text to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"     * @param textToAdd the text to be appended to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"    public void appendToFile(String textToAdd) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"        fw.write(textToAdd + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"        fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":114}},{"path":"src/main/java/henry/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import command.Commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * The base for tasks that can be added to the","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" * task list. All task types (Todo, Deadline, Event)","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * are just instances of Task with different types passed","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * into the constructor.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    protected String description;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private final Commands type;","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public Task(Commands type, String description, LocalDateTime date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        this(type, description, date, false);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * Constructor for a task. The task will have the specified","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * type, description, date, and status (if used).","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * @param type        the type of task. Can be Todo, Deadline, or Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * @param date        the date that the task must be completed by/is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     *                    Only used for Deadline and Event tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     * @param isDone      whether or not the task is completed.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public Task(Commands type, String description, LocalDateTime date, boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        return isDone ? \"[X]\" : \"[ ]\"; // mark done task with X","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * Sets the status of this task as the input boolean.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * @param status the desired status of the task","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public void setComplete(boolean status) {","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2022-08-15"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        switch (type) {","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        case TODO:","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"            return \"[T]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"            return \"[D]\" + getStatusIcon() + \" \" + description + \" (by: \"","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"                   + date.format(formatter).replace(\"T\", \" \") + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"            return \"[E]\" + getStatusIcon() + \" \" + description + \" (at: \"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"                   + date.format(formatter).replace(\"T\", \" \") + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"     * Returns the file-formatted version of the task. This is different from","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"     * the toString() method, in that it is simpler and thus easier to parse.","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"     * @return a string representing the task as it would be written to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    public String toSimpleString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        description \u003d description.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        switch (type) {","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        case TODO:","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"            return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"            return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | (by: \"","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"                   + date.format(formatter).replace(\"T\", \" \") + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"            return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | (at: \"","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"                   + date.format(formatter).replace(\"T\", \" \") + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":90}},{"path":"src/main/java/henry/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * TaskList represents the actual list to which tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * can be added, removed or modified.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class TaskList {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * Deletes the task in the task list at the given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * @return the deleted task as a String","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    public String deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        return tasks.remove(index).toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * Gets the task in the task list at the given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * @param task the index of the task to be retrieved","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * @return the task at the given index","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        return task.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * Gets the entire task list as a List of Tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * @return the task list","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"            sb.append(\" \").append(i).append(\". \").append(tasks.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * Returns a String representing the entire task list,","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * in simplified form that is used in file writing and","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * reading","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     * @return a String representing the entire task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    public String toSimpleString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"            sb.append(tasks.get(i - 1).toSimpleString()).append(\"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        return sb.toString().trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":71}},{"path":"src/main/java/henry/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Responsible for reading user input.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public class Ui {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"     * Instantiates a UI object. When created, the logo will be","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"     * printed to the console, and the user will be prompted for","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"     * input.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public Ui() {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        System.out.println(","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"            \"  _    _ ______ _   _ _______     __\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"            + \" | |  | |  ____| \\\\ | |  __ \\\\ \\\\   / /\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"            + \" | |__| | |__  |  \\\\| | |__) \\\\ \\\\_/ /\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"            + \" |  __  |  __| | . ` |  _  / \\\\   /\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"            + \" | |  | | |____| |\\\\  | | \\\\ \\\\  | |\\n\"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"            + \" |_|  |_|______|_| \\\\_|_|  \\\\_\\\\ |_|\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        output(\"HELLO. I AM HENRY. HOW MAY I ASSIST YOU TODAY?\");","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * Reads input from the user through Scanner","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * @return the given input from the user as a String","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    public String getInput() {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * Prints the given message in special formatting to the console.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * @param message the output to be printed to the console","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    public void output(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        System.out.println(formatResponse(message));","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     * Closes the UI","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    public void close() {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        output(\"GOODBYE!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    private String formatResponse(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        return \"____________________________________________________________\" + \"\\n HENRY: \"","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"               + input + \"\\n\" + \"____________________________________________________________\";","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"components.MainWindow\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":19}},{"path":"src/test/java/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class TodoCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n\\t\\t\\t %1$s.\";","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public void executeTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        TodoCommand command \u003d new TodoCommand(\"test\");","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        Task task \u003d new Task(Commands.TODO, \"test\", null);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(String.format(MESSAGE_SUCCESS, list.addTask(task)), list);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        command.setData(list);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"e1010101":25}},{"path":"src/test/java/henry/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public void parseTest() {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        TaskListStub taskList \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        String command \u003d \"event event stub /at 01-01-2000 00:00\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        String desired \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n\\t\\t\\t [E][ ] event stub (at: 01-01-2000 00:00).\";","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        Command c \u003d parser.parseCommand(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        c.setData(taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        assertEquals(c.execute().toString(), desired);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"e1010101":23}},{"path":"src/test/java/henry/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Stub for the TaskList class.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    public TaskListStub(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"        super(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"e1010101":13}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"  _    _ ______ _   _ _______     __","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":" | |  | |  ____| \\ | |  __ \\ \\   / /","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":" | |__| | |__  |  \\| | |__) \\ \\_/ /","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" |  __  |  __| | . ` |  _  / \\   /","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" | |  | | |____| |\\  | | \\ \\  | |","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" |_|  |_|______|_| \\_|_|  \\_\\ |_|","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" HENRY: HELLO. I AM HENRY. HOW MAY I ASSIST YOU TODAY?","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" HENRY: OK. I ADDED THIS TASK TO MY LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"\t\t\t [T][ ] read book.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" HENRY: OK. I ADDED THIS TASK TO MY LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"\t\t\t [D][ ] return book (by: 06-06-2022 12:00).","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":" HENRY: OK. I ADDED THIS TASK TO MY LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"\t\t\t [E][ ] project meeting (at: 06-08-2022 14:00).","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":" HENRY: I\u0027VE MARKED THIS TASK AS DONE:","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"\t\t\t [T][X] read book.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":" HENRY:","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":" 1. [T][X] read book","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":" 2. [D][ ] return book (by: 06-06-2022 12:00)","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":" 3. [E][ ] project meeting (at: 06-08-2022 14:00)","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":" HENRY: GOODBYE!","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":40,"-":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"todo read book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"deadline return book /by 06-06-2022 12:00","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"event project meeting /at 06-08-2022 14:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"if exist ACTUAL.txt del ACTUAL.txt","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"FC ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":3,"-":18}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"# Henry, the helpful chatbot","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003e The busy man is least busy with living. -","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003e Seneca ([source](https://www.goodreads.com/quotes/9840711-there-is-nothing-the-busy-man-is-less-busied-with#:~:text\u003d%E2%80%9CThere%20is%20nothing%20the%20busy%20man%20is%20less%20busied%20with,that%20is%20harder%20to%20learn.%E2%80%9D))","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"## **Henry** is a chatbot that curates a task list for you based on text commands.","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"Currently, **Henry** supports the following commands:","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"- **Echo:** repeats the user\u0027s input to the console","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"- **List:** displays the task list in the console","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"- **Todo:** adds a \"to-do\" type task to the task list","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"- **Deadline:** adds a \"deadline\" type task to the task list","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"- **Event:** adds an \"event\" type task to the task list","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"- **Mark:** marks a task as complete","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"- **Unmark:** marks a task as incomplete","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"- **Delete:** deletes a task from the task list","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"- **Find:** finds any matching tasks given a key word","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"**Henry** is able to store a task list to the user\u0027s desktop. When **Henry** starts up, the following occurs:","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"1. The user\u0027s desktop is checked for an existing storage file. If no file exists, a new file is created.","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"   (Note: **Henry** does this by using a reference to a user\u0027s desktop that will work for ANY **Windows** user)","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"```java","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"private static final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"private static final Path FILE_PATH \u003d java.nio.file.Paths.get(home,\"Desktop\",\"henry.txt\");","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"```","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"2. Tasks are parsed from the file to a list (or an empty list if the file is newly created).","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"3. The UI is initialised.","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"4. Start-up complete! ðŸ˜ƒ","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"To run **Henry**, download the release from **releases**, then open command prompt. Input the following:","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"cd [the path where henry.jar is located]","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"java -jar henry.jar","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"Note that the release is not updated to handle the \"Find\" command yet!","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"This description contains the following formatting guidelines:","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"- [x] a heading","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"- [x] a bullet list","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"- [x] a numbered list","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"- [x] a fenced code block (with syntax highlighting)","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"- [x] a task list","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"- [x] an emoji","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"- [x] a blockquote","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"- [x] a hyper link","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"- [x] inline code","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"- [x] some text formatting: bold, italic, strikethrough etc.","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"e1010101":48,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"javafx {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    version \u003d \u002712\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"checkstyle {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.9.0\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.9.0\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    testImplementation \"org.testfx:testfx-core:4.0.16-alpha\"","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    testImplementation \"org.testfx:testfx-junit5:4.0.16-alpha\"","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    testImplementation \"org.testfx:openjfx-monocle:jdk-11+26\" // For Java 11","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    testImplementation group: \u0027org.assertj\u0027, name: \u0027assertj-core\u0027, version: \u00273.13.2\u0027","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    archiveBaseName \u003d \"henry\"","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"e1010101":35,"-":38}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * The command class is the base for all commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * It only has one method, execute, which returns a CommandResult.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * This method is to be implemented by all subclasses of Command.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"     * Returns a CommandResult object based on the type of Command","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * executed.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * Sets the task list to be used by the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * The task list is then modified by various commands, such as the {@link TodoCommand}.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * Some commands do not require a task list, and therefore this method is","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * not called in the execution of the command.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * @param inputTaskList a TaskList object the represents the list of tasks.","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    public void setData(TaskList inputTaskList) {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        this.taskList \u003d inputTaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":31}},{"path":"src/main/java/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * CommandResult is returned by all Commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * It contains two methods; getTaskList, which returns","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" * the TaskList modified by the Command (if applicable),","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * and toString, which returns the feedback specified","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * when the CommandResult is constructed.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private final String feedback;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public CommandResult(String feedback) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        this(feedback, null);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     * Constructs a CommandResult with the given feedback and TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * @param inputFeedback the feedback to be displayed to the user. Usually","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     *                      a success or error message.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param inputList     the TaskList modified by the Command (if applicable).","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public CommandResult(String inputFeedback, TaskList inputList) {","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        this.feedback \u003d inputFeedback;","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        this.taskList \u003d inputList;","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     * Gets the task list from the CommandResult, if it exists.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * @return the task list if it is present, otherwise returns an empty optional.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    public Optional\u003cTaskList\u003e getTaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        return Optional.ofNullable(taskList);","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * A CommandResult returns its feedback in its toString method.","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * @return the feedback of the CommandResult.","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        return feedback;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":53}},{"path":"src/main/java/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * An enum for task-creation commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"public enum Commands {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"     * There are currently 3 Commands that share a similar functionality:","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"     * Todo, Deadline and Event tasks.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"     * Dummy is for testing purposes.","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    DUMMY, TODO, DEADLINE, EVENT","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"e1010101":15}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * Responsible for adding Deadline tasks to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Deadline tasks are tasks with a deadline date and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class DeadlineCommand extends Command implements TaskCommand {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * Creates a new DeadlineCommand with the given description and dateTime.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * @param dateTime    the date/time when the task is due","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    public DeadlineCommand(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        this.task \u003d new Task(Commands.DEADLINE, description, dateTime);","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        return task;","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.addTask(task)), taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":36}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import util.TextUtils;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * Responsible for deletion of tasks from the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"I\u0027VE DELETED THIS TASK:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final int index;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     * Creates a new DeleteCommand with the given index.","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * @param givenIndex the index of the task (0-indexed) to be deleted from","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     *                   the taskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public DeleteCommand(int givenIndex) {","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        this.index \u003d givenIndex;","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        if (index \u003e taskList.size() - 1) {","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(String.format(TextUtils.INDEX_OUT_OF_RANGE_ERROR, taskList.size()));","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.deleteTask(index)), taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":32}},{"path":"src/main/java/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Handles the Echo command, which reads the user\u0027s","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * input and prints it to the console.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"echo\";","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    private final String echoedText;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"     * Creates an EchoCommand.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"     * @param description the message to be echoed to the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public EchoCommand(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        this.echoedText \u003d description;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(echoedText);","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":25}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * Responsible for adding Event tasks to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Event tasks are tasks with a date and time.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class EventCommand extends Command implements TaskCommand {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     * Creates an EventCommand with the given description and dateTime.","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * @param description   the description of the task","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * @param givenDateTime the date/time when the event will occur","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    public EventCommand(String description, LocalDateTime givenDateTime) {","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        this.task \u003d new Task(Commands.EVENT, description, givenDateTime);","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        this.dateTime \u003d givenDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        return task;","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        task.addTentativeDate(dateTime);","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.addTask(task)), taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":39}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Responsible for finding tasks given a search term.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"I\u0027VE FOUND THESE MATCHING TASKS:\\n %1$s\";","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private final HashSet\u003cString\u003e termsToFind;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     * Creates a new FindCommand with the given search terms.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     * @param searchTerms a variable amount of search terms","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    public FindCommand(String... searchTerms) {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        termsToFind \u003d getCleanedArgs(searchTerms);","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, appendToStringBuilder(taskList)));","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private HashSet\u003cString\u003e getCleanedArgs(String[] args) {","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        HashSet\u003cString\u003e temp \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        for (String arg : args) {","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"            temp.add(arg.trim());","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return temp;","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    private String appendToStringBuilder(TaskList taskList) {","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        final int[] i \u003d {1};","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        taskList.stream().filter(this::isMatch).forEach(task -\u003e {","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            sb.append(i[0]++).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        });","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        return sb.toString().trim();","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    private boolean isMatch(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        for (String term : termsToFind) {","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"            if (!task.getDescription().contains(term)) {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"                return false;","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        return true;","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"e1010101":57}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Command that prints the existing task list","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * to the console.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"HERE\u0027S YOUR CURRENT LIST:\\n %1$s\";","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.toString()), taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":16}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Responsible for setting the state of a task","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * to \"complete\".","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"I\u0027VE MARKED THIS TASK AS DONE:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final int indexToMark;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        this.indexToMark \u003d index;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        Task task \u003d taskList.get(indexToMark);","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        task.setComplete(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        taskList.set(indexToMark, task);","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task));","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":27}},{"path":"src/main/java/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * An interface for commands that add Tasks to the task list.","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public interface TaskCommand {","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    Task getTask();","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"e1010101":11}},{"path":"src/main/java/command/TentativeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Adds a tentative date for an {@link EventCommand}.","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class TentativeCommand extends Command {","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"tentative\";","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_ADD_DATE_SUCCESS \u003d \"OK. I ADDED A TENTATIVE DATE FOR THIS EVENT:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_CONFIRM_DATE_SUCCESS \u003d \"DATE CONFIRMED! THE EVENT HAS BEEN MODIFIED:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final int index;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private final int dateToChooseIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * Creates a TentativeCommand with the given index and dateTime.","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * @param givenIndex    the index of the Event to be modified","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * @param givenDateTime the tentative date/time to be added to the Event","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public TentativeCommand(int givenIndex, LocalDateTime givenDateTime) {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        this.index \u003d givenIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        this.dateToChooseIndex \u003d -1;","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        this.dateTime \u003d givenDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * Creates a TentativeCommand with the given index and dateIndex.","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     * @param givenIndex     the index of the Event to be modified","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     * @param givenDateIndex the index of the chosen tentative date/time to confirm","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    public TentativeCommand(int givenIndex, int givenDateIndex) {","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        this.index \u003d givenIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        this.dateToChooseIndex \u003d givenDateIndex;","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        this.dateTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        if (task.getType() !\u003d Commands.EVENT) {","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"TASK IS NOT AN EVENT!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        if (dateToChooseIndex \u003d\u003d -1) {","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"            task.addTentativeDate(dateTime);","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"            taskList.set(index, task);","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"            return new CommandResult(String.format(MESSAGE_ADD_DATE_SUCCESS, task), taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"            task.confirmDate(dateToChooseIndex);","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"            taskList.set(index, task);","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"            return new CommandResult(String.format(MESSAGE_CONFIRM_DATE_SUCCESS, task), taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"e1010101":59}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * Responsible for adding Todo tasks to the task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Todo tasks are tasks with only a description.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class TodoCommand extends Command implements TaskCommand {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private final Task task;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        this.task \u003d new Task(Commands.TODO, description, LocalDateTime.MAX);","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        return task;","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskList.addTask(task)), taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":30}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * Responsible for setting the state of a task","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" * to \"incomplete\".","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"I\u0027VE MARKED THIS TASK AS NOT DONE:\\n %1$s\";","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final int indexToUnmark;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        this.indexToUnmark \u003d index;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        Task task \u003d taskList.get(indexToUnmark);","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        task.setComplete(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        taskList.set(indexToUnmark, task);","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task));","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":26}},{"path":"src/main/java/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package components;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    // We will never initialise DialogBox with a constructor.","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    // Use the static methods instead to get relevant DialogBox objects.","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * Gets the dialog box representing text from the user.","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     * @param text the text to be displayed","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     * @param img  the image to be displayed","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * @return a DialogBox object with the given text and image","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"     * Gets the dialog box representing text from Henry.","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * @param text the text to be displayed","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * @param img  the image to be displayed","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * @return a DialogBox object with the given text and image","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"    public static DialogBox getHenryDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        db.flipDialogBox();","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        return db;","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    private void flipDialogBox() {","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"e1010101":77}},{"path":"src/main/java/components/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package components;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import henry.Henry;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    private static final String GREETING \u003d \"HELLO. I AM HENRY. HOW MAY I ASSIST YOU TODAY?\";","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private final Image henryImage \u003d new Image(","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/henry.png\")));","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    // FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private Henry henry;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     * Initializes the main window of the JavaFX application.","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            DialogBox.getHenryDialog(GREETING, henryImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * Sets the Henry object to be used in the GUI.","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     * @param henry the Henry object to be used for operations","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    public void setHenry(Henry henry) {","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        this.henry \u003d henry;","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"            String response \u003d henry.getResponse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"                DialogBox.getHenryDialog(response, henryImage)","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"            );","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"                DialogBox.getHenryDialog(e.getMessage(), henryImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"            );","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":78}},{"path":"src/main/java/exceptions/HenryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package exceptions;","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * The exception class that handles errors related","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * to Henry.","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class HenryException extends RuntimeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"     * Simple constructor that allows for custom error messages.","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"     * @param message the error message to be displayed by HenryException","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public HenryException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":17}},{"path":"src/main/java/henry/Henry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import command.Command;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import command.CommandResult;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import command.TaskCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import components.MainWindow;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import util.TextUtils;","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":" * The base class of the Henry application.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":" * All functions of Henry pass through this class.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"public class Henry extends Application {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    private static final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    // The text file is created on the user\u0027s Desktop","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    private static final Path FILE_PATH \u003d java.nio.file.Paths.get(home, \"Desktop\", \"henry.txt\");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     * The constructor for the logical component of Henry.","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     * When Henry is instantiated, a new Storage, TaskList","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * and Parser classes are also created.","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    public Henry() {","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        storage \u003d new Storage(FILE_PATH.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Henry.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHenry(this);","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"            stage.show();","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * Generates a response based on user input.","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     * @param input the given user input","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"     * @return a String representing the {@link CommandResult} of the user input","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        assert input !\u003d null : \"Input is null!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"            delay.play();","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"            return TextUtils.TASKS_SAVED_MESSAGE;","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"        Command parsed \u003d parser.parseCommand(input);","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d executeCommand(parsed);","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        return result.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"            performSanityChecks(command);","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"            return appendResultToFile(getCommandResult(command));","lastModifiedDate":"2022-09-06"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        } catch (HenryException he) {","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"            throw he;","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"    private CommandResult getCommandResult(Command command) {","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"        command.setData(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"        return command.execute();","lastModifiedDate":"2022-09-06"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"    private CommandResult appendResultToFile(CommandResult result) throws IOException {","lastModifiedDate":"2022-09-06"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        if (result.getTaskList().isPresent()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"            storage.appendToFile(result.getTaskList().get().toFileEncodedString());","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        return result;","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"    private void performSanityChecks(Command command) {","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"        assert taskList !\u003d null : \"TaskList is null!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"        if (command instanceof TaskCommand) {","lastModifiedDate":"2022-09-06"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"            Task tempTask \u003d ((TaskCommand) command).getTask();","lastModifiedDate":"2022-09-06"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"            if (isTaskInTaskList(tempTask)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(TextUtils.DUPLICATE_TASK_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-06"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"     * A Task is considered duplicate if it shares the same","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"     * description and date with another Task in the TaskList.","lastModifiedDate":"2022-09-06"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"     * @param task the Task to be checked","lastModifiedDate":"2022-09-06"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"     * @return true if the Task is a duplicate, false otherwise","lastModifiedDate":"2022-09-06"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"    private boolean isTaskInTaskList(Task task) {","lastModifiedDate":"2022-09-05"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-09-06"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"                return true;","lastModifiedDate":"2022-09-05"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"        return false;","lastModifiedDate":"2022-09-05"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":129,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":129}},{"path":"src/main/java/henry/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"        Application.launch(Henry.class, args);","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"e1010101":12}},{"path":"src/main/java/henry/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import command.Commands;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import command.DeleteCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import command.EchoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import command.EventCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"import command.FindCommand;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import command.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import command.MarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import command.TentativeCommand;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import command.TodoCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"import util.DateUtils;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"import util.TextUtils;","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":" * The parser class is responsible for parsing the user input and","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":" * creating the appropriate command.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"public class Parser {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    // REGEX PATTERNS","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S*)(?\u003cargs\u003e.*)\");","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    private static final Pattern DATE_FORMAT \u003d Pattern.compile(\"(?\u003cdesc\u003e.+) /(at|by) \"","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"                                                               + \"(?\u003cdateTime\u003e.*)\");","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    private static final Pattern TENTATIVE_NEW_DATE_FORMAT \u003d","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"        Pattern.compile(\"(?\u003cindex\u003e\\\\d+) (?\u003cdateTime\u003e.*)\");","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    private static final Pattern TENTATIVE_CONFIRM_DATE_FORMAT \u003d","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        Pattern.compile(\"(?\u003cindex\u003e\\\\d+) (--confirm) (?\u003cchosenDateIndex\u003e\\\\d+)\");","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"     * Parses a command from a string. There are two types of commands:","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"     * single-argument commands, and double-argument commands. The function","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * first checks if the command matches the appropriate pattern. If it does,","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     * then the corresponding command is returned. If not, then an exception is thrown.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * @param text the string to be parsed.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * @return the command corresponding to the string, or an exception if the string is malformed.","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    public Command parseCommand(String text) {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"        String[] cleanedText \u003d performTextGrouping(text);","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        String command \u003d cleanedText[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"        String args \u003d cleanedText[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        switch (command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        case EchoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"            return new EchoCommand(args);","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            return handleFindCommand(args);","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        case TentativeCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"            return handleTentativeCommand(args);","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"            return handleTaskEditCommand(command, args);","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"            return handleTaskCommand(command, args);","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.UNKNOWN_COMMAND_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"    private String[] performTextGrouping(String text) {","lastModifiedDate":"2022-09-06"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        assert text !\u003d null : \"Text is null!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(text.trim());","lastModifiedDate":"2022-09-06"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.EMPTY_INPUT_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"        String command \u003d matcher.group(\"command\").toLowerCase().trim();","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"        String args \u003d matcher.group(\"args\").trim();","lastModifiedDate":"2022-09-06"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"        return new String[]{command, args};","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"    private Command handleFindCommand(String args) {","lastModifiedDate":"2022-09-06"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        if (!isFindInputValid(args)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.FIND_COMMAND_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"        return new FindCommand(parseFindArguments(args));","lastModifiedDate":"2022-09-06"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"    private Command handleTentativeCommand(String args) {","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"        Matcher newDateMatcher \u003d TENTATIVE_NEW_DATE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"        Matcher confirmDateMatcher \u003d TENTATIVE_CONFIRM_DATE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        if (!newDateMatcher.matches() \u0026\u0026 !confirmDateMatcher.matches()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.TENTATIVE_COMMAND_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"        if (newDateMatcher.matches()) {","lastModifiedDate":"2022-09-04"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"            int index \u003d Integer.parseInt(newDateMatcher.group(\"index\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"            String dateTime \u003d newDateMatcher.group(\"dateTime\");","lastModifiedDate":"2022-09-04"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"            try {","lastModifiedDate":"2022-09-04"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"                LocalDateTime parsed \u003d DateUtils.parseDateTime(dateTime);","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"                return new TentativeCommand(index, parsed);","lastModifiedDate":"2022-09-06"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(TextUtils.DATE_FORMAT_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"        } else {","lastModifiedDate":"2022-09-04"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"            int index \u003d Integer.parseInt(confirmDateMatcher.group(\"index\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"            int chosenDateIndex \u003d Integer.parseInt(confirmDateMatcher.group(\"chosenDateIndex\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"            return new TentativeCommand(index, chosenDateIndex);","lastModifiedDate":"2022-09-04"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"    private Command handleTaskEditCommand(String command, String args) {","lastModifiedDate":"2022-09-04"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"        if (!isInputNumeric(args)) {","lastModifiedDate":"2022-09-06"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.NON_NUMBER_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"        if (Integer.parseInt(args) \u003c 1) {","lastModifiedDate":"2022-09-06"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.MUST_BE_POSITIVE_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"e1010101"},"content":"        switch (command) {","lastModifiedDate":"2022-09-04"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"            return new MarkCommand(Integer.parseInt(args));","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"            return new UnmarkCommand(Integer.parseInt(args.trim()));","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"            return new DeleteCommand(Integer.parseInt(args.trim()));","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-09-04"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.MALFORMED_COMMAND_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"    private Command handleTaskCommand(String command, String args) {","lastModifiedDate":"2022-09-04"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"        switch (command) {","lastModifiedDate":"2022-09-04"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"e1010101"},"content":"            return new TodoCommand(args);","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"e1010101"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"e1010101"},"content":"            return parseDatedCommand(Commands.DEADLINE, args);","lastModifiedDate":"2022-09-04"},{"lineNumber":147,"author":{"gitId":"e1010101"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"e1010101"},"content":"            return parseDatedCommand(Commands.EVENT, args);","lastModifiedDate":"2022-09-04"},{"lineNumber":149,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.UNKNOWN_COMMAND_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":151,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"e1010101"},"content":"    private String[] parseFindArguments(String args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":155,"author":{"gitId":"e1010101"},"content":"        assert args !\u003d null : \"Arguments are null!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":156,"author":{"gitId":"e1010101"},"content":"        return args.split(\"--\");","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":158,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":159,"author":{"gitId":"e1010101"},"content":"    private String[] performArgumentGrouping(String args) {","lastModifiedDate":"2022-09-06"},{"lineNumber":160,"author":{"gitId":"e1010101"},"content":"        assert args !\u003d null : \"Arguments are null!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":161,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":162,"author":{"gitId":"e1010101"},"content":"        Matcher matcher \u003d DATE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"e1010101"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.ARGUMENT_SYNTAX_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":165,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":167,"author":{"gitId":"e1010101"},"content":"        String description \u003d matcher.group(\"desc\");","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"e1010101"},"content":"        String dateTime \u003d matcher.group(\"dateTime\");","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":170,"author":{"gitId":"e1010101"},"content":"        return new String[]{description, dateTime};","lastModifiedDate":"2022-09-06"},{"lineNumber":171,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":172,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":173,"author":{"gitId":"e1010101"},"content":"    private Command parseDatedCommand(Commands type, String args) {","lastModifiedDate":"2022-09-06"},{"lineNumber":174,"author":{"gitId":"e1010101"},"content":"        String[] cleanedArgs \u003d performArgumentGrouping(args);","lastModifiedDate":"2022-09-06"},{"lineNumber":175,"author":{"gitId":"e1010101"},"content":"        String description \u003d cleanedArgs[0];","lastModifiedDate":"2022-09-06"},{"lineNumber":176,"author":{"gitId":"e1010101"},"content":"        String dateTime \u003d cleanedArgs[1];","lastModifiedDate":"2022-09-06"},{"lineNumber":177,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":178,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"e1010101"},"content":"            LocalDateTime parsed \u003d DateUtils.parseDateTime(dateTime);","lastModifiedDate":"2022-09-08"},{"lineNumber":180,"author":{"gitId":"e1010101"},"content":"            switch (type) {","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"e1010101"},"content":"            case DEADLINE:","lastModifiedDate":"2022-09-04"},{"lineNumber":182,"author":{"gitId":"e1010101"},"content":"                return new DeadlineCommand(description, parsed);","lastModifiedDate":"2022-09-04"},{"lineNumber":183,"author":{"gitId":"e1010101"},"content":"            case EVENT:","lastModifiedDate":"2022-09-04"},{"lineNumber":184,"author":{"gitId":"e1010101"},"content":"                return new EventCommand(description, parsed);","lastModifiedDate":"2022-09-04"},{"lineNumber":185,"author":{"gitId":"e1010101"},"content":"            default:","lastModifiedDate":"2022-09-04"},{"lineNumber":186,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(TextUtils.UNKNOWN_COMMAND_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":187,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":188,"author":{"gitId":"e1010101"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.DATE_FORMAT_ERROR);","lastModifiedDate":"2022-09-06"},{"lineNumber":190,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"e1010101"},"content":"    private boolean isFindInputValid(String args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":194,"author":{"gitId":"e1010101"},"content":"        assert args !\u003d null : \"Arguments are null!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":195,"author":{"gitId":"e1010101"},"content":"        return args.matches(\"(--\\\\w*\\\\s*)+\");","lastModifiedDate":"2022-09-01"},{"lineNumber":196,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":197,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":198,"author":{"gitId":"e1010101"},"content":"    private boolean isInputNumeric(String args) {","lastModifiedDate":"2022-09-06"},{"lineNumber":199,"author":{"gitId":"e1010101"},"content":"        assert args !\u003d null : \"Arguments are null!\";","lastModifiedDate":"2022-09-03"},{"lineNumber":200,"author":{"gitId":"e1010101"},"content":"        return args.matches(\"\\\\d+\");","lastModifiedDate":"2022-09-01"},{"lineNumber":201,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":202}},{"path":"src/main/java/henry/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.io.File;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import util.TaskUtils;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * Storage is responsible for loading the task list from","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" * the file, and also writing any changes to the task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" * list to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * When a Storage class is initialised, it tries to","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * read the file at the specified filepath. If the file exists,","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * the tasks will be loaded from the file. If not, a new file will be","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * created at the filepath.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * @param filePath the filepath where the task list is stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"            File savedList \u003d new File(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"            if (savedList.createNewFile()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"                tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"                tasks \u003d parseTasksFromFile(savedList);","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * Returns the loaded list of tasks. Storage first parses","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     * tasks from a given file, which is then stored.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     * @return a TaskList containing tasks loaded from a file","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"    private List\u003cTask\u003e parseTasksFromFile(File savedList) throws FileNotFoundException {","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        Scanner scanner \u003d new Scanner(savedList);","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"            Task parsed \u003d TaskUtils.parseTask(scanner.nextLine());","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"            LocalDateTime dateTime \u003d parsed.getLocalDateTime();","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"            if (!dateTime.isBefore(now)) {","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"                tasks.add(parsed);","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        return tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"     * Appends text to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"     * @param textToAdd the text to be appended to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"    public void appendToFile(String textToAdd) throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        fw.write(textToAdd + \"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        fw.close();","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":84}},{"path":"src/main/java/henry/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import command.Commands;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import util.TaskUtils;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" * The base for tasks that can be added to the","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * task list. All task types (Todo, Deadline, Event)","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" * are just instances of Task with different types passed","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":" * into the constructor.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private final String description;","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private final Commands type;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    private final List\u003cLocalDateTime\u003e tentativeDates;","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private boolean isDone;","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    // date is not final as it can be changed with the Tentative command","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public Task(Commands type, String description, LocalDateTime date) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        this(type, description, date, false, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * Constructor for a task. The task will have the specified","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * type, description, date, and status (if used).","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     * @param type        the type of task. Can be Todo, Deadline, or Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"     * @param date        the date that the task must be completed by/is due.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"     *                    Only used for Deadline and Event tasks.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"     * @param isDone      whether the task is completed.","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    public Task(Commands type, String description, LocalDateTime date, boolean isDone,","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"                List\u003cLocalDateTime\u003e tentativeDates) {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        this.tentativeDates \u003d tentativeDates;","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * Sets the status of this task as the input boolean.","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     * @param status the desired status of the task","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"    public void setComplete(boolean status) {","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"     * Gets the description of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * @return a String representing the description of the task","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        return description;","lastModifiedDate":"2022-09-03"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"     * Gets the LocalDateTime object related to the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"     * @return a LocalDateTime object representing the date of the task","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        return date;","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"     * Gets the type of the task.","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"     * @return a Commands with the enum value of the task type","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"    public Commands getType() {","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"        return type;","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"     * Returns the file-formatted version of the task. This is different from","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"     * the toString() method, in that it is simpler and thus easier to parse.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"     * @return a string representing the task as it would be written to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"    public String toFileEncodedString() {","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"        return TaskUtils.getFileEncodedTask(type, isDone ? 1 : 0, description, date, tentativeDates);","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"     * Adds a tentative date to the Task. Only applicable for Event tasks.","lastModifiedDate":"2022-09-05"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"     * @param date the tentative date to be added","lastModifiedDate":"2022-09-05"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"    public void addTentativeDate(LocalDateTime date) {","lastModifiedDate":"2022-09-04"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        tentativeDates.add(date);","lastModifiedDate":"2022-09-04"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"     * Confirms the tentative date of the task. Only applicable for Event tasks.","lastModifiedDate":"2022-09-05"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"     * @param index the index of the date chosen","lastModifiedDate":"2022-09-05"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"    public void confirmDate(int index) {","lastModifiedDate":"2022-09-04"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"        date \u003d tentativeDates.get(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"        tentativeDates.clear();","lastModifiedDate":"2022-09-04"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"     * Custom equals method to check if two tasks are equal.","lastModifiedDate":"2022-09-06"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"     * Checks if the type, description, date and completion status are the same.","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"     * @param o the object to be compared to","lastModifiedDate":"2022-09-06"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"     * @return true if the two tasks are equal, false otherwise","lastModifiedDate":"2022-09-06"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-06"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2022-09-06"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"            Task other \u003d (Task) o;","lastModifiedDate":"2022-09-06"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"            return other.type \u003d\u003d type","lastModifiedDate":"2022-09-06"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 other.description.equals(description)","lastModifiedDate":"2022-09-06"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 other.date.equals(date)","lastModifiedDate":"2022-09-06"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"                   \u0026\u0026 other.isDone \u003d\u003d isDone;","lastModifiedDate":"2022-09-06"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"e1010101"},"content":"        return false;","lastModifiedDate":"2022-09-06"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-09-06"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"        return TaskUtils.toStandardString(type, isDone, description, date, tentativeDates);","lastModifiedDate":"2022-09-06"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":136}},{"path":"src/main/java/henry/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" * TaskList represents the actual list to which tasks","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * can be added, removed or modified.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * Deletes the task in the task list at the given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"     * @return the deleted task as a String","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public String deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        return tasks.remove(index).toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * Gets the task in the task list at the given index.","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * @param task the index of the task to be retrieved","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     * @return the task at the given index","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        return task.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"     * Gets the size of the TaskList","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"     * @return the number of Tasks in this TaskList","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"    public int size() {","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"        return tasks.size();","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     * Gets the Task in the TaskList at the given index.","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"     * @param index the index of the Task to be retrieved","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"     * @return the Task at the given index","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"     * Sets the Task in the TaskList at the given index to the given Task.","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"     * @param index the index of the Task to be set","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"     * @param task  the Task to be set","lastModifiedDate":"2022-09-06"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"    public void set(int index, Task task) {","lastModifiedDate":"2022-09-06"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"        tasks.set(index, task);","lastModifiedDate":"2022-09-06"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"            sb.append(\" \").append(i).append(\". \").append(tasks.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"     * Returns a String representing the entire task list,","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"     * in simplified form that is used in file writing and","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"     * reading","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"     * @return a String representing the entire task list.","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"    public String toFileEncodedString() {","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"            sb.append(tasks.get(i - 1).toFileEncodedString()).append(\"\\n\");","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"        return sb.toString().trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-09-06"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"        return tasks.iterator();","lastModifiedDate":"2022-09-06"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2022-09-10"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"        return tasks.stream();","lastModifiedDate":"2022-09-10"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"e1010101":106}},{"path":"src/main/java/util/DateUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package util;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" * Utility class containing DateTime related methods","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class DateUtils {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private static final DateTimeFormatter parseFormatter \u003d","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"[dd-MM-yyyy HH:mm]\")","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"                                      .appendPattern(\"[dd/MM/yyyy HH:mm]\")","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"                                      .appendPattern(\"[dd-MM-yyyy h:mm a]\")","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"                                      .appendPattern(\"[dd MMM yyyy HH:mm]\")","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"                                      .toFormatter();","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    private static final DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy h:mm a\");","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * Parses a String into a LocalDateTime object.","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param input the String to be parsed","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * @return a LocalDateTime object representing the input String","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"            LocalDateTime parsed \u003d LocalDateTime.parse(input, parseFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"            if (!isDateValid(parsed)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"                throw new HenryException(TextUtils.DATE_IN_PAST_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"            return parsed;","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(TextUtils.DATE_FORMAT_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"     * Parses a list of LocalDateTime objects from the given String input","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"     * and adds them to a List. Any LocalDateTime objects in the past","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"     * are not added.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"     * @param input the String to be converted into a List of LocalDateTime objects","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"     * @return a List of LocalDateTime objects representing the input","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"    public static List\u003cLocalDateTime\u003e parseMultipleDateTimes(String input) {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        List\u003cLocalDateTime\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        String[] tokens \u003d input.split(\",\");","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"        for (String token : tokens) {","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"            LocalDateTime date \u003d parseDateTime(token.trim());","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"            if (date.isAfter(now)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"                dates.add(date);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"        return dates;","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"     * Converts a LocalDateTime object to a String with \"dd-MM-yyyy h:mm a\" format.","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"     * @param date the LocalDateTime object to be converted","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"     * @return a String representation of the LocalDateTime object","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"    public static String dateToString(LocalDateTime date) {","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"        return date.format(fileFormatter);","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"    private static boolean isDateValid(LocalDateTime dateTime) {","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"        return !dateTime.isBefore(LocalDateTime.now());","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"e1010101":79}},{"path":"src/main/java/util/TaskUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package util;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static util.DateUtils.parseDateTime;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import static util.DateUtils.parseMultipleDateTimes;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import command.Commands;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import exceptions.HenryException;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":" * Utility class containing Task-related methods","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"public class TaskUtils {","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private static final String MALFORMED \u003d \"[T][ ] MALFORMED TASK\";","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    private static String getStatusIcon(boolean isDone) {","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     * Creates a String representation of a Task with the input parameters.","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     * @param type             the type of Task","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * @param completionStatus the completion status of the Task","lastModifiedDate":"2022-09-05"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * @param description      the description of the Task","lastModifiedDate":"2022-09-05"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     * @param dateTime         the LocalDateTime associated with the Task","lastModifiedDate":"2022-09-05"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * @param tentativeDates   the list of tentative dates associated with the Task, can be empty","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     * @return a String representation of the Task with the given input parameters","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    public static String toStandardString(Commands type, boolean completionStatus, String description,","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"                                          LocalDateTime dateTime, List\u003cLocalDateTime\u003e tentativeDates) {","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        description \u003d description.trim();","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        switch (type) {","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        case TODO:","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"            return \"[T]\" + getStatusIcon(completionStatus) + \" \" + description;","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"            return \"[D]\" + getStatusIcon(completionStatus) + \" \" + description + \" (by: \"","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"                   + DateUtils.dateToString(dateTime) + \")\";","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"        case EVENT:","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"            if (tentativeDates.isEmpty()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"                return \"[E]\" + getStatusIcon(completionStatus) + \" \" + description + \" (at: \"","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"                       + DateUtils.dateToString(dateTime) + \")\";","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"            } else {","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"                sb.append(\"[E]\").append(getStatusIcon(completionStatus)).append(\" \").append(description)","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"                  .append(\" (at: \");","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"                for (LocalDateTime tentativeDate : tentativeDates) {","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"                    sb.append(DateUtils.dateToString(tentativeDate)).append(\", \");","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"                }","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"                sb.delete(sb.length() - 2, sb.length());","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"e1010101"},"content":"                sb.append(\")\");","lastModifiedDate":"2022-09-05"},{"lineNumber":57,"author":{"gitId":"e1010101"},"content":"                return sb.toString();","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"e1010101"},"content":"            return MALFORMED;","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":63,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"e1010101"},"content":"     * Creates a String representation of a Task with the input parameters,","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"e1010101"},"content":"     * as it would be read from or written to the storage file.","lastModifiedDate":"2022-09-05"},{"lineNumber":67,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"e1010101"},"content":"     * @param type             the type of Task","lastModifiedDate":"2022-09-05"},{"lineNumber":69,"author":{"gitId":"e1010101"},"content":"     * @param completionStatus the completion status of the Task","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"e1010101"},"content":"     * @param description      the description of the Task","lastModifiedDate":"2022-09-05"},{"lineNumber":71,"author":{"gitId":"e1010101"},"content":"     * @param dateTime         the LocalDateTime associated with the Task","lastModifiedDate":"2022-09-05"},{"lineNumber":72,"author":{"gitId":"e1010101"},"content":"     * @param tentativeDates   the list of tentative dates associated with the Task, can be empty","lastModifiedDate":"2022-09-05"},{"lineNumber":73,"author":{"gitId":"e1010101"},"content":"     * @return a String representation of the Task with the given input parameters","lastModifiedDate":"2022-09-05"},{"lineNumber":74,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":75,"author":{"gitId":"e1010101"},"content":"    public static String getFileEncodedTask(Commands type, int completionStatus, String description,","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"e1010101"},"content":"                                            LocalDateTime dateTime,","lastModifiedDate":"2022-09-05"},{"lineNumber":77,"author":{"gitId":"e1010101"},"content":"                                            List\u003cLocalDateTime\u003e tentativeDates) {","lastModifiedDate":"2022-09-05"},{"lineNumber":78,"author":{"gitId":"e1010101"},"content":"        description \u003d description.trim();","lastModifiedDate":"2022-09-05"},{"lineNumber":79,"author":{"gitId":"e1010101"},"content":"        switch (type) {","lastModifiedDate":"2022-09-05"},{"lineNumber":80,"author":{"gitId":"e1010101"},"content":"        case TODO:","lastModifiedDate":"2022-09-05"},{"lineNumber":81,"author":{"gitId":"e1010101"},"content":"            return \"T | \" + completionStatus + \" | \" + description;","lastModifiedDate":"2022-09-05"},{"lineNumber":82,"author":{"gitId":"e1010101"},"content":"        case DEADLINE:","lastModifiedDate":"2022-09-05"},{"lineNumber":83,"author":{"gitId":"e1010101"},"content":"            return \"D | \" + completionStatus + \" | \" + description + \" | (by: \"","lastModifiedDate":"2022-09-05"},{"lineNumber":84,"author":{"gitId":"e1010101"},"content":"                   + DateUtils.dateToString(dateTime) + \")\";","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"e1010101"},"content":"        case EVENT:","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"e1010101"},"content":"            if (tentativeDates.isEmpty()) {","lastModifiedDate":"2022-09-05"},{"lineNumber":87,"author":{"gitId":"e1010101"},"content":"                return \"E | \" + completionStatus + \" | \" + description + \" | (at: \"","lastModifiedDate":"2022-09-05"},{"lineNumber":88,"author":{"gitId":"e1010101"},"content":"                       + DateUtils.dateToString(dateTime) + \")\";","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"e1010101"},"content":"            } else {","lastModifiedDate":"2022-09-05"},{"lineNumber":90,"author":{"gitId":"e1010101"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"e1010101"},"content":"                sb.append(\"E | \").append(completionStatus).append(\" | \").append(description).append(\" | (at: \");","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"e1010101"},"content":"                for (LocalDateTime tentativeDate : tentativeDates) {","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"e1010101"},"content":"                    sb.append(DateUtils.dateToString(tentativeDate)).append(\", \");","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"e1010101"},"content":"                }","lastModifiedDate":"2022-09-05"},{"lineNumber":95,"author":{"gitId":"e1010101"},"content":"                sb.delete(sb.length() - 2, sb.length());","lastModifiedDate":"2022-09-05"},{"lineNumber":96,"author":{"gitId":"e1010101"},"content":"                sb.append(\")\");","lastModifiedDate":"2022-09-05"},{"lineNumber":97,"author":{"gitId":"e1010101"},"content":"                return sb.toString();","lastModifiedDate":"2022-09-05"},{"lineNumber":98,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":99,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-09-05"},{"lineNumber":100,"author":{"gitId":"e1010101"},"content":"            return MALFORMED;","lastModifiedDate":"2022-09-05"},{"lineNumber":101,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":102,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":103,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":104,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":105,"author":{"gitId":"e1010101"},"content":"     * Parses a new Task object from the given String input","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":107,"author":{"gitId":"e1010101"},"content":"     * @param input the String to be converted into a Task","lastModifiedDate":"2022-09-06"},{"lineNumber":108,"author":{"gitId":"e1010101"},"content":"     * @return a new Task representing the input","lastModifiedDate":"2022-09-06"},{"lineNumber":109,"author":{"gitId":"e1010101"},"content":"     * @throws HenryException if the input is malformed","lastModifiedDate":"2022-09-06"},{"lineNumber":110,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":111,"author":{"gitId":"e1010101"},"content":"    public static Task parseTask(String input) {","lastModifiedDate":"2022-09-06"},{"lineNumber":112,"author":{"gitId":"e1010101"},"content":"        String[] tokens \u003d input.split(\"\\\\|\");","lastModifiedDate":"2022-09-06"},{"lineNumber":113,"author":{"gitId":"e1010101"},"content":"        Commands type;","lastModifiedDate":"2022-09-06"},{"lineNumber":114,"author":{"gitId":"e1010101"},"content":"        String description \u003d tokens[2].trim();","lastModifiedDate":"2022-09-06"},{"lineNumber":115,"author":{"gitId":"e1010101"},"content":"        LocalDateTime date;","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"e1010101"},"content":"        boolean isComplete \u003d tokens[1].trim().equals(\"1\");","lastModifiedDate":"2022-09-06"},{"lineNumber":117,"author":{"gitId":"e1010101"},"content":"        List\u003cLocalDateTime\u003e tentativeDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-06"},{"lineNumber":118,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":119,"author":{"gitId":"e1010101"},"content":"        String prefix;","lastModifiedDate":"2022-09-06"},{"lineNumber":120,"author":{"gitId":"e1010101"},"content":"        String cleaned;","lastModifiedDate":"2022-09-06"},{"lineNumber":121,"author":{"gitId":"e1010101"},"content":"        prefix \u003d tokens[0].trim();","lastModifiedDate":"2022-09-06"},{"lineNumber":122,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":123,"author":{"gitId":"e1010101"},"content":"        switch (prefix) {","lastModifiedDate":"2022-09-06"},{"lineNumber":124,"author":{"gitId":"e1010101"},"content":"        case \"T\":","lastModifiedDate":"2022-09-06"},{"lineNumber":125,"author":{"gitId":"e1010101"},"content":"            type \u003d Commands.TODO;","lastModifiedDate":"2022-09-06"},{"lineNumber":126,"author":{"gitId":"e1010101"},"content":"            date \u003d LocalDateTime.MAX;","lastModifiedDate":"2022-09-06"},{"lineNumber":127,"author":{"gitId":"e1010101"},"content":"            break;","lastModifiedDate":"2022-09-06"},{"lineNumber":128,"author":{"gitId":"e1010101"},"content":"        case \"D\":","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"e1010101"},"content":"            type \u003d Commands.DEADLINE;","lastModifiedDate":"2022-09-06"},{"lineNumber":130,"author":{"gitId":"e1010101"},"content":"            cleaned \u003d tokens[3].replace(\"(by:\", \"\").replace(\")\", \"\").trim();","lastModifiedDate":"2022-09-06"},{"lineNumber":131,"author":{"gitId":"e1010101"},"content":"            date \u003d parseDateTime(cleaned);","lastModifiedDate":"2022-09-06"},{"lineNumber":132,"author":{"gitId":"e1010101"},"content":"            break;","lastModifiedDate":"2022-09-06"},{"lineNumber":133,"author":{"gitId":"e1010101"},"content":"        case \"E\":","lastModifiedDate":"2022-09-06"},{"lineNumber":134,"author":{"gitId":"e1010101"},"content":"            type \u003d Commands.EVENT;","lastModifiedDate":"2022-09-06"},{"lineNumber":135,"author":{"gitId":"e1010101"},"content":"            cleaned \u003d tokens[3].replace(\"(at:\", \"\").replace(\")\", \"\").trim();","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"e1010101"},"content":"            tentativeDates \u003d parseMultipleDateTimes(cleaned);","lastModifiedDate":"2022-09-06"},{"lineNumber":137,"author":{"gitId":"e1010101"},"content":"            date \u003d tentativeDates.get(0);","lastModifiedDate":"2022-09-06"},{"lineNumber":138,"author":{"gitId":"e1010101"},"content":"            break;","lastModifiedDate":"2022-09-06"},{"lineNumber":139,"author":{"gitId":"e1010101"},"content":"        default:","lastModifiedDate":"2022-09-06"},{"lineNumber":140,"author":{"gitId":"e1010101"},"content":"            throw new HenryException(\"INPUT TASK IS MALFORMED!\");","lastModifiedDate":"2022-09-06"},{"lineNumber":141,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":142,"author":{"gitId":"e1010101"},"content":"        return new Task(type, description, date, isComplete, tentativeDates);","lastModifiedDate":"2022-09-06"},{"lineNumber":143,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":144,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"e1010101":144}},{"path":"src/main/java/util/TextUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package util;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" * Utility class containing messages used in responses.","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" * They are compiled here to provide ease of access to would-be","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" * translators for the application.","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"public class TextUtils {","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    // ERROR MESSAGES","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    public static final String UNKNOWN_COMMAND_ERROR \u003d \"UNKNOWN COMMAND!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"    public static final String FIND_COMMAND_ERROR \u003d \"PLEASE PREFIX YOUR SEARCH TERMS WITH \\\"--\\\"!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    public static final String TENTATIVE_COMMAND_ERROR \u003d \"INVALID TENTATIVE COMMAND!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    public static final String DATE_IN_PAST_ERROR \u003d \"DATE IS IN THE PAST!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public static final String DATE_FORMAT_ERROR \u003d \"DATE AND TIME NUMBERS ARE OUT OF RANGE!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    public static final String NON_NUMBER_ERROR \u003d \"ARGUMENT IS NOT A NUMBER!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public static final String MUST_BE_POSITIVE_ERROR \u003d \"ARGUMENT MUST BE A POSITIVE INTEGER!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    public static final String MALFORMED_COMMAND_ERROR \u003d \"MALFORMED COMMAND!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    public static final String ARGUMENT_SYNTAX_ERROR \u003d \"ARGUMENT HAS THE WRONG FORMAT!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public static final String EMPTY_INPUT_ERROR \u003d \"INPUT CANNOT BE EMPTY!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    public static final String DUPLICATE_TASK_ERROR \u003d \"TASK ALREADY EXISTS!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public static final String INDEX_OUT_OF_RANGE_ERROR \u003d \"INDEX IS OUT OF RANGE! YOUR TASK LIST HAS %1$d ITEMS.\";","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    // OTHER MESSAGES","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    public static final String TASKS_SAVED_MESSAGE \u003d \"GOODBYE! YOUR TASK LIST HAS BEEN SAVED!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"e1010101":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\"\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-border-width: 1; -fx-border-color: #000000; -fx-border-radius: 5;\" text\u003d\"Label\"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"               wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"                \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"4.0\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"                \u003cInsets right\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"50.0\"/\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"            fx:controller\u003d\"components.MainWindow\"\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"523.0\"","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\"","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\"/\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"e1010101":23}},{"path":"src/test/java/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import stubs.TaskStub;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n %1$s\";","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private static final String DESCRIPTION \u003d \"test\";","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.now();","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public void testDeadlineCommand() {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        TaskStub task \u003d new TaskStub(\"[D][ ] test (by: \" + DATE_TIME.format(formatter) + \")\");","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        DeadlineCommand command \u003d new DeadlineCommand(DESCRIPTION, DATE_TIME);","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        command.setData(list);","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(String.format(MESSAGE_SUCCESS, list.addTask(task)), list);","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"e1010101":32}},{"path":"src/test/java/command/EchoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"public class EchoCommandTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"    public void testEchoCommand() {","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"        EchoCommand command \u003d new EchoCommand(\"test\");","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(\"test\");","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"e1010101":15}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import stubs.TaskStub;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"public class EventCommandTest {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n %1$s\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    private static final String DESCRIPTION \u003d \"test\";","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.now();","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public void testDeadlineCommand() {","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        TaskStub task \u003d new TaskStub(\"[E][ ] test (at: \" + DATE_TIME.format(formatter) + \")\");","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        EventCommand command \u003d new EventCommand(DESCRIPTION, DATE_TIME);","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        command.setData(list);","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(String.format(MESSAGE_SUCCESS, list.addTask(task)), list);","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"e1010101":32}},{"path":"src/test/java/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import stubs.TaskStub;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"I\u0027VE MARKED THIS TASK AS DONE:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public void testMarkCommand() {","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        TaskListStub taskList \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        TaskStub stub \u003d new TaskStub(false);","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        taskList.addTask(stub);","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        MarkCommand command \u003d new MarkCommand(0);","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        command.setData(taskList);","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(String.format(MESSAGE_SUCCESS, stub));","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"e1010101":28}},{"path":"src/test/java/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import stubs.TaskStub;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class TodoCommandTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n %1$s\";","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    private static final String DESCRIPTION \u003d \"test\";","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"    public void testTodoCommand() {","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        TaskStub task \u003d new TaskStub(\"[T][ ] test\");","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        TodoCommand command \u003d new TodoCommand(DESCRIPTION);","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        command.setData(list);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(String.format(MESSAGE_SUCCESS, list.addTask(task)), list);","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"e1010101":28}},{"path":"src/test/java/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package command;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import stubs.TaskStub;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"I\u0027VE MARKED THIS TASK AS NOT DONE:\\n %1$s\";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"    public void testMarkCommand() {","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        TaskListStub taskList \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        TaskStub stub \u003d new TaskStub(false);","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        taskList.addTask(stub);","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(0);","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        command.setData(taskList);","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        CommandResult result \u003d new CommandResult(String.format(MESSAGE_SUCCESS, stub));","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"        assertEquals(command.execute().toString(), result.toString());","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"e1010101":28}},{"path":"src/test/java/henry/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package henry;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import command.Command;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import stubs.TaskListStub;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"    public void testParser() {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"        TaskListStub taskList \u003d new TaskListStub(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"        String command \u003d \"event event stub /at 12-12-2050 00:00\";","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"        String desired \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n [E][ ] event stub (at: 12-12-2050 00:00)\";","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"        Command c \u003d parser.parseCommand(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        c.setData(taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        assertEquals(c.execute().toString(), desired);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"e1010101":24}},{"path":"src/test/java/stubs/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package stubs;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import henry.TaskList;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" * Stub for the TaskList class.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final List\u003cTask\u003e testTasks;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     * Creates a new TaskListStub with the given input list.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * @param inputTaskList the list of tasks to be used","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"    public TaskListStub(List\u003cTask\u003e inputTaskList) {","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"        super(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"        this.testTasks \u003d inputTaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"        testTasks.add(task);","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"        return task.toString();","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"        return testTasks.get(index);","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"    public void set(int index, Task task) {","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        testTasks.set(index, task);","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"e1010101":40}},{"path":"src/test/java/stubs/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package stubs;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import command.Commands;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"import henry.Task;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"/**","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":" * Stub for the Task class","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":" */","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"    private final boolean testIsDone;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"    private final String customToString;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"     * Creates a new TaskStub object that supports testing","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"     * for the isDone() method.","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"     * @param isDone whether the task is marked complete","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    public TaskStub(boolean isDone) {","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"        super(Commands.DUMMY, \"test\", LocalDateTime.MAX);","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"        this.testIsDone \u003d isDone;","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"        this.customToString \u003d \"\";","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"     * Creates a new TaskStub object with the given input String","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"     * as the toString() output.","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"     * @param inputString the String to be returned by toString()","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"    public TaskStub(String inputString) {","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"        super(Commands.DUMMY, \"test\", LocalDateTime.MAX);","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"        this.testIsDone \u003d false;","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        this.customToString \u003d inputString;","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"    public void setComplete(boolean status) {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        super.setComplete(status);","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        return testIsDone ? \"[X]\" : \"[ ]\"; // mark done task with X","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"e1010101"},"content":"    @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"e1010101"},"content":"    public String toString() {","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"e1010101"},"content":"        if (!customToString.equals(\"\")) {","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"e1010101"},"content":"            return customToString;","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"e1010101"},"content":"        return \"[T]\" + getStatusIcon() + \" stub\";","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"e1010101":55}},{"path":"src/test/java/ui/TextInputTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"package ui;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"e1010101"},"content":"import org.testfx.framework.junit5.ApplicationExtension;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"import org.testfx.framework.junit5.ApplicationTest;","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":"import org.testfx.framework.junit5.Start;","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"import henry.Henry;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"@ExtendWith(ApplicationExtension.class)","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"public class TextInputTest extends ApplicationTest {","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":"    private static final String EXPECTED \u003d \"OK. I ADDED THIS TASK TO MY LIST:\\n [T][ ] hello\";","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"     * Will be called with {@code @Before} semantics, i.e. before each test method.","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":"     * @param stage - Will be injected by the test runner.","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"    @Start","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"        Henry henry \u003d new Henry();","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":"        henry.start(stage);","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"    public void testTodoCommand() {","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"        FxRobot robot \u003d new FxRobot();","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"        robot.clickOn(\"#userInput\").write(\"todo hello\");","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"        robot.clickOn(\"#sendButton\");","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":"        Set\u003cNode\u003e nodes \u003d lookup(\"#dialog\").queryAll();","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"        for (int i \u003d 0; i \u003c nodes.size(); i++) {","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"e1010101"},"content":"            if (i \u003d\u003d 2) {","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"e1010101"},"content":"                assertEquals(EXPECTED, ((Label) nodes.toArray()[i]).getText());","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"e1010101"},"content":"            }","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"e1010101"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"e1010101"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"e1010101"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"e1010101":47}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"  _    _ ______ _   _ _______     __","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":" | |  | |  ____| \\ | |  __ \\ \\   / /","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":" | |__| | |__  |  \\| | |__) \\ \\_/ /","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":" |  __  |  __| | . ` |  _  / \\   /","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":" | |  | | |____| |\\  | | \\ \\  | |","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":" |_|  |_|______|_| \\_|_|  \\_\\ |_|","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"e1010101"},"content":" HENRY: HELLO. I AM HENRY. HOW MAY I ASSIST YOU TODAY?","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"e1010101"},"content":" HENRY: OK. I ADDED THIS TASK TO MY LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"e1010101"},"content":"\t\t\t [T][ ] read book.","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"e1010101"},"content":" HENRY: OK. I ADDED THIS TASK TO MY LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"\t\t\t [D][ ] return book (by: 06-06-2022 12:00).","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"e1010101"},"content":" HENRY: OK. I ADDED THIS TASK TO MY LIST:","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"e1010101"},"content":"\t\t\t [E][ ] project meeting (at: 06-08-2022 14:00).","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"e1010101"},"content":" HENRY: I\u0027VE MARKED THIS TASK AS DONE:","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"e1010101"},"content":"\t\t\t [T][X] read book.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"e1010101"},"content":" HENRY:","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"e1010101"},"content":" 1. [T][X] read book","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"e1010101"},"content":" 2. [D][ ] return book (by: 06-06-2022 12:00)","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"e1010101"},"content":" 3. [E][ ] project meeting (at: 06-08-2022 14:00)","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"e1010101"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"e1010101"},"content":"\u003e ____________________________________________________________","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"e1010101"},"content":" HENRY: GOODBYE!","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"e1010101"},"content":"____________________________________________________________","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":40,"-":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e1010101"},"content":"todo read book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"e1010101"},"content":"deadline return book /by 06-06-2022 12:00","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"e1010101"},"content":"event project meeting /at 06-08-2022 14:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"e1010101"},"content":"mark 0","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"e1010101"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"e1010101"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"e1010101"},"content":"if exist ACTUAL.txt del ACTUAL.txt","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"e1010101"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"e1010101"},"content":"FC ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"e1010101":3,"-":18}}]

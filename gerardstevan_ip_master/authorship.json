[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"checkstyle {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"    toolVersion \u003d 10.2","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    mainClassName \u003d \"doke.Doke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"    archiveBaseName \u003d \"doke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gerardstevan":6,"-":39}},{"path":"src/main/java/doke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":" * Represent the Deadline task. Extends the Task class.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"    private LocalDate by;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     * a public constructor method for the Deadline class.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     * @param description description for the task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     * @param by deadline date","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"        this.by \u003d date;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"     * Returns a LocalDate object representing the deadline of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"     * @return a LocalDate deadline of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        return by;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representing the type of deadline task","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"     * @return String \"D\"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"    public String getType() {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"        return \"D\";","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"     * @return a string representation of the Deadline object.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"gerardstevan":54}},{"path":"src/main/java/doke/Doke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"//import java.util.*;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":" * A class to represent the Doke program","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"public class Doke {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"    protected static final String DOKE_FILE_PATH \u003d \"src/main/java/data/doke.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"     * A main method which runs the Doke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     * @param args","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"        TaskList taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"        ui.printOut(\"full path: \" + Storage.DOKE_FILE.getAbsolutePath());","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        ui.printOut(\"hello\");","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"        taskList \u003d new TaskList(ui, storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        ui.printOut(\"The following is your stored task: \\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"        taskList.listOut(ui);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        String str \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"        while (true) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"            if (!parser.processString(taskList, storage, str, ui)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"            str \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"        ui.printOut(\"bye\");","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gerardstevan":43,"-":3}},{"path":"src/main/java/doke/DokeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":" * An Exception to handle the Exception specific to the Doke program.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"public class DokeException extends RuntimeException{","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"    private String text \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"     * a public constructor for the DokeException class.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"     * @param text the text to be outputted.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"    public DokeException(String text) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     * a public constructor for the DokeException class.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"    public DokeException() {}","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representation of the DokeException.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"     * @return a string.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"        String temp \u003d text \u003d\u003d null","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"                ? \"What language are you talking? JK. Something went wrong.\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"                : \"I\u0027m sorry, your \" + text + \"\u0027s description can\u0027t be empty\";","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"        return \"_________________________\" + \"\\n\" + temp","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"                + \"\\n\" + \"_________________________\";","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"gerardstevan":36}},{"path":"src/main/java/doke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":" * Represent the Events task. Extends the Task class.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"public class Events extends Task{","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     * a public constructor for the Events class","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     * @param description description for the events task.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     * @param at date of when the event start.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"    public Events(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        LocalDate date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"        this.at \u003d date;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"     * Returns a LocalDate object representing the time of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"     * @return a LocalDate time of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        return at;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representing the type of Event task","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"     * @return String \"E\"","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"    public String getType() {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"        return \"E\";","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"     * Returns a string representation of the Events object.","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"     * @return a string representation of the Events object.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"gerardstevan":54}},{"path":"src/main/java/doke/Miscellaneous.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":" * A Miscellaneous class to handle miscellaneous methdods","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"public class Miscellaneous {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"     * Returns a boolean whether the str can be parsed to a String or not","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"     * A static method.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"     * @param str to be parsed","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"     * @return true if the string can be parsed to int and false otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"    public static boolean isInt(String str) {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"            int x \u003d Integer.parseInt(str);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"            return true; //String is an Integer","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"            return false; //String is not an Integer","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"     * Returns the int after parsing the string.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"     * A static method.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"     * @param str to be parse","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"     * @return the parsed int","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"    public static int toInt(String str) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"            int x \u003d Integer.parseInt(str);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"            return x; //String is an Integer","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"            return -1; //String is not an Integer","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":39}},{"path":"src/main/java/doke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":" * A class to represent the making sense of the inputted text.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"public class Parser {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"     * Return a boolean to signify whether the doke program should end or not.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"     * It processes the string to see if it is a valid create and add(todo, event, and deadline),","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"     * delete, mark, unmark, bye, list or otherwise, invalid command.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"     * @param taskList the taskList to be modified when needed.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     * @param storage the storage to be modified when needed.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     * @param string the text to be processed.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     * @param ui to print out messages","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     * @return boolean to signify whether the doke program should end or not.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"    public boolean processString(TaskList taskList, Storage storage, String string, Ui ui) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"        //handle bye and list action","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"        if (string.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"        } else if (string.equals(\"list\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            taskList.listOut(ui);","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"        String[] temp \u003d string.split(\" \");","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        int length \u003d temp.length;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"        String action \u003d temp[0];","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        //handle if adding action is invalid","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"            if (action.equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"                    throw new DokeException(\"todo\");","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(d.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"            } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"                    throw new DokeException(\"deadline\");","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(d.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"            } else if (action.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"                    throw new DokeException(\"event\");","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(d.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"                    throw new DokeException();","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(d.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"        //handle a find command","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"        if (action.equals(\"find\") \u0026\u0026 temp.length \u003e 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"            String search \u003d string.substring(5);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"            taskList.searchString(search, ui);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"            return true;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"        //handle if delete, mark, and unmark action is valid","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"        if (length \u003d\u003d 2 \u0026\u0026 Miscellaneous.isInt(temp[1])","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 (action.equals(\"mark\") || action.equals(\"unmark\") || action.equals(\"delete\"))) {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"            int num \u003d Miscellaneous.toInt(temp[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"            Task current \u003d taskList.getTask(num);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"            String message;","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"            if (action.equals(\"mark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"                    current.markDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"                    storage.updateFile(taskList.getList(), ui);","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"gerardstevan"},"content":"                    message \u003d \"_________________________ \\n\" + \"I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"gerardstevan"},"content":"                            + current.toString() + \"\\n _________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException a) {","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"gerardstevan"},"content":"                    message \u003d \"_________________________ \\n\" + \"Task is already marked done: \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"gerardstevan"},"content":"                            + current.toString() + \"\\n _________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"            } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"                    current.markNotDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"                    storage.updateFile(taskList.getList(), ui);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"gerardstevan"},"content":"                    message \u003d \"_________________________ \\n\" + \"I\u0027ve marked this task not done: \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"gerardstevan"},"content":"                            + current.toString() + \"\\n _________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException a) {","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"gerardstevan"},"content":"                    message \u003d \"_________________________ \\n\" + \"This task is already not marked done: \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"gerardstevan"},"content":"                            + current.toString() + \"\\n _________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"gerardstevan"},"content":"            } else if (action.equals(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"gerardstevan"},"content":"                taskList.deleteTask(num);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"gerardstevan"},"content":"                storage.updateFile(taskList.getList(), ui);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"gerardstevan"},"content":"                message \u003d \"_________________________ \\n\" + \"This task has been removed \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"gerardstevan"},"content":"                        + current.toString() + \"\\n\" + \"Now you have \" + taskList.getSize()","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"gerardstevan"},"content":"                        + \" tasks!! \" + \"\\n _________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"gerardstevan"},"content":"                ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"gerardstevan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"gerardstevan"},"content":"        //handle the case if the task adding action is valid","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"gerardstevan"},"content":"        if (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"gerardstevan"},"content":"            String word \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"gerardstevan"},"content":"            String time \u003d \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"gerardstevan"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"gerardstevan"},"content":"            while (i \u003c length \u0026\u0026 ((!temp[i].equals(\"/at\") \u0026\u0026 action.equals(\"event\"))","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"gerardstevan"},"content":"                    || (!temp[i].equals(\"/by\") \u0026\u0026 action.equals(\"deadline\"))","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"gerardstevan"},"content":"                    || action.equals(\"todo\"))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"gerardstevan"},"content":"                if (i \u003d\u003d 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"gerardstevan"},"content":"                    word \u003d word + temp[i];","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"gerardstevan"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"gerardstevan"},"content":"                    word \u003d word + \" \" + temp[i];","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"gerardstevan"},"content":"                i++;","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"gerardstevan"},"content":"            if (i !\u003d length) {","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"gerardstevan"},"content":"                time \u003d temp[++i];","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"gerardstevan"},"content":"                i++;","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"gerardstevan"},"content":"                while (i \u003c length) {","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"gerardstevan"},"content":"                    time +\u003d \" \" + temp[i];","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"gerardstevan"},"content":"                    i++;","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"gerardstevan"},"content":"            Task addition;","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"gerardstevan"},"content":"            if (action.equals(\"todo\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"gerardstevan"},"content":"                addition \u003d new ToDo(word);","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"gerardstevan"},"content":"                taskList.addTask(addition);","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"gerardstevan"},"content":"            } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"gerardstevan"},"content":"                addition \u003d new Deadline(word, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"gerardstevan"},"content":"                taskList.addTask(addition);","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"gerardstevan"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"gerardstevan"},"content":"                addition \u003d new Events(word, time);","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"gerardstevan"},"content":"                taskList.addTask(addition);","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"gerardstevan"},"content":"            ui.printOut(\"_________________________ \\n\" + \"added: \" + addition.toString() + \"\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"gerardstevan"},"content":"                    + \"Nice, now you have \" + taskList.getSize() + \" tasks!! \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"gerardstevan"},"content":"                    + \"_________________________\" + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"gerardstevan"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"gerardstevan"},"content":"                storage.writeToFile(Storage.createWordForFile(addition));","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"gerardstevan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"gerardstevan"},"content":"                ui.printOut(\"_________________________ \\n\" + \"Something went wrong, try again\"","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"gerardstevan"},"content":"                        + \"\\n _________________________ \\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":163,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"gerardstevan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"gerardstevan"},"content":"            throw new DokeException();","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"gerardstevan"},"content":"        } catch (DokeException d) {","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"gerardstevan"},"content":"            ui.printOut(d.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"gerardstevan"},"content":"        return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":176,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":176}},{"path":"src/main/java/doke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":" * a class to represents the storage.","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"    protected static final File DOKE_FILE \u003d new File(Doke.DOKE_FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     * Updates the storage file using the arrayList as reference.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     * @param arrayList containing the task to be written to the file.","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"    public void updateFile(ArrayList\u003cTask\u003e arrayList, Ui ui) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"            FileWriter writer \u003d new FileWriter(Doke.DOKE_FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"            writer.write(\"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            for (int i \u003d 0; i \u003c arrayList.size(); i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"                writeToFile(createWordForFile(arrayList.get(i)));","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            writer.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"            ui.printOut(\"Sorry, something went wrong\");","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"     * Writes to the file a task which has been added.","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"     * @param string String representation of the task","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"     * @throws IOException In case of failure of writing to the file","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    public void writeToFile(String string) throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DOKE_FILE, true));","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"        writer.append(string + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"        writer.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representation of the Task suitable for the storage file.","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"     * @param task task to be represented.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"     * @return a string representation of the task which can be written to the storage file.","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"    public static String createWordForFile(Task task) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"        String time \u003d task instanceof ToDo ? \"\" : \" | \" + task.getTime();","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        String action \u003d task.getType() + \" | \" + task.getStatus() + \" | \"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"                + task.getDesc() + time;","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"        return action;","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":58}},{"path":"src/main/java/doke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":" * Represent the abstract class Task","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    private String desc;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     * a constructor for Task class.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     * @param desc description for the task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    Task(String desc) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representing the type of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"     * @return Task type","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    public abstract String getType();","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representation of the done status of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"     * @return either \"X\" if the task is marked done or \" \" otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"     * Returns an int to signify if the task is done or not.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"     * @return 1 if the task is marked done or 0 otherwise.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"    public int getStatus() {","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String of the description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"     * @return a description of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"    public String getDesc() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        return desc;","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"     * Returns a LocalDate object related to the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"     * @return a LocalDate related to the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"    public abstract LocalDate getTime();","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"     * Marks the task as done(isDone \u003d true).","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"     * @throws DokeException","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"    public void markDone() throws DokeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"            throw new DokeException();","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"     * Marks the task as done(isDone \u003d false).","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"     * @throws DokeException","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"    public void markNotDone() throws DokeException{","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"gerardstevan"},"content":"        if (!isDone) {","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"gerardstevan"},"content":"            throw new DokeException();","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"gerardstevan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"gerardstevan"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"     * @return a string representation of the Task object.","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"gerardstevan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"gerardstevan"},"content":"        return \"[\" + getStatusIcon() + \"]   \" + desc;","lastModifiedDate":"2022-08-17"},{"lineNumber":96,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":98,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"gerardstevan":98}},{"path":"src/main/java/doke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":" * A class to represent a TaskList.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"public class TaskList {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     * A public constructor for the TaskList class.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     * It will try to read and create and ArrayList of type task from storage,","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"     * which, if not possible would then create an empty ArrayList of type Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"     * @param ui","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"     * @param storage","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"    public TaskList(Ui ui, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"            Scanner s \u003d new Scanner(Storage.DOKE_FILE);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"                String specialString \u003d \" [|] \";","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"                String[] temp \u003d line.split(specialString);","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"                Task addTask;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"                if (temp[0].equals(\"T\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"                    addTask \u003d new ToDo(temp[2]);","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"                } else if (temp[0].equals(\"D\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"                    addTask \u003d new Deadline(temp[2], temp[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"                    if (!temp[0].equals(\"E\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"                        continue;","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"                    addTask \u003d new Events(temp[2], temp[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"                this.taskList.add(addTask);","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"                try {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"                    if (temp[1].equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"                        addTask.markDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"                    } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"                        addTask.markNotDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"                } catch (DokeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"                    ui.printOut(\"Sorry, something went wrong\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"                storage.DOKE_FILE.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"                ui.printOut(\"a new Doke.txt file has been created\"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"                        + \"it is in the path mentioned above\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"            } catch (IOException a) {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"                ui.printOut(\"An error occurred. Try again at another time.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"    public void searchString(String str, Ui ui) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"        int len \u003d taskList.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"        int num \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"        String message \u003d \"_________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"        message \u003d \"_________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"        while (i \u003c len) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"            String desc \u003d task.getDesc();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"            String taskType \u003d task.getType();","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"            if (desc.indexOf(str) !\u003d -1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"                if (num \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"                    message +\u003d \"Here\u0027s what we found: \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"gerardstevan"},"content":"                message +\u003d (i + 1) + \".\" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"gerardstevan"},"content":"                num +\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"gerardstevan"},"content":"            } else if ((taskType.equals(\"E\") || taskType.equals(\"D\"))","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"gerardstevan"},"content":"                    \u0026\u0026 task.getTime().format(","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"gerardstevan"},"content":"                            DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")).indexOf(str) !\u003d -1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"gerardstevan"},"content":"                if (num \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"gerardstevan"},"content":"                    message +\u003d \"Here\u0027s what we found: \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"                message +\u003d (i + 1) + \".\" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"                num +\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"gerardstevan"},"content":"            i++;","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"gerardstevan"},"content":"        if (num \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"            message +\u003d \"Sorry, we found nothing. \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"gerardstevan"},"content":"        message +\u003d \"_________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"gerardstevan"},"content":"        ui.printOut(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"gerardstevan"},"content":"     * Sends order to ui to print out the whole content of the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"gerardstevan"},"content":"     * @param ui","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"gerardstevan"},"content":"    public void listOut(Ui ui) {","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"gerardstevan"},"content":"        String message;","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"gerardstevan"},"content":"        if (this.taskList.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"gerardstevan"},"content":"            message \u003d \"_________________________ \\n\" + \"You have no task! \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"gerardstevan"},"content":"                    + \"________________________\";","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"gerardstevan"},"content":"            ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"gerardstevan"},"content":"            return;","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"gerardstevan"},"content":"        int len \u003d this.taskList.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"gerardstevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"gerardstevan"},"content":"        message \u003d \"_________________________ \\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"gerardstevan"},"content":"        while (i \u003c len) {","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"gerardstevan"},"content":"            message +\u003d (i + 1) + \".\" + this.taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"gerardstevan"},"content":"            i++;","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"gerardstevan"},"content":"        message +\u003d \"_________________________ \\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"gerardstevan"},"content":"        ui.printOut(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"gerardstevan"},"content":"     * Deletes the ith task from the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"gerardstevan"},"content":"     * @param i the position + 1 of the task to delete","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"gerardstevan"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"gerardstevan"},"content":"        this.taskList.remove(i - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"gerardstevan"},"content":"     * Adds a task to the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"gerardstevan"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"gerardstevan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"gerardstevan"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"gerardstevan"},"content":"     * Returns the Task at the position i-1 in the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"gerardstevan"},"content":"     * @param i the position + 1 of the task wanted.","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"gerardstevan"},"content":"     * @return the task desired.","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"gerardstevan"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"gerardstevan"},"content":"        return taskList.get(i - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"gerardstevan"},"content":"     * Returns a copy of the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"gerardstevan"},"content":"     * @return a copy of the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"gerardstevan"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"gerardstevan"},"content":"        ArrayList\u003cTask\u003e temp \u003d this.taskList;","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"gerardstevan"},"content":"        return temp;","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":166,"author":{"gitId":"gerardstevan"},"content":"     * Returns the size of the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"gerardstevan"},"content":"     * @return the size of the ArrayList.","lastModifiedDate":"2022-08-24"},{"lineNumber":169,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":170,"author":{"gitId":"gerardstevan"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-24"},{"lineNumber":171,"author":{"gitId":"gerardstevan"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":174}},{"path":"src/main/java/doke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":" * Represent the ToDo task. Extends the Task class.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"     * a public constructor method for the ToDo class.","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"     * @param description a description for the ToDo Task","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"     * Returns null","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"     * @return null","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"        return null;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"     * Returns a String representing the type of ToDo task.","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"     * @return String \"T\"","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"    public String getType() {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        return \"T\";","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     * Returns a string representation of the ToDO object.","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"     * @return a string representation of the ToDO object.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"gerardstevan":49}},{"path":"src/main/java/doke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":" * Represent an Ui to interact with user.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"public class Ui {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"    private static final String MESSAGE_HELLO \u003d \"_________________________ \\n\" + \"    Hi, my name is Doke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"            + \"\\n\" + \"    What can I do for you? \\n\" + \"    Enter a String!! \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"            + \"_________________________\" + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"    private static final String MESSAGE_BYE \u003d \"_________________________ \\n\" + \"    Bye bye! \\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"            + \"_________________________ \\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"     * A method to print out the message to the terminal","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     * @param message","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"    public void printOut(String message){","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        if (message.equals(\"hello\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"            System.out.println(MESSAGE_HELLO);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"        } else if (message.equals(\"bye\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            System.out.println(MESSAGE_BYE);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            System.out.println(message);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":30}},{"path":"src/test/java/doke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    public void processString_byeString_falseReturned() {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"        TaskList taskList \u003d new TaskList(ui, storage);","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"        assertEquals(false, parser.processString(taskList, storage, \"bye\", ui));","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":17}},{"path":"src/test/java/doke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":8}},{"path":"src/test/java/doke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    public void getType_emptyString_stringTReturned() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"        ToDo todo \u003d new ToDo(\"\");","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"        assertEquals(\"T\", \"T\");","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"    public void getString_stringDasd_properToStringReturned() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"        ToDo todo \u003d new ToDo(\"dasd\");","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"        assertEquals(\"[T][ ]   dasd\", todo.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":20}},{"path":"src/test/java/doke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package doke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"public class UiTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"gerardstevan":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"bruh bro","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"bruh","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"unmark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"gerardstevan":9}}]

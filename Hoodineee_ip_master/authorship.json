[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"# duke.duke project template","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hoodineee":2,"-":22}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import task.Todo;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import task.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":" * Represents an Add Command that inherits from","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":" * the abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    protected String commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this AddCommand that takes in a","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"     * commandLine as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * @param commandLine Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public AddCommand(String commandLine) {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        this.commandLine \u003d commandLine;","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean false to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"     * is not the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     * @return false.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * Executes the command depending on which type of","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * task it is and prints a string to tell the user that","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     * the task has been added.","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"     * @throws DukeException If the description of task is empty.","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"        if (commandLine.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"                if (commandLine.length() \u003c\u003d 4) {","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"                    String actTask \u003d commandLine.substring(5);","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                    Task currTask \u003d new Todo(actTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"                    taskList.add(currTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"                    storage.updateData(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"                            \" \" + currTask + \"\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"                            \"Now you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"        } else if (commandLine.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"                if (commandLine.length() \u003c\u003d 8) {","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"                    if (!commandLine.contains(\"/\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"                        System.out.println(\"There is no date! \u003e:(\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"                        int slashIndex \u003d commandLine.indexOf(\"/\");","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"                        String actTask \u003d commandLine.substring(9, slashIndex - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"                        String taskDate \u003d commandLine.substring(slashIndex + 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"                        Task currTask \u003d new Deadline(actTask, taskDate);","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"                        taskList.add(currTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"                        storage.updateData(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"                                \" \" + currTask + \"\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"                                \"Now you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"        } else if (commandLine.startsWith(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"                if (commandLine.length() \u003c\u003d 5) {","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"                    throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"                    if (!commandLine.contains(\"/\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"                        throw new DukeException(\"There is no date! \u003e:(\");","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"                        int slashIndex \u003d commandLine.indexOf(\"/\");","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"                        String actTask \u003d commandLine.substring(6, slashIndex - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"                        String taskDate \u003d commandLine.substring(slashIndex + 4);","lastModifiedDate":"2022-08-28"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"                        Task currTask \u003d new Event(actTask, taskDate);","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"                        taskList.add(currTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"                        storage.updateData(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"                                \" \" + currTask.toString() + \"\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"                                \"Now you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":115}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" * Represents a Bye Command that inherits from","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":" * the abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    protected String commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this that takes in a","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     * commandLine as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     * @param commandLine Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public ByeCommand(String commandLine) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        this.commandLine \u003d commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean true to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * is the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     * @return true.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"        return true;","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"     * Executes the command and prints a goodbye","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     * string to the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":47}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" * An abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"     * An abstract method that is implemented in its","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"     * children classes returns a boolean depending on whether","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     * it is the last command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * @return boolean.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"     * An abstract method that is implemented in its","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     * children classes that executes the command from the user","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * differently depending on what command the user gives.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":31}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":" * Represents a Delete Command that inherits from","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":" * the abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    protected String commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this DeleteCommand that takes in a","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     * commandLine as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"     * @param commandLine Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    public DeleteCommand(String commandLine) {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"        this.commandLine \u003d commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean false to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     * is not the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     * @return false.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     * Executes the command to delete a task that the user","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     * wants to remove.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     * @throws DukeException If there are no such task in the taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        int index \u003d Integer.parseInt(commandLine.substring(7)) - 1;","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"            if (index \u003e taskList.size() - 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                throw new DukeException(\"You have no such tasks.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"                Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"                taskList.remove(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"                storage.updateData(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"                        \" \" + task.toString() + \"\\n\" + \"Now you have \" +","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"                        taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":64}},{"path":"src/main/java/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":" * Represents an EditCommand that inherits from","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":" * the abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    protected String commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this EditCommand that takes in a","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     * commandLine as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"     * @param commandLine Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    public EditCommand(String commandLine) {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"        this.commandLine \u003d commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean false to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     * is not the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     * @return false.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     * Executes the command depending on which action the user","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     * wants to do and prints a string if it is executed successfully.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     * @throws DukeException If there is no such task.","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        if (commandLine.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"            int index \u003d Integer.parseInt(commandLine.substring(5)) - 1;","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                if (index \u003e taskList.size() - 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"                    throw new DukeException(\"You have no such tasks.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"                    Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"                    task.isMark(true);","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"                    storage.updateData(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"                            \" \" + task + \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"            int index \u003d Integer.parseInt(commandLine.substring(7)) - 1;","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"                if (index \u003e taskList.size() - 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"                    throw new DukeException(\"You have no such tasks.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"                    Task task \u003d taskList.get(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"                    task.isMark(false);","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"                    storage.updateData(taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"                            \" \" + task + \"\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":80}},{"path":"src/main/java/command/FalseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":" * Represents a FalseCommand that inherits from","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":" * the abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"public class FalseCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    protected String commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this FalseCommand that takes in a","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * commandLine as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     * @param commandLine Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    public FalseCommand(String commandLine) {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        this.commandLine \u003d commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean false to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * is not the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     * @return false.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     * Throws a DukeException to tell the user that the command is","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     * invalid.","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * @throws DukeException Always.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"            ui.nextCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":54}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    protected String fullCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean false to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"     * is not the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"     * @return false.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     * Executes the command depending on which type of","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     * task it is and prints a string to tell the user that","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"     * the task has been added.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     * @throws DukeException If the description of task is empty.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"            if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"                throw new DukeException(\"There are no tasks in your list. :)\");","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"                String taskToFind \u003d this.fullCommand.substring(5);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"                ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e(taskList.size());","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"                    Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"                    String currTaskString \u003d currTask.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"                    if (currTaskString.contains(taskToFind)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                        tasksFound.add(currTask);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"                    if (tasksFound.isEmpty()) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"                        throw new DukeException(\"There is nothing that matches the task.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"                        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"                        tasksFound.forEach(n -\u003e System.out.println((tasksFound.indexOf(n) + 1) + \".\"","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                                + n.toString()));","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Hoodineee":66}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package command;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":" * Represents a ListCommand that inherits from","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":" * the abstract class Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    protected String commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this ListCommand that takes in a","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * commandLine as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     * @param commandLine Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    public ListCommand(String commandLine) {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        this.commandLine \u003d commandLine;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * Returns a boolean false to show that this","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * is not the last command.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     * @return false.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     * Prints out all the tasks from the taskList if successful.","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     * @param taskList The ArrayList that contains all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     * @param ui The Ui that interacts with the next command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * @param storage The Storage used to store the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * @throws DukeException If the taskList is empty.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"            if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"                throw new DukeException(\"There are no tasks in your list. :)\");","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                taskList.forEach();","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"                System.out.println();","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":58}},{"path":"src/main/java/dateformat/DateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package dateformat;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import java.util.Locale;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":" * Represents DateFormat to format date and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"public class DateFormat {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"    protected String date;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    protected LocalDate dateFormatted;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"    protected String afterBy;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    protected LocalTime timeFormatted;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    protected String stringDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    protected String stringTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    protected HashMap\u003cString, String\u003e months \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for DateFormat that takes in a date","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * as a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     * @param date Date in the format of a String.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    public DateFormat(String date) {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"        this.afterBy \u003d date;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        this.dateFormatted \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        this.timeFormatted \u003d null;","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"        dateAndTimeFormatter();","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"JAN\", \"1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"FEB\", \"2\");","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"MAR\", \"3\");","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"APR\", \"4\");","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"MAY\", \"5\");","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"JUN\", \"6\");","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"JUL\", \"7\");","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"AUG\", \"8\");","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"SEP\", \"9\");","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"OCT\", \"10\");","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"NOV\", \"11\");","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        months.put(\"DEC\", \"12\");","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"     * A formatter to format the date and time","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"     * into a readable String for the DateTimeFormatterBuilder.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"    public void dateAndTimeFormatter() {","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        String day;","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        String month;","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"        String year;","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"        String hour;","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"        String minutes;","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"        if (this.afterBy.contains(\"/\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"            if (this.afterBy.indexOf(\"/\") \u003c\u003d 2) {","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"                int afterDaySlashIndex \u003d afterBy.indexOf(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"                if (afterDaySlashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterBy.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterBy.substring(afterDaySlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterBy.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterBy.substring(afterDaySlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSlashIndex \u003d afterDay.indexOf(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth;","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonthSlashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d \"0\" + afterDay.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterDay.substring(afterDaySlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d afterDay.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterDay.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterMonth.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonth.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"                    if (afterMonth.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterMonth.substring(5, 7) + afterMonth.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterMonth.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"            } else if (afterBy.indexOf(\"/\") \u003d\u003d 3) {","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"                month \u003d afterBy.substring(0, 3);","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSlashIndex \u003d afterBy.indexOf(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth \u003d afterBy.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"                int afterDaySlashIndex \u003d afterMonth.indexOf(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"                if (afterDaySlashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterMonth.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterMonth.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterDay.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"                if (afterDay.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"                    if (afterDay.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5, 7) + afterDay.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterBy.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"                int afterYearSlashIndex \u003d afterBy.indexOf(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"                String afterYear \u003d afterBy.substring(afterYearSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSlashIndex \u003d afterYear.indexOf(\"/\");","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth;","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonthSlashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d \"0\" + afterYear.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterYear.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d afterYear.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterYear.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonth.charAt(1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterMonth.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterMonth.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":131,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"Hoodineee"},"content":"                if (afterDay.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"Hoodineee"},"content":"                    if (afterDay.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5, 7) + afterDay.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"Hoodineee"},"content":"        } else if (this.afterBy.contains(\"-\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"Hoodineee"},"content":"            if (this.afterBy.indexOf(\"-\") \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"Hoodineee"},"content":"                int afterDayDashIndex \u003d afterBy.indexOf(\"-\");","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"Hoodineee"},"content":"                if (afterDayDashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterBy.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterBy.substring(afterDayDashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterBy.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterBy.substring(afterDayDashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":150,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthDashIndex \u003d afterDay.indexOf(\"-\");","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth;","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonthDashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d \"0\" + afterDay.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterDay.substring(afterMonthDashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d afterDay.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterDay.substring(afterMonthDashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":159,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterMonth.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonth.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"Hoodineee"},"content":"                    if (afterMonth.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterMonth.substring(5, 7) + afterMonth.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterMonth.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"Hoodineee"},"content":"            } else if (afterBy.indexOf(\"-\") \u003d\u003d 3) {","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"Hoodineee"},"content":"                month \u003d afterBy.substring(0, 3);","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSlashIndex \u003d afterBy.indexOf(\"-\");","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth \u003d afterBy.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"Hoodineee"},"content":"                int afterDaySlashIndex \u003d afterMonth.indexOf(\"-\");","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"Hoodineee"},"content":"                if (afterDaySlashIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterMonth.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterMonth.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSlashIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":180,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterDay.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"Hoodineee"},"content":"                if (afterDay.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"Hoodineee"},"content":"                    if (afterDay.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5, 7) + afterDay.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterBy.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"Hoodineee"},"content":"                int afterYearDashIndex \u003d afterBy.indexOf(\"-\");","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"Hoodineee"},"content":"                String afterYear \u003d afterBy.substring(afterYearDashIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSpaceIndex \u003d afterYear.indexOf(\"-\");","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth;","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonthSpaceIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d \"0\" + afterYear.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterYear.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d afterYear.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterYear.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":201,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonth.charAt(1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterMonth.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterMonth.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":209,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"Hoodineee"},"content":"                if (afterDay.length() \u003e 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":211,"author":{"gitId":"Hoodineee"},"content":"                    if (afterDay.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":212,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5, 7) + afterDay.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":213,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":214,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":216,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":217,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":218,"author":{"gitId":"Hoodineee"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":219,"author":{"gitId":"Hoodineee"},"content":"            this.afterBy \u003d this.afterBy.substring(1);","lastModifiedDate":"2022-08-27"},{"lineNumber":220,"author":{"gitId":"Hoodineee"},"content":"            if (this.afterBy.indexOf(\" \") \u003c 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":221,"author":{"gitId":"Hoodineee"},"content":"                int afterDaySpaceIndex \u003d afterBy.indexOf(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":222,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":223,"author":{"gitId":"Hoodineee"},"content":"                if (afterDaySpaceIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":224,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterBy.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":225,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterBy.substring(afterDaySpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":226,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":227,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterBy.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":228,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterBy.substring(afterDaySpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":229,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":230,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSpaceIndex \u003d afterDay.indexOf(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":231,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth;","lastModifiedDate":"2022-08-27"},{"lineNumber":232,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonthSpaceIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":233,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d \"0\" + afterDay.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":234,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterDay.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":235,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":236,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d afterDay.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":237,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterDay.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":238,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":239,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterMonth.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":240,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonth.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":241,"author":{"gitId":"Hoodineee"},"content":"                    if (afterMonth.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":242,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterMonth.substring(5, 7) + afterMonth.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":243,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":244,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterMonth.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":245,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":246,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":247,"author":{"gitId":"Hoodineee"},"content":"                month \u003d months.get(month.toUpperCase());","lastModifiedDate":"2022-08-27"},{"lineNumber":248,"author":{"gitId":"Hoodineee"},"content":"            } else if (afterBy.indexOf(\" \") \u003d\u003d 3) {","lastModifiedDate":"2022-08-27"},{"lineNumber":249,"author":{"gitId":"Hoodineee"},"content":"                month \u003d afterBy.substring(0, 3);","lastModifiedDate":"2022-08-27"},{"lineNumber":250,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSpaceIndex \u003d afterBy.indexOf(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":251,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth \u003d afterBy.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":252,"author":{"gitId":"Hoodineee"},"content":"                int afterDaySpaceIndex \u003d afterMonth.indexOf(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":253,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":254,"author":{"gitId":"Hoodineee"},"content":"                if (afterDaySpaceIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":255,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterMonth.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":256,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterDaySpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":257,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":258,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterMonth.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":259,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterDaySpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":260,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":261,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterDay.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":262,"author":{"gitId":"Hoodineee"},"content":"                if (afterDay.length() \u003e 5) {","lastModifiedDate":"2022-08-27"},{"lineNumber":263,"author":{"gitId":"Hoodineee"},"content":"                    if (afterDay.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":264,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5, 7) + afterDay.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":265,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":266,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":267,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":268,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":269,"author":{"gitId":"Hoodineee"},"content":"                month \u003d months.get(month.toUpperCase());","lastModifiedDate":"2022-08-27"},{"lineNumber":270,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":271,"author":{"gitId":"Hoodineee"},"content":"                year \u003d afterBy.substring(0, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":272,"author":{"gitId":"Hoodineee"},"content":"                int afterYearSpaceIndex \u003d afterBy.indexOf(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":273,"author":{"gitId":"Hoodineee"},"content":"                String afterYear \u003d afterBy.substring(afterYearSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":274,"author":{"gitId":"Hoodineee"},"content":"                int afterMonthSpaceIndex \u003d afterYear.indexOf(\" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":275,"author":{"gitId":"Hoodineee"},"content":"                String afterMonth;","lastModifiedDate":"2022-08-27"},{"lineNumber":276,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonthSpaceIndex \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":277,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d \"0\" + afterYear.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":278,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterYear.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":279,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":280,"author":{"gitId":"Hoodineee"},"content":"                    month \u003d afterYear.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":281,"author":{"gitId":"Hoodineee"},"content":"                    afterMonth \u003d afterYear.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":282,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":283,"author":{"gitId":"Hoodineee"},"content":"                String afterDay;","lastModifiedDate":"2022-08-27"},{"lineNumber":284,"author":{"gitId":"Hoodineee"},"content":"                if (afterMonth.charAt(1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":285,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d \"0\" + afterMonth.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":286,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":287,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":288,"author":{"gitId":"Hoodineee"},"content":"                    day \u003d afterMonth.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":289,"author":{"gitId":"Hoodineee"},"content":"                    afterDay \u003d afterMonth.substring(afterMonthSpaceIndex + 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":290,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":291,"author":{"gitId":"Hoodineee"},"content":"                if (afterDay.length() \u003e 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":292,"author":{"gitId":"Hoodineee"},"content":"                    if (afterDay.charAt(7) \u003d\u003d \u0027:\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":293,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5, 7) + afterDay.substring(8, 10);","lastModifiedDate":"2022-08-27"},{"lineNumber":294,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":295,"author":{"gitId":"Hoodineee"},"content":"                        time \u003d afterDay.substring(5);","lastModifiedDate":"2022-08-27"},{"lineNumber":296,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":297,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":298,"author":{"gitId":"Hoodineee"},"content":"                month \u003d months.get(month.toUpperCase());","lastModifiedDate":"2022-08-27"},{"lineNumber":299,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":300,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":301,"author":{"gitId":"Hoodineee"},"content":"        if (month.length() \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":302,"author":{"gitId":"Hoodineee"},"content":"            month \u003d \"0\" + month;","lastModifiedDate":"2022-08-27"},{"lineNumber":303,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":304,"author":{"gitId":"Hoodineee"},"content":"        this.stringDate \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2022-08-27"},{"lineNumber":305,"author":{"gitId":"Hoodineee"},"content":"        this.dateFormatted \u003d LocalDate.parse(year + \"-\" + month + \"-\" + day);","lastModifiedDate":"2022-08-27"},{"lineNumber":306,"author":{"gitId":"Hoodineee"},"content":"        if (date.length() \u003e 10 \u0026\u0026 time.length() !\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":307,"author":{"gitId":"Hoodineee"},"content":"            if (time.length() \u003c\u003d 3) {","lastModifiedDate":"2022-08-27"},{"lineNumber":308,"author":{"gitId":"Hoodineee"},"content":"                hour \u003d \"0\" + time.charAt(0);","lastModifiedDate":"2022-08-27"},{"lineNumber":309,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(hour);","lastModifiedDate":"2022-08-27"},{"lineNumber":310,"author":{"gitId":"Hoodineee"},"content":"                minutes \u003d time.substring(1, 3);","lastModifiedDate":"2022-08-27"},{"lineNumber":311,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":312,"author":{"gitId":"Hoodineee"},"content":"                hour \u003d time.substring(0, 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":313,"author":{"gitId":"Hoodineee"},"content":"                minutes \u003d time.substring(2, 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":314,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":315,"author":{"gitId":"Hoodineee"},"content":"            this.stringTime \u003d hour + \":\" + minutes + \":00\";","lastModifiedDate":"2022-08-27"},{"lineNumber":316,"author":{"gitId":"Hoodineee"},"content":"            this.timeFormatted \u003d LocalTime.parse(hour + \":\" + minutes + \":\" + \"00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":317,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":318,"author":{"gitId":"Hoodineee"},"content":"        if (this.timeFormatted !\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":319,"author":{"gitId":"Hoodineee"},"content":"            this.dateAndTime \u003d LocalDateTime.parse(this.stringDate + \"T\" + this.stringTime);","lastModifiedDate":"2022-08-27"},{"lineNumber":320,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":321,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":322,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":323,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":324,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":325,"author":{"gitId":"Hoodineee"},"content":"     * Formats the date in the form of a String into","lastModifiedDate":"2022-08-29"},{"lineNumber":326,"author":{"gitId":"Hoodineee"},"content":"     * a date in the form of LocalDate.","lastModifiedDate":"2022-08-29"},{"lineNumber":327,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":328,"author":{"gitId":"Hoodineee"},"content":"     * @param pattern The pattern in which the date will be formatted to.","lastModifiedDate":"2022-08-29"},{"lineNumber":329,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the String version of the date after it has been","lastModifiedDate":"2022-08-29"},{"lineNumber":330,"author":{"gitId":"Hoodineee"},"content":"     * formatted.","lastModifiedDate":"2022-08-29"},{"lineNumber":331,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":332,"author":{"gitId":"Hoodineee"},"content":"    public String formatDate(String pattern) {","lastModifiedDate":"2022-08-27"},{"lineNumber":333,"author":{"gitId":"Hoodineee"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive()","lastModifiedDate":"2022-08-27"},{"lineNumber":334,"author":{"gitId":"Hoodineee"},"content":"                .appendPattern(pattern).toFormatter(Locale.ENGLISH);","lastModifiedDate":"2022-08-27"},{"lineNumber":335,"author":{"gitId":"Hoodineee"},"content":"        return this.dateFormatted.format(df);","lastModifiedDate":"2022-08-27"},{"lineNumber":336,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":337,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":338,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":339,"author":{"gitId":"Hoodineee"},"content":"     * Formats the time in the form of a String into","lastModifiedDate":"2022-08-29"},{"lineNumber":340,"author":{"gitId":"Hoodineee"},"content":"     * a time in the form of LocalTime.","lastModifiedDate":"2022-08-29"},{"lineNumber":341,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":342,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the String version of the time after it has","lastModifiedDate":"2022-08-29"},{"lineNumber":343,"author":{"gitId":"Hoodineee"},"content":"     * been formatted.","lastModifiedDate":"2022-08-29"},{"lineNumber":344,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":345,"author":{"gitId":"Hoodineee"},"content":"    public String formatTime() {","lastModifiedDate":"2022-08-27"},{"lineNumber":346,"author":{"gitId":"Hoodineee"},"content":"        return this.timeFormatted.format(DateTimeFormatter.ISO_TIME);","lastModifiedDate":"2022-08-27"},{"lineNumber":347,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":348,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":349,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":350,"author":{"gitId":"Hoodineee"},"content":"     * Returns the string representation of the formatted date","lastModifiedDate":"2022-08-29"},{"lineNumber":351,"author":{"gitId":"Hoodineee"},"content":"     * and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":352,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":353,"author":{"gitId":"Hoodineee"},"content":"     * @return The string representation of the formatted date","lastModifiedDate":"2022-08-29"},{"lineNumber":354,"author":{"gitId":"Hoodineee"},"content":"     * and time.","lastModifiedDate":"2022-08-29"},{"lineNumber":355,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":356,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":357,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":358,"author":{"gitId":"Hoodineee"},"content":"        if (this.timeFormatted \u003d\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":359,"author":{"gitId":"Hoodineee"},"content":"            return this.formatDate(\"MMM d yyyy\");","lastModifiedDate":"2022-08-27"},{"lineNumber":360,"author":{"gitId":"Hoodineee"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":361,"author":{"gitId":"Hoodineee"},"content":"            return this.formatDate(\"MMM d yyyy\") + \" \" + this.formatTime();","lastModifiedDate":"2022-08-27"},{"lineNumber":362,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":363,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":364,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":365,"author":{"gitId":"Hoodineee"},"content":"    public static void main(String args[]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":366,"author":{"gitId":"Hoodineee"},"content":"        DateFormat d4 \u003d new DateFormat(\"16/10/2021 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":367,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(d4.formatDate(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":368,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(d4.formatTime());","lastModifiedDate":"2022-08-27"},{"lineNumber":369,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":370,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":370}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package duke;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import storage.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import ui.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import parser.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import command.Command;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"Hello! I\u0027m Duke.Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    public void run() {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"                Parser parser \u003d new Parser(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"                if (!isExit) {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"                    ui.changeCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"Hoodineee":49,"-":2}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package exception;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"public class DukeException extends IllegalArgumentException{","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"    protected String message;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"        return \"☹ OOPS!!! \" + this.message + \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":14}},{"path":"src/main/java/filedata/FileData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package filedata;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"import task.Todo;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"import task.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"public class FileData {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    protected String fileName;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"    protected File file;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    public FileData(String fileName) {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Desktop\", fileName);","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"        this.fileName \u003d String.valueOf(path);","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"        this.file \u003d new File(String.valueOf(path));","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        this.tasks \u003d this.storeArray();","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    public boolean exists() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        return this.file.exists();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"        fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        fw.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    public void updateData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"            try {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"                    writeToFile(this.fileName, tasks.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"                    storeData(tasks.get(i).toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"    public ArrayList\u003cTask\u003e allTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"    public ArrayList\u003cTask\u003e storeArray() {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"                Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"                    String currTask \u003d s.nextLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"                    char currType \u003d currTask.charAt(1);","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"                    if (currType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"                        tasks.add(new Todo(currTask.substring(7)));","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"                    } else if (currType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"                        int bracketIndex \u003d currTask.indexOf(\"(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"                        String taskDate \u003d currTask.substring(bracketIndex + 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"                        tasks.add(new Deadline(currTask.substring(7, bracketIndex - 1), taskDate));","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"                        int bracketIndex \u003d currTask.indexOf(\"(\");","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"                        String taskDate \u003d currTask.substring(bracketIndex + 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"                        tasks.add(new Event(currTask.substring(7, bracketIndex - 1), taskDate));","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"Hoodineee"},"content":"                System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"Hoodineee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"Hoodineee"},"content":"            System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"Hoodineee"},"content":"        return tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"Hoodineee"},"content":"    public void storeData(String textToStore) {","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"Hoodineee"},"content":"        String file \u003d this.fileName;","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"Hoodineee"},"content":"            appendToFile(file, textToStore + System.lineSeparator());","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"Hoodineee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"Hoodineee"},"content":"    public void toPrint() {","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"Hoodineee"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"Hoodineee"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"Hoodineee"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"Hoodineee"},"content":"                Scanner d \u003d new Scanner(this.file);","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"Hoodineee"},"content":"                while (d.hasNext()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"Hoodineee"},"content":"                    System.out.println(d.nextLine());","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"Hoodineee"},"content":"                System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"Hoodineee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"Hoodineee"},"content":"            System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"Hoodineee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"Hoodineee"},"content":"        File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"Hoodineee"},"content":"        File f1 \u003d new File(\"data/tempDuke.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"full path: \" + f.getAbsolutePath());","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"full path: \" + f1.getAbsolutePath());","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"file exists?: \" + f.exists());","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"is Directory?: \" + f.isDirectory());","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":130}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import command.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":" * Represents a parser to parse commands from","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"public class Parser {","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"    protected String fullCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this Parser that takes in","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"     * a command as a string.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     * @param fullCommand Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    public Parser(String fullCommand) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     * Returns different types of commands depending on what","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * command the user input.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * @param fullCommand Command from the user.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * @return Different types of commands depending on the","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     * user input.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"        if (fullCommand.isEmpty() || fullCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"            return new ByeCommand(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        } else if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"            return new ListCommand(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        } else if (fullCommand.startsWith(\"mark\") || fullCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"            return new EditCommand(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        } else if (fullCommand.startsWith(\"todo\") || fullCommand.startsWith(\"deadline\") ||","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"                fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"            return new AddCommand(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"            return new FalseCommand(fullCommand);","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":48}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"import filedata.FileData;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"import task.TaskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"public class Storage {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"    protected String filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    protected FileData f;","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        this.f \u003d new FileData(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        this.tasks \u003d new TaskList(this.f.storeArray());","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"        this.f.toPrint();","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"        return tasks.toArray();","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"        fw.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        fw.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    public void storeData(String textToStore) {","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        String file \u003d this.filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"            appendToFile(file, textToStore + System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    public void updateData(TaskList taskList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"        f.updateData(taskList.toArray());","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        if (!this.f.exists()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"            throw new DukeException(\"The file does not exist!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"                try {","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"                    if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"                        writeToFile(this.filePath, tasks.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"                    } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"                        storeData(tasks.get(i).toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"                    }","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":71}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package task;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import dateformat.DateFormat;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":" * Represents a Deadline task that inherits","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * from Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"    protected String description;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    protected DateFormat date;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * @param description The Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     * @param date The date for the Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        this.date \u003d new DateFormat(date);","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * Changes the boolean isDone depending on whether the user","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * wants to mark or unmark the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     * @param bool The boolean for whether the task is marked","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     *             or unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public void isMark(boolean bool) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     * Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     * the Deadline task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * the Deadline task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the string representation of the Deadline task.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"                this.description + \" (by: \" + this.date.toString() + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":57}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package task;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import dateformat.DateFormat;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":" * Represents an Event task that inherits","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":" * from Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"    protected String description;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    protected DateFormat date;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * @param description The Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     * @param date The date for the Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        this.date \u003d new DateFormat(date);","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     * Changes the boolean isDone depending on whether the user","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"     * wants to mark or unmark the Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"     * @param bool The boolean for whether the Event task is marked","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"     *             or unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public void isMark(boolean bool) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     * Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"     * the Event task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * the Event task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the string representation of the Event task.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"                this.description + \" (at: \" + this.date.toString() + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":57}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package task;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":" * Represents all the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"public class Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"    protected String description;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"    protected String date;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"     * Changes the boolean isDone depending on whether the user","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"     * wants to mark or unmark the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     * @param bool The boolean for whether the task is marked","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     *             or unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    public void isMark(boolean bool) {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the description of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"        return this.description;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"     * Sets the date for the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     * @param str The date of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    public void setDate(String str) {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        this.date \u003d str;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     * the task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"     * the task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the string representation of the task.","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"        return this.description;","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":59}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package task;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":" * Represents the TaskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"public class TaskList {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    protected Task task;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for TaskList if there is a ArrayList.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"     * @param tasks ArrayList of the tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"            this.taskList \u003d tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for TaskList if there is no ArrayList.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"     * Returns the task at the index provided.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the task at the index provided.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"     * Adds the task to the taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * @param task Task to be added to the taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"     * Prints out all the tasks in the taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"    public void forEach() {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Hoodineee"},"content":"        taskList.forEach(n -\u003e System.out.println((taskList.indexOf(n) + 1) + \".\"","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Hoodineee"},"content":"                + n.toString()));","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"Hoodineee"},"content":"     * Removes the task at the index provided.","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"Hoodineee"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"Hoodineee"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Hoodineee"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"Hoodineee"},"content":"     * Changes the taskList to an ArrayList.","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"Hoodineee"},"content":"     * @return An ArrayList containing all the tasks in the","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"Hoodineee"},"content":"     * taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":71,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Hoodineee"},"content":"    public ArrayList\u003cTask\u003e toArray() {","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"Hoodineee"},"content":"        return this.taskList;","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"Hoodineee"},"content":"     * Returns the size of the taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":79,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the size of the taskList.","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":81,"author":{"gitId":"Hoodineee"},"content":"    public int size() {","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Hoodineee"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":84}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package task;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":" * Represents a Todo task that inherits","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":" * from Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"    protected String description;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"     * Constructor for this Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"     * @param description The Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"     * Changes the boolean isDone depending on whether the user","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"     * wants to mark or unmark the Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"     * @param bool The boolean for whether the Todo task is marked","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"     *             or unmarked.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"    public void isMark(boolean bool) {","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"     * Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"     * the Todo task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns a string representation of whether","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"     * the Todo task is done or undone.","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"     * @return Returns the string representation of the Todo task.","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"                this.description;","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"Hoodineee":52}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"package ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"public class Ui {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"    protected Scanner in;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"    protected String nextCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    public Ui() {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"        this.nextCommand \u003d in.nextLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"Hello! I\u0027m Duke.Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    public String readCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"        return this.nextCommand;","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    public void changeCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"        this.nextCommand \u003d this.in.nextLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Hoodineee"},"content":"    public void nextCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Hoodineee"},"content":"        this.in.nextLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Hoodineee"},"content":"    public void showLoadingError() throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Hoodineee"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Hoodineee"},"content":"            throw new DukeException(\"The file is empty!\");","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Hoodineee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Hoodineee"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Hoodineee"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Hoodineee"},"content":"    public void showError(String error) {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(error);","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Hoodineee"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Hoodineee"},"content":"        System.out.println(\"---------------------------------\");","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":52}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    public void getStatusIcon_unmarked() {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"        Task deadline \u003d new Deadline(\"return book\", \"21/10/2022 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"        deadline.isMark(false);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\" \", deadline.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    public void getStatusIcon_marked() {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"        Task deadline \u003d new Deadline(\"return book\", \"21/10/2022 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        deadline.isMark(true);","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\"X\", deadline.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    public void toString_success() {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"        Task deadline \u003d new Deadline(\"return book\", \"21/10/2022 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 21 2022 18:00:00)\", deadline.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Hoodineee":29}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import task.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"import task.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"public class EventTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    public void getStatusIcon_unmarked() {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"        Task event \u003d new Event(\"read book\", \"20/10/2022 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"        event.isMark(false);","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\" \", event.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    public void getStatusIcon_marked() {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        Task event \u003d new Event(\"read book\", \"20/10/2022 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        event.isMark(true);","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\"X\", event.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public void toString_success() {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        Task event \u003d new Event(\"read book\", \"20/10/2022 1800\");","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\"[E][ ] read book (at: Oct 20 2022 18:00:00)\", event.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Hoodineee":30}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"import task.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"import task.Todo;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Hoodineee"},"content":"    public void getStatusIcon_unmarked() {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Hoodineee"},"content":"        Task todo \u003d new Todo(\"read book\");","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"Hoodineee"},"content":"        todo.isMark(false);","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\" \", todo.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"Hoodineee"},"content":"    public void getStatusIcon_marked() {","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"Hoodineee"},"content":"        Task todo \u003d new Todo(\"read book\");","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"Hoodineee"},"content":"        todo.isMark(true);","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\"X\", todo.getStatusIcon());","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Hoodineee"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Hoodineee"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Hoodineee"},"content":"    public void toString_success() {","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"Hoodineee"},"content":"        Task todo \u003d new Todo(\"read book\");","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Hoodineee"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Hoodineee"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Hoodineee"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Hoodineee":30}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"[T][ ] read book","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Hoodineee":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hoodineee"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Hoodineee"},"content":"deadline return book /by 2-2-2022 1800","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Hoodineee"},"content":"event project meeting /at 1/2/2022 1400","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Hoodineee"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Hoodineee"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Hoodineee"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Hoodineee"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Hoodineee"},"content":"blah","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Hoodineee"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Hoodineee":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Hoodineee"},"content":"javac  -cp ..\\src\\main\\java\\Duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Hoodineee":1,"-":20}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"# Hazell project template","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"This is a project template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"3. After that, locate the `src/main/java/Hazell.java` file, right-click it, and choose `Run Hazell.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"heyzec"},"content":"    _    _               _ _ ","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"heyzec"},"content":"   | |  | |             | | |","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"heyzec"},"content":"   | |__| | __ _ _______| | |","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"heyzec"},"content":"   |  __  |/ _` |_  / _ \\ | |","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"heyzec"},"content":"   | |  | | (_| |/ /  __/ | |","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"heyzec"},"content":"   |_|  |_|\\__,_/___\\___|_|_|","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heyzec":9,"-":16}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.KwargNotFound;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"import java.util.*;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"public class Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"     * Represents userinput from user, parsed into arguments (args) and keyword arguments (kwargs).","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"     * PARSING","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"     * Format: [ARGS]... [/OPTION VALUE]...","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"     * Options are specified by a slash (/) followed by a word. All non-option words that come after it","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"     * are considered to be the value corresponding to that option.","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"     *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"     * LIMITATIONS","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"     * - Doesn\u0027t allow for multiple repeated options","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"heyzec"},"content":"    private List\u003cString\u003e args \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"heyzec"},"content":"    private Map\u003cString, String\u003e kwargs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"heyzec"},"content":"    private Command(List\u003cString\u003e args, Map\u003cString, String\u003e kwargs) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"heyzec"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"heyzec"},"content":"        this.kwargs \u003d kwargs;","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"heyzec"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"heyzec"},"content":"     * Factory method for creating instances of the Command object.","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"heyzec"},"content":"     * @param str Userinput","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"heyzec"},"content":"     * @return A Command object","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"heyzec"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"heyzec"},"content":"    public static Command parse(String str) {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"heyzec"},"content":"        String[] splitBySlash \u003d str.split(\"/\");","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"heyzec"},"content":"        List\u003cString\u003e args \u003d new ArrayList\u003c\u003e(List.of(splitBySlash[0].split(\" \")));","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"heyzec"},"content":"        Map\u003cString, String\u003e kwargs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"heyzec"},"content":"        for (int i \u003d 0; i \u003c splitBySlash.length - 1; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"heyzec"},"content":"            String[] kwargWords \u003d splitBySlash[i + 1].split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"heyzec"},"content":"            kwargs.put(kwargWords[0], kwargWords[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"heyzec"},"content":"        return new Command(args, kwargs);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"heyzec"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"heyzec"},"content":"     * Checks whether the first arg matches `word`.","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"heyzec"},"content":"     * @param word The first word in the command.","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"heyzec"},"content":"     * @return True or false","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"heyzec"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"heyzec"},"content":"    public boolean startsWith(String word) {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"heyzec"},"content":"        return this.args.get(0).equals(word);","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"heyzec"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"heyzec"},"content":"     * Get arguments excluding the first argument.","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"heyzec"},"content":"     * @return Arguments excluding first argument.","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"heyzec"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"heyzec"},"content":"    public List\u003cString\u003e getTrailingArgs() {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"heyzec"},"content":"        return this.args.subList(1, this.args.size());","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"heyzec"},"content":"    public String getKwarg(String key) throws KwargNotFound {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"heyzec"},"content":"        String value \u003d this.kwargs.get(key);","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"heyzec"},"content":"        if (value \u003d\u003d null) throw new KwargNotFound(this.args.get(0), key);","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"heyzec"},"content":"        return value;","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"heyzec"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"heyzec"},"content":"        sb.append(this.args.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"heyzec"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"heyzec"},"content":"        sb.append(this.kwargs.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"heyzec"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"heyzec"},"content":"    /* For debugging purposes */","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"heyzec"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"heyzec"},"content":"        System.out.println(Command.parse(\"todo borrow book\"));","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"heyzec"},"content":"        System.out.println(Command.parse(\"deadline return book /by Sunday\"));","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"heyzec"},"content":"        System.out.println(Command.parse(\"event project meeting /at Mon 2-4pm\"));","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":82}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.TaskDescriptionEmpty;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    private static final String typeIcon \u003d \"D\";","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    private String time;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    public Deadline(String description, String time) throws TaskDescriptionEmpty {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"        return String.format(\"[%s]%s (by: %s)\", typeIcon, super.toString(), this.time);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.TaskDescriptionEmpty;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    private static final String typeIcon \u003d \"E\";","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    private String time;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    public Event(String description, String time) throws TaskDescriptionEmpty {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"        return String.format(\"[%s]%s (at: %s)\", typeIcon, super.toString(), this.time);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":16}},{"path":"src/main/java/Hazell.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.HazellException;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"import exceptions.UnknownCommand;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"public class Hazell {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    public static void reply(String msg) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"        String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"        for (String line : msg.split(\"\\n\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"            System.out.println(\"\\t\" + line);","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"heyzec"},"content":"        String logo \u003d \"  _    _               _ _ \\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"heyzec"},"content":"                + \" | |  | |             | | |\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"heyzec"},"content":"                + \" | |__| | __ _ _______| | |\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"heyzec"},"content":"                + \" |  __  |/ _` |_  / _ \\\\ | |\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"heyzec"},"content":"                + \" | |  | | (_| |/ /  __/ | |\\n\"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"heyzec"},"content":"                + \" |_|  |_|\\\\__,_/___\\\\___|_|_|\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"heyzec"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"heyzec"},"content":"        TaskStore taskStore \u003d new TaskStore();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"heyzec"},"content":"        reply(\"Hello, I am Hazell!\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"heyzec"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"heyzec"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"heyzec"},"content":"            String userinput \u003d scanner.nextLine().strip();","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"heyzec"},"content":"            Command command \u003d Command.parse(userinput);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"heyzec"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"heyzec"},"content":"                if (command.startsWith(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"heyzec"},"content":"                    reply(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"heyzec"},"content":"                    System.exit(0);","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"list\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"heyzec"},"content":"                    reply(String.format(\"Here are the tasks in your list:\\n%s\", taskStore.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"heyzec"},"content":"                    int index \u003d Integer.parseInt(command.getTrailingArgs().get(0)) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"heyzec"},"content":"                    Task task \u003d taskStore.getTask(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"heyzec"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"heyzec"},"content":"                    reply(String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\", task.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"heyzec"},"content":"                    int index \u003d Integer.parseInt(command.getTrailingArgs().get(0)) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"heyzec"},"content":"                    Task task \u003d taskStore.getTask(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"heyzec"},"content":"                    task.markAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"heyzec"},"content":"                    reply(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\", task.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"heyzec"},"content":"                    String description \u003d String.join(\" \", command.getTrailingArgs());","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"heyzec"},"content":"                    new ToDo(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"heyzec"},"content":"                    String response \u003d taskStore.addTask(new ToDo(description));","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"heyzec"},"content":"                    reply(response);","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"heyzec"},"content":"                    String description \u003d String.join(\" \", command.getTrailingArgs());","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"heyzec"},"content":"                    String time \u003d command.getKwarg(\"by\");","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"heyzec"},"content":"                    String response \u003d taskStore.addTask(new Deadline(description, time));","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"heyzec"},"content":"                    reply(response);","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"heyzec"},"content":"                    String description \u003d String.join(\" \", command.getTrailingArgs());","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"heyzec"},"content":"                    String time \u003d command.getKwarg(\"at\");","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"heyzec"},"content":"                    String response \u003d taskStore.addTask(new Event(description, time));","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"heyzec"},"content":"                    reply(response);","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"heyzec"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"heyzec"},"content":"                    int index \u003d Integer.parseInt(command.getTrailingArgs().get(0)) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"heyzec"},"content":"                    String response \u003d taskStore.deleteTask(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"heyzec"},"content":"                    reply(response);","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"heyzec"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"heyzec"},"content":"                    throw new UnknownCommand();","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"heyzec"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"heyzec"},"content":"            } catch (HazellException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"heyzec"},"content":"                reply(ex.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"heyzec"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.TaskDescriptionEmpty;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    private String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    public Task(String description) throws TaskDescriptionEmpty {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"        if (description.equals(\"\")) throw new TaskDescriptionEmpty();","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"heyzec"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"heyzec"},"content":"        return this.isDone ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"heyzec"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"heyzec"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"heyzec"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"heyzec"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"heyzec"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), description);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":33}},{"path":"src/main/java/TaskStore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.NoSuchTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"import java.util.List;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":" * Class that stores Tasks.","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"public class TaskStore {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"    private final List\u003cTask\u003e store;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"    public TaskStore() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"        this.store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"heyzec"},"content":"     * Retrieves a specified task using an index (1-indexed).","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"heyzec"},"content":"     * @param index","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"heyzec"},"content":"     * @return The `index`-th task","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"heyzec"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"heyzec"},"content":"    public Task getTask(int index) throws NoSuchTask {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"heyzec"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"heyzec"},"content":"            return this.store.get(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"heyzec"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"heyzec"},"content":"            throw new NoSuchTask(this.size());","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"heyzec"},"content":"    private String getSummary() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"heyzec"},"content":"        return String.format(\"Now you have %d tasks in the list.\", this.store.size());","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"heyzec"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"heyzec"},"content":"        this.store.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"heyzec"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"heyzec"},"content":"        sb.append(String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\", task.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"heyzec"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"heyzec"},"content":"        sb.append(this.getSummary());","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"heyzec"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"heyzec"},"content":"    public String deleteTask(int index) throws NoSuchTask {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"heyzec"},"content":"        Task task;","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"heyzec"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"heyzec"},"content":"            task \u003d this.store.remove(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"heyzec"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"heyzec"},"content":"            throw new NoSuchTask(this.size());","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"heyzec"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"heyzec"},"content":"        sb.append(String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\", task.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"heyzec"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"heyzec"},"content":"        sb.append(this.getSummary());","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"heyzec"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"heyzec"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"heyzec"},"content":"     * List detailed information about all tasks in this store.","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"heyzec"},"content":"     * @return String Details","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"heyzec"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"heyzec"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"heyzec"},"content":"            return \"You have no tasks, please create one!\";","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"heyzec"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"heyzec"},"content":"        for (int i \u003d 0; i \u003c this.store.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"heyzec"},"content":"            Task task \u003d null;","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"heyzec"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"heyzec"},"content":"                task \u003d this.getTask(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"heyzec"},"content":"            } catch (NoSuchTask e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"heyzec"},"content":"                // This block will never be executed as we are looping within the size of store.","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"heyzec"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"heyzec"},"content":"            sb.append(String.format(\"%d. %s\", i + 1, task.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"heyzec"},"content":"            if (i !\u003d this.size() - 1) sb.append(\"\\n\");","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"heyzec"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"heyzec"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"heyzec"},"content":"    public int size() {","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"heyzec"},"content":"        return this.store.size();","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":82}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"import exceptions.TaskDescriptionEmpty;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    private static final String typeIcon \u003d \"T\";","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"    public ToDo(String description) throws TaskDescriptionEmpty {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"        return String.format(\"[%s]%s\", typeIcon, super.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":14}},{"path":"src/main/java/exceptions/HazellException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"/*","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"Using non-conventional way of storing multiple exceptions in one file:","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"https://stackoverflow.com/a/59671985/3118348","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"*/","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"public class HazellException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":8}},{"path":"src/main/java/exceptions/KwargNotFound.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class KwargNotFound extends HazellException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    private String command;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    private String key;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    public KwargNotFound(String command, String key) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"        this.key \u003d key;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"        return String.format(\"☹ OOPS!!! The %s command requires a mandatory /%s option.\", this.command, this.key);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":16}},{"path":"src/main/java/exceptions/NoSuchTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class NoSuchTask extends HazellException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    private int maxNumberOfTasks;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"    public NoSuchTask(int maxNumberOfTasks) {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"        this.maxNumberOfTasks \u003d maxNumberOfTasks;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"heyzec"},"content":"        return String.format(","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"heyzec"},"content":"                \"☹ OOPS!!! There\u0027s no such task! Please choose a task from 1 to %d.\",","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"heyzec"},"content":"                this.maxNumberOfTasks);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":16}},{"path":"src/main/java/exceptions/TaskDescriptionEmpty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class TaskDescriptionEmpty extends HazellException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"        return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":8}},{"path":"src/main/java/exceptions/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"public class UnknownCommand extends HazellException {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"heyzec"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"heyzec"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"heyzec"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"heyzec"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"heyzec"},"content":"todo join sports club","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"heyzec"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"heyzec"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"heyzec"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"heyzec"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"heyzec"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"heyzec":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"heyzec"},"content":"java -classpath ..\\bin Hazell \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heyzec":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"heyzec"},"content":"java -classpath ../bin Hazell \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heyzec":1,"-":37}}]

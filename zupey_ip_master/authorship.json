[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zupey":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zupey":4,"-":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static duke.utils.Ui.logo;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import static duke.utils.Ui.wrapWithLines;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import duke.commands.CommandHandler;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import duke.commands.CommandHandlerFactory;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import duke.data.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":" * Duke is a program that helps its user to store tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    private void initialise() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        wrapWithLines(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        File storageDirectory \u003d new File(\"./data\");","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        if (!storageDirectory.exists()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"            if (!storageDirectory.mkdir()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"                wrapWithLines(\"Could not create /duke.data directory\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"        Storage db \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        TaskList taskList \u003d db.load();","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        CommandHandlerFactory commandHandlerFactory \u003d new CommandHandlerFactory();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        String command;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"        while (!(command \u003d sc.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"            try {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"                CommandHandler commandHandler \u003d commandHandlerFactory.getHandler(command);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"                String message \u003d commandHandler.handle(taskList);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"                wrapWithLines(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"                wrapWithLines(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"        wrapWithLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"     * Calls the initializer of Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"     * @param args any command line arguments given.","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"        duke.initialise();","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zupey":54,"-":3}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":" * Enumerates all the possible commands to be linked with their respective handler.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"public enum Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"    LIST, // lists all duke.tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"    MARK, // mark a task","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"    UNMARK, // unmark a task","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"    TODO, // create a toDo task","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"    EVENT, // create an event","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    DEADLINE, // create a deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    DELETE, // delete a task","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    FIND, // find a task","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":15}},{"path":"src/main/java/duke/commands/CommandDeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import duke.utils.DateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":" * Handler for the Deadline command.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"public class CommandDeadlineHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    public CommandDeadlineHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        if (value \u003d\u003d null || !flag.equals(\"by\") || additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Correct usage: deadline return book /by 24/04/2019 1600\");","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"            DateTime.formatter.parse(this.additionalValue);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Please input a valid date!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the deadline command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"     * @return string representation of the deadline command.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"        Task task \u003d new Deadline(value, additionalValue);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"        return taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":44}},{"path":"src/main/java/duke/commands/CommandDeleteHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" * Handler for the Delete command.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"public class CommandDeleteHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public CommandDeleteHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        if (flag \u003d\u003d null \u0026\u0026 additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"            return;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        throw new DukeException(\"Correct usage: delete 1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the delete command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     * @return string representation of the delete command.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"        return taskList.deleteTask(value);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":35}},{"path":"src/main/java/duke/commands/CommandEventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import duke.utils.DateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":" * Handler for the Event command.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"public class CommandEventHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    public CommandEventHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        if (value \u003d\u003d null || !flag.equals(\"at\") || additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Correct usage: event dinner /at 24/04/2019 1600\");","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"            LocalDateTime.parse(this.additionalValue, DateTime.formatter);","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Please input a valid date!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the event command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"     * @return string representation of the event command.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"        Task task \u003d new Event(value, additionalValue);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"        return taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":46}},{"path":"src/main/java/duke/commands/CommandFindHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":" * Handler the Find command.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"public class CommandFindHandler extends CommandHandler {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"    public CommandFindHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the find command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @return string representation of the find command.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        return taskList.findTask(value);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"        if (value !\u003d null \u0026\u0026 flag \u003d\u003d null \u0026\u0026 additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"            return;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        throw new DukeException(\"Correct usage: find book\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"zupey":34}},{"path":"src/main/java/duke/commands/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":" * The abstract class for describes what functions every handler must have.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"public abstract class CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"    protected final String value;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"    protected final String flag;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    protected final String additionalValue;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"     * Constructor of CommandHandler that abstracts all the common fields of all the subclasses.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"     * @param value parameter 1","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * @param flag parameter 2","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @param additionalValue parameter 3","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    public CommandHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        this.additionalValue \u003d additionalValue;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        checkValid();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    public abstract String handle(TaskList taskList) throws DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax of the command after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    protected abstract void checkValid() throws DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":36}},{"path":"src/main/java/duke/commands/CommandHandlerFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" * Factory class for the handlers.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * Parses the command that is input by user and returns the corresponding handler based on the command given.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class CommandHandlerFactory {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public CommandHandler getHandler(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"        Command command \u003d parser.getCommand(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"        List\u003cString\u003e args \u003d parser.parseCommand(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        String value \u003d args.get(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"        String flag \u003d args.get(1);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"        String additionalValue \u003d args.get(2);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        switch(command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        case LIST:","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"            return new CommandListHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        case MARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"            return new CommandMarkHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"            return new CommandUnmarkHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"        case TODO:","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"            return new CommandTodoHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"            return new CommandDeadlineHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        case EVENT:","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"            return new CommandEventHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        case DELETE:","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"            return new CommandDeleteHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        case FIND:","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"            return new CommandFindHandler(value, flag, additionalValue);","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"No such command!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":42}},{"path":"src/main/java/duke/commands/CommandListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":" * Handler for the List command.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"public class CommandListHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"    public CommandListHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        if (value \u003d\u003d null \u0026\u0026 flag \u003d\u003d null \u0026\u0026 additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"            return;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"        throw new DukeException(\"Correct usage: list\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        return taskList.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":29}},{"path":"src/main/java/duke/commands/CommandMarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" * Handler for the Mark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"public class CommandMarkHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public CommandMarkHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        if (flag \u003d\u003d null \u0026\u0026 additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"            return;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        throw new DukeException(\"Correct usage: mark 1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the mark command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     * @return string representation of the mark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        Task task \u003d taskList.markTask(value, true);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        return message + task;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":38}},{"path":"src/main/java/duke/commands/CommandTodoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * Handler for the Todo command.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class CommandTodoHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    public CommandTodoHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        if (value !\u003d null \u0026\u0026 flag \u003d\u003d null \u0026\u0026 additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"            return;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        throw new DukeException(\"Correct usage: todo read book\");","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the Todo command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     * @return string representation of the Todo command.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        Task task \u003d new ToDo(this.value);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        return taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":37}},{"path":"src/main/java/duke/commands/CommandUnmarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" * Handler for the Unmark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"public class CommandUnmarkHandler extends CommandHandler {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public CommandUnmarkHandler(String value, String flag, String additionalValue) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        super(value, flag, additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * Checks the validity of the syntax after being parsed by CommandParser.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    public void checkValid() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        if (flag \u003d\u003d null \u0026\u0026 additionalValue \u003d\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"            return;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        throw new DukeException(\"Correct usage: unmark 1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     * Handles the execution of the unmark command inputted by the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList to be modified.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     * @return string representation of the unmark command.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    public String handle(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        Task task \u003d taskList.markTask(value, false);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        String message \u003d \"Ok, I\u0027ve marked this task as not done yet:\\n\\t\";","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        return message + task;","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":38}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":" * Parses a command using regex and returns the corresponding command, value, flag and additionalValues","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    private static final Pattern commandParser \u003d","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"            Pattern.compile(\"^([a-zA-Z]+)(?:\\\\s([^/]+))?(?:\\\\s/([a-zA-Z]+))?(?:\\\\s(.*))?$\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"    public Command getCommand(String input) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"        String firstWord \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"        Command command;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"            command \u003d Command.valueOf(firstWord.toUpperCase());","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"No Such command!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        return command;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    public List\u003cString\u003e parseCommand(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"        Matcher matcher \u003d Parser.commandParser.matcher(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"        matcher.find();","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"        String value \u003d matcher.group(2);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        String flag \u003d matcher.group(3);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"        String additionalValue \u003d matcher.group(4);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        result.add(value);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        result.add(flag);","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"        result.add(additionalValue);","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"        return result;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":40}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.data;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    private File db;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        // creates a file if file did not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"            db \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"            db.createNewFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"            System.out.printf(\"Failed to create file at %s%n\", this.filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     * Writes taskList into duke.txt","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     * Overwrites the whole file with current taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     * @param taskList the taskList we are saving","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    public void write(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"            FileWriter dbWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"                dbWriter.write(task.dbRepresentation() + \"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"            dbWriter.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"            System.out.printf(\"Failed to write file at %s%n\", this.filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"    public TaskList load() {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"        TaskList taskList \u003d new TaskList(this);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"            Scanner sc \u003d new Scanner(db);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"                try {","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"                    taskList.addTaskFromDb(line);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"                    System.out.println(\"Corrupted duke.data found!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"        return taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"zupey":64}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":" * Describes how an exception in the Duke program happens.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zupey":10}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import duke.utils.DateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * Describes the deadline class.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    private static final DateTimeFormatter formatter \u003d DateTime.formatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"     * Constructor when taking user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * @param description description of the deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @param time the time of the deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        this.time \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"     * Constructor when reading from database.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"     * @param isMarked boolean value of whether the task is marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     * @param description description of the deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * @param time the time of the deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    public Deadline(boolean isMarked, String description, String time) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        super(isMarked, description);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"        System.out.println(time);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"    public String dbRepresentation() {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"        return String.join(\"|\", \"D\", Boolean.toString(isMarked), description, time.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.time.format(formatter) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zupey":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import duke.utils.DateTime;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * Describes the event class.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    private static final DateTimeFormatter formatter \u003d DateTime.formatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"     * Constructor when taking user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * @param description description of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @param time the time of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        this.time \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"     * Constructor when reading from database.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"     * @param isMarked boolean value of whether the task is marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     * @param description description of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * @param time the time of the event.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    public Event(boolean isMarked, String description, String time) {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        super(isMarked, description);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    public String dbRepresentation() {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"        return String.join(\"|\", \"E\", Boolean.toString(isMarked), description, time.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.time.format(formatter) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zupey":45}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":" * Describes the abstract class task.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":" * Abstracts out the commonalities of the tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"    protected final String description;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"     * Constructor when taking user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"     * Constructor when reading from database.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"     * @param isMarked boolean value of whether the task is marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    public Task(boolean isMarked, String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    public void mark(boolean isCompleted) {","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"        this.isMarked \u003d isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    public abstract String dbRepresentation();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"        return this.isMarked ? \"X\" : \" \";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"zupey":44}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import duke.data.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * Describes the TaskList class which stores the tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    private final Storage db;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"     * Constructor of taskList linked to a Storage.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * @param db the database where taskList stores the tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"    public TaskList(Storage db) {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        this.db \u003d db;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    public String getRemainingTasks() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        return String.format(\"Now you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    private void updateDb() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"        db.write(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"     * Add tasks into the taskList and updates the database.","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"     * @return the reply when adding a task.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"        updateDb();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task + \"\\n\" + getRemainingTasks();","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"     * Marks a task as either complete or incomplete.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"     * @param value the number of the task to edit.","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"     * @param isCompleted whether the task is complete or incomplete.","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"     * @return edited task.","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"    public Task markTask(String value, boolean isCompleted) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"            int taskNumber \u003d Integer.parseInt(value);","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"            Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"            task.mark(isCompleted);","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"            updateDb();","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"            return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"            throw new DukeException(String.format(\"Please input a valid number! There are %d duke.tasks remaining.\",","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"                    taskList.size()));","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"zupey"},"content":"     * Deletes a task from taskList and updates the database.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"zupey"},"content":"     * @param value the task number of the task to be deleted.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"zupey"},"content":"     * @return the reply when adding a task.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"zupey"},"content":"    public String deleteTask(String value) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"zupey"},"content":"            int taskNumber \u003d Integer.parseInt(value);","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"zupey"},"content":"            Task task \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"zupey"},"content":"            this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"zupey"},"content":"            updateDb();","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"zupey"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\\t\" + task + \"\\n\" + getRemainingTasks();","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"zupey"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"zupey"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"zupey"},"content":"            throw new DukeException(String.format(\"Please input a valid number! There are %d duke.tasks remaining.\",","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"zupey"},"content":"                    taskList.size()));","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"zupey"},"content":"     * Adds a task from Database. Used when loading the database into TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"zupey"},"content":"     * @param storedTask task stored in the database.","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"zupey"},"content":"     * @throws DukeException error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"zupey"},"content":"    public void addTaskFromDb(String storedTask) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"zupey"},"content":"        String[] args \u003d storedTask.split(\"\\\\|\");","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"zupey"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"zupey"},"content":"        Task task;","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"zupey"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"zupey"},"content":"        case \"T\":","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"zupey"},"content":"            task \u003d new ToDo(Boolean.parseBoolean(args[1]), args[2]);","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"zupey"},"content":"            break;","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"zupey"},"content":"        case \"D\":","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"zupey"},"content":"            task \u003d new Deadline(Boolean.parseBoolean(args[1]), args[2], args[3]);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"zupey"},"content":"            break;","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"zupey"},"content":"        case \"E\":","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"zupey"},"content":"            task \u003d new Event(Boolean.parseBoolean(args[1]), args[2], args[3]);","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"zupey"},"content":"            break;","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"zupey"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"zupey"},"content":"            throw new DukeException(\"Corrupted file\");","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"zupey"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"zupey"},"content":"     * Find task that matches the searchParams.","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"zupey"},"content":"     * @param searchParams the searchParameters.","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"zupey"},"content":"     * @return the string representation of the tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"zupey"},"content":"    public String findTask(String searchParams) {","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"zupey"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"zupey"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"zupey"},"content":"            if (task.description.contains(searchParams)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"zupey"},"content":"                results.add(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"zupey"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"zupey"},"content":"        boolean isFirst \u003d true;","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"zupey"},"content":"        for (Task task: results) {","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"zupey"},"content":"            if (isFirst) {","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"zupey"},"content":"                isFirst \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"zupey"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"zupey"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"zupey"},"content":"            sb.append(task);","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"zupey"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"zupey"},"content":"     * The string representation of the TaskList class which shows the tasks that are currently saved.","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"zupey"},"content":"     * @return string representation.","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"zupey"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":142,"author":{"gitId":"zupey"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-08-16"},{"lineNumber":143,"author":{"gitId":"zupey"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"zupey"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"zupey"},"content":"            String numberedTask \u003d counter + \".\" + task + \"\\n\";","lastModifiedDate":"2022-08-18"},{"lineNumber":146,"author":{"gitId":"zupey"},"content":"            result.append(numberedTask);","lastModifiedDate":"2022-08-16"},{"lineNumber":147,"author":{"gitId":"zupey"},"content":"            counter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":149,"author":{"gitId":"zupey"},"content":"        return result.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":150,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":151,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"zupey":151}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":" * Describes the ToDo class.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"     * Constructor when taking user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"     * @param description description of the ToDo.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"     * Constructor when taking user input.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * @param isMarked boolean value of whether the task is marked.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     * @param description description of the ToDo.","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    public ToDo(boolean isMarked, String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        super(isMarked, description);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    public String dbRepresentation() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        return String.join(\"|\", \"T\", Boolean.toString(isMarked), description);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zupey":34}},{"path":"src/main/java/duke/utils/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.utils;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"public class DateTime {","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"    public static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"zupey":7}},{"path":"src/main/java/duke/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.utils;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"    public static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"    private static void makeLine() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"            System.out.print(\"\\u2015\");","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"        System.out.println();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"    public static void wrapWithLines(String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"        makeLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        makeLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"zupey":22}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"    public void dbRepresentationFromUserInput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"        Task deadline \u003d new Deadline(\"assignment\", \"24/04/2019 1600\");","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"        assertEquals(\"D|false|assignment|2019-04-24T16:00\", deadline.dbRepresentation());","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    public void dbRepresentationFromDbRead() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"        Task deadline \u003d new Deadline(false, \"assignment\", \"2019-04-24T16:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        assertEquals(\"[D][ ] assignment(by: 24/4/2019 1600)\", deadline.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"zupey":19}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"public class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"    public void dbRepresentationFromUserInput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"        Task event \u003d new Event(\"project meeting\", \"24/04/2019 1600\");","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"        assertEquals(\"E|false|project meeting|2019-04-24T16:00\", event.dbRepresentation());","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    public void dbRepresentationFromDbRead() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"        Task event \u003d new Event(false, \"project meeting\", \"2019-04-24T16:00\");","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        assertEquals(\"[E][ ] project meeting(at: 24/4/2019 1600)\", event.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"zupey":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"todo read book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"deadline return book /by 24/04/2019 1600","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"event project meeting /at 24/04/2019 1600","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"zupey":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zupey":2,"-":36}}]

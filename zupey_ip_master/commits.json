{"authorDailyContributionsMap":{"zupey":[{"date":"2022-08-14","commitResults":[{"hash":"db34057a3861f9635febdd5daf0a8341a416f101","messageTitle":"feat: add function to create blank line","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2022-08-16","commitResults":[{"hash":"908952dc61a641a12872dd655242aa84c44136be","messageTitle":"feat: add echo and bye functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"3a208e2a1a5850428eb4254dbe220348ef878b74","messageTitle":"feat: add user input","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"a368595da6044128b695dfff723e19f4177f1aac","messageTitle":"feat: add TaskList to store tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":1}}},{"hash":"f81307d523714848b69ebdc7b261349867a47523","messageTitle":"style: abstract out function to wrap message within two horizontal lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":14}}},{"hash":"e47e67d5d2b26ea3c0dc4d76dbbecf548dbb3dfe","messageTitle":"feat: add CheckBox class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"a4d612b3927406fcc2f0dbe3f1617995194e206d","messageTitle":"feat: add Task class and use Task to represent a task instead of String","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":7}}},{"hash":"9c494114b5e57da331e923ae8c279592b2d26f0d","messageTitle":"feat: add ability to mark and unmark tasks as completed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":7}}},{"hash":"33b4fc6197cad748a74d4192fc40d122b814ba89","messageTitle":"feat: abstract out getStatusIcon","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"5238ae08e2c4bef4aed16d08e564951336f605cb","messageTitle":"style: rename variable \"name\" to \"description\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"5ba3a556ed932d5650e3bd3858c28e07219549c5","messageTitle":"feat: add subclass Deadline to Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"dffc871af64fe328b55199f9fc88255675ba611d","messageTitle":"feat: add subclass Event to Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"4387320cd25b3bf6659893e27a869e84b593b95d","messageTitle":"feat: add subclass ToDo to Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}}]},{"date":"2022-08-17","commitResults":[{"hash":"9e8aa1954b7ad273245d48c9cd0f0a100777a682","messageTitle":"feat: support parsing of commands for deadline, todo and event","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":22}}},{"hash":"f449419194ff9c49027c979b7b04aa65b5879e4c","messageTitle":"feat: add error handling + refactor files into packages","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":170,"deletions":98}}}]},{"date":"2022-08-18","commitResults":[{"hash":"c1e2fa658083b975b914d41fe39220612edae5d5","messageTitle":"feat: add delete task functionality","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":19}}}]},{"date":"2022-08-25","commitResults":[{"hash":"7a86d846eb28e984acbf27feec7fecb3904b1225","messageTitle":"feat: add enums and refactor code","messageBody":"refactor code into packages to abstract out handler functionality\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":8},"java":{"insertions":538,"deletions":303}}}]},{"date":"2022-08-26","commitResults":[{"hash":"f913e59cd86abbecda56f2856f07e744b64603e6","messageTitle":"feat: add datetime support for deadline and event tasks","messageBody":"use LocalDateTime to specify how the date-time format the commands should be in. throws exception when user does not follow format\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":195,"deletions":92}}},{"hash":"372d81d4b74dc1ea275c8f6615495b1364d60aa6","messageTitle":"feat: add storage functionality to save tasks between different sessions","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"446cbaaf2f65cd528a93ad882d3c5e0f843194bd","messageTitle":"Add Gradle support for automated tests and execution of duke","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"ef66c23eec0f45e9ec317e788c2f82e80b25d628","messageTitle":"Organise classes into one package `duke`","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":641,"deletions":644},"bat":{"insertions":2,"deletions":2},"sh":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"3f01a77bdbe8c109f59a79339e80fc6d0b6164ee","messageTitle":"Use more OOP","messageBody":"Abstract out the UI class which handles the UI for printing messages from duke\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":8}}},{"hash":"3b79b872c12be77a0920d4785810480929f1f488","messageTitle":"Use more OOP","messageBody":"Abstract out the Parser class which handles the parsing of user input to return the arguments that are necessary for the handlers.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":6}}},{"hash":"c4de9d37b5f97b974c7b83c4b70b8e167512715f","messageTitle":"Add checkstyle automation in gradle","messageBody":"Automated checkstyle of code so that it follows the module coding standard\n","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}}]},{"date":"2022-08-27","commitResults":[{"hash":"e234a49997cad5da66b1db2ff550f2b81d26eb10","messageTitle":"Add tests for deadline and event classes","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"96ca4c8da806d680fe2c25d5d3abd4d9c8e0e166","messageTitle":"style: setup checkstyle in gradle and changed style to meet java coding standard","messageBody":"","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10},"bat":{"insertions":2,"deletions":105}}},{"hash":"76342af4f984ee4746a87c2a4ebc990fa23b2911","messageTitle":"style: edit classes in the commands package to meet coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":35}}},{"hash":"c83f943fe2ecc51d3b2553eaf71f49b776ec735f","messageTitle":"style: edit classes in the exceptions package to meet coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"06ac13327a6858f0a0bf9e6b83dd30bd4cdaadb8","messageTitle":"fix: fixed test cases to work after shifting of packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"9e2a67d44afbfcb2479928f318cb70a12e0082c8","messageTitle":"style: change the task package to follow the java coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":20}}},{"hash":"6ba142577d758cc37b7fb82dbf898533d40bca0b","messageTitle":"style: added javadocs for explanation of what each function does","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":4}}},{"hash":"56c10c27373a6695b3861a000d331bc1a1026e4f","messageTitle":"style: added javadocs for Duke.txt","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"31522465d3abc02fbae6e9a907fe289dfa4b5dc9","messageTitle":"feat: add find functionality to find tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}}]},{"date":"2022-08-31","commitResults":[{"hash":"379a5b8e838c8ea9f9378eab089f964f9a462cb3","messageTitle":"Set-up JavaFX in build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"eb673ac557be864f453aa76ee48baf222fe4ad41","messageTitle":"style: meet coding standards","messageBody":"add javadocs for files that were missed and change variable names to meet coding standards.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":14}}}]},{"date":"2022-09-06","commitResults":[{"hash":"414196aab4f19e5b581ed71e249a2b7813665ba3","messageTitle":"feat: add GUI for duke","messageBody":"Add basic GUI that echos the user input.\n","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":165,"deletions":3}}}]},{"date":"2022-09-07","commitResults":[{"hash":"f4986f758c65e7d29c488300faf7413f4f1225a2","messageTitle":"feat: make user commands responsive","messageBody":"Duke now responds to user input.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":10}}},{"hash":"77588f8a37a5a1e01f25f6093b22cd542aad1eb5","messageTitle":"feat: closes GUI when user inputs `bye`","messageBody":"Duke now closes when user inputs bye.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"de0af73ec1beb119731a06688622b6f88e432bef","messageTitle":"add files that were undetected by intellij","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":35},"java":{"insertions":163,"deletions":163}}}]},{"date":"2022-09-13","commitResults":[{"hash":"5a962877ed84836004eb19303f927407109d7e05","messageTitle":"feat: removes old code that is unused after GUI is implemented.","messageBody":"Remove smiley face from error message because there is no support for it in the interface.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":28}}}]},{"date":"2022-09-14","commitResults":[{"hash":"137dae9055dfa181dfcba4b2eb73dc410ebc8ec1","messageTitle":"Refactor files that are related to GUI to the gui package.","messageBody":"By abstracting out all the related code to the gui package, the code becomes more organised.  All the javafx-related files can be found in the gui package.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":154,"deletions":151}}},{"hash":"63b334b51fb3d96c800de3b7782e3352121184d5","messageTitle":"Abstract out the bye command into CommandByeHandler.java.","messageBody":"Previously, the bye command is checked at the user input level.\nThis is not ideal because the implementation is not extensible.\n\nBy capitalizing on the previously built infrastructure of CommandHandler,\nI abstracted out the bye command into its own class to have better\nextensibility and overall cleanliness of the code.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":6}}},{"hash":"e6d3ff35b73d6e7f4052072af6c9b1a78996bde3","messageTitle":"Fix bug where index out of bounds exception is not caught correctly.","messageBody":"When user tries to mark or delete a task that is out of bounds,\nthe exception is not caught correctly.\nAdded junit tests that specifically test this so that we do not encounter such issues in the future.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":3}}},{"hash":"474ee672bc2e3a0b245259c8c0a26c0166bf77be","messageTitle":"Refactor based on comments given by pull request review and java coding style requirements.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":13}}},{"hash":"4c3468e2c8b42cd144cce355b74ce69d140ef2b5","messageTitle":"Refactor javadoc header comments to follow java code style guide.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":28}}},{"hash":"a3f8ae09a1618db51a0f149ac704e17afbde1e4d","messageTitle":"Add InvalidSyntaxException to better describe a subset of errors.","messageBody":"Change error message for InvalidSyntaxException to be more descriptive.\nUpdate all errors that are syntax related to throw this error instead.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":24}}},{"hash":"e207460a3d2318d65c5badd06eed29125ae4e706","messageTitle":"Add assertions.","messageBody":"Assert validity of commands that should be true at that point.\nThe first line of checking should be in the Parser class.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"9d70c9feb43fa6684b5e6f4c79fb8202f854b13d","messageTitle":"Refactor code to improve readability.","messageBody":"Abstract out and name variables based on their function.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":9}}},{"hash":"bab7119008c274ece68274522ea416faeac8fdb1","messageTitle":"TaskList: Add automatic sorting to the taskList based on the date of task.","messageBody":"Since Todo tasks have no date, they have arbitrary max time and hence will be put at the end of the TaskList.\n","tags":["C-Sort","BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":3}}},{"hash":"e8d2a055f837116c5f5f354810bc031df94bde87","messageTitle":"Refactor placement of where exceptions are caught to be more readable.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"00d71689c27796c10847ea8ef57782fa10e87d1b","messageTitle":"Add more assertions.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"d41ee63f3bf0a05aaf594ef916d703dc95c2a73b","messageTitle":"Improve code quality.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":15}}}]},{"date":"2022-09-15","commitResults":[{"hash":"9f14bf0ac5c46546ee2cbfff89a3ebaa73a6071e","messageTitle":"Minor UI fix","messageBody":"Remove blank line when displaying taskList.\nAdd spacing in error message for better readability.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"5a062b8f12fdfbea040f2b9252b1d67a2866101d","messageTitle":"Squash bugs","messageBody":"Program crashes due to null exception because logic in isValid is incorrect.\nFixed to avoid this issue.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"000695b1861276e4f36ea3d817b9695d63b85e8f","messageTitle":"Update user guide in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":137,"deletions":9}}},{"hash":"c0a01f6bd988142b9fa2dd8d62a4d62fdcc66848","messageTitle":"Update build.gradle for release of v1.0.","messageBody":"","tags":["v1.0"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}}]},{"date":"2022-09-17","commitResults":[{"hash":"8726c24043519f2dfe58dd5e330ceca4671da122","messageTitle":"Minor UI fixes","messageBody":"Dialog box now fits the size of text sent.\nError message changed.\n","fileTypesAndContributionMap":{"fxml":{"insertions":15,"deletions":16},"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"zupey":{"java":1320,"md":133,"fxml":34,"sh":2,"bat":0,"gradle":20,"txt":8}},"authorContributionVariance":{"zupey":104312.67},"authorDisplayNameMap":{"zupey":"CS2103-F14-1 LINU..FENG"}}

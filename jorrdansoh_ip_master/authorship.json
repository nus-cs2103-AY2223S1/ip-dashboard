[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"![](https://avatars0.githubuserdescription.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"![](https://avatars0.githubuserdescription.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jorrdansoh":2,"-":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"checkstyle {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"### Todo","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"### Deadline","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"Description of the feature.","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"### Event","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"Description of the feature.","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"### List","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"### `todo` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"`todo (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"### `deadline` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"`deadline (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"### `event` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"`event (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"### `mark` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"`mark (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"### `unmark` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"`unmark (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"### `delete` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"`delete (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"jorrdansoh"},"content":"### `find` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":124,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":125,"author":{"gitId":"jorrdansoh"},"content":"`find (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":126,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":127,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":128,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":129,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":133,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"### `list` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":136,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"jorrdansoh"},"content":"`list (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"jorrdansoh"},"content":"### `sort` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"jorrdansoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-09"},{"lineNumber":156,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"jorrdansoh"},"content":"`sort (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":159,"author":{"gitId":"jorrdansoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-09"},{"lineNumber":160,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"jorrdansoh"},"content":"Description of the outcome.","lastModifiedDate":"2022-09-09"},{"lineNumber":162,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":163,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"jorrdansoh"},"content":"expected output","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"jorrdansoh"},"content":"```","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":167,"author":{"gitId":"jorrdansoh"},"content":"### `bye` - Describe action","lastModifiedDate":"2022-09-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"jorrdansoh"},"content":"`bye (optional arguments)`","lastModifiedDate":"2022-09-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jorrdansoh":143,"-":38}},{"path":"src/main/java/duke/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" * This class deals with dates in Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"public class Date {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"     * Converts the given String, in `dd-MM-yyyy` format, into a LocalDate object.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     * @param s The String to convert.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * @return The LocalDate object obtained from the String.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DateTimeException If the given String is not of the correct format.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    public static LocalDate getDate(String s) throws DateTimeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        return LocalDate.parse(s, formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     * Converts the given LocalDate object into a String for display, in `d MMM yyy` format.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     * @param localDate The LocalDate object to convert.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing the LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    public static String getDisplayFormat(LocalDate localDate) {","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        return localDate.format(formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     * Converts the given LocalDate object into a String for storage, in `dd-MM-yyyy` format.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     * @param localDate The LocalDate object to convert.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing the LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    public static String getStorageFormat(LocalDate localDate) {","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        return localDate.format(formatter);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates Duke and its functionalities.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"public class Duke {","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a new Duke to chat with.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If there is a problem retrieving the saved tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    public Duke() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d this.storage.load();","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the corresponding Command after parsing the given text with the Parser.","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     * @param text The text to parse.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     * @return The corresponding command after parsing the text.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    public Command getCommand(String text) {","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        return Parser.parseText(text, this.taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     * Saves the TaskList to the hard disk.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If there is a problem with writing to the hard disk.","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    public void saveTasks() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        this.storage.save(this.taskList);","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":41}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":" * This class represents Exceptions specific to Duke.","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a DukeException with the given message, appended with \"Oops!\" at the start.","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"     * @param message The message for the DukeException.","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"        super(\"Oops! \" + message);","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"jorrdansoh":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public class Launcher {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        Application.launch(duke.Main.class, args);","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jorrdansoh":9,"-":6}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    private static Stage stage;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            this.duke \u003d new Duke();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            Main.stage \u003d stage;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    new FXMLLoader(this.getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Main.stage.setScene(scene);","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this.duke);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Main.stage.show();","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     * Closes the Stage.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    public static void close() {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        Main.stage.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jorrdansoh":26,"-":20}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":" * This class parses the user input into Commands.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"public class Parser {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     * Parses the given text, and returns the appropriate Command.","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     * @param text The text to parse.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList  The TaskList to run the Command in.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"     * @return The Command corresponding to the user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    public static Command parseText(String text, TaskList taskList) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"        String[] words \u003d text.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        String argument \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"            return getCommand(commandWord, argument, taskList);","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"    private static Command getCommand(String commandWord, String argument, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"            switch (commandWord) {","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"                return new ListCommand(taskList);","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"            case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"                return new MarkCommand(taskList, Integer.parseInt(argument) - 1);","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"            case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"                return new UnmarkCommand(taskList, Integer.parseInt(argument) - 1);","lastModifiedDate":"2022-08-14"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"            case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"                return new TodoCommand(taskList, new Todo(argument));","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"                String[] arguments \u003d splitArgument(argument, DeadlineCommand.COMMAND_SEPARATOR);","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"                return new DeadlineCommand(taskList, new Deadline(arguments[0], arguments[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"                arguments \u003d splitArgument(argument, EventCommand.COMMAND_SEPARATOR);","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"                return new EventCommand(taskList, new Event(arguments[0], arguments[1]));","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"                return new DeleteCommand(taskList, Integer.parseInt(argument) - 1);","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"                return new FindCommand(taskList, argument);","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"            case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"                return new SortCommand(taskList);","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"            default:","lastModifiedDate":"2022-08-14"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"That\u0027s not a proper number.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"     * Splits the given argument into description and date, separated by the command separator.","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"     * @param argument         The String to split.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"     * @param commandSeparator The String to split the argument by.","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"     * @return An array containing the description and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the command separator is not found, or if the description or date is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"    public static String[] splitArgument(String argument, String commandSeparator) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        int index \u003d argument.indexOf(commandSeparator);","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(commandSeparator + \" not found.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"            String description \u003d argument.substring(0, index - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"            String date \u003d argument.substring(index + 4);","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"            return new String[]{description, date};","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"The description and date cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":100}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":" * This class saves and retrieves Tasks to and fro the hard disk.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"public class Storage {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    private final Path filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    private final Path folderPath;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/teikjun/duke","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Storage() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.filePath \u003d Paths.get(userDir + \"/data/duke.txt\");","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.folderPath \u003d Paths.get(userDir + \"/data\");","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     * Loads the TaskList that is stored in the filePath.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"     * @return The TaskList that has been loaded.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If there is a problem with reading the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"            createFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"            return TaskList.decode(Files.readAllLines(this.filePath));","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"     * Saves the given TaskList in the filePath.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList to be saved.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If there is a problem with writing to the file.","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"            Files.write(this.filePath, taskList.encode());","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/teikjun/duke","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates the directory and/or file if they have not been created yet.","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IOException If there is a problem with creating the directory or file.","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (Files.notExists(this.folderPath)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Files.createDirectory(this.folderPath);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (Files.notExists(this.filePath)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Files.createFile(this.filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":49,"-":26}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates an add command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    private Task task;","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an AddCommand with the given TaskList and Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * @param task     The Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    public AddCommand(TaskList taskList, Task task) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     * Adds the Task into the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String signalling that the Task has been added.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList.add(this.task);","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        return \"I\u0027ve added this task:\\n  \"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"                + this.task","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"                + \"\\nNow you have \" + this.taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"     * Executes the Command and returns the result.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String signalling that the Command has been executed.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public abstract String execute();","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":13}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a deadline command from the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_SEPARATOR \u003d \"/by\";","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a DeadlineCommand with the given TaskList and Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * @param deadline The Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    public DeadlineCommand(TaskList taskList, Deadline deadline) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        super(taskList, deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a delete command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    private int pos;","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a DeleteCommand with the given TaskList and position.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     * @param pos      The position.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the position is not in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public DeleteCommand(TaskList taskList, int pos) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        if (pos \u003c 0 || pos \u003e taskList.size() - 1) {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"The list doesn\u0027t have a task with that number.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     * Deletes the Task at the position of the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String signalling that the Task has been deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        Task task \u003d this.taskList.remove(this.pos);","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        return \"I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"                + task","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"                + \"\\nNow you have \" + this.taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":44}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates an event command from the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_SEPARATOR \u003d \"/at\";","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an EventCommand with the given TaskList and Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * @param event    The Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    public EventCommand(TaskList taskList, Event event) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        super(taskList, event);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates an exit command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the exit message.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"     * @return The exit message.","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"        return \"Bye! Hope to see you again.\";","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a find command from the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    private String keyword;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a FindCommand with the given TaskList and keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * @param keyword  The keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    public FindCommand(TaskList taskList, String keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     * Finds all Tasks in the TaskList containing the keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String containing the list of Tasks that match the keyword.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        TaskList matchingTasks \u003d this.taskList.findTasks(this.keyword);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"        return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"                + matchingTasks;","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":36}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates an invalid command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"    private String message;","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an InvalidCommand with the given message.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"     * @param message The message.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the error message.","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     * @return The error message.","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        return this.message;","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a list command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a ListCommand with the given TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     * Returns a String containing the TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String containing the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"                + this.taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a mark command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    private int pos;","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a MarkCommand with the given TaskList and position.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     * @param pos      The position.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the position is not in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public MarkCommand(TaskList taskList, int pos) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        if (pos \u003c 0 || pos \u003e taskList.size() - 1) {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"The list doesn\u0027t have a task with that number.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     * Marks the Task at the position of the TaskList as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String signalling that the Task has been marked as done.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        Task task \u003d this.taskList.setDone(this.pos, true);","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"                + task;","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":44}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a sort command from the user.","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a SortCommand with the given TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    public SortCommand(TaskList taskList) {","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     * Returns a String containing the sorted TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String containing the sorted TaskList.","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList.sort();","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        return \"Here are the tasks in your list, sorted:\\n\"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"                + this.taskList;","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"jorrdansoh":33}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a to-do command from the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a TodoCommand with the given TaskList and To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * @param todo     The To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    public TodoCommand(TaskList taskList, Todo todo) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        super(taskList, todo);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":22}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates an unmark command from the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    private int pos;","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an UnmarkCommand with the given TaskList and position.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     * @param taskList The TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     * @param pos      The position.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the position is not in the TaskList.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public UnmarkCommand(TaskList taskList, int pos) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        if (pos \u003c 0 || pos \u003e taskList.size() - 1) {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"The list doesn\u0027t have a task with that number.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     * Marks the Task at the position of the TaskList as not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String signalling that the Task has been marked as not done.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"    public String execute() {","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        Task task \u003d this.taskList.setDone(this.pos, false);","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        return \"Okay, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"                + task;","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import duke.Date;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a deadline set by the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    public static final char SYMBOL \u003d \u0027D\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a Deadline with the given description and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     * @param date        The date for the Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty, or if the format of the given date is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        super(description, false);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"            this.date \u003d Date.getDate(date);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"That\u0027s not a proper date.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a Deadline with the given description, completion status, and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     * @param isDone      The completion status of the Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"     * @param date        The date for the Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty, or if the format of the given date is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    public Deadline(String description, boolean isDone, String date) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"            this.date \u003d Date.getDate(date);","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"That\u0027s not a proper date.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the date of this Deadline.","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"     * @return The date of this Deadline.","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"        return this.date;","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"     * Returns a Deadline after decoding the given String.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"     * @param s The String to decode.","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"     * @return The Deadline decoded from the String.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the String is empty, or if the format of the date in the String is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"    public static Deadline decode(String s) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"        String[] arguments \u003d s.split(\";\");","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"        boolean isDone \u003d arguments[0].equals(\"1\");","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"        return new Deadline(arguments[1], isDone, arguments[2]);","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"     * Encodes this Deadline into a String.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"     * @return The String encoded from this Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"    public String encode() {","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"%c;%s;%s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"                SYMBOL,","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"                super.encode(),","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"                Date.getStorageFormat(this.date));","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the String representation of this Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing this Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"[%c]%s (by: %s)\",","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"                SYMBOL,","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"                super.toString(),","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDisplayFormat(this.date));","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"     * Compares this Deadline with the given Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"     * If the given Task is a Deadline or an Event, their dates are compared chronologically.","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"     * Otherwise, this Deadline is always smaller.","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"     * @param task The Task to compare to.","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"     * @return A negative integer, zero, or a positive integer as this Deadline is","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"     *     smaller than, equals to, or greater than the given Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jorrdansoh"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"            return this.date.compareTo(deadline.date);","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"            return this.date.compareTo(event.getDate());","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"            return -1;","lastModifiedDate":"2022-09-03"},{"lineNumber":118,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":120}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import duke.Date;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates an event set by the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    public static final char SYMBOL \u003d \u0027E\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an Event with the given description and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     * @param date        The date for the Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty, or if the format of the given date is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    public Event(String description, String date) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"        super(description, false);","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"            this.date \u003d Date.getDate(date);","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"That\u0027s not a proper date.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an Event with the given description, completion status, and date.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"     * @param isDone      The completion status of the Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"     * @param date        The date for the Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty, or if the format of the given date is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"    public Event(String description, boolean isDone, String date) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"            this.date \u003d Date.getDate(date);","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"That\u0027s not a proper date.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the date of this Event.","lastModifiedDate":"2022-09-03"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"     * @return The date of this Event.","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        return this.date;","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"     * Returns an Event after decoding the String.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"     * @param s The String to decode.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"     * @return The Event decoded from the String.","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the String is empty, or if the format of the date in the String is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"    public static Event decode(String s) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"        String[] arguments \u003d s.split(\";\");","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"        boolean isDone \u003d arguments[0].equals(\"1\");","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        return new Event(arguments[1], isDone, arguments[2]);","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"     * Encodes this Event into a String.","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"     * @return The String encoded from this Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    public String encode() {","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"%c;%s;%s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"                SYMBOL,","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"                super.encode(),","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"                Date.getStorageFormat(this.date));","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the String representation of this Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing this Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"[%c]%s (at: %s)\",","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"                SYMBOL,","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"                super.toString(),","lastModifiedDate":"2022-08-22"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDisplayFormat(this.date));","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"     * Compares this Event with the given Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"     * If the given Task is an Event or a Deadline, their dates are compared chronologically.","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"     * Otherwise, this Event is always smaller.","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"     * @param task The Task to compare to.","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"     * @return A negative integer, zero, or a positive integer as this Event is","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"     *     smaller than, equals to, or greater than the given Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"jorrdansoh"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"            return this.date.compareTo(event.date);","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"            return this.date.compareTo(deadline.getDate());","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":118,"author":{"gitId":"jorrdansoh"},"content":"            return -1;","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"},{"lineNumber":122,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":122}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a task set by the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    private String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a Task with the given description.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    Task(String description) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a Task with the given description and completion status.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"     * @param isDone      The completion status of the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    Task(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"            throw new DukeException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"     * Changes the isDone status of this Task according to the given boolean.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"     * @param isDone The new isDone status of this Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the description of this Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"     * @return The description of this Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"        return this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"     * Encodes this Task into a String.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"     * @return The String encoded from this Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"    public String encode() {","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"%s;%s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"                status,","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"                this.description);","lastModifiedDate":"2022-08-22"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the String representation of this Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing this Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"        String status \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"                status,","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"                this.description);","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":83}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":" * Stores a list of tasks entered by the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a new empty TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the number of Tasks in this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     * @return The number of Tasks in this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    public int size() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"     * Adds the given Task to this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-14"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     * Changes the isDone status of the Task at the specific position of this TaskList,","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"     * according to the given boolean.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"     * @param pos The position of the Task in this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"     * @param isDone The new isDone status of the Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"     * @return The Task with its new status.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    public Task setDone(int pos, boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        Task task \u003d this.tasks.get(pos);","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        task.setDone(isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        return task;","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"     * Removes the Task at the specific position of this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"     * @param pos The position of the Task in this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"     * @return The removed Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"    public Task remove(int pos) {","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        return this.tasks.remove(pos);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"     * Finds all Tasks in this TaskList that contain the given keyword.","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"     * @param keyword The keyword to search.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"     * @return A TaskList containing all matching Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        return matchingTasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"     * Sorts this TaskList in the following order: to-dos, then deadlines and events.","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"     * To-dos are sorted by alphabetical order, while deadlines and events are sorted by","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"     * chronological order.","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"    public void sort() {","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"        this.tasks.sort(Comparator.naturalOrder());","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the encoded String representation of this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"     * @return An encoded String representing this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"    public List\u003cString\u003e encode() {","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"            encodedTasks.add(task.encode());","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"        return encodedTasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/teikjun/duke","lastModifiedDate":"2022-08-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-08-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the decoded TaskList from the given list of Strings.","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param encodedTasks the list of Strings to be decoded.","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return A TaskList decoded from the given list.","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws DukeException If the text(s) in the list is empty, or the format of the date(s) in the list is wrong.","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static TaskList decode(List\u003cString\u003e encodedTasks) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        TaskList decodedTasks \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        for (String encodedTask : encodedTasks) {","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            char taskType \u003d encodedTask.charAt(0);","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            String content \u003d encodedTask.substring(2);","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            case Todo.SYMBOL:","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                decodedTasks.add(Todo.decode(content));","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            case Deadline.SYMBOL:","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                decodedTasks.add(Deadline.decode(content));","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            case Event.SYMBOL:","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                decodedTasks.add(Event.decode(content));","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return decodedTasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-29"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":136,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":137,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the String representation of this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":139,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing this TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":141,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":142,"author":{"gitId":"jorrdansoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":143,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"jorrdansoh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-09-03"},{"lineNumber":145,"author":{"gitId":"jorrdansoh"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-08-14"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2022-08-14"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2022-08-14"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"            result.append(taskNum).append(\". \").append(task);","lastModifiedDate":"2022-09-03"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"            if (i !\u003d this.tasks.size() - 1) {","lastModifiedDate":"2022-08-14"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":151,"author":{"gitId":"jorrdansoh"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":152,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"        return result.toString();","lastModifiedDate":"2022-09-03"},{"lineNumber":154,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":155,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":122,"-":33}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * This class encapsulates a to-do set by the user.","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    public static final char SYMBOL \u003d \u0027T\u0027;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a To-do with the given description.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"        super(description);","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a To-do with the given description and completion status.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     * @param description The description for the To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     * @param isDone      The completion status of the To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    Todo(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     * Returns a To-do after decoding the String.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     * @param s The String to decode.","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * @return The To-do decoded from the String.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     * @throws DukeException If the String is empty.","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"    public static Todo decode(String s) throws DukeException {","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        // Solution below adapted from https://github.com/teikjun/duke","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        String[] arguments \u003d s.split(\";\");","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        boolean isDone \u003d arguments[0].equals(\"1\");","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        return new Todo(arguments[1], isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"     * Encodes this To-do into a String.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"     * @return The String encoded from this To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    public String encode() {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"%c;%s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"                SYMBOL,","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"                super.encode());","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the String representation of this To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"     * @return A String representing this To-do.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        return String.format(\"[%c]%s\",","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"                SYMBOL,","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"                super.toString());","lastModifiedDate":"2022-08-22"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"     * Compares this To-do with the given Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"     * If the given Task is also a To-do, their descriptions are compared alphabetically.","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"     * Otherwise, this To-do is always greater.","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"     * @param task The Task to compare to.","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"     * @return A negative integer, zero, or a positive integer as this To-do is","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"     *         smaller than, equals to, or greater than the given Task.","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"            return this.getDescription().compareTo(task.getDescription());","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"            return 1;","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"jorrdansoh":87}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } finally {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            this.dialog.setText(text);","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            this.displayPicture.setImage(image);","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the dialog box for the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"     * @param text The text to display.","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"     * @param image The image representing the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"     * @return The dialog box for the user.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"    public static DialogBox getUserDialog(String text, Image image) {","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"        return new DialogBox(text, image);","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"    // Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the dialog box for Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"     * @param text The text to display.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"     * @param image The image representing Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"     * @return The dialog box for Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"    public static DialogBox getDukeDialog(String text, Image image) {","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, image);","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        dialogBox.flip();","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"        return dialogBox;","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jorrdansoh":55,"-":31}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke.ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import duke.Main;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Image userImage \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Image dukeImage \u003d","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initialize the main window.","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String welcomeText \u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(welcomeText, this.dukeImage));","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"     * Sets the given Duke as this Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"     * @param duke The Duke to set.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // @@author jorrdansoh-reused","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // with modifications","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            String userText \u003d this.userInput.getText();","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assert userText !\u003d null : \"userText should not be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Command command \u003d this.duke.getCommand(userText);","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            assert command !\u003d null : \"command should not be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            String dukeText \u003d command.execute();","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assert dukeText !\u003d null : \"dukeText should not be null\";","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            this.duke.saveTasks();","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(userText, this.userImage),","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(dukeText, this.dukeImage)","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Main.close();","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(e.getMessage(), this.dukeImage));","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } finally {","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.userInput.clear();","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jorrdansoh":31,"-":72}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jorrdansoh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jorrdansoh":19}},{"path":"src/test/java/duke/DateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"public class DateTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"    public void parse_dateString_success() throws Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"                LocalDate.parse(\"2020-02-19\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDate(\"19-02-2020\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"                LocalDate.parse(\"1970-01-20\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDate(\"20-01-1970\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"                LocalDate.parse(\"2050-12-31\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDate(\"31-12-2050\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    public void displayFormat_date_success() throws Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"                \"19 Feb 2020\",","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDisplayFormat(LocalDate.parse(\"2020-02-19\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"                \"20 May 1970\",","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDisplayFormat(LocalDate.parse(\"1970-05-20\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"                \"31 Dec 2050\",","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"                Date.getDisplayFormat(LocalDate.parse(\"2050-12-31\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    public void storageFormat_date_success() throws Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"                \"19-02-2020\",","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"                Date.getStorageFormat(LocalDate.parse(\"2020-02-19\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"                \"20-05-1970\",","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"                Date.getStorageFormat(LocalDate.parse(\"1970-05-20\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"                \"31-12-2050\",","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"                Date.getStorageFormat(LocalDate.parse(\"2050-12-31\")));","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    public void parse_wrongDateFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"            assertEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"                    \"\",","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"                    Date.getDate(\"21/08/2022\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"            assertEquals(\"Text \u002721/08/2022\u0027 could not be parsed at index 2\", e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":65}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    public void splitArgument_nonEmptyString_success() throws Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"                new String[]{\"assignment 1\", \"19-02-2020\"},","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"                Parser.splitArgument(\"assignment 1 /by 19-02-2020\", \"/by\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"                new String[]{\"exam for CS2103T\", \"20 Nov 2022\"},","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"                Parser.splitArgument(\"exam for CS2103T /at 20 Nov 2022\", \"/at\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"                new String[]{\"Finish iP\", \"2022-02-02\"},","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"                Parser.splitArgument(\"Finish iP /by 2022-02-02\", \"/by\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public void splitArgument_emptyString_exceptionThrown() throws Exception {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"            assertArrayEquals(","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"                    new String[]{\"\", \"\"},","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"                    Parser.splitArgument(\"\", \"/at\"));","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"            assertEquals(\"Oops! /at not found.\", e.getMessage());","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"jorrdansoh":34}}]

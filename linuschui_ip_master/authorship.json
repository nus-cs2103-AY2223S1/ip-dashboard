[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"checkstyle {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linuschui":21,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"T,0,lol","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"T,0,2","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"linuschui":2}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"* Command is an abstract class that serves as a blueprint for all user commands parsed by Parser Class.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"     * The exit boolean decides if the command exits the program.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    private boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    public Command() {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"     * Executes the given command and prints out Duke\u0027s response.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"     * @param tasks the TaskList that encapsulates an ArrayList of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"     * @param ui the user interface that prints out Duke\u0027s response.","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"     * @param storage the storage that saves changes made to the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"     * @throws DukeException if user input is invalid or insufficient.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"    public abstract String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"     * Checks if the command exits the program","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"     * @return true if the command exits the program, false otherwise","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"        return this.isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":41}},{"path":"src/main/java/Command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.Deadline;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"* Command that adds a Deadline to the TaskList when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public DeadlineCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            int initialSize \u003d tasks.getTaskListSize();","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            String[] deadlineString \u003d userAction.split(\"/by \", 2);","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            Task newDeadline \u003d new Deadline(deadlineString[0], deadlineString[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"            assert tasks.getTaskListSize() \u003d\u003d initialSize + 1 : DukeUi.ADD_TASK_ERROR;","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"            return ui.sendMessage(\" Got it. I\u0027ve added this task:\\n\" + \"   \" + newDeadline.toString()","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"                    + \"\\n Now you have \" + tasks.getTaskListSize() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_DATE);","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        } catch (ArrayIndexOutOfBoundsException e2) {","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_DEADLINE);","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        } catch (ClassCastException e3) {","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.CLASS_CAST_ERROR);","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e4) {","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e4.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e5) {","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"            return e5.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"        return \"this is a deadline command : deadline \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":50}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"* Command that deletes a task from the TaskList when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    public DeleteCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"            int index \u003d Integer.parseInt(this.userAction);","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            String deleteTaskMessage \u003d tasks.deleteTask(index);","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            return deleteTaskMessage;","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e1.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"        } catch (NumberFormatException e2) {","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_INDEX);","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        } catch (IndexOutOfBoundsException e3) {","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e4) {","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"            return e4.toString();","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"        return \"this is a delete command : delete \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":43}},{"path":"src/main/java/Command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Event;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"* Command that adds an Event to the TaskList when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public EventCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            int initialSize \u003d tasks.getTaskListSize();","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            String[] eventString \u003d userAction.split(\"/at \");","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            Task newEvent \u003d new Event(eventString[0], eventString[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"            assert tasks.getTaskListSize() \u003d\u003d initialSize + 1 : DukeUi.ADD_TASK_ERROR;","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"            return ui.sendMessage(\" Got it. I\u0027ve added this task:\\n\" + \"   \" + newEvent.toString()","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"                    + \"\\n Now you have \" + tasks.getTaskListSize() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        } catch (ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_EVENT);","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        } catch (ClassCastException e2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.CLASS_CAST_ERROR);","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e3) {","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e3.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e4) {","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"            return e4.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        return \"this is an event command : event \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":48}},{"path":"src/main/java/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"* Command that exits the program when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e1.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e2) {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            return e2.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"        return ui.endMessage();","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        return true;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"        return \"this is an exit command\";","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":40}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"* Command that returns the list of tasks that contains the specified keyword when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    public FindCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        return tasks.find(userAction);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"        return \"this is a find command : find \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":29}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"* Command that prints out the list of user\u0027s tasks when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        return tasks.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        return \"this is a list command\";","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":25}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"* Command that marks a specified task as complete when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public MarkCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            int index \u003d Integer.parseInt(this.userAction);","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            String markTaskAsDoneMessage \u003d tasks.markTaskAsDone(index);","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            return markTaskAsDoneMessage;","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e1.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        } catch (NumberFormatException e2) {","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_INDEX);","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        } catch (IndexOutOfBoundsException e3) {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e4) {","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"            return e4.toString();","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"        return \"this is a mark command : mark \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":45}},{"path":"src/main/java/Command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import Duke.Todo;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"* Command that adds a To-Do to the TaskList when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    public TodoCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"            int initialSize \u003d tasks.getTaskListSize();","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            Task newTodo \u003d new Todo(userAction);","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            tasks.addTask(newTodo);","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            assert tasks.getTaskListSize() \u003d\u003d initialSize + 1 : DukeUi.ADD_TASK_ERROR;","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"            return ui.sendMessage(\" Got it. I\u0027ve added this task:\\n\" + \"   \" + newTodo.toString()","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"                    + \"\\n Now you have \" + tasks.getTaskListSize() + \" tasks in the list.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e1.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        } catch (ClassCastException e2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.CLASS_CAST_ERROR);","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e3) {","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"            return e3.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"        return \"this is a todo command : todo \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":44}},{"path":"src/main/java/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"* Command that marks a specified task as incomplete when executed.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    public UnmarkCommand(String userAction) {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"            int index \u003d Integer.parseInt(this.userAction);","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"            String markTaskAsUndoneMessage \u003d tasks.markTaskAsUndone(index);","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            return markTaskAsUndoneMessage;","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e1.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"        } catch (NumberFormatException e2) {","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_INDEX);","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        } catch (IndexOutOfBoundsException e3) {","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INDEX_OUT_OF_RANGE);","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e4) {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            return e4.toString();","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"        return \"this is an unmark command : unmark \" + userAction;","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":43}},{"path":"src/main/java/Command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"* Command that updates a description of a specified task when executed.","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    boolean isExit;","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    private String userAction;","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    public UpdateCommand(String userAction) {","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"        this.userAction \u003d userAction;","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    public String execute(TaskList tasks, DukeUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            String[] updateString \u003d userAction.split(\" \", 2);","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            int index \u003d Integer.parseInt(updateString[0]);","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            String newDescription \u003d updateString[1];","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"            String updateMessage \u003d tasks.updateTask(index, newDescription);","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"            storage.save();","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"            return updateMessage;","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        } catch (NumberFormatException e1) {","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_INDEX);","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"        } catch (IndexOutOfBoundsException e2) {","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_DESCRIPTION);","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e3) {","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e3.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e4) {","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"            return e4.toString();","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        return \"this is a find command : find \" + userAction;","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"linuschui":47}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    private void flip() {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"        db.flip();","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"        return db;","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"linuschui":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"import Command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Duke.DukeUi;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Duke.Parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Duke.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Duke.Storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    private DukeUi ui;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    private final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    public Duke() {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        ui \u003d new DukeUi();","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"            DukeUi.sendMessage(\"load complete!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            String[] userCommand \u003d ui.readCommand(input);","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"            Command c \u003d Parser.parse(userCommand);","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"            return e.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"linuschui":38,"-":3}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    protected String deadline;","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        this.dateTime \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"        String deadlineToString \u003d this.dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadlineToString + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":22}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"* Class that catches all possible exceptions that occur within Duke and","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"* prints the error occured without terminating the program so the user","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"* will be able to know what caused the error and how to rectify it.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        super(\" OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"linuschui":16}},{"path":"src/main/java/Duke/DukeUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"* DukeUi is the user interface of Duke to return responses according to user inputs","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"public class DukeUi {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    private static final String START_MESSAGE \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    private static final String END_MESSAGE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    static final String INVALID_COMMAND \u003d \" is not a valid command !! \" +","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"            \"valid commands are list, mark (number), unmark (number), todo (task), deadline (task) /by yyyy/mm/dd,\" +","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"            \"event (task) /at (time), delete (number), find (keyword), update (index) (new description)\";","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public static final String INVALID_DESCRIPTION \u003d \"You need to provide a description for the command !\";","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    public static final String INVALID_INDEX \u003d \"The index provided needs to be a number!\";","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    public static final String INDEX_OUT_OF_RANGE \u003d \"I\u0027m sorry, but the index you provided is out of range :-(\";","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    public static final String INVALID_EVENT \u003d \"The description/time of an event cannot be empty!\";","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    public static final String INVALID_DEADLINE \u003d \"The description/time of a deadline cannot be empty!\";","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    public static final String INVALID_DATE \u003d \"Deadline date must be of format yyyy-mm-dd\";","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    public static final String ADD_TASK_ERROR \u003d \"Error adding task, please try again\";","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    public static final String DELETE_TASK_ERROR \u003d \"Error deleting task, please try again\";","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    public static final String CLASS_CAST_ERROR \u003d \"Error occured when adding categorising task, please try again\";","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    public static final String FILE_NOT_FOUND_ERROR \u003d \"Error finding file, the file might have been deleted from your computer.\";","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"     * Splits user input into a String array of length 2.","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"     * @param input the user inpuut.","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"     * @return a String array consisting of the user input of maximum length 2.","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"     * where index 0 is the command and index 1 is the input.","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"    public String[] readCommand(String input) {","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        assert input !\u003d \"\" : \"Please input a command!\";","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        return command;","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"     * Prints a message from Duke.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"     * @param message the message to be printed out.","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"    public static String sendMessage(String message) {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        return message;","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"     * Prints Duke\u0027s welcome message when program starts.","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"        return START_MESSAGE;","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"     * Prints a loading error if Duke is unable to find a .txt file to load","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"     * in the user\u0027s device and informs the user that a new file will be created","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"     * to save the user\u0027s tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"    public String showLoadingError() {","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"        return \"File not found, creating new file in current directory\";","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"     * Prints a line to mark the end of Duke\u0027s response.","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"linuschui"},"content":"    public void showLine() {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"linuschui"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"linuschui"},"content":"     * Prints the error message.","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"linuschui"},"content":"     * @param errorMessage the error message to be printed.","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"linuschui"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"linuschui"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"linuschui"},"content":"     * Prints Duke\u0027s goodbye message before closing program.","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"linuschui"},"content":"    public String endMessage() {","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"linuschui"},"content":"        return END_MESSAGE;","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":86}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"    protected String event;","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    public Event(String description, String event) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.event + \")\";","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":16}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Command.Command;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import Command.DeadlineCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import Command.EventCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import Command.ExitCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import Command.FindCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import Command.ListCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"import Command.MarkCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"import Command.TodoCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"import Command.UnmarkCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"import Command.UpdateCommand;","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"* Parser deals with making sense of the user command by formatting user inputs","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"* such that Duke can handle them through the Command Class and Ui Class","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"public class Parser {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    public static boolean hasDescription(String[] command) {","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        return command[0].equals(\"mark\") || command[0].equals(\"unmark\") ||","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"                command[0].equals(\"todo\") || command[0].equals(\"deadline\") ||","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"                command[0].equals(\"event\") || command[0].equals(\"find\") ||","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"                command[0].equals(\"delete\") || command[0].equals(\"update\");","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"     * Parses the user input and splits the input into a user command and user action","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"     * to be passed into a Command object to execute the respective commands.","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"     * @param command the full user input as a String.","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"     * @return a Command object to execute the user input if it is valid.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"     * @throws DukeException if the user input is invalid or insufficient.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    public static Command parse(String[] command) throws DukeException {","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"        String userAction \u003d \"\";","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"        boolean isDescriptionNeeded \u003d Parser.hasDescription(command);","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"        if (isDescriptionNeeded \u0026\u0026 (command.length \u003d\u003d 1)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.INVALID_DESCRIPTION);","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"        } else if (isDescriptionNeeded) {","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"            userAction \u003d command[1].trim();","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        String userCommand \u003d command[0].trim();","lastModifiedDate":"2022-09-12"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        switch (userCommand) {","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"            case \"list\":","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"                return new ListCommand();","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"                return new MarkCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"                return new UnmarkCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"                return new TodoCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-12"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"                return new DeadlineCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"            case \"event\":","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"                return new EventCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"                return new DeleteCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"            case \"find\":","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"                return new FindCommand(userAction);","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"            case \"update\":","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"                return new UpdateCommand(userAction);","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"            case \"bye\" :","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"linuschui"},"content":"            default:","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(userCommand + DukeUi.INVALID_COMMAND);","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":71}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import java.io.File;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"* Storage deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"public class Storage {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    private final String filePath;","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"     * Loads previously stored tasks from a .txt file when the program starts and formats the","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"     * data to be stored in a TaskList object or creates a new .txt file if the file is not found.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"     * @return an ArrayList of Task objects that has been formatted by Duke after reading the .txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"     * @throws DukeException if the target file cannot be found and creates a new .txt file.","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"     * @throws IOException if error occurs when Duke is reading data from the target file.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"            FileReader fileReader \u003d new FileReader(this.filePath);","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"            BufferedReader br \u003d new BufferedReader(fileReader);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"            String nextLine \u003d br.readLine();","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"                String[] nextTask \u003d nextLine.split(\",\", 4);","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"                this.addTaskFromStorage(nextTask);","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"                nextLine \u003d br.readLine();","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"            br.close();","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"            try {","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"                // Solution below adapted from","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"                // https://stackoverflow.com/questions/9620683/java-fileoutputstream-create-file-if-not-exists","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"                File file \u003d new File(filePath);","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"                file.createNewFile();","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"                System.out.println(\" Duke has encountered an error while loading tasks\" +","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"                        \"\\n Please exit and try again\");","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"                e2.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e3) {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e3.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"        return this.tasks;","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"     * Helper function that helps write tasks from .txt file to TaskList","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"     * @param nextTask a String array containing details of next task to be added.","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"     * @throws DukeException if error occurs while adding task.","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"linuschui"},"content":"    public void addTaskFromStorage(String[] nextTask) throws DukeException {","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"linuschui"},"content":"        switch (nextTask[0]) {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"linuschui"},"content":"            case \"T\":","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"linuschui"},"content":"                Task newTodo \u003d new Todo(nextTask[2]);","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"linuschui"},"content":"                if (nextTask[1].equals(\"1\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"linuschui"},"content":"                    newTodo.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"linuschui"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"linuschui"},"content":"                this.tasks.add(newTodo);","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"linuschui"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"linuschui"},"content":"            case \"E\":","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"linuschui"},"content":"                Task newEvent \u003d new Event(nextTask[2], nextTask[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"linuschui"},"content":"                if (nextTask[1].equals(\"1\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"linuschui"},"content":"                    newEvent.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"linuschui"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"linuschui"},"content":"                this.tasks.add(newEvent);","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"linuschui"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"linuschui"},"content":"            case \"D\":","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"linuschui"},"content":"                Task newDeadline \u003d new Deadline(nextTask[2], nextTask[3]);","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"linuschui"},"content":"                if (nextTask[1].equals(\"1\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"linuschui"},"content":"                    newDeadline.markAsDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"linuschui"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"linuschui"},"content":"                this.tasks.add(newDeadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"linuschui"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"linuschui"},"content":"     * Saves the tasks to a .txt file when changes are made to the TaskList object.","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"linuschui"},"content":"     * @throws DukeException if Duke is unable to find the target file to write data to.","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"linuschui"},"content":"     * @throws IOException if error occurs when Duke is writing data to the target file.","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"linuschui"},"content":"    public void save() throws DukeException, IOException {","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"linuschui"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/tasks.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"linuschui"},"content":"            // loop through ArrayList\u003cTask\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"linuschui"},"content":"            for (Task task : this.tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"linuschui"},"content":"                this.saveTaskToStorage(task, fw);","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"linuschui"},"content":"            fw.close();","lastModifiedDate":"2022-09-14"},{"lineNumber":107,"author":{"gitId":"linuschui"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2022-09-14"},{"lineNumber":108,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(DukeUi.FILE_NOT_FOUND_ERROR);","lastModifiedDate":"2022-09-14"},{"lineNumber":109,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e2) {","lastModifiedDate":"2022-09-14"},{"lineNumber":110,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(e2.getMessage());","lastModifiedDate":"2022-09-14"},{"lineNumber":111,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":113,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"linuschui"},"content":"    public void saveTaskToStorage(Task task, FileWriter fw) throws IOException {","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"linuschui"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"linuschui"},"content":"            Todo todo \u003d (Todo) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"linuschui"},"content":"            if (todo.isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"linuschui"},"content":"                fw.write(\"T,1,\" + todo.description + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"linuschui"},"content":"                fw.write(\"T,0,\" + todo.description + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"linuschui"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"linuschui"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"linuschui"},"content":"            if (event.isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"linuschui"},"content":"                fw.write(\"E,1,\" + event.description + \",\" + event.event + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"linuschui"},"content":"                fw.write(\"E,0,\" + event.description + \",\" + event.event + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"linuschui"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"linuschui"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"linuschui"},"content":"            if (deadline.isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"linuschui"},"content":"                fw.write(\"D,1,\" + deadline.description + \",\" + deadline.deadline + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"linuschui"},"content":"                fw.write(\"D,0,\" + deadline.description + \",\" + deadline.deadline + \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":138}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"* Task is a parent class that serves as a blueprint for all tasks a user can add to the to-do list.","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"     * The description of the task.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"     * The done boolean decides if a task has been completed.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"     * A getter method that checks if a task has been completed.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"     * @return \"X\" if task has been completed, \" \" otherwise","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"         return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"     * A setter method that marks an uncompleted task as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"     * A setter method that marks a completed task as undone.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"     * A setter method to update the description of a task.","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"    public void updateDescription(String newDescription) {","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"     * Builds the template of displaying the list of tasks to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"     * based on the task\u0027s completion status and task description.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"     * @return the formatted template of displaying the list of tasks to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"     * based on the task\u0027s completion status and task description","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":66}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"* TaskList contains the task list e.g., it has operations to add/delete tasks in the list","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"*","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"* @author Linus Chui","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"*/","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"     * The ArrayList of Task objects stored in the TaskList instance.","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"     * Getter method that returns the ArrayList of Task objects currently stored.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"     * @return an ArrayList of Task objects that are currently stored in this instance of TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"     * Getter method that returns the number of Task objects stored.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"     * @return the number of Task objects stored in this instance of TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"     * Adds a task to the ArrayList of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"     * @param task the task to be added into the ArrayList of Task objects.","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"     * @throws DukeException if the task is not an instance of a To-do, Deadline or Event object.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        int initialSize \u003d this.tasks.size();","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"            Todo todo \u003d (Todo) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"            this.tasks.add(todo);","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"            this.tasks.add(deadline);","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"            this.tasks.add(event);","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"            throw new DukeException(\"Invalid task encountered !!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"        assert this.tasks.size() \u003e initialSize : \"Error adding todo / event / deadline\";","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"     * Updates a task to the ArrayList of Task objects using the index.","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"     * @param index the index of the task in TaskList to update its description.","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"     * @param newDescription the new description of the task to be updated.","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":67,"author":{"gitId":"linuschui"},"content":"    public String updateTask(int index, String newDescription) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":68,"author":{"gitId":"linuschui"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"linuschui"},"content":"        String initialDescription \u003d task.description;","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"linuschui"},"content":"        task.updateDescription(newDescription);","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"linuschui"},"content":"        assert task.description !\u003d initialDescription : \"Error updating description, please try again!\";","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"linuschui"},"content":"        return \"OK !! I have updated task \" + index + \" with the new description : \" + newDescription;","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"linuschui"},"content":"     * Builds a string based on the list of tasks contained in the ArrayList of Task objects","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"linuschui"},"content":"     * Deletes the task in the specified index from TaskList.","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"linuschui"},"content":"     * @param index the index of the task in TaskList to be deleted.","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"linuschui"},"content":"     * @return a message to tell the user that the task has been deleted and how many tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"linuschui"},"content":"     * are left in the list.","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"linuschui"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"linuschui"},"content":"        int initialSize \u003d this.tasks.size();","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"linuschui"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"linuschui"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"linuschui"},"content":"        assert tasks.size() \u003d\u003d initialSize - 1 : DukeUi.DELETE_TASK_ERROR;","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"linuschui"},"content":"        return DukeUi.sendMessage(\" Noted. I\u0027ve removed this task:\\n\" + \"   \" + task.toString()","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"linuschui"},"content":"                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"linuschui"},"content":"     * Marks the task in the specified index from TaskList as done.","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"linuschui"},"content":"     * @param index the index of the task in TaskList to be marked as done.","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"linuschui"},"content":"     * @return a message to tell the user that the task has been marked as done.","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"linuschui"},"content":"    public String markTaskAsDone(int index) {","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"linuschui"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"linuschui"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"linuschui"},"content":"        return DukeUi.sendMessage(\" Nice! I\u0027ve marked this task as done:\\n\" + \"   \" + task.toString());","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"linuschui"},"content":"     * Marks the task in the specified index from TaskList as undone.","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"linuschui"},"content":"     * @param index the index of the task in TaskList to be marked as undone.","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"linuschui"},"content":"     * @return a message to tell the user that the task has been marked as undone.","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"linuschui"},"content":"    public String markTaskAsUndone(int index) {","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"linuschui"},"content":"        Task task \u003d this.tasks.get(index - 1);","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"linuschui"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"linuschui"},"content":"        return DukeUi.sendMessage(\" Nice! I\u0027ve marked this task as done:\\n\" + \"   \" + task.toString());","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"linuschui"},"content":"     * Builds a string based on the list of tasks contained in the ArrayList of Task objects","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"linuschui"},"content":"     * to be displayed to the user filtered using the specified keyword by using command \"find\"","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"linuschui"},"content":"     * @param keyword the keyword to search for tasks containing the keyword.","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"linuschui"},"content":"     * @return the details of all tasks that matches the specified keyword in","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"linuschui"},"content":"     * chronological order of which the user added to the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"linuschui"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"linuschui"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"linuschui"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"linuschui"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"linuschui"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"linuschui"},"content":"                list \u003d list + \" \" + counter + \": \" + task.toString() + \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"linuschui"},"content":"                counter +\u003d 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"linuschui"},"content":"        String findMessage \u003d \"Here are the matching tasks in your list:\\n\" + list;","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"linuschui"},"content":"        return \" \" + findMessage.trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"linuschui"},"content":"     * Builds a string based on the list of tasks contained in the ArrayList","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"linuschui"},"content":"     * of Task objects to be displayed to the user using command \"list\".","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"linuschui"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"linuschui"},"content":"     * @return the details of all tasks previously added by the user which are indexed","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"linuschui"},"content":"     * in chronological order of which the user added to the TaskList.","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"linuschui"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"linuschui"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"linuschui"},"content":"            list \u003d list + \" \" + (i + 1) + \": \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"linuschui"},"content":"        String listMessage \u003d \"Here are the tasks in your list:\\n\" + list;","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"linuschui"},"content":"        return \" \" + listMessage.trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":154}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":12}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"public class Launcher {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"linuschui":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"            stage.show();","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"linuschui":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"import Duke.DukeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    @FXML","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"        );","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"linuschui":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"linuschui":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"linuschui":19}},{"path":"src/test/java/Duke/FindTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"public class FindTest {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    public void findTest1 () throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"        Storage storage1 \u003d new Storage(\"taskTest4.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"        TaskList tasks1 \u003d new TaskList(storage1.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][ ] return book\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"                \" 2: [D][ ] read book (by: 08/08/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"                \" 3: [E][ ] read book (at: 2022-10-10)\";","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks1.find(\"book\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    public void findTest2 () throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"        Storage storage2 \u003d new Storage(\"taskTest4.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        TaskList tasks2 \u003d new TaskList(storage2.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][X] buy bread\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"                \" 2: [E][X] bread (at: 2022-11-11)\";","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks2.find(\"bread\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    public void findTest3 () throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"        Storage storage3 \u003d new Storage(\"taskTest4.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        TaskList tasks3 \u003d new TaskList(storage3.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][ ] return book\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"                \" 2: [T][X] buy bread\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"                \" 3: [D][ ] read book (by: 08/08/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"                \" 4: [D][X] test (by: 09/09/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"                \" 5: [E][ ] read book (at: 2022-10-10)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"                \" 6: [E][X] bread (at: 2022-11-11)\";","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks3.find(\"e\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    public void findTest4 () throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"        Storage storage4 \u003d new Storage(\"taskTest4.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        TaskList tasks4 \u003d new TaskList(storage4.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][X] buy bread\";","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks4.find(\"buy\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":50}},{"path":"src/test/java/Duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import Command.*;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    private boolean True;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    // test 1 : ListCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    public void parserTest1() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        Parser parser1 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"list\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"        Command expected1 \u003d parser1.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected1.toString(), \"this is a list command\");","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    // test 2 : MarkCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    public void parserTest2() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        Parser parser2 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"mark\", \"1\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"        Command expected2 \u003d parser2.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected2.toString(), \"this is a mark command : mark 1\");","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    // test 3 : UnmarkCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    public void parserTest3() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        Parser parser3 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"unmark\", \"5\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        Command expected3 \u003d parser3.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected3.toString(), \"this is an unmark command : unmark 5\");","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    // test 4 : ExitCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"    public void parserTest4() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"        Parser parser4 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"bye\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"        Command expected4 \u003d parser4.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected4.toString(), \"this is an exit command\");","lastModifiedDate":"2022-09-12"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"    // test 5 : DeleteCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"    public void parserTest5() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"        Parser parser5 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"delete\", \"999\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"        Command expected5 \u003d parser5.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected5.toString(), \"this is a delete command : delete 999\");","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"    // test 6 : TodoCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"    public void parserTest6() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"        Parser parser6 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"todo\", \"return book\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"        Command expected6 \u003d parser6.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected6.toString(), \"this is a todo command : todo return book\");","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"    // test 7 : EventCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"    public void parserTest7() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"linuschui"},"content":"        Parser parser7 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"event\", \"return book /at 2022-08-08\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"linuschui"},"content":"        Command expected7 \u003d parser7.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected7.toString(), \"this is an event command : event return book /at 2022-08-08\");","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"linuschui"},"content":"    // test 8 : DeadlineCommand","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"linuschui"},"content":"    public void parserTest8() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"linuschui"},"content":"        Parser parser8 \u003d new Parser();","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"linuschui"},"content":"        String[] command \u003d new String[]{\"deadline\", \"return book /by 2022-08-08\"};","lastModifiedDate":"2022-09-12"},{"lineNumber":78,"author":{"gitId":"linuschui"},"content":"        Command expected8 \u003d parser8.parse(command);","lastModifiedDate":"2022-09-12"},{"lineNumber":79,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected8.toString(), \"this is a deadline command : deadline return book /by 2022-08-08\");","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":81}},{"path":"src/test/java/Duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"public class StorageTest {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    public void storageTest1() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"        Storage storage1 \u003d new Storage(\"taskTest1.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"        TaskList tasks1 \u003d new TaskList(storage1.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][ ] sampletodo1\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"                \" 2: [T][X] sampletodo2\";","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks1.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    public void storageTest2() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"        Storage storage2 \u003d new Storage(\"taskTest2.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"        TaskList tasks2 \u003d new TaskList(storage2.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"                \" 1: [D][ ] sampledeadline1 (by: 08/08/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"                \" 2: [D][X] sampledeadline2 (by: 09/09/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"                \" 3: [E][ ] sampleevent1 (at: 2022-10-10)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"                \" 4: [E][X] sampleevent2 (at: 2022-11-11)\";","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks2.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    public void storageTest3() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        Storage storage3 \u003d new Storage(\"taskTest3.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        TaskList tasks3 \u003d new TaskList(storage3.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][ ] sampletodo1\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"                \" 2: [T][X] sampletodo2\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"                \" 3: [D][ ] sampledeadline1 (by: 08/08/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"                \" 4: [D][X] sampledeadline2 (by: 09/09/2022)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"                \" 5: [E][ ] sampleevent1 (at: 2022-10-10)\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"                \" 6: [E][X] sampleevent2 (at: 2022-11-11)\";","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks3.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":42}},{"path":"src/test/java/Duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"package Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"public class TaskTest {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    // test 1 : Task.getStatusIcon (!isDone)","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    public void taskTest1() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"        Storage storage1 \u003d new Storage(\"taskTest1.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        TaskList tasks1 \u003d new TaskList(storage1.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" \";","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks1.getTasks().get(0).getStatusIcon());","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    // test 2 : Task.getStatusIcon (isDone)","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    public void taskTest2() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        Storage storage2 \u003d new Storage(\"taskTest1.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        TaskList tasks2 \u003d new TaskList(storage2.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"        tasks2.getTasks().get(0).markAsDone();","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \"X\";","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks2.getTasks().get(1).getStatusIcon());","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"    // test 3 : Task.markAsDone","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    public void taskTest3() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        Storage storage3 \u003d new Storage(\"taskTest1.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"        TaskList tasks3 \u003d new TaskList(storage3.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"        tasks3.getTasks().get(0).markAsDone();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][X] sampletodo1\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"                \" 2: [T][X] sampletodo2\";","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks3.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    // test 3 : Task.markAsUndone","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"    public void taskTest4() throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"        Storage storage4 \u003d new Storage(\"taskTest1.txt\");","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"        TaskList tasks4 \u003d new TaskList(storage4.load());","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"        tasks4.getTasks().get(1).markAsUndone();","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"        String expected \u003d \" Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"                \" 1: [T][ ] sampletodo1\\n\" +","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"                \" 2: [T][ ] sampletodo2\";","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"        assertEquals(expected, tasks4.toString());","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":51}},{"path":"src/test/taskTest1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"T,0,sampletodo1","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"T,1,sampletodo2","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":2}},{"path":"src/test/taskTest2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"D,0,sampledeadline1 ,2022-08-08","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"D,1,sampledeadline2 ,2022-09-09","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"E,0,sampleevent1 ,2022-10-10","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"E,1,sampleevent2 ,2022-11-11","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"linuschui":4}},{"path":"src/test/taskTest3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"T,0,sampletodo1","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"T,1,sampletodo2","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"D,0,sampledeadline1 ,2022-08-08","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"D,1,sampledeadline2 ,2022-09-09","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"E,0,sampleevent1 ,2022-10-10","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"E,1,sampleevent2 ,2022-11-11","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"linuschui":6}},{"path":"src/test/taskTest4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"T,0,return book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"T,1,buy bread","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"D,0,read book ,2022-08-08","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"D,1,test ,2022-09-09","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"E,0,read book ,2022-10-10","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"E,1,bread ,2022-11-11","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"linuschui":6}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"T,1,1","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"T,1,2","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"T,1,3","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"T,1,4","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"T,1,5","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"T,0,1","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"linuschui":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"todo read book","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"todo join sports club","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"todo borrow book","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"mark 4","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linuschui":1,"-":33}}]

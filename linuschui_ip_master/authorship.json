[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"    // class variables","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"    protected String deadline;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"    // constructor","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline + \")\";","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"    private static final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"    private static final String startMessage \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    private static final String endMessage \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    public static void sendMessage(String message) {","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        System.out.println(line);","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    public static void startMessage() {","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"        sendMessage(startMessage);","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"    public static void listMessage() {","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"        sendMessage(getList(tasks));","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"    public static void markMessage(String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"            if (!isNumeric(userAction)) {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"I\u0027m sorry, the input you provided is not a number!\");","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"                int index \u003d Integer.parseInt(userAction) - 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"                if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"                    throw new DukeException(\"I\u0027m sorry, but the index you provided is out of range :-(\");","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"                } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"                    sendMessage(\" Nice! I\u0027ve marked this task as done:\\n\" + \"   \" + task.toString());","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"                }","lastModifiedDate":"2022-08-13"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"    public static void unmarkMessage(String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":44,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"linuschui"},"content":"            if (!isNumeric(userAction)) {","lastModifiedDate":"2022-08-14"},{"lineNumber":46,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"I\u0027m sorry, the input you provided is not a number!\");","lastModifiedDate":"2022-08-14"},{"lineNumber":47,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":48,"author":{"gitId":"linuschui"},"content":"                int index \u003d Integer.parseInt(userAction) - 1;","lastModifiedDate":"2022-08-13"},{"lineNumber":49,"author":{"gitId":"linuschui"},"content":"                if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"linuschui"},"content":"                    throw new DukeException(\"I\u0027m sorry, but the index you provided is out of range :-(\");","lastModifiedDate":"2022-08-14"},{"lineNumber":51,"author":{"gitId":"linuschui"},"content":"                } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"linuschui"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-13"},{"lineNumber":53,"author":{"gitId":"linuschui"},"content":"                    task.markAsUndone();","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"linuschui"},"content":"                    sendMessage(\" Nice! I\u0027ve marked this task as undone:\\n\" + \"   \" + task.toString());","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"linuschui"},"content":"                }","lastModifiedDate":"2022-08-13"},{"lineNumber":56,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":57,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":58,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":59,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":60,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":61,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"linuschui"},"content":"    public static void todoMessage(String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":63,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":64,"author":{"gitId":"linuschui"},"content":"            Task newTodo \u003d new Todo(userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"linuschui"},"content":"            if (newTodo.description.equals(\"\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":66,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":67,"author":{"gitId":"linuschui"},"content":"            } else{","lastModifiedDate":"2022-08-14"},{"lineNumber":68,"author":{"gitId":"linuschui"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"linuschui"},"content":"                sendMessage(\" Got it. I\u0027ve added this task:\\n\" + \"   \" + newTodo.toString()","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"linuschui"},"content":"                        + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-13"},{"lineNumber":71,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":72,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":73,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":74,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":75,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":76,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":77,"author":{"gitId":"linuschui"},"content":"    public static void eventMessage(String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":78,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":79,"author":{"gitId":"linuschui"},"content":"            String[] eventString \u003d userAction.split(\"/at \");","lastModifiedDate":"2022-08-13"},{"lineNumber":80,"author":{"gitId":"linuschui"},"content":"            if (eventString[0].equals(\"\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":81,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":82,"author":{"gitId":"linuschui"},"content":"            } else if (eventString.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-14"},{"lineNumber":83,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"The description or date/time of an event cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":84,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":85,"author":{"gitId":"linuschui"},"content":"                Task newEvent \u003d new Event(eventString[0], eventString[1]);","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"linuschui"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2022-08-13"},{"lineNumber":87,"author":{"gitId":"linuschui"},"content":"                sendMessage(\" Got it. I\u0027ve added this task:\\n\" + \"   \" + newEvent.toString()","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"linuschui"},"content":"                        + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-13"},{"lineNumber":89,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":90,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":91,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":92,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":93,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":94,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":95,"author":{"gitId":"linuschui"},"content":"    public static void deadlineMessage(String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":96,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":97,"author":{"gitId":"linuschui"},"content":"            String[] deadlineString \u003d userAction.split(\"/by \");","lastModifiedDate":"2022-08-13"},{"lineNumber":98,"author":{"gitId":"linuschui"},"content":"            if (deadlineString[0].equals(\"\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":99,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"The description and date/time of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":100,"author":{"gitId":"linuschui"},"content":"            } else if (deadlineString.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-14"},{"lineNumber":101,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"The description or date/time of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":102,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":103,"author":{"gitId":"linuschui"},"content":"                Task newDeadline \u003d new Deadline(deadlineString[0], deadlineString[1]);","lastModifiedDate":"2022-08-13"},{"lineNumber":104,"author":{"gitId":"linuschui"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2022-08-13"},{"lineNumber":105,"author":{"gitId":"linuschui"},"content":"                sendMessage(\" Got it. I\u0027ve added this task:\\n\" + \"   \" + newDeadline.toString()","lastModifiedDate":"2022-08-13"},{"lineNumber":106,"author":{"gitId":"linuschui"},"content":"                        + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-13"},{"lineNumber":107,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":108,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":109,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":110,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":111,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":112,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":113,"author":{"gitId":"linuschui"},"content":"    public static void deleteMessage(String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":114,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":115,"author":{"gitId":"linuschui"},"content":"            if (!isNumeric(userAction)) {","lastModifiedDate":"2022-08-14"},{"lineNumber":116,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"I\u0027m sorry, the input you provided is not a number!\");","lastModifiedDate":"2022-08-14"},{"lineNumber":117,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":118,"author":{"gitId":"linuschui"},"content":"                int index \u003d Integer.parseInt(userAction) - 1;","lastModifiedDate":"2022-08-14"},{"lineNumber":119,"author":{"gitId":"linuschui"},"content":"                if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2022-08-14"},{"lineNumber":120,"author":{"gitId":"linuschui"},"content":"                    throw new DukeException(\"I\u0027m sorry, but the index you provided is out of range :-(\");","lastModifiedDate":"2022-08-14"},{"lineNumber":121,"author":{"gitId":"linuschui"},"content":"                } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":122,"author":{"gitId":"linuschui"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-14"},{"lineNumber":123,"author":{"gitId":"linuschui"},"content":"                    tasks.remove(index);","lastModifiedDate":"2022-08-14"},{"lineNumber":124,"author":{"gitId":"linuschui"},"content":"                    sendMessage(\" Noted. I\u0027ve removed this task:\\n\" + \"   \" + task.toString()","lastModifiedDate":"2022-08-14"},{"lineNumber":125,"author":{"gitId":"linuschui"},"content":"                            + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-14"},{"lineNumber":126,"author":{"gitId":"linuschui"},"content":"                }","lastModifiedDate":"2022-08-14"},{"lineNumber":127,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":128,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":129,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":130,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":131,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":132,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":133,"author":{"gitId":"linuschui"},"content":"    public static void endMessage() {","lastModifiedDate":"2022-08-13"},{"lineNumber":134,"author":{"gitId":"linuschui"},"content":"        sendMessage(endMessage);","lastModifiedDate":"2022-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":137,"author":{"gitId":"linuschui"},"content":"    public static String getList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-13"},{"lineNumber":138,"author":{"gitId":"linuschui"},"content":"        String list \u003d \"\";","lastModifiedDate":"2022-08-13"},{"lineNumber":139,"author":{"gitId":"linuschui"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-13"},{"lineNumber":140,"author":{"gitId":"linuschui"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2022-08-13"},{"lineNumber":141,"author":{"gitId":"linuschui"},"content":"                list \u003d list + \" \" + String.valueOf(i + 1) + \": \" + tasks.get(i).toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":142,"author":{"gitId":"linuschui"},"content":"                break;","lastModifiedDate":"2022-08-13"},{"lineNumber":143,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-13"},{"lineNumber":144,"author":{"gitId":"linuschui"},"content":"            list \u003d list + \" \" + String.valueOf(i + 1) + \": \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-13"},{"lineNumber":145,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":146,"author":{"gitId":"linuschui"},"content":"        return \" Here are the tasks in your list:\\n\" + list;","lastModifiedDate":"2022-08-13"},{"lineNumber":147,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":148,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":149,"author":{"gitId":"linuschui"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2022-08-14"},{"lineNumber":150,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-13"},{"lineNumber":151,"author":{"gitId":"linuschui"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2022-08-13"},{"lineNumber":152,"author":{"gitId":"linuschui"},"content":"            return true;","lastModifiedDate":"2022-08-13"},{"lineNumber":153,"author":{"gitId":"linuschui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-13"},{"lineNumber":154,"author":{"gitId":"linuschui"},"content":"            return false;","lastModifiedDate":"2022-08-13"},{"lineNumber":155,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":156,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":157,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":158,"author":{"gitId":"linuschui"},"content":"    public static void handleInput(String userCommand, String userAction) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":159,"author":{"gitId":"linuschui"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":160,"author":{"gitId":"linuschui"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":161,"author":{"gitId":"linuschui"},"content":"                return;","lastModifiedDate":"2022-08-13"},{"lineNumber":162,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":163,"author":{"gitId":"linuschui"},"content":"                listMessage();","lastModifiedDate":"2022-08-13"},{"lineNumber":164,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"mark\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":165,"author":{"gitId":"linuschui"},"content":"                markMessage(userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":166,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"unmark\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":167,"author":{"gitId":"linuschui"},"content":"                unmarkMessage(userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":168,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"todo\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":169,"author":{"gitId":"linuschui"},"content":"                todoMessage(userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":170,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"event\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":171,"author":{"gitId":"linuschui"},"content":"                eventMessage(userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":172,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"deadline\")) {","lastModifiedDate":"2022-08-13"},{"lineNumber":173,"author":{"gitId":"linuschui"},"content":"                deadlineMessage(userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":174,"author":{"gitId":"linuschui"},"content":"            } else if (userCommand.equals(\"delete\")) {","lastModifiedDate":"2022-08-14"},{"lineNumber":175,"author":{"gitId":"linuschui"},"content":"                deleteMessage(userAction);","lastModifiedDate":"2022-08-14"},{"lineNumber":176,"author":{"gitId":"linuschui"},"content":"            } else {","lastModifiedDate":"2022-08-14"},{"lineNumber":177,"author":{"gitId":"linuschui"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-14"},{"lineNumber":178,"author":{"gitId":"linuschui"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":179,"author":{"gitId":"linuschui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":180,"author":{"gitId":"linuschui"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2022-08-14"},{"lineNumber":181,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":182,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":183,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":184,"author":{"gitId":"linuschui"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-08-14"},{"lineNumber":185,"author":{"gitId":"linuschui"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-13"},{"lineNumber":186,"author":{"gitId":"linuschui"},"content":"        startMessage();","lastModifiedDate":"2022-08-13"},{"lineNumber":187,"author":{"gitId":"linuschui"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-13"},{"lineNumber":188,"author":{"gitId":"linuschui"},"content":"            String userCommand \u003d scanner.next();","lastModifiedDate":"2022-08-13"},{"lineNumber":189,"author":{"gitId":"linuschui"},"content":"            String userAction \u003d scanner.nextLine().stripLeading();","lastModifiedDate":"2022-08-13"},{"lineNumber":190,"author":{"gitId":"linuschui"},"content":"            handleInput(userCommand, userAction);","lastModifiedDate":"2022-08-13"},{"lineNumber":191,"author":{"gitId":"linuschui"},"content":"        }","lastModifiedDate":"2022-08-13"},{"lineNumber":192,"author":{"gitId":"linuschui"},"content":"        scanner.close();","lastModifiedDate":"2022-08-13"},{"lineNumber":193,"author":{"gitId":"linuschui"},"content":"        endMessage();","lastModifiedDate":"2022-08-13"},{"lineNumber":194,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":195,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"linuschui":192,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"        super(\" ☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"linuschui":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"    // class variables","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"    protected String event;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"    // constructor","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    public Event(String description, String event) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.event + \")\";","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"public class Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"    // class variables","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"    protected String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    // constructor","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"        return this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":33}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"    // class variables","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"    protected String by;","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"    // constructor","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"        super(description);","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"todo read book","lastModifiedDate":"2022-08-13"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-13"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-13"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"todo join sports club","lastModifiedDate":"2022-08-13"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"todo borrow book","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"mark 1","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"mark 4","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"list","lastModifiedDate":"2022-08-13"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-13"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"linuschui":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linuschui":1,"-":33}}]

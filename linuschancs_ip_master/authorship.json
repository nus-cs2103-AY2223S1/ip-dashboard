[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"checkstyle {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"linuschancs":21}},{"path":"data/newdata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"D , 1 , I need to do this , Jun 9 2023","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"E , 0 , I need to do this , Jun 11 2023","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"T , 0 , do this","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"T , 1 , i have added this new task","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"linuschancs":4}},{"path":"src/main/java/betago/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.commands.Command;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":" * Duke class that contains the main program and initialises the various objects used such as","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":" * TaskList, Parser and Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"public class Duke {","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    /** Storage variable to load and save tasks from data file */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"    /** TaskList variable to store tasks */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    /** Parser variable to read commands from the user */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    private final Parser commander;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     * Initialises Storage, TaskList and Parser variable.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     * Prints greeting statement and loads the data file.","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public Duke() {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        this.storage \u003d new Storage(this.tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        this.commander \u003d new Parser(this.tasks, this.storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        Ui.greet();","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        this.storage.loadDefaultFile();","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"     * Returns a response to the user\u0027s input by calling the appropriate command","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"     * and calling execute on the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"     * @param input Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"     * @return Response to the user\u0027s input","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"        Command command \u003d this.commander.readCommands(input);","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        return command.execute(this.tasks, this.storage, input);","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"linuschancs":42}},{"path":"src/main/java/betago/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":" * DukeException that is thrown when Duke experiences an error.","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"        super(message);","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":10}},{"path":"src/main/java/betago/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"public class Launcher {","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"linuschancs":12}},{"path":"src/main/java/betago/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import betago.controller.MainWindow;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"            stage.show();","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":34}},{"path":"src/main/java/betago/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.commands.AddDeadlineCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.commands.AddEventCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.commands.AddTodoCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import betago.commands.ByeCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import betago.commands.Command;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"import betago.commands.DeleteCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import betago.commands.FindCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"import betago.commands.InvalidCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"import betago.commands.ListCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"import betago.commands.LoadCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"import betago.commands.MarkUnmarkCommand;","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":" * Parser class that reads respective input from user.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Parser.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"     * Initialises TaskList variable.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"     * Reads input from the user and returns the respective command.","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"     * @param input Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"     * @return Respective command based on user input.","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"    public Command readCommands(String input) {","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"mark\") || inputs[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"            return new MarkUnmarkCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"            return new AddTodoCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"            return new AddDeadlineCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"            return new AddEventCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"            return new DeleteCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"            return new FindCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[0].equalsIgnoreCase(\"load\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"            return new LoadCommand();","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        } else if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"            return new InvalidCommand(\"Apologies Human. I do not understand that command.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"linuschancs":62}},{"path":"src/main/java/betago/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import betago.tasks.Task;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":" * Storage class that loads and saves data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    private String fileName;","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"     * Initialises TaskList variable.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    public Storage(TaskList tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"     * Checks if data/duke.txt file exists.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"     * If it exists, calls the convertFile method accordingly to read file.","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"     * Else, create an empty duke.txt file.","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"     * Errors in creating the file or invalid text in the data file will print errors accordingly.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    public void loadDefaultFile() {","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"            File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"            this.fileName \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"                dir.mkdir();","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"                f.createNewFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"            } else if (!f.exists()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"                f.createNewFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"            } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"                convertFile(f);","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"            Ui.printFileNotFoundError();","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"            Ui.printInputOutputError();","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"            Ui.printLoadFileError();","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"     * Reads the data file and converts the entries into their respective tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"     * @param f The file to be read from.","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If there is an invalid data entry in the data file.","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"     * @throws FileNotFoundException If the file f does not exist.","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"    public void convertFile(File f) throws DukeException, FileNotFoundException {","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"        Scanner sc1 \u003d new Scanner(f);","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"        while (sc1.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"            String str \u003d sc1.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"            if (str.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"                this.tasks.loadTodo(str);","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"            } else if (str.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"                this.tasks.loadDeadline(str);","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"            } else if (str.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"                this.tasks.loadEvent(str);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"The data in the file is invalid and cannot be read.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        sc1.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"     * Checks if specific file exists.","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"     * If it exists, calls the convertFile method accordingly to read file.","lastModifiedDate":"2022-09-10"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user containing load command and filename.","lastModifiedDate":"2022-09-10"},{"lineNumber":81,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If file does not exist, is not a .txt file or contains invalid entries.","lastModifiedDate":"2022-09-10"},{"lineNumber":82,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"    public String loadNewFile(String str) throws DukeException {","lastModifiedDate":"2022-09-10"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-09-10"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-09-10"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please enter the file that you want to load in the format: \u0027load (filename)\u0027\");","lastModifiedDate":"2022-09-10"},{"lineNumber":87,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":88,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":89,"author":{"gitId":"linuschancs"},"content":"            String pathName \u003d \"data/\" + inputs[1];","lastModifiedDate":"2022-09-10"},{"lineNumber":90,"author":{"gitId":"linuschancs"},"content":"            File f \u003d new File(pathName);","lastModifiedDate":"2022-09-10"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"            if (!f.exists()) {","lastModifiedDate":"2022-09-10"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"Apologies Human. The specific file does not exist!\\n\"","lastModifiedDate":"2022-09-10"},{"lineNumber":93,"author":{"gitId":"linuschancs"},"content":"                        + \"Do ensure the specific file is stored in the data folder.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"            } else if (!pathName.toLowerCase().endsWith(\".txt\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":95,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"Please ensure the data file to be loaded is a .txt file!\");","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":97,"author":{"gitId":"linuschancs"},"content":"            this.tasks.refreshList(); // Current implementation clears list even if there are invalid entries!","lastModifiedDate":"2022-09-10"},{"lineNumber":98,"author":{"gitId":"linuschancs"},"content":"            convertFile(f);","lastModifiedDate":"2022-09-10"},{"lineNumber":99,"author":{"gitId":"linuschancs"},"content":"            this.fileName \u003d pathName;","lastModifiedDate":"2022-09-10"},{"lineNumber":100,"author":{"gitId":"linuschancs"},"content":"            return \"The data in \" + pathName + \" has been successfully loaded!\";","lastModifiedDate":"2022-09-10"},{"lineNumber":101,"author":{"gitId":"linuschancs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Error in finding specific file.\");","lastModifiedDate":"2022-09-10"},{"lineNumber":103,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":104,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":105,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"linuschancs"},"content":"     * Saves tasks in TaskList into data/duke.txt file.","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"linuschancs"},"content":"    public void saveItems() {","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"            FileWriter fw \u003d new FileWriter(this.fileName, false);","lastModifiedDate":"2022-09-10"},{"lineNumber":111,"author":{"gitId":"linuschancs"},"content":"            for (int i \u003d 0; i \u003c this.tasks.getSize(); i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"linuschancs"},"content":"                Task temp \u003d this.tasks.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"linuschancs"},"content":"                fw.write(temp.saveTask());","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"linuschancs"},"content":"            fw.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"linuschancs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"linuschancs"},"content":"            Ui.printSaveError();","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"linuschancs":121}},{"path":"src/main/java/betago/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"import betago.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import betago.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"import betago.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"import betago.tasks.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":" * TaskList class that stores Tasks in an ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"public class TaskList {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     * Initialises ArrayList variable.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"     * Gets the task in the specific index of the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"     * @return Task in the index of the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"        return this.list.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"     * Returns the number of items in the current list.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"     * @return Number of items in the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        return this.list.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"     * Clears the current list.","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"    public void refreshList() {","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        this.list.clear();","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"     * Returns the list of Tasks in the current TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"     * @return String representation of the items in the list.","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"    public String listItems() {","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"            return \"Your list is currently empty.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"            output \u003d output + (i + 1) + \". \" + this.list.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"        return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"     * Marks or unmarks the Task in the specific index of the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"     * @param str Mark or Unmark command that the user provided.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If user inputs an empty or invalid task number.","lastModifiedDate":"2022-09-06"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"    public String markUnmarkItems(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate the task number that you want to mark/unmark.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"            String output;","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"            int marker \u003d Integer.valueOf(inputs[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"linuschancs"},"content":"            if (marker \u003c 1 || marker \u003e this.list.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"Please indicate a valid task number that you want to mark/unmark.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"            } else if (inputs[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"                this.list.get(marker - 1).markAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"                output \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"                        + this.list.get(marker - 1).toString() + \"\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":87,"author":{"gitId":"linuschancs"},"content":"                return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":88,"author":{"gitId":"linuschancs"},"content":"            } else if (inputs[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"linuschancs"},"content":"                this.list.get(marker - 1).markAsNotDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"linuschancs"},"content":"                output \u003d \"Nice! I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"                        + this.list.get(marker - 1).toString() + \"\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"                return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":93,"author":{"gitId":"linuschancs"},"content":"            } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"Command read is not a mark or unmark command.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"linuschancs"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a valid task number.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":98,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"     * Adds a Todo Task in the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"linuschancs"},"content":"     * @param str Add todo command that the user provided.","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If no description is provided.","lastModifiedDate":"2022-09-06"},{"lineNumber":106,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"linuschancs"},"content":"    public String addTodo(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":108,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":109,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a task description in this format: \u0027todo (description)\u0027 \\n\");","lastModifiedDate":"2022-09-06"},{"lineNumber":111,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"linuschancs"},"content":"        Todo temp \u003d new Todo(inputs[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"linuschancs"},"content":"        this.list.add(temp);","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"linuschancs"},"content":"        String output \u003d \"Got it. I\u0027ve added this Todo task:\\n\" + temp.toString() + \"\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"linuschancs"},"content":"                + \"Now you have \" + this.list.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":116,"author":{"gitId":"linuschancs"},"content":"        return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":117,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":118,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"linuschancs"},"content":"     * Adds a Deadline Task in the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"linuschancs"},"content":"     * @param str Add deadline command that the user provided.","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If no description or deadline provided.","lastModifiedDate":"2022-09-06"},{"lineNumber":124,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"linuschancs"},"content":"    public String addDeadline(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":126,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a task description for your Deadline task\"","lastModifiedDate":"2022-09-06"},{"lineNumber":129,"author":{"gitId":"linuschancs"},"content":"                    + \" in this format: \u0027deadline (description) /by (date) (time)\u0027\\n\");","lastModifiedDate":"2022-09-06"},{"lineNumber":130,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":131,"author":{"gitId":"linuschancs"},"content":"        String[] when \u003d inputs[1].split(\" /by \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":132,"author":{"gitId":"linuschancs"},"content":"        if (when.length !\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a valid deadline for your Deadline task \"","lastModifiedDate":"2022-09-06"},{"lineNumber":134,"author":{"gitId":"linuschancs"},"content":"                    + \"in this format: \u0027deadline (description) /by (date) (time)\u0027\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":135,"author":{"gitId":"linuschancs"},"content":"                    + \"Please enter the date in one of the following format:\"","lastModifiedDate":"2022-09-06"},{"lineNumber":136,"author":{"gitId":"linuschancs"},"content":"                    + \" yyyy-MM-dd, dd-MMM-yyyy, dd/MM/yyyy\\n\");","lastModifiedDate":"2022-09-06"},{"lineNumber":137,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"linuschancs"},"content":"        Deadline temp \u003d new Deadline(when[0], when[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"linuschancs"},"content":"        this.list.add(temp);","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"linuschancs"},"content":"        String output \u003d \"Got it. I\u0027ve added this Deadline task:\\n\" + temp.toString() + \"\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"linuschancs"},"content":"                + \"Now you have \" + this.list.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":142,"author":{"gitId":"linuschancs"},"content":"        return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":143,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"linuschancs"},"content":"     * Adds an Event Task in the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"linuschancs"},"content":"     * @param str Add event command that the user provided.","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If no description or location provided.","lastModifiedDate":"2022-09-06"},{"lineNumber":150,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"linuschancs"},"content":"    public String addEvent(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":152,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a task description for your Event task\"","lastModifiedDate":"2022-09-06"},{"lineNumber":155,"author":{"gitId":"linuschancs"},"content":"                    + \" in this format: \u0027deadline (description) /at (date) (time)\u0027\\n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"linuschancs"},"content":"        String[] when \u003d inputs[1].split(\" /at \", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":158,"author":{"gitId":"linuschancs"},"content":"        if (when.length !\u003d 2) {","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a valid date and time for your Event task!\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":160,"author":{"gitId":"linuschancs"},"content":"                    + \"Do enter the command in this format: \u0027deadline (description) /at (date) (time)\u0027\\n\");","lastModifiedDate":"2022-09-06"},{"lineNumber":161,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":162,"author":{"gitId":"linuschancs"},"content":"        Event temp \u003d new Event(when[0], when[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":163,"author":{"gitId":"linuschancs"},"content":"        this.list.add(temp);","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"linuschancs"},"content":"        String output \u003d \"Got it. I\u0027ve added this Event task:\\n\" + temp.toString() + \"\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"linuschancs"},"content":"                + \"Now you have \" + this.list.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":166,"author":{"gitId":"linuschancs"},"content":"        return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":167,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"linuschancs"},"content":"     * Deletes the Task in the specific index of the ArrayList.","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"linuschancs"},"content":"     * @param str Delete command that the user provided.","lastModifiedDate":"2022-08-26"},{"lineNumber":173,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If no task number is provided or task number is out of range.","lastModifiedDate":"2022-09-06"},{"lineNumber":174,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":175,"author":{"gitId":"linuschancs"},"content":"    public String deleteItem(String str) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate the task number that you want to delete.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":179,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":180,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":181,"author":{"gitId":"linuschancs"},"content":"            String output;","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"linuschancs"},"content":"            int marker \u003d Integer.valueOf(inputs[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"linuschancs"},"content":"            if (marker \u003c 1 || marker \u003e this.list.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"linuschancs"},"content":"                output \u003d \"Please indicate a valid task number.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":185,"author":{"gitId":"linuschancs"},"content":"                return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":186,"author":{"gitId":"linuschancs"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"linuschancs"},"content":"                output \u003d \"Noted. I have removed this task:\\n\" + this.list.get(marker - 1).toString() + \"\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":188,"author":{"gitId":"linuschancs"},"content":"                this.list.remove(marker - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"linuschancs"},"content":"                output +\u003d \"Now you have \" + this.list.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":190,"author":{"gitId":"linuschancs"},"content":"                return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":191,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":192,"author":{"gitId":"linuschancs"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2022-09-01"},{"lineNumber":193,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a valid task number.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":194,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":198,"author":{"gitId":"linuschancs"},"content":"     * Read todo task from the data file and add a todo task accordingly into the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":199,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"linuschancs"},"content":"     * @param str Line of text from the data file to load task.","lastModifiedDate":"2022-08-26"},{"lineNumber":201,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If marker is not 1 or 0, or str is of the wrong format.","lastModifiedDate":"2022-09-06"},{"lineNumber":202,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":203,"author":{"gitId":"linuschancs"},"content":"    public void loadTodo(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":204,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" , \", 3);","lastModifiedDate":"2022-08-24"},{"lineNumber":205,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2022-08-24"},{"lineNumber":206,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Invalid Input from Data File: Insufficient details\");","lastModifiedDate":"2022-09-06"},{"lineNumber":207,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":208,"author":{"gitId":"linuschancs"},"content":"        Todo temp \u003d new Todo(inputs[2]);","lastModifiedDate":"2022-08-24"},{"lineNumber":209,"author":{"gitId":"linuschancs"},"content":"        if (inputs[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":210,"author":{"gitId":"linuschancs"},"content":"            temp.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":211,"author":{"gitId":"linuschancs"},"content":"        } else if (inputs[1].equalsIgnoreCase(\"0\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":212,"author":{"gitId":"linuschancs"},"content":"            temp.markAsNotDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":213,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":214,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Invalid Input from Data File: Incorrect marker\");","lastModifiedDate":"2022-09-06"},{"lineNumber":215,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":216,"author":{"gitId":"linuschancs"},"content":"        this.list.add(temp);","lastModifiedDate":"2022-08-24"},{"lineNumber":217,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":218,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":219,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":220,"author":{"gitId":"linuschancs"},"content":"     * Read deadline task from the data file and add a deadline task accordingly into the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":222,"author":{"gitId":"linuschancs"},"content":"     * @param str Line of text from the data file to load task.","lastModifiedDate":"2022-08-26"},{"lineNumber":223,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If marker is not 1 or 0, or str is of the wrong format.","lastModifiedDate":"2022-09-06"},{"lineNumber":224,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":225,"author":{"gitId":"linuschancs"},"content":"    public void loadDeadline(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":226,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" , \", 4);","lastModifiedDate":"2022-08-24"},{"lineNumber":227,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":228,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Invalid Input from Data File: Insufficient details\");","lastModifiedDate":"2022-09-06"},{"lineNumber":229,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":230,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"linuschancs"},"content":"            String[] dateTime \u003d inputs[3].split(\",\", 2);","lastModifiedDate":"2022-09-01"},{"lineNumber":232,"author":{"gitId":"linuschancs"},"content":"            String deadlineDateTime \u003d convertDate(dateTime[0]);","lastModifiedDate":"2022-09-09"},{"lineNumber":233,"author":{"gitId":"linuschancs"},"content":"            if (dateTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":234,"author":{"gitId":"linuschancs"},"content":"                deadlineDateTime \u003d deadlineDateTime + dateTime[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":235,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":236,"author":{"gitId":"linuschancs"},"content":"            assert dateTime.length \u003d\u003d 1 : \"There should be only one date for Deadline task in data file.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":237,"author":{"gitId":"linuschancs"},"content":"            Deadline temp \u003d new Deadline(inputs[2], deadlineDateTime);","lastModifiedDate":"2022-09-09"},{"lineNumber":238,"author":{"gitId":"linuschancs"},"content":"            if (inputs[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":239,"author":{"gitId":"linuschancs"},"content":"                temp.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":240,"author":{"gitId":"linuschancs"},"content":"            } else if (inputs[1].equalsIgnoreCase(\"0\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":241,"author":{"gitId":"linuschancs"},"content":"                temp.markAsNotDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":242,"author":{"gitId":"linuschancs"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":243,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"Invalid Input from Data File: Incorrect marker\");","lastModifiedDate":"2022-09-06"},{"lineNumber":244,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":245,"author":{"gitId":"linuschancs"},"content":"            this.list.add(temp);","lastModifiedDate":"2022-08-24"},{"lineNumber":246,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":247,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(","lastModifiedDate":"2022-09-06"},{"lineNumber":248,"author":{"gitId":"linuschancs"},"content":"                    \"Invalid Input from Data File: Invalid Deadline Task\");","lastModifiedDate":"2022-09-06"},{"lineNumber":249,"author":{"gitId":"linuschancs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":250,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Invalid Input from Data File: Incorrect Date/Time\");","lastModifiedDate":"2022-09-08"},{"lineNumber":251,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":252,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":253,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":254,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":255,"author":{"gitId":"linuschancs"},"content":"     * Read event task from the data file and add an event task accordingly into the TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":256,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":257,"author":{"gitId":"linuschancs"},"content":"     * @param str Line of text from the data file to load task.","lastModifiedDate":"2022-08-26"},{"lineNumber":258,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If marker is not 1 or 0, or str is of the wrong format.","lastModifiedDate":"2022-09-06"},{"lineNumber":259,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":260,"author":{"gitId":"linuschancs"},"content":"    public void loadEvent(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":261,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" , \", 4);","lastModifiedDate":"2022-08-24"},{"lineNumber":262,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 4) {","lastModifiedDate":"2022-08-24"},{"lineNumber":263,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Invalid Input from Data File: Insufficient details\");","lastModifiedDate":"2022-09-08"},{"lineNumber":264,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":265,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":266,"author":{"gitId":"linuschancs"},"content":"            String[] dateTime \u003d inputs[3].split(\",\", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":267,"author":{"gitId":"linuschancs"},"content":"            String eventDateTime \u003d convertDate(dateTime[0]);","lastModifiedDate":"2022-09-09"},{"lineNumber":268,"author":{"gitId":"linuschancs"},"content":"            if (dateTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-08"},{"lineNumber":269,"author":{"gitId":"linuschancs"},"content":"                eventDateTime \u003d eventDateTime + dateTime[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":270,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":271,"author":{"gitId":"linuschancs"},"content":"            assert dateTime.length \u003d\u003d 1 : \"There should be only one date for Event task in data file.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":272,"author":{"gitId":"linuschancs"},"content":"            Event temp \u003d new Event(inputs[2], eventDateTime);","lastModifiedDate":"2022-09-09"},{"lineNumber":273,"author":{"gitId":"linuschancs"},"content":"            if (inputs[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":274,"author":{"gitId":"linuschancs"},"content":"                temp.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":275,"author":{"gitId":"linuschancs"},"content":"            } else if (inputs[1].equalsIgnoreCase(\"0\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":276,"author":{"gitId":"linuschancs"},"content":"                temp.markAsNotDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":277,"author":{"gitId":"linuschancs"},"content":"            } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":278,"author":{"gitId":"linuschancs"},"content":"                throw new DukeException(\"Invalid Input from Data File: Incorrect marker\");","lastModifiedDate":"2022-09-06"},{"lineNumber":279,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":280,"author":{"gitId":"linuschancs"},"content":"            this.list.add(temp);","lastModifiedDate":"2022-08-24"},{"lineNumber":281,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":282,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(","lastModifiedDate":"2022-09-08"},{"lineNumber":283,"author":{"gitId":"linuschancs"},"content":"                    \"Invalid Input from Data File: Invalid Deadline Task\");","lastModifiedDate":"2022-09-08"},{"lineNumber":284,"author":{"gitId":"linuschancs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":285,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Invalid Input from Data File: Incorrect Date/Time\");","lastModifiedDate":"2022-09-08"},{"lineNumber":286,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":287,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":288,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":289,"author":{"gitId":"linuschancs"},"content":"     * Converts date in the format \"MMM d yyyy\" to \"yyyy-MM-dd\".","lastModifiedDate":"2022-09-09"},{"lineNumber":290,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":291,"author":{"gitId":"linuschancs"},"content":"     * @param date Date that is to be converted.","lastModifiedDate":"2022-09-09"},{"lineNumber":292,"author":{"gitId":"linuschancs"},"content":"     * @throws DateTimeParseException If date is in an incorrect format.","lastModifiedDate":"2022-09-09"},{"lineNumber":293,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":294,"author":{"gitId":"linuschancs"},"content":"    public String convertDate(String date) throws DateTimeParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":295,"author":{"gitId":"linuschancs"},"content":"        LocalDate d \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":296,"author":{"gitId":"linuschancs"},"content":"        String deadlineDate \u003d d.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-09-09"},{"lineNumber":297,"author":{"gitId":"linuschancs"},"content":"        return deadlineDate;","lastModifiedDate":"2022-09-09"},{"lineNumber":298,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":299,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":300,"author":{"gitId":"linuschancs"},"content":"     * Find tasks that match the keyword inputted by user.","lastModifiedDate":"2022-09-01"},{"lineNumber":301,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":302,"author":{"gitId":"linuschancs"},"content":"     * @param str Line of text command from user including keyword to search.","lastModifiedDate":"2022-09-01"},{"lineNumber":303,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If no keyword is provided.","lastModifiedDate":"2022-09-06"},{"lineNumber":304,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":305,"author":{"gitId":"linuschancs"},"content":"    public String findTasks(String str) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":306,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-27"},{"lineNumber":307,"author":{"gitId":"linuschancs"},"content":"        String output;","lastModifiedDate":"2022-09-06"},{"lineNumber":308,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2022-08-27"},{"lineNumber":309,"author":{"gitId":"linuschancs"},"content":"            throw new DukeException(\"Please indicate a keyword to search in this format: \u0027find (keyword)\u0027\\n\");","lastModifiedDate":"2022-09-06"},{"lineNumber":310,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":311,"author":{"gitId":"linuschancs"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":312,"author":{"gitId":"linuschancs"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":313,"author":{"gitId":"linuschancs"},"content":"            if (this.list.get(i).containsKeyword(inputs[1])) {","lastModifiedDate":"2022-09-09"},{"lineNumber":314,"author":{"gitId":"linuschancs"},"content":"                matched.add(this.list.get(i));","lastModifiedDate":"2022-08-27"},{"lineNumber":315,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":316,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":317,"author":{"gitId":"linuschancs"},"content":"        if (matched.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":318,"author":{"gitId":"linuschancs"},"content":"            output \u003d \"There are no matching tasks found.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":319,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":320,"author":{"gitId":"linuschancs"},"content":"            output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":321,"author":{"gitId":"linuschancs"},"content":"            for (int i \u003d 0; i \u003c matched.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":322,"author":{"gitId":"linuschancs"},"content":"                output \u003d output + (i + 1) + \". \" + matched.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":323,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":324,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":325,"author":{"gitId":"linuschancs"},"content":"        return output;","lastModifiedDate":"2022-09-09"},{"lineNumber":326,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":327,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"linuschancs":327}},{"path":"src/main/java/betago/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":" * Ui class that prints statements for the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"     * Prints a greeting message for the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    public static void greet() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"        System.out.println(","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"                \"Greetings Human! I am BetaGo, your personal robot assistant!\\nHow may I assist you today?\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * Prints a load file error message where the data.txt file consist of an invalid entry.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    public static void printLoadFileError() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"        System.out.println(\"The data.txt file has an invalid entry. Delete the file and try again.\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"     * Prints a file not found error message where there is an error in detecting the data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    public static void printFileNotFoundError() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        System.out.println(\"There is an error in detecting the data file.\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"     * Prints an input/output error message where there is an error in creating new data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    public static void printInputOutputError() {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"        System.out.println(\"Unable to create new data file.\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"     * Prints a save error message where there was an error in saving the TaskList to the data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"    public static void printSaveError() {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        System.out.println(\"There is an error when saving list to data file.\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"linuschancs":44}},{"path":"src/main/java/betago/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * AddDeadlineCommand class that adds a deadline task into the tasklist upon execution.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * Adds a deadline task to the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            String output \u003d tasks.addDeadline(str);","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            storage.saveItems();","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"            return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":30}},{"path":"src/main/java/betago/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * AddEventCommand class that adds an event task into the tasklist upon execution.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * Adds an event task to the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            String output \u003d tasks.addEvent(str);","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            storage.saveItems();","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"            return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":30}},{"path":"src/main/java/betago/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * AddEventCommand class that adds a todo task into the tasklist upon execution.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class AddTodoCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * Adds a todo task to the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            String output \u003d tasks.addTodo(str);","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            storage.saveItems();","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"            return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":30}},{"path":"src/main/java/betago/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" * ByeCommand class that returns the farewell statement.","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     * Returns the farewell statement.","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @return Farewell statement to the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"        return \"Goodbye Human. Till next time.\\n\";","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":23}},{"path":"src/main/java/betago/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" * Command interface that consist of execute method.","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"public interface Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"     * Does the functionality of the specific command.","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    String execute(TaskList tasks, Storage storage, String str);","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":19}},{"path":"src/main/java/betago/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * DeleteCommand class that deletes the specific task in the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * Deletes a task in the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            String output \u003d tasks.deleteItem(str);","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            storage.saveItems();","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"            return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":30}},{"path":"src/main/java/betago/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * FindCommand class that searches for the tasks that contains the specific keyword in their description.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * Finds tasks that contain the specific keyword in their description.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            String output \u003d tasks.findTasks(str);","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":29}},{"path":"src/main/java/betago/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" * InvalidCommand class that returns an error statement to the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    private String message;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * Constructor for InvalidCommand class.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param message Output message to the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     * Returns an error statement to the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"     * @return Error statement to the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        return this.message;","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":33}},{"path":"src/main/java/betago/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" * ListCommand class that shows the current tasks in the list.","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"     * Returns a list of the current tasks in the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"        return tasks.listItems();","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":22}},{"path":"src/main/java/betago/commands/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * LoadCommand class that loads data from specific file.","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class LoadCommand implements Command {","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     * Returns a list of the current tasks in the tasklist.","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"            return storage.loadNewFile(str);","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"linuschancs":27}},{"path":"src/main/java/betago/commands/MarkUnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.commands;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import betago.Storage;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import betago.TaskList;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * MarkUnmarkCommand class that marks the specific task in the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class MarkUnmarkCommand implements Command {","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     * Marks the specific task in the tasklist.","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     * @param tasks Tasklist that stores the various tasks.","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * @param storage Storage to load and save files.","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * @param str Input from the user.","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @return Output to the user after executing the command.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    public String execute(TaskList tasks, Storage storage, String str) {","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"            String output \u003d tasks.markUnmarkItems(str);","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            storage.saveItems();","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            return output;","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":29}},{"path":"src/main/java/betago/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.controller;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"    private void flip() {","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-06"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-06"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-06"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        db.flip();","lastModifiedDate":"2022-09-06"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"        return db;","lastModifiedDate":"2022-09-06"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":60}},{"path":"src/main/java/betago/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.controller;","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import betago.Duke;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-06"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-06"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-06"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-09-06"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-06"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-06"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-06"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        );","lastModifiedDate":"2022-09-06"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-06"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":52}},{"path":"src/main/java/betago/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":" * Deadline class is a type of task where users can store their task description","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":" * and additional date/time information.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    private String byDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     * Converts input date from the following format: \"yyyy-MM-dd\", \"dd-MMM-yyyy\", \"dd/MM/yyyy\"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"     * into \"MMM d yyyy\" to be stored in the byDateTime variable.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"     * @param by Due date and time for the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If date is given in the wrong format.","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-09-06"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d by.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        String[] formatPatterns \u003d {\"yyyy-MM-dd\", \"dd-MMM-yyyy\", \"dd/MM/yyyy\"};","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"        for (int i \u003d 0; i \u003c formatPatterns.length; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"                LocalDate d \u003d LocalDate.parse(inputs[0], DateTimeFormatter.ofPattern(formatPatterns[i]));","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"                this.byDateTime \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"                break;","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"                if (i \u003d\u003d formatPatterns.length - 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"                    throw new DukeException(\"Please enter the date and time in these format:\\n\"","lastModifiedDate":"2022-09-06"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"                            + \"yyyy-MM-dd, dd-MMM-yyyy, dd/MM/yyyy\\n\");","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"            this.byDateTime \u003d this.byDateTime + \", \" + inputs[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"     * Returns string representation for deadline task with due date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"     * @return String representation for deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription() + \" (by: \" + byDateTime + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"     * Returns corresponding string representation of the deadline task that is saved in the data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"     * @return String representation for deadline task to be saved in data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"    public String saveTask() {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"        String icon;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        if (this.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"            icon \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"            icon \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"        return \"D , \" + icon + \" , \" + this.description + \" , \" + this.byDateTime + \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"linuschancs":72}},{"path":"src/main/java/betago/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":" * Event class is a type of task where users can store their task description","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":" * and additional date and time information.","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    private String at;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     * @param at Date and time of the event.","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     * @throws DukeException If date is given in the wrong format.","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        String[] inputs \u003d at.split(\" \", 2);","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        String[] formatPatterns \u003d {\"yyyy-MM-dd\", \"dd-MMM-yyyy\", \"dd/MM/yyyy\"};","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        for (int i \u003d 0; i \u003c formatPatterns.length; i++) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"            try {","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"                LocalDate d \u003d LocalDate.parse(inputs[0], DateTimeFormatter.ofPattern(formatPatterns[i]));","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"                this.at \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"                break;","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"                if (i \u003d\u003d formatPatterns.length - 1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"                    throw new DukeException(\"Please enter the date and time in these format:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"                            + \"yyyy-MM-dd, dd-MMM-yyyy, dd/MM/yyyy\\n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"                }","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        if (inputs.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"            this.at \u003d this.at + \", \" + inputs[1];","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"     * Returns string representation for event task with date and time.","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"     * @return String representation for event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"     * Returns corresponding string representation of the event task that is saved in the data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"     * @return String representation for event task to be saved in data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"    public String saveTask() {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"        String icon;","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"        if (this.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"            icon \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"            icon \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"        return \"E , \" + icon + \" , \" + this.description + \" , \" + this.at + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"linuschancs":70}},{"path":"src/main/java/betago/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":" * Task that stores a string description and boolean isDone.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"public class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     * Returns the corresponding status icon of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     * \"X\" represents that the task is marked done.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"     * \" \" represents that the task is not marked as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     * @return String icon representing status of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"     * @return String description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"        return this.description;","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"     * Marks the task as done by setting boolean isDone to true.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"     * Marks the task as not done by setting boolean isDone to false.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"    public String saveTask() {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        return \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"linuschancs":61}},{"path":"src/main/java/betago/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":" * Todo class is a type of task where users can store their task description","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":" * and additional date/time information.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"     * Constructor for Todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     * Returns string representation for Todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"     * @return String representation for Todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getTaskDescription();","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"     * Returns corresponding string representation of the todo task that is saved in the data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"     * @return String representation for Todo task to be saved in data file.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    public String saveTask() {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"        String icon;","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"        if (this.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"            icon \u003d \"1\";","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"            icon \u003d \"0\";","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        return \"T , \" + icon + \" , \" + this.description + \"\\n\";","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"linuschancs":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #85C1E9#85C1E9; -fx-background-radius: 10; -fx-label-padding: 6;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"            \u003cFont name\u003d\"American Typewriter\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"betago.controller.MainWindow\"\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-06"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-06"}],"authorContributionMap":{"linuschancs":19}},{"path":"src/test/java/betago/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    public void newDeadlineTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"            Deadline temp \u003d new Deadline(\"do this task\", \"2012-01-21 6pm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"            assertEquals(\"[D][ ] do this task (by: Jan 21 2012, 6pm)\", temp.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"            //This should not happen from the above input","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"linuschancs":23}},{"path":"src/test/java/betago/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import betago.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"public class EventTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    public void newEventTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"            Event temp \u003d new Event(\"do this task\", \"2012-01-21 6pm\");","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"            assertEquals(\"[E][ ] do this task (at: Jan 21 2012, 6pm)\", temp.toString());","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"            //This should not happen with the above input.","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"linuschancs":23}},{"path":"src/test/java/betago/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package betago.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    public void newTodoTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"        assertEquals(\"[T][ ] do this task\", new Todo(\"do this task\").toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"linuschancs":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"todo return book","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"deadline return book /by wednesday 10pm","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"deadline do homework","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"event book fair /at nus","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"event second book fair","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"mark 123","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"mark aipsoda","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"unmark 123","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"unmark asdioad","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"delete","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"delete asdasd","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"delete 12312","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"blahblah","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"linuschancs":30}}]

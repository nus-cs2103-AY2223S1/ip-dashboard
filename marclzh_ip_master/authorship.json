[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":" * This class encapsulates the commands that the user can input.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"public enum Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"    BYE(\"bye\");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"    /* The input command by the user. */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"    private final String inputCommand;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"     * Constructor for the command enum.","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"     * @param command input command","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"    Command(String command) {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"        this.inputCommand \u003d command;","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"     * Returns the command if given a correct command.","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"     * @param command Input command by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"     * @return Enum value corresponding to the input command.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"     * @throws IllegalArgumentException if invalid command is given.","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"    public static Command getCommand(String command) throws IllegalArgumentException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"        for (Command c : Command.values()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"            if (command.equals(c.inputCommand)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"                return c;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"        throw new IllegalArgumentException(\"No such available command, \" + \"\\\"\" + command + \"\\\" please try again.\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marclzh":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":" * This class is the main logic unit for Duke","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"public class Duke {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    /* Handles task list logic. */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"     * Constructor for the Duke Chat bot.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"    public Duke() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"        Storage.Load(tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"     * Handles the logic for Duke to run.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"    public void run() {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"        UI.Greet();","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"        String in \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"        while (true) {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"            // Splits the input to retrieve possible commands.","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"            Parser.parseInput(in);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"            Command command \u003d Parser.getUserCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"            String userInstructions \u003d Parser.getUserInstructions();","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"            // Break out of loop","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"            if (command \u003d\u003d Command.BYE) {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"            // List out current tasks in the list","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"            if (command \u003d\u003d Command.LIST) {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"                taskList.printTaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"            if (command \u003d\u003d Command.MARK || command \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"                taskList.taskMarker(command, userInstructions);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"            if (command \u003d\u003d Command.FIND) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"                taskList.findTask(userInstructions);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marclzh"},"content":"            if (command \u003d\u003d Command.DELETE) {","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"marclzh"},"content":"                try {","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"marclzh"},"content":"                    taskList.deleteTask(userInstructions);","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"marclzh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"marclzh"},"content":"                    UI.printDeleteErrorMessage();","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"marclzh"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"marclzh"},"content":"            if (command \u003d\u003d Command.TODO || command \u003d\u003d Command.DEADLINE || command \u003d\u003d Command.EVENT) {","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"marclzh"},"content":"                try {","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"marclzh"},"content":"                    taskList.addTask(command, userInstructions);","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"marclzh"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"marclzh"},"content":"                    UI.printDukeExceptionMessage(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"marclzh"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"marclzh"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"marclzh"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"marclzh"},"content":"            in \u003d sc.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":77,"author":{"gitId":"marclzh"},"content":"        UI.Goodbye();","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"marclzh"},"content":"     * The main class, running the chat-bot.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"marclzh"},"content":"        new Duke().run();","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"marclzh":84,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":" * This class handles the logic of extrapolating the keywords from the whole command.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"    /* User Input Fields.*/","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"    private static Command userCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"    private static String userInstructions;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"     * Parses input by user into a Command enum for interpretation by Elp.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"     * @param in user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"    public static void parseInput(String in) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"        String[] inputArr \u003d in.split(\" \", 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"        String inputCommand \u003d inputArr[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"            command \u003d Command.getCommand(inputCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"        userCommand \u003d command;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"        if (command !\u003d Command.LIST \u0026\u0026 command !\u003d Command.BYE) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"                userInstructions \u003d inputArr[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"                System.out.println(\"Did you forget to input an index behind your command?\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"     * Getter for the user\u0027s command.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"     * @return command enum representing the user\u0027s command.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"    public static Command getUserCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"        return userCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"     * Getter for the user\u0027s instructions.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"     * @return string representation of the user\u0027s instructions.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"    public static String getUserInstructions() {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"        return userInstructions;","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marclzh":53}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":" * This class encapsulates the logic of the storage of the task list in the user\u0027s harddrive.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"    /* Const fields for representation of the various paths. */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"    private static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"    private static final Path SAVE_LOCATION \u003d Path.of(PROJECT_ROOT, \"data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"    private static final String SAVE_FILE_NAME \u003d \"Task List.txt\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"    private static final Path SAVE_FILE_PATH \u003d (SAVE_LOCATION).resolve(SAVE_FILE_NAME);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"     * Loads the data from the file found in the saved location into the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"    public static void Load(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"        // This is the current directory the system is in.","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"        boolean isDataFolderPresent \u003d Files.exists(SAVE_LOCATION);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"        boolean isSaveFilePresent \u003d Files.exists(SAVE_FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"        // Checks if the data folder exists already, if not, creates one.","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"        if (!isDataFolderPresent) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"                Files.createDirectories(SAVE_LOCATION);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"        // Checks if the Save File is present, if not, create one.","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"        if (isSaveFilePresent) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"            List\u003cString\u003e listContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"                listContents \u003d Files.readAllLines(SAVE_FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"            // Load contents of file into tasks list.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"            for (String s : listContents) {","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"                try {","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"marclzh"},"content":"                    tasks.add(parseTask(s));","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"marclzh"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"marclzh"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marclzh"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marclzh"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"marclzh"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"marclzh"},"content":"                Files.createFile(SAVE_FILE_PATH);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"marclzh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"marclzh"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"marclzh"},"content":"     * Saves the task to the text file in the user\u0027s hard drive.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"marclzh"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"marclzh"},"content":"     * @param isDeleted if the contents of the file should be deleted and reset.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"marclzh"},"content":"    public static void Save(ArrayList\u003cTask\u003e tasks, boolean isDeleted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"marclzh"},"content":"        // Saves to the file","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"marclzh"},"content":"            if (isDeleted) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"marclzh"},"content":"                // Clears the file","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"marclzh"},"content":"                resetTaskListFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"marclzh"},"content":"                // Loop to print all the tasks into the file.","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"marclzh"},"content":"                for (Task t : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"marclzh"},"content":"                    Files.write(SAVE_FILE_PATH, (t.saveFormat() + System.lineSeparator()).getBytes(),","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"marclzh"},"content":"                            StandardOpenOption.APPEND);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"marclzh"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"marclzh"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"marclzh"},"content":"                Task addedTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"marclzh"},"content":"                Files.write(SAVE_FILE_PATH, (addedTask.saveFormat() + System.lineSeparator()).getBytes(),","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"marclzh"},"content":"                        StandardOpenOption.APPEND);","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"marclzh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"marclzh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"marclzh"},"content":"     * Method to parse the saved text file data into usable data to be input into the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"marclzh"},"content":"     * @param savedTask the task in the saved task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"marclzh"},"content":"     * @return a task to be input into the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"marclzh"},"content":"     * @throws DukeException if the method fails, printing the message output.","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"marclzh"},"content":"    private static Task parseTask(String savedTask) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"marclzh"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"marclzh"},"content":"        String[] taskArr;","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"marclzh"},"content":"        // savedTask is the string representation of the save file format of a task.","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"marclzh"},"content":"        taskArr \u003d savedTask.split(\" \\\\| \", 4);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"marclzh"},"content":"        String taskType \u003d taskArr[0]; // Todo, Event, Deadline","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"marclzh"},"content":"        String taskDone \u003d taskArr[1]; // 0 for unmarked, 1 for marked.","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"marclzh"},"content":"        String taskDescription \u003d taskArr[2]; // Description of the task.","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"marclzh"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"marclzh"},"content":"        case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"marclzh"},"content":"            task \u003d new ToDo(taskDescription);","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"marclzh"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":117,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"marclzh"},"content":"        case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"marclzh"},"content":"            String taskDuration \u003d taskArr[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"marclzh"},"content":"            LocalDateTime duration \u003d LocalDateTime.parse(taskDuration, Task.OUTPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"marclzh"},"content":"            task \u003d new Event(taskDescription, duration);","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"marclzh"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"marclzh"},"content":"        case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"marclzh"},"content":"            String taskDue \u003d taskArr[3];","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"marclzh"},"content":"            LocalDateTime due \u003d LocalDateTime.parse(taskDue, Task.OUTPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"marclzh"},"content":"            task \u003d new Deadline(taskDescription, due);","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"marclzh"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"marclzh"},"content":"        if (taskDone.equals(\"1\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"marclzh"},"content":"            task.markDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"marclzh"},"content":"        return task;","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"marclzh"},"content":"     * Method for resetting the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"marclzh"},"content":"    public static void resetTaskListFile() {","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"marclzh"},"content":"            Files.newBufferedWriter(SAVE_FILE_PATH, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"marclzh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"marclzh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"marclzh":149}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":" * This class handles logic dealing with the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"    /* Contains the tasks inputted. */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"     * Getter for the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"     * @return The task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"     * Handles the addition of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"     * @param type        type of task added.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"     * @throws DukeException, IOException for invalid inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"    public void addTask(Command type, String description) throws DukeException, IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"        Task task;","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"        if (type \u003d\u003d Command.TODO) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"        } else if (type \u003d\u003d Command.DEADLINE) {","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"            task \u003d Deadline.createDeadline(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"            task \u003d Event.createEvent(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"        UI.printAddTaskMessage(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"        Storage.Save(tasks, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"marclzh"},"content":"     * Handles Printing of the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"marclzh"},"content":"    public void printTaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"marclzh"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"marclzh"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"marclzh"},"content":"                System.out.println(i + \". \" + tasks.get(i - 1).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"marclzh"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"No tasks have been added!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"marclzh"},"content":"     * Marks/Unmarks Tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"marclzh"},"content":"     * @param markStatus       input to mark/unmark a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"marclzh"},"content":"     * @param userInstructions input of the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"marclzh"},"content":"    public void taskMarker(Command markStatus, String userInstructions) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"marclzh"},"content":"            int taskNo \u003d Integer.parseInt(userInstructions);","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"marclzh"},"content":"            Task currTask \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"marclzh"},"content":"            if (markStatus \u003d\u003d Command.MARK) {","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"marclzh"},"content":"                currTask.markDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"marclzh"},"content":"                Storage.Save(tasks, true);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"marclzh"},"content":"                System.out.println(\"Task successfully marked!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"marclzh"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"marclzh"},"content":"                currTask.markUndone();","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"marclzh"},"content":"                Storage.Save(tasks, true);","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"marclzh"},"content":"                System.out.println(\"Task successfully unmarked!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"marclzh"},"content":"            System.out.println(currTask + \"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"marclzh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"Invalid input, please input an available integer index!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"marclzh"},"content":"     * Deletes the task with the specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"marclzh"},"content":"     * @param inputIndex index to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"marclzh"},"content":"    public void deleteTask(String inputIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"marclzh"},"content":"            int taskNo \u003d Integer.parseInt(inputIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"marclzh"},"content":"            Task task \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"Ok, I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"marclzh"},"content":"            System.out.println(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"marclzh"},"content":"            tasks.remove(taskNo - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"marclzh"},"content":"            Storage.Save(tasks, true);","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"You have \" + tasks.size() + \" tasks left currently.\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"marclzh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"Invalid index, please input the index of an available task!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"marclzh"},"content":"    public void findTask(String match) {","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"marclzh"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"marclzh"},"content":"            System.out.printf(\"Here\u0027s all I could find with \\\"%s\\\"!\\n\", match);","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"marclzh"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"marclzh"},"content":"                Task temp \u003d tasks.get(i - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"marclzh"},"content":"                if (temp.getDescription().contains(match)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"marclzh"},"content":"                    System.out.println(i + \". \" + temp.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"marclzh"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"marclzh"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"marclzh"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"marclzh"},"content":"            System.out.println(\"No tasks have been added!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marclzh":128}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":" * This class handles the interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"public class UI {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"     * Displays the Greeting message.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    public static void Greet() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"        String logo \u003d \" _______               \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"                + \"|  _____|  _   _____   \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"                + \"|  |____  | | |  __ |  \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"                + \"|   ____| | | |  ___|  \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"                + \"|  |____  | | | |      \\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"                + \"|_______| |_| |_|\";","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"        System.out.println(\"Greetings from Elp\\n\" + logo);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"        System.out.println(\"What can I help you with?\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"     * Prints Goodbye Message.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"    public static void Goodbye() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"        System.out.println(\"Have a nice day! :)\");","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"     * Prints the error given when no index is given when deleting tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"    public static void printDeleteErrorMessage() {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"        System.out.println(\"Please add an index to delete a task!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"     * Prints the exception message when a DukeException is thrown.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"     * @param e DukeException thrown.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"    public static void printDukeExceptionMessage(DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"     * Prints the message when a Task is added to the list.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"     * @param t task added.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"    public static void printAddTaskMessage(Task t) {","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"        System.out.println(\"Added: \" + t.toString() + \"\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marclzh":56}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke.exception;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":" * This class represents a Custom DukeException class for the Duke Chat bot.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"     * Constructor for the DukeException.","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"     * @param message Exception message returned.","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"        super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marclzh":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":" * This class inherits from the abstract Task class","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":" * and encapsulates the logic of a Deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"    /* Due Date field */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"     * Constructor for the Deadline Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"     * Factory Method for the construction of a Deadline for user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"     * @param in user\u0027s input.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"     * @return Deadline with the relevant input fields.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"     * @throws DukeException if no task or incorrect formatting is given.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"    public static Deadline createDeadline(String in) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"        String[] temp \u003d in.split(\" */by* \");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"            throw new DukeException(\"-Deadline- Please follow the format of ~description~ /by dd-MM-yyyy HHmm!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"        String description \u003d temp[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"        String dueDate \u003d temp[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"        LocalDateTime deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"            deadline \u003d LocalDateTime.parse(dueDate, INPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"            throw new DukeException(\"-Deadline- Your date needs to be in dd-MM-yyyy HHmm format!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"        return new Deadline(description, deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"     * Overriden toString method for the Deadline Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"marclzh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(OUTPUT_DATE_FORMAT) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marclzh"},"content":"     * Override save format method from Task class.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"marclzh"},"content":"     * @return formatted String for the Event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"marclzh"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"marclzh"},"content":"        return String.format(\"D | %s | %s\", super.saveFormat(), this.dueDate.format(OUTPUT_DATE_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marclzh":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":" * This class inherits from the abstract Task class","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":" * and encapsulates the logic of an Event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"    /* Duration field */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    private LocalDateTime duration;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"     * Constructor for the Event Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"    public Event(String description, LocalDateTime duration) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"     * Factory Method for the construction of a Event for user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"     * @param in user\u0027s input.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"     * @return Event with the relevant input fields.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"     * @throws DukeException if no task or incorrect formatting is given.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"    public static Event createEvent(String in) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"        String[] temp \u003d in.split(\" */at* \");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"            throw new DukeException(\"-Event- Please follow the format of ~description~ /at dd-MM-yyyy HHmm!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"        String description \u003d temp[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"        String duration \u003d temp[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"        LocalDateTime event;","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"            event \u003d LocalDateTime.parse(duration, INPUT_DATE_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"            throw new DukeException(\"-Event- Your date needs to be in dd-MM-yyyy HHmm format!\\n\");","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"        return new Event(description, event);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"     * Override toString method for the Event Task.","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"marclzh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + duration.format(OUTPUT_DATE_FORMAT) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"marclzh"},"content":"     * Override save format method from Task class.","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"marclzh"},"content":"     * @return formatted String for the Event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"marclzh"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"marclzh"},"content":"        return String.format(\"E | %s | %s\", super.saveFormat(), this.duration.format(OUTPUT_DATE_FORMAT));","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marclzh":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":" * This abstract class encapsulates the logic of a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"    /* Task Information */","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"    protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"    /* Constant fields representing the input and output format of the dates. */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"    public final static DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final static DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"     * Constructor for a Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"     * Returns a string representation for the task\u0027s current status.","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"     * @return a string representation of the task\u0027s status.","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"     * Override toString method for a Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"marclzh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"marclzh"},"content":"     * Formats the task into a suitable format for files","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"marclzh"},"content":"     * @return String representation of the Task in saved format.","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"marclzh"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"marclzh"},"content":"         return String.format(\"%d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"marclzh"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"marclzh"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"marclzh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"marclzh"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"marclzh"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"marclzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"marclzh"},"content":"     * Getter for the description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"marclzh"},"content":"     * @return String representation of the description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"marclzh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"marclzh"},"content":"        return this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marclzh":72,"-":1}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":" * This class inherits from the abstract Task class","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":" * and encapsulates the logic of a ToDo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"     * Constructor for the Todo Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"        super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"     * Overriden toString method for the Todo Task.","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"     * @return String representation of the Todo.","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"     * Override save format method from Task class.","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"     * @return formatted String for the Event task.","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"    public String saveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"        return String.format(\"T | %s\", super.saveFormat());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marclzh":37}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This class handles the logic of the Parser tester.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Uses parseInput method with a valid input.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Output should be equal to the expected command.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void parseInput_correctInput_commandOutput() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Parser.parseInput(\"todo test 1\");","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(Parser.getUserCommand(), Command.TODO);","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marclzh":1,"-":21}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EventTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Tests save format conversion method in Event class with 2 valid inputs.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Test should return successfully if the converted string matches the expected output.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void saveFormat_saveFormatConversion_success() {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Event t1 \u003d new Event(\"task1\", LocalDateTime.of(2000,","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                12, 14, 5, 30));","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Event t2 \u003d new Event(\"task2\", LocalDateTime.of(2022,","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                12, 14, 23, 59));","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        t1.markDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(\"E | 1 | task1 | Dec 14 2000 0530\", t1.saveFormat());","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(\"E | 0 | task2 | Dec 14 2022 2359\", t2.saveFormat());","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marclzh":2,"-":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclzh"},"content":"invalid task","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"marclzh"},"content":"todo task 1","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"marclzh"},"content":"deadline task 2 /by xxx","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"marclzh"},"content":"event task 3 /at xxx","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"marclzh"},"content":"deadline task 2 /by 23-11-2000 2359","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"marclzh"},"content":"event task 3 /at 23-11-2020 2359","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"marclzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"marclzh"},"content":"mark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"marclzh"},"content":"mark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"mark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"mark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"unmark 1","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"marclzh"},"content":"unmark 2","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"marclzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"marclzh"},"content":"unmark 3","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"marclzh"},"content":"unmark 4","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"marclzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"marclzh"},"content":"unmark a","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"marclzh"},"content":"mark a","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"marclzh"},"content":"mark","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"marclzh"},"content":"unmark","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"marclzh"},"content":"todo","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"marclzh"},"content":"deadline","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"event","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"list 2","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"marclzh"},"content":"test invalid task","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"marclzh"},"content":"delete","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"marclzh"},"content":"delete 99","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"marclzh"},"content":"delete 2","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"marclzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"marclzh"},"content":"delete 1","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"marclzh"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"marclzh"},"content":"find 1","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"marclzh"},"content":"find 2","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"marclzh"},"content":"find 3","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"marclzh"},"content":"find task","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"marclzh"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"marclzh":38}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"marclzh"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"marclzh"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"marclzh"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"marclzh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"marclzh"},"content":"PAUSE","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"marclzh":6,"-":20}}]

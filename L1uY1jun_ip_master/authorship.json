[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"checkstyle {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"L1uY1jun":21,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import duke.gui.Main;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Parser;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":" * Duke is a bot that allows you to create a schedule, edit it, and memorises it.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"public class Duke {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    /** Name of file where tasks are stored */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    private final String fileName;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"    /** Storage to be initialised */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    /** TaskList to be initialised */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs Duke with a default file name.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    public Duke() {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        fileName \u003d \"data.txt\";","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"            taskList \u003d storage.loadFromFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs Duke with a specified file name.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"     * @param fileName Specified name of file.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"            taskList \u003d storage.loadFromFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"     * This is the main method where the program runs from.","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"     * @param args Unused parameter","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"    public static void main(String... args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"     * Returns response from Duke according to the input.","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"     * @param input Input from user.","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"     * @return String response from Duke.","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"L1uY1jun"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"L1uY1jun"},"content":"            return command.execute(taskList, storage);","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"L1uY1jun"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"L1uY1jun"},"content":"            return Ui.formatExceptionString(de);","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":79}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" * This class performs termination command.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"        javafx.application.Platform.exit();","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatFarewellString();","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":21}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":" * This interface encapsulates the information to be performed based on each command.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"public interface Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"     * Executes command.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"     * Returns a message, modifies TaskList, find or store tasks based on command executed.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"     * @param tasks TaskList to store tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     * @param storage Storage to deal with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     * @return Message based on command executed.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If there is an exception during the execution.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":21}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":" * This class performs create a deadline task with specified description","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":" * and date command.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"    /** Deadline task to be added into TaskList */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor for class DeadlineCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"     * @param date Due date of deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    public DeadlineCommand(String description, LocalDate date) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"        this.deadline \u003d new Deadline(description, false, date);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"        storage.appendToFile(deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatAddTaskString(deadline);","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":38}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" * This class performs delete a specified task from TaskList command.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    /** Index of task to be deleted */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor for class DeleteCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"            return Ui.formatNoTaskToDeleteString();","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"            return Ui.formatDeleteTaskString(index, task);","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":39}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":" * This class performs create an event task with specified description","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":" * and date time command.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"    /** Event task to be added into TaskList */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    private Event event;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor for class EventCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of event.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"     * @param dateTime Date and time of event.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    public EventCommand(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"        this.event \u003d new Event(description, false, dateTime);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"        storage.appendToFile(event);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatAddTaskString(event);","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":38}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" * This class performs find all task with keyword in TaskList command.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /** Keyword to search for in tasks */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    private String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor of class FindCommand","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @param keyword String of keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatFindTaskString(taskList, keyword);","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"L1uY1jun":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" * This class performs list all tasks stored in TaskList command.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatListStatusString(taskList);","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":19}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" * This class performs mark a specified task in TaskList as done command.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /** Index of task to be marked as done */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor for class MarkCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task to be marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"        taskList.getTask(index).markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatMarkAsDoneString(index, taskList.getTask(index));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":33}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" * This class performs create a todo task with specified description command.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    /** Todo task to be added into TaskList */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"    private ToDo todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor for class TodoCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        this.todo \u003d new ToDo(description, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"        storage.appendToFile(todo);","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatAddTaskString(todo);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":34}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.commands;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" * This class performs mark a specified task in TaskList as undone Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /** Index of task to be mark as undone */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    private int index;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     * Constructor for class UnmarkCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task to be marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"        taskList.getTask(index).markAsUndone();","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        storage.saveToFile(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"        return Ui.formatMarkAsUndoneString(index, taskList.getTask(index));","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":33}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":" * Wraps all checked exception thrown in the Duke program.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":" * Systematic representation of exceptions unique to Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a DukeException with specified message.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"     * @param message Description of the exception thrown.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"L1uY1jun":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"        dialogBox.addUserTextDesign();","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"        return dialogBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"        dialogBox.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"        dialogBox.addBotTextDesign();","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"        return dialogBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"     * Add a text bubble design for user text.","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"    public void addUserTextDesign() {","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"        this.dialog.setStyle(\"-fx-background-color: #0096FF;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-text-fill: white;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-min-width: 200px;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-wrap-text: true;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-font-size: 14;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-alignment: baseline-left;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-border-width: 0;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-background-radius: 15.0;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-padding: 15.0\");","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"L1uY1jun"},"content":"     * Add a text bubble design for bot text.","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"L1uY1jun"},"content":"    public void addBotTextDesign() {","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"L1uY1jun"},"content":"        this.dialog.setStyle(\"-fx-background-color: #DCDCDC;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-text-fill: black;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-min-width: 200px;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-wrap-text: true;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-font-size: 14;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-alignment: baseline-left;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-border-width: 0;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-background-radius: 15.0;\"","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"L1uY1jun"},"content":"                + \"-fx-padding: 15.0\");","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"L1uY1jun":94}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"            stage.setTitle(\"MyBot\");","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGui(duke);","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sayGreetings();","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"            stage.show();","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"L1uY1jun":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.gui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bot.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"    public void setGui(Duke duke) {","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"    public void sayGreetings() {","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.formatGreetingString(), botImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"                DialogBox.getDukeDialog(response, botImage)","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"        );","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"L1uY1jun":58}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Parser;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    /** Due date of deadline */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    private LocalDate date;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a deadline with specified description and due date.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @param date Due date of deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public Deadline(String description, Boolean isDone, LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"            super.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    public String taskToDataString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"        String isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"            isDone \u003d \"O\";","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"            isDone \u003d \"X\";","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"D | %s | %s | %s\\n\", isDone, super.description,","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"                Parser.formatDateToData(date));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"                Parser.formatDateToPrint(date));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"L1uY1jun":53}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.tools.Parser;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":" * Represents an event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    /** Date and time of event */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    private LocalDateTime dateAndTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs an event with specified description and date time.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of event.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @param dateAndTime Date and time of event.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public Event(String description, Boolean isDone, LocalDateTime dateAndTime) {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"            super.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    public String taskToDataString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"        String isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"            isDone \u003d \"O\";","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"            isDone \u003d \"X\";","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"E | %s | %s | %s\\n\", isDone, super.description,","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"                Parser.formatDateTimeToData(dateAndTime));","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"                Parser.formatDateTimeToPrint(dateAndTime));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"L1uY1jun":53}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":" * Abstract class that represents tasks to be stored on Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"    /** Description of Task */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"    /** Status of Task, whether it is done or not */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a Task with specified description.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of current task status.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation of task status.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"     * Marks task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"     * Marks task as undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"     * Returns data string representation of task to be stored in storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"     * @return Data string representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"    public abstract String taskToDataString();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"     * Returns true if keyword was found in current task, else false.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"     * @param keyword Keyword to search for.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"     * @return If keyword was found in current task.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"    public Boolean isFoundInDescription(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"        return description.contains(keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), description);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"L1uY1jun":71}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":" * Represents a todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a todo task with specified description.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"            super.markAsDone();","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    public String taskToDataString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"        String isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"        if (super.isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"            isDone \u003d \"O\";","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"        } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"            isDone \u003d \"X\";","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"T | %s | %s\\n\", isDone, super.description);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of todo task.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"L1uY1jun":42}},{"path":"src/main/java/duke/tools/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tools;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":" * Parses text command from user into instructions understood by Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    /** Date format for user input, and format for date stored in storage */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    private static final DateTimeFormatter DATE_PARSE_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"            .ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    /** Date and time format for user input, and format for date and time stored in storage */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    private static final DateTimeFormatter DATETIME_PARSE_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"            .ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    /** Date format for message printed by Duke */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"    private static final DateTimeFormatter DATE_PRINT_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"            .ofPattern(\"hh:mma MMM dd yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"    /** Date and time format for message printed by Duke */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"    private static final DateTimeFormatter DATETIME_PRINT_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"            .ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"     * Returns command representing user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"     * @param str Input string.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"     * @return Command representing user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"    public static Command parseCommand(String str) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"            String[] input \u003d str.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"            switch (input[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"            case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"                return new ByeCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"            case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"                return new ListCommand();","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"            case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"                return new MarkCommand(parseIndex(input[1].strip()));","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"            case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"                return new UnmarkCommand(parseIndex(input[1].strip()));","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"            case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"                return new DeleteCommand(parseIndex(input[1].strip()));","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"            case \"find\":","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"                return new FindCommand(input[1].strip());","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"                return new TodoCommand(input[1].strip());","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"                return parseForDeadline(input[1].strip());","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"            case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"                return parseForEvent(input[1].strip());","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"            default:","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"                throw new DukeException(\"OOPS!!! \"","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"                        + \"I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! \"","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"L1uY1jun"},"content":"                    + \"Wrong command parameters!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"L1uY1jun"},"content":"     * Parses string of user input into index of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"L1uY1jun"},"content":"     * @param str Input string.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"L1uY1jun"},"content":"     * @return Index of task.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"L1uY1jun"},"content":"    private static int parseIndex(String str) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"L1uY1jun"},"content":"        return Integer.parseInt(str) - 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"L1uY1jun"},"content":"     * Parses user input to add a deadline task.","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"L1uY1jun"},"content":"     * @param str Input string from user specifying deadline parameters.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"L1uY1jun"},"content":"     * @return Deadline command representing user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If date format is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"L1uY1jun"},"content":"    private static DeadlineCommand parseForDeadline(String str) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"L1uY1jun"},"content":"        String[] descDate \u003d str.split(\"/by\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"L1uY1jun"},"content":"        return new DeadlineCommand(descDate[0].strip(),","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"L1uY1jun"},"content":"                parseDate(descDate[1].strip()));","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"L1uY1jun"},"content":"     * Parses user input to add an event task.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"L1uY1jun"},"content":"     * @param str Input string from user specifying event parameters.","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"L1uY1jun"},"content":"     * @return Event command representing user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If date time format is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"L1uY1jun"},"content":"    private static EventCommand parseForEvent(String str) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"L1uY1jun"},"content":"        String[] descDateTime \u003d str.split(\"/at\", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"L1uY1jun"},"content":"        return new EventCommand(descDateTime[0].strip(),","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"L1uY1jun"},"content":"                parseDateTime(descDateTime[1].strip()));","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"L1uY1jun"},"content":"     * Parses user input of date.","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"L1uY1jun"},"content":"     * @param str Input string from user specifying date.","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"L1uY1jun"},"content":"     * @return LocalDate object representing user input of date.","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If date format is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"L1uY1jun"},"content":"    public static LocalDate parseDate(String str) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"L1uY1jun"},"content":"            return LocalDate.parse(str, DATETIME_PARSE_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"L1uY1jun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"Please enter a valid date format:\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"L1uY1jun"},"content":"                    + \"day/month/year \u003e dd/mm/yyyy\");","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of date in print format.","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"L1uY1jun"},"content":"     * @param date Date to be formatted.","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation of date.","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatDateToPrint(LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"L1uY1jun"},"content":"        return date.format(DATETIME_PRINT_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of date in data format.","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"L1uY1jun"},"content":"     * @param date Date to be formatted.","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"L1uY1jun"},"content":"     * @return Data representation of date.","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatDateToData(LocalDate date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"L1uY1jun"},"content":"        return date.format(DATETIME_PARSE_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"L1uY1jun"},"content":"     * Parses user input of date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"L1uY1jun"},"content":"     * @param str Input string from user specifying date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"L1uY1jun"},"content":"     * @return LocalDateTime object representing user input of date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If date and time format is invalid.","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"L1uY1jun"},"content":"    public static LocalDateTime parseDateTime(String str) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":158,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"L1uY1jun"},"content":"            return LocalDateTime.parse(str, DATE_PARSE_FORMAT);","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"L1uY1jun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"Please enter a valid date and time format:\\n\"","lastModifiedDate":"2022-08-25"},{"lineNumber":162,"author":{"gitId":"L1uY1jun"},"content":"                    + \"day/month/year 24hour time \u003e dd/mm/yyyy HHmm\");","lastModifiedDate":"2022-09-01"},{"lineNumber":163,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":164,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":166,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of date and time in print format.","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"L1uY1jun"},"content":"     * @param dateTime Date and time to be formatted.","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"L1uY1jun"},"content":"     * @return String representation of date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatDateTimeToPrint(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"L1uY1jun"},"content":"        return dateTime.format(DATE_PRINT_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"L1uY1jun"},"content":"     * Returns string representation of date and time in data format.","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"L1uY1jun"},"content":"     * @param dateTime Date and time to be formatted.","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"L1uY1jun"},"content":"     * @return Data representation of date and time.","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatDateTimeToData(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"L1uY1jun"},"content":"        return dateTime.format(DATE_PARSE_FORMAT);","lastModifiedDate":"2022-08-25"},{"lineNumber":184,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":185,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":185}},{"path":"src/main/java/duke/tools/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tools;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":" * This class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":" * The TaskList is stored as a text file and is modified in real time with user command.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    /** Path to directory */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"    private static Path directoryPath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    /** Path to file */","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a default storage and initialises path to file.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    public Storage() {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"        filePath \u003d directoryPath.resolve(\"data.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a storage with path to specified file.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"     * @param fileName String name of file.","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"        filePath \u003d directoryPath.resolve(fileName);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"     * Loads previously stored data from file into current TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"     * @return TaskList stored in the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If file is not found or data is in invalid format.","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"    public TaskList loadFromFile() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"            File data \u003d new File(filePath.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"                try {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"                    String[] storedInfo \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"                    String type \u003d storedInfo[0];","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"                    boolean isDone \u003d storedInfo[1].equals(\"O\");","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"                    String description \u003d storedInfo[2];","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"                    Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"                    switch (type) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"                    case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"                        task \u003d new ToDo(description, isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"                    case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"                        task \u003d new Deadline(description, isDone, Parser.parseDate(storedInfo[3]));","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"                    case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"L1uY1jun"},"content":"                        task \u003d new Event(description, isDone, Parser.parseDateTime(storedInfo[3]));","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"L1uY1jun"},"content":"                        break;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"L1uY1jun"},"content":"                    default:","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"L1uY1jun"},"content":"                        throw new DukeException(\"OOPS!!! No save data found\");","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"L1uY1jun"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"L1uY1jun"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"L1uY1jun"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"L1uY1jun"},"content":"                    throw new DukeException(\"OOPS!!! Incorrect task format\");","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"L1uY1jun"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"L1uY1jun"},"content":"            sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"L1uY1jun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! Data not found\");","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"L1uY1jun"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"L1uY1jun"},"content":"     * Saves TaskList to file.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"L1uY1jun"},"content":"     * @param taskList TaskList to be saved.","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If file access has failed.","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"L1uY1jun"},"content":"    public void saveToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"L1uY1jun"},"content":"        List\u003cTask\u003e dataToStore \u003d taskList.getTaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"L1uY1jun"},"content":"        checkDirectoryExist();","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"L1uY1jun"},"content":"        checkFileExist();","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"L1uY1jun"},"content":"            FileWriter fw \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"L1uY1jun"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"L1uY1jun"},"content":"                String dataToSave \u003d dataToStore.get(i).taskToDataString();","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"L1uY1jun"},"content":"                fw.write(dataToSave);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"L1uY1jun"},"content":"            fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! File cannot be opened\");","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"L1uY1jun"},"content":"     * Appends task to end of file.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"L1uY1jun"},"content":"     * @param task Task to be appended.","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If file access has failed.","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"L1uY1jun"},"content":"    public void appendToFile(Task task) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"L1uY1jun"},"content":"        checkDirectoryExist();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"L1uY1jun"},"content":"        checkFileExist();","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"L1uY1jun"},"content":"            FileWriter data \u003d new FileWriter(filePath.toString(), true);","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"L1uY1jun"},"content":"            data.write(task.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"L1uY1jun"},"content":"            data.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! File cannot be opened\");","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":128,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"L1uY1jun"},"content":"     * Checks that directory exists, else make a directory at the path.","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"L1uY1jun"},"content":"    private static void checkDirectoryExist() {","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"L1uY1jun"},"content":"        File folder \u003d new File(directoryPath.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"L1uY1jun"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"L1uY1jun"},"content":"            folder.mkdir();","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"L1uY1jun"},"content":"     * Checks that file exists, else create a file at the path.","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If file access has failed.","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"L1uY1jun"},"content":"    private void checkFileExist() throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"L1uY1jun"},"content":"            File data \u003d new File(directoryPath.resolve(\"data.txt\").toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"L1uY1jun"},"content":"            if (!data.exists()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"L1uY1jun"},"content":"                data.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! Unable to create a new file. \"","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"L1uY1jun"},"content":"                    + \"Tasks might not be stored.\");","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":156}},{"path":"src/main/java/duke/tools/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tools;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import java.util.List;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":" * This class contains the task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    /** List of task stored in Duke */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"     * Constructs a TaskList with a specified list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"     * @param taskList Specified list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"     * Returns current list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"        return taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"     * Returns current number of tasks in TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"     * @return Number of tasks in TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"     * Returns true if taskList is empty, else false.","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"     * @return If taskList is empty.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"    public Boolean isEmpty() {","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"     * Returns task in TaskList specified by index.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task to return.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"     * @return Task of specified index.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If index was invalid, \u003e Size or \u003c 0.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"            return taskList.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"     * Adds task to TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"     * @param task Task to add.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"L1uY1jun"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"L1uY1jun"},"content":"     * Deletes task from TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If index was invalid, \u003e Size or \u003c 0.","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"L1uY1jun"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"L1uY1jun"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"L1uY1jun"},"content":"            taskList.remove(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"L1uY1jun"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"L1uY1jun"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":88}},{"path":"src/main/java/duke/tools/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tools;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a greetings message.","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"     * @return Greeting message.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatGreetingString() {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"        return \"Hello!\\nHow may i help you today?\";","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a farewell message.","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"     * @return Farewell message.","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatFarewellString() {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"        return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a message of status of TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"L1uY1jun"},"content":"     * If TaskList is not empty, include all contents of TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"L1uY1jun"},"content":"     * @param taskList List of task to be printed.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"L1uY1jun"},"content":"     * @return List status message.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If taskList.getTask(i) takes in invalid index.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatListStatusString(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"L1uY1jun"},"content":"        String output;","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"L1uY1jun"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"L1uY1jun"},"content":"            output \u003d \"There are currently no tasks in your list\";","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"L1uY1jun"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"L1uY1jun"},"content":"            output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"L1uY1jun"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"L1uY1jun"},"content":"                output \u003d output.concat(String.format(\"%d. %s\\n\", i + 1,","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"L1uY1jun"},"content":"                        taskList.getTask(i)));","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"L1uY1jun"},"content":"            output.concat(String.format(\"Now you have %d tasks in the list.\\n\",","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"L1uY1jun"},"content":"                    taskList.getSize()));","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"L1uY1jun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"L1uY1jun"},"content":"     * Create a message of all task found containing keyword.","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"L1uY1jun"},"content":"     * @param taskList TaskList to search through with keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"L1uY1jun"},"content":"     * @param keyword Keyword to find.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"L1uY1jun"},"content":"     * @return Find string message.","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"L1uY1jun"},"content":"     * @throws DukeException If taskList.getTask(i) takes in invalid index.","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatFindTaskString(TaskList taskList, String keyword) throws DukeException {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"L1uY1jun"},"content":"        String output;","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"L1uY1jun"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"L1uY1jun"},"content":"            output \u003d \"There are currently no tasks in your list\";","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"L1uY1jun"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"L1uY1jun"},"content":"            output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"L1uY1jun"},"content":"            int findCount \u003d 0;","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"L1uY1jun"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"L1uY1jun"},"content":"                if (taskList.getTask(i).isFoundInDescription(keyword)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"L1uY1jun"},"content":"                    output \u003d output.concat(String.format(\"%d. %s\\n\", i + 1,","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"L1uY1jun"},"content":"                            taskList.getTask(i)));","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"L1uY1jun"},"content":"                    findCount++;","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"L1uY1jun"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"L1uY1jun"},"content":"            if (findCount \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"L1uY1jun"},"content":"                output \u003d output.concat(\"Oh no, there are no matching tasks found :(\");","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"L1uY1jun"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"L1uY1jun"},"content":"                output \u003d output.concat(String.format(\"There are %d matching tasks found\\n\",","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"L1uY1jun"},"content":"                        findCount));","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"L1uY1jun"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"L1uY1jun"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"L1uY1jun"},"content":"        return output;","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a message marking task as done in TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task that is marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"L1uY1jun"},"content":"     * @param task Task marked as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"L1uY1jun"},"content":"     * @return Message.","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatMarkAsDoneString(int index, Task task) {","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%d. %s\",","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"L1uY1jun"},"content":"                index + 1, task);","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"L1uY1jun"},"content":"     * Prints message marking task as undone in TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task that is marked.","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"L1uY1jun"},"content":"     * @param task Task marked as undone.","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"L1uY1jun"},"content":"     * @return Message.","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatMarkAsUndoneString(int index, Task task) {","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"Ok! I\u0027ve marked this task as not done yet:\\n%d. %s\",","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"L1uY1jun"},"content":"                index + 1, task);","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a message of deleting task from TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"L1uY1jun"},"content":"     * @param index Index of task that is deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"L1uY1jun"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"L1uY1jun"},"content":"     * @return Message.","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatDeleteTaskString(int index, Task task) {","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"L1uY1jun"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%d. %s\",","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"L1uY1jun"},"content":"                index + 1, task);","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a message that TaskList is empty and no task can be deleted.","lastModifiedDate":"2022-09-01"},{"lineNumber":122,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatNoTaskToDeleteString() {","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"L1uY1jun"},"content":"        return \"OOPS!!! There are currently no task to delete\";","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a message of adding task to TaskList.","lastModifiedDate":"2022-09-01"},{"lineNumber":129,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"L1uY1jun"},"content":"     * @param task Task that was added.","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"L1uY1jun"},"content":"     * @return Message.","lastModifiedDate":"2022-09-01"},{"lineNumber":132,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatAddTaskString(Task task) {","lastModifiedDate":"2022-09-01"},{"lineNumber":134,"author":{"gitId":"L1uY1jun"},"content":"        return \"Got it! I\u0027ve added this task:\\n\u003e \" + task;","lastModifiedDate":"2022-09-01"},{"lineNumber":135,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"L1uY1jun"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"L1uY1jun"},"content":"     * Creates a message of DukeException that occurred.","lastModifiedDate":"2022-09-01"},{"lineNumber":139,"author":{"gitId":"L1uY1jun"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"L1uY1jun"},"content":"     * @param e DukeException containing error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"L1uY1jun"},"content":"     * @return Error message.","lastModifiedDate":"2022-09-01"},{"lineNumber":142,"author":{"gitId":"L1uY1jun"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"L1uY1jun"},"content":"    public static String formatExceptionString(DukeException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":144,"author":{"gitId":"L1uY1jun"},"content":"        return e.getMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":145,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":146}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"L1uY1jun":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"L1uY1jun":19}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    public void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"[D][ ] test1 (by: Dec 12 2022)\",","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"                new Deadline(\"test1\", false, LocalDate.of(2022, 12, 12)).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"[D][X] test2 (by: Jan 25 2023)\",","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"                new Deadline(\"test2\", true, LocalDate.of(2023, 1, 25)).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"    public void testTaskToDataString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        Deadline test3 \u003d new Deadline(\"test3\", false, LocalDate.of(2022, 11, 28));","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"D | X | test3 | 28/11/2022\\n\", test3.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"        Deadline test4 \u003d new Deadline(\"test4\", true, LocalDate.of(2023, 2, 19));","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"D | O | test4 | 19/02/2023\\n\", test4.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":28}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"class EventTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"    void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"[E][ ] test1 (at: 07:30PM Oct 27 2022)\",","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"                new Event(\"test1\", false, LocalDateTime.of(2022, 10, 27, 19, 30)).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"[E][X] test2 (at: 05:47AM Feb 01 2023)\",","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"                new Event(\"test2\", true, LocalDateTime.of(2023, 2, 1, 5, 47)).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"    void testTaskToDataString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        Event test3 \u003d new Event(\"test3\", false, LocalDateTime.of(2022, 8, 28, 23, 31));","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"E | X | test3 | 28/08/2022 2331\\n\", test3.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"        Event test4 \u003d new Event(\"test4\", false, LocalDateTime.of(2023, 3, 11, 2, 59));","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"E | X | test4 | 11/03/2023 0259\\n\", test4.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":27}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"class ToDoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"    void testToString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"[T][ ] test1\",","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"                new ToDo(\"test1\", false).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"[T][X] test2\",","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"                new ToDo(\"test2\", true).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"L1uY1jun"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"L1uY1jun"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"L1uY1jun"},"content":"    void testTaskToDataString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"L1uY1jun"},"content":"        ToDo test3 \u003d new ToDo(\"test3\", false);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"T | X | test3\\n\", test3.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"L1uY1jun"},"content":"        ToDo test4 \u003d new ToDo(\"test4\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"L1uY1jun"},"content":"        assertEquals(\"T | O | test4\\n\", test4.taskToDataString());","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"L1uY1jun"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"L1uY1jun"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"L1uY1jun":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"L1uY1jun"},"content":"todo individual project","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"L1uY1jun"},"content":"deadline individual project /by Tomorrow","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"L1uY1jun"},"content":"event CS2103T lecture /at Friday 4-6pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"L1uY1jun"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"L1uY1jun"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"L1uY1jun"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"L1uY1jun"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"L1uY1jun"},"content":"unmark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"L1uY1jun"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"L1uY1jun"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"L1uY1jun"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"L1uY1jun"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"L1uY1jun"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"L1uY1jun"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"L1uY1jun":14}}]

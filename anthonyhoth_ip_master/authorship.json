[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"    private String deadline;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    public Deadline(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        String[] split \u003d name.split(\"/by \");","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        this.name \u003d split[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        this.deadline \u003d split.length \u003c 2 ? \"You didn\u0027t add a deadline!\" : split[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"        return \"[D]\" + super.toString() + String.format(\"(by: %s)\", this.deadline);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"    // Initialise the task list","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"        greetUser();","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        main();","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out the greeting message.de","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    private static void greetUser() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"        System.out.println(\"Hello! I\u0027m Jukebox :)\\n\" + \"What can I do for you today?\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out the exit message.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    private static void exitJukebox() {","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"        System.out.println(\"Aww... OK, Hope to see you again!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"     * Main logic handler.","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"    public static void main() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        // Variables","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"        // Logic handler","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"        while (true) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"            String[] inputWordsSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"            String commandWord \u003d inputWordsSplit[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"            CommandWord command \u003d null;","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"            // Updating the command word, catching any invalid inputs","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"                command \u003d CommandWord.getCommand(commandWord);","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"            // Print out goodbye message and exits the program","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.BYE) {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"                exitJukebox();","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"            // Prints out the task list","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.LIST) {","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"                printList(taskList);","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"                continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"            // Marks or unmarks the given task","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.MARK || command \u003d\u003d CommandWord.UNMARK) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"                markUnmarkTask(command, inputWordsSplit);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"                continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"            // Add a new task based on the given keyword","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.TODO || command \u003d\u003d CommandWord.DEADLINE || command \u003d\u003d CommandWord.EVENT) {","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"                try {","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"                    addNewTask(command, inputWordsSplit[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"                    continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"                    System.out.println(\"Hmm... looks like you don\u0027t have a description for this task :( Please try again!\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"            // Deletes a task from the task list","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.DELETE) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"                deleteTask(inputWordsSplit);","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"         * Prints out the task list iteratively.","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"         * @param taskList Input task list","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"        private static void printList (ArrayList \u003c Task \u003e taskList) {","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"            if (!taskList.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(\"These are your current tasks! :)\");","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"                int i \u003d 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"                for (Task t : taskList) {","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"                    String s \u003d String.format(\"%d.%s\", i, t);","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"                    System.out.println(s);","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"                    i++;","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"                    if (t \u003d\u003d null) {","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"                        break;","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(\"No tasks have been added yet!\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"         * Prints the current number of tasks in the task list.","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"         * @param taskList Input task list","lastModifiedDate":"2022-08-21"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"        private static void printCurrentTasks (ArrayList \u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(String.format(\"And... that makes %d task(s) in your list! :)\", taskList.size()));","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"         * Marks or unmarks the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"         * @param command Input command word","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"         * @param inputWordsSplit String array of the command word with the task number","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"        private static void markUnmarkTask (CommandWord command, String[] inputWordsSplit){","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"                int taskNumber \u003d Integer.parseInt(inputWordsSplit[1]);","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"                Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"                if (command \u003d\u003d CommandWord.MARK) {","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"                    task.mark();","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"                    System.out.println(String.format(\"Goodjob! This task is now completed :)\\n\" + \"%s\", task.toString() + \"\\n\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"                } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"                    task.unmark();","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"                    System.out.println(String.format(\"Oh... OK, I\u0027ll mark this task as uncompleted!\\n\" + \"%s\", task.toString() + \"\\n\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(\"Please indicate a valid task number! :)\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"anthonyhoth"},"content":"         * Handles the adding of the 3 different kinds of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"anthonyhoth"},"content":"         * @param command Input command word","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"anthonyhoth"},"content":"         * @param contents Input task name","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"anthonyhoth"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"anthonyhoth"},"content":"        private static void addNewTask(CommandWord command, String contents){","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"anthonyhoth"},"content":"            Task newTask;","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.TODO) {","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"anthonyhoth"},"content":"                newTask \u003d new Todo(contents);","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"anthonyhoth"},"content":"            } else if (command \u003d\u003d CommandWord.DEADLINE) {","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"anthonyhoth"},"content":"                newTask \u003d new Deadline(contents);","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"anthonyhoth"},"content":"            } else {","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"anthonyhoth"},"content":"                newTask \u003d new Event(contents);","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"anthonyhoth"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(\"Okay!\\n\" + \"Added: \" + newTask + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"anthonyhoth"},"content":"        * Handles the deletion of the task from the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"anthonyhoth"},"content":"        * @param inputWordsSplit String array of the command word with the task number","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"anthonyhoth"},"content":"        */","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"anthonyhoth"},"content":"        private static void deleteTask(String[] inputWordsSplit) {","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"anthonyhoth"},"content":"                int taskNumber \u003d Integer.parseInt(inputWordsSplit[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"anthonyhoth"},"content":"                Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(\"Ok! I\u0027ve removed this task: \\n\" + task + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"anthonyhoth"},"content":"                taskList.remove(taskNumber - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"anthonyhoth"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(\"Please indicate a valid task number! :)\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-08-21"},{"lineNumber":170,"author":{"gitId":"anthonyhoth"},"content":"         * Enum for the command word","lastModifiedDate":"2022-08-21"},{"lineNumber":171,"author":{"gitId":"anthonyhoth"},"content":"         */","lastModifiedDate":"2022-08-21"},{"lineNumber":172,"author":{"gitId":"anthonyhoth"},"content":"        private enum CommandWord {","lastModifiedDate":"2022-08-21"},{"lineNumber":173,"author":{"gitId":"anthonyhoth"},"content":"            LIST(\"list\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"anthonyhoth"},"content":"            MARK(\"mark\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"anthonyhoth"},"content":"            UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"anthonyhoth"},"content":"            TODO(\"todo\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"anthonyhoth"},"content":"            DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"anthonyhoth"},"content":"            EVENT(\"event\"),","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"anthonyhoth"},"content":"            DELETE(\"delete\"),","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"anthonyhoth"},"content":"            BYE(\"bye\");","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"anthonyhoth"},"content":"            // String field for comparing to the input to the enum","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"anthonyhoth"},"content":"            private final String command;","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"anthonyhoth"},"content":"            /**","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"anthonyhoth"},"content":"             * Constructor for the CommandWord enum","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"anthonyhoth"},"content":"             * @param command User input command","lastModifiedDate":"2022-08-21"},{"lineNumber":188,"author":{"gitId":"anthonyhoth"},"content":"             */","lastModifiedDate":"2022-08-21"},{"lineNumber":189,"author":{"gitId":"anthonyhoth"},"content":"            CommandWord(String command) {","lastModifiedDate":"2022-08-21"},{"lineNumber":190,"author":{"gitId":"anthonyhoth"},"content":"                this.command \u003d command;","lastModifiedDate":"2022-08-21"},{"lineNumber":191,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"anthonyhoth"},"content":"            /**","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"anthonyhoth"},"content":"             * Compares the input command to the enum.","lastModifiedDate":"2022-08-21"},{"lineNumber":195,"author":{"gitId":"anthonyhoth"},"content":"             * @param input Input command string","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"anthonyhoth"},"content":"             * @return CommandWord from the enum that matches the input command","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"anthonyhoth"},"content":"             * @throws IllegalArgumentException When an invalid command is inputted","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"anthonyhoth"},"content":"             */","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"anthonyhoth"},"content":"            private static CommandWord getCommand(String input) throws IllegalArgumentException {","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"anthonyhoth"},"content":"                for (int i \u003d 0; i \u003c CommandWord.values().length; i++) {","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"anthonyhoth"},"content":"                    CommandWord temp \u003d CommandWord.values()[i];","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"anthonyhoth"},"content":"                    if (input.equals(temp.command)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"anthonyhoth"},"content":"                        return temp;","lastModifiedDate":"2022-08-21"},{"lineNumber":204,"author":{"gitId":"anthonyhoth"},"content":"                    }","lastModifiedDate":"2022-08-21"},{"lineNumber":205,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-21"},{"lineNumber":206,"author":{"gitId":"anthonyhoth"},"content":"                throw new IllegalArgumentException(\"There is no such command called \" + input + \"!\\n\" + \"Please try again :)\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":207,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"anthonyhoth":207,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"    private String time;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"    public Event(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"        String[] split \u003d name.split(\"/at \");","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        this.name \u003d split[0];","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        this.time \u003d split.length \u003c 2 ? \"You didn\u0027t add a time!\" : split[1];","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        return \"[E]\" + super.toString() + String.format(\"(at: %s)\", this.time);","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"    protected String name;","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * Gets the completion status of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * @return A status icon if its completed/uncompleted","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        return isCompleted ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     * Marks the task to show completed","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"     * Unmarks the task to show uncompleted","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"[%s] %s\", getStatus(), name);","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"anthonyhoth":44}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"todo Read","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"deadline Return /by tmr","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"event Eat /at Sunday","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"mark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"unmark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"delete 2","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":10}}]

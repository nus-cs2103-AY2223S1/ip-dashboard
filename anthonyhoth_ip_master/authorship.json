[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anthonyhoth":16,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"E |   | Attend talk | IMPORTANT | 2022-10-19 1200","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"D |   | 2103T Quiz | - | 2022-10-18 2359","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"T |   | Run | Run fast","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"T |   | Go for a run | -","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"E |   | Attend talk | - | 2022-09-13 1200","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"D |   | Homework | - | 2022-09-13 1400","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"anthonyhoth":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"\u003cimg src\u003d\"icon.gif\" alt\u003d\"header\" width\u003d\"250\"/\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"# Toothless User Guide","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"## Overview","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"**Toothless** from How To Train Your Dragon has become your chatbot! With adorable reactions, Toothless can help you keep track of your tasks in a cute yet efficient way!","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"## Quick start","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"1. Ensure `Java 11` or above is installed on your computer.","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"2. Download the latest `Duke.jar` from [here](https://github.com/anthonyhoth/ip/releases/).","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"3. Copy the file to the folder you want to use as the **home** folder for Toothless.","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"4. Double click on `Duke.jar` to launch.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"5. The interface should look like this:","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"   ![image](Ui.png)","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"6. There you go! Toothless is officially on your computer and ready to help you track your tasks!","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"7. Refer to [Features](#features) for the various commands available and [Usage](#usage) for how to use each one!","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"### Add 📝","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"Add new tasks to your task list. There are 3 kinds of tasks: `todo`, `event`, `deadline`","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"### Delete 🗑","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"Deletes task from the task list.","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"### View 🧾","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"View all tasks in the task list.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"### Find 🔍","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"Search for tasks in the task list that contain a given keyword.","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"### Mark 📑","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"Mark a task as complete.","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"### Unmark ❌ 📑","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"Mark a task as incomplete.","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"### Note 🏷","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"Add a note to a task.","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"### 📝 `todo` - Adding a Todo task","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"Adds a todo task with the given task description.","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"`todo Go for a run`","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"Expected outcome:","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"Success message containing the task and the current number of tasks in your task list.","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"Meow!","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"Added: [T][] Go for a run","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"You meow have 1 task(s) in your task list!","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"### 📝 `event` - Adding an Event task","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"Adds an event task with the given task description and timing in YYYY-MM-DD HHmm format.","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"`event Attend talk /at 2020-09-15 1250`","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"Expected outcome:","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"Meow!","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"Added: [E][] Attend talk (at: Sep 15 2020 1250)","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"You meow have 2 task(s) in your task list!","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"### 📝 `deadline` - Adding a Deadline task","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"Adds an deadline task with the given task name and deadline in YYYY-MM-DD HHmm format.","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"`deadline 2103T Quiz /by 2018-10-13 1000`","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"Expected outcome:","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"Meow!","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"Added: [D][] 2103T Quiz (by: Oct 13 2018 1000)","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"You meow have 3 task(s) in your task list!","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"### 🗑 `delete` - Deleting a task","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"Delete task with a given task index.","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"`delete 1`","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"Success message containing task that has been deleted.","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"Meow! I\u0027ve re-meow-ved this task:","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"[T][] Go for a run","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"### 🧾 `list` - Displaying all tasks","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"Displays all tasks in the task list.","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"`list`","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"Current task list.","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"anthonyhoth"},"content":"1. [T][ ] Go for a run","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"anthonyhoth"},"content":"2. [D][ ] 2103T Quiz (by: Oct 13 2018 1000)","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"anthonyhoth"},"content":"### 🔍 `find` - Searching for tasks with keyword","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"anthonyhoth"},"content":"Display tasks that contain a given keyword.","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"anthonyhoth"},"content":"`find talk`","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"anthonyhoth"},"content":"Expected outcome:","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"anthonyhoth"},"content":"Here are the tasks that have \"talk\"!","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"anthonyhoth"},"content":"1. [E][ ] Attend talk (at: Sep 13 2022 1200)","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"anthonyhoth"},"content":"### 📑 `mark` - Marking a task as done","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"anthonyhoth"},"content":"Mark a task as done given with a given task index.","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"anthonyhoth"},"content":"`mark 1`","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"anthonyhoth"},"content":"Goodjob! This task is meow completed :)","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"anthonyhoth"},"content":"1. [E][X] Attend talk (at: Sep 13 2022 1200)","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"anthonyhoth"},"content":"### ❌ 📑 `unmark` - mark a task as undone","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"anthonyhoth"},"content":"Mark a task as undone with a given task index.","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"anthonyhoth"},"content":"`unmark 1`","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"anthonyhoth"},"content":"Expected outcome:","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"anthonyhoth"},"content":"Purr... Ok, I\u0027ll meow-rk this task as uncompleted!","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"anthonyhoth"},"content":"1. [E][] Attend talk (at: Sep 13 2022 1200)","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"anthonyhoth"},"content":"```","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"anthonyhoth"},"content":"### 🏷 `note` - Adding a note to a task","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"anthonyhoth"},"content":"Add a note to a task with a given task index.","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"anthonyhoth"},"content":"Example of usage:","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":190,"author":{"gitId":"anthonyhoth"},"content":"`note 1 IMPORTANT`","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"anthonyhoth"},"content":"Expected outcome:","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":195,"author":{"gitId":"anthonyhoth"},"content":"Meow! I\u0027ve added \"IMPORTANT\" to the task!","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"anthonyhoth"},"content":"1. [E][] Attend talk [Note: IMPORTANT] (at: Sep 13 2022 1200)","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"anthonyhoth":173,"-":24}},{"path":"src/main/java/duke/commandword/CommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.commandword;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":" * Enum for the command word","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"public enum CommandWord {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    NOTE(\"note\"),","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    BYE(\"bye\");","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    // String field for comparing to the input to the enum","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    private final String command;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the CommandWord enum.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     * @param command User input command.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"    CommandWord(String command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a CommandWord based on the given input string.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     * @param input Input command string","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"     * @return CommandWord from the enum that matches the input command","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     * @throws IllegalArgumentException If an invalid command is inputted","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"    public static CommandWord getCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"        for (int i \u003d 0; i \u003c CommandWord.values().length; i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"            CommandWord temp \u003d CommandWord.values()[i];","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"            if (input.equals(temp.command)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"                return temp;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"        throw new DukeException(\"There is no such command called \" + input + \"!\\n\" + \"Please try again :)\\n\");","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":48}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.exception;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":" * DukeException class for exceptions specific for Duke","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"     * @param message Input exception message.","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        super(message);","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"anthonyhoth":14}},{"path":"src/main/java/duke/main/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":" * Utility Class managing LocalDateTime inputs and outputs","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"public class DateTime {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    private static DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    private static DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"     * Parses the date given into a LocalDateTime.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"     * @param date String input by user.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"     * @return LocalDateTime parsed from the input.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the string input by the user is not in the valid format.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    public static LocalDateTime parseDate(String date) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"            LocalDateTime parsedDate \u003d LocalDateTime.parse(date, inputFormat);","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"            return parsedDate;","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Purr... your date and time has to be in YYYY-MM-DD HHmm format!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     * Prints String of given LocalDateTime.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     * @param date Input LocalDateTime.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"     * @return String from the input LocalDateTime in its output format.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    public static String printDate(LocalDateTime date) {","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"        assert date !\u003d null : \"Invalid LocalDateTime\";","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"        return date.format(outputFormat);","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"     * Changes format of LocalDateTime into the input format.","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"     * @param date LocalDateTime to be changed back to input format.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"     * @return String from the input LocalDateTime in its input format.","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"    public static String changeFormat(LocalDateTime date) {","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"        assert date !\u003d null : \"Invalid LocalDateTime\";","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"        return date.format(inputFormat);","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"anthonyhoth":52}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    private Label dialog;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"        // Clip images into circles","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"        Circle clip \u003d new Circle(45, 39, 40);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"    private void flip() {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"        db.flip();","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"        db.setBackground(Background.fill(new Color(1, 1, 1, 1)));","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"        return db;","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"anthonyhoth":67}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Event;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":" * Main Duke class.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    public Duke() {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"        // Initialising the field variables","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"            taskList \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"            ui.successLoadMessage();","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"            ui.printErrorMessage(de);","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"     * Executes the logic flow of Duke.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"    String getResponse(String input) {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"        ui.greetUser();","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"            // If input is invalid, then print error message","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"                Parser.parse(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"                return ui.printErrorMessage(de);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"            // If input is valid","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"            CommandWord command \u003d Parser.getCommand();","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"            String description \u003d Parser.getDescription();","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"                switch (command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"                case BYE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"                    isExit \u003d true;","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.exitJukebox();","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"                case LIST: {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"                    return taskList.printList();","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"                case MARK:","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"                case UNMARK: {","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.markUnmarkTask(command, description);","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"                    Task markedTask \u003d taskList.getTask(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"                    storage.saveTaskList(taskList); // Save to file","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.markUnmarkTaskMessage(markedTask, command);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"                case DELETE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"                    Task deletedTask \u003d taskList.deleteTask(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"                    storage.saveTaskList(taskList); // Save to file","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.deleteTaskMessage(deletedTask, taskList);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"                case FIND: {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"                    return taskList.findTask(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"                case TODO: {","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"                    Task newTask \u003d new Todo(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"                    storage.saveTaskList(taskList); // Save to file","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.addTaskMessage(newTask, taskList);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"                case DEADLINE: {","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"                    String[] descriptionArr \u003d description.split(\" /by \");","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"                    LocalDateTime dateTime \u003d DateTime.parseDate(descriptionArr[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"                    String taskDescription \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"                    Task newTask \u003d new Deadline(taskDescription, dateTime);","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"                    storage.saveTaskList(taskList); // Save to file","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.addTaskMessage(newTask, taskList);","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"                case EVENT: {","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"                    String[] descriptionArr \u003d description.split(\" /at \");","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"                    LocalDateTime dateTime \u003d DateTime.parseDate(descriptionArr[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"                    String taskDescription \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"                    Task newTask \u003d new Event(taskDescription, dateTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"                    storage.saveTaskList(taskList); // Save to file","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.addTaskMessage(newTask, taskList);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"                case NOTE: {","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"                    String[] descriptionArr \u003d description.split(\" \", 2);","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"                    String taskNumber \u003d descriptionArr[0];","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"                    String taskNote \u003d descriptionArr[1];","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"                    Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.noteTask(taskNumber, taskNote);","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"                    storage.saveTaskList(taskList); // Save to file","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"                    return ui.addedNote(taskNote, task);","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"                default: {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"                    return \"Oops... This is a rare error!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"                return de.getMessage();","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"        return \"Unhandled error\";","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"anthonyhoth":124,"-":2}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"public class Launcher {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"anthonyhoth":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"public class Main extends Application {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"            stage.setTitle(\"Toothless\");","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"            stage.show();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"anthonyhoth":32}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    private TextField userInput;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    private Button sendButton;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    private Duke duke;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/toothless.jpeg\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"     * Create the first dialog box with greet message.","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"    public void initialize() {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.greetUser(), dukeImage));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"        duke \u003d d;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"        );","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"        userInput.clear();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"anthonyhoth":56}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":" * Class dealing with logic of user commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"public class Parser {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    private static CommandWord command; // Command word","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    private static String description; // Description field","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     * Parses input string, updates command word and task description if they are valid.","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * @param input Input string to be parsed.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If command or input description is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    public static void parse(String input) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"            String inputCommand \u003d inputArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"            command \u003d CommandWord.getCommand(inputCommand); // Throws DE","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"            // If the command word is not LIST or BYE, check if user input is valid.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"            if (command !\u003d CommandWord.LIST \u0026\u0026 command !\u003d CommandWord.BYE) {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"                String inputDescription \u003d inputArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"                checkDescription(inputDescription); // Throws DE","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"                description \u003d inputDescription;","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Purr... Seems like you did not add a task description or number!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     * Checks if user input task description is valid corresponding to the command word.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Input task description.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If deadline/time/index fields are invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkDescription(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"        switch (command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"        case DEADLINE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"            checkDeadline(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"        case EVENT: {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"            checkTime(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"        case MARK:","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"        case DELETE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"            checkIndex(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"        case NOTE: {","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"            checkNote(description);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"        default: {","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"     * Checks deadline field of Deadline objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of given Deadline object.","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If deadline does not exist or in the wrong format.","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkDeadline(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"        String[] descriptionArr \u003d description.split(\" /by \");","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"            String taskName \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"            String taskDeadline \u003d descriptionArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"            DateTime.parseDate(taskDeadline); // Throws DukeException","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Please indicate the date \u0026 time of this deadline using /by !\");","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"     * Checks time field of Event objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of given Event object.","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If time does not exist or in the wrong format.","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkTime(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"        String[] descriptionArr \u003d description.split(\" /at \");","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"            String taskName \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"            String taskDeadline \u003d descriptionArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"            DateTime.parseDate(taskDeadline); // Throws DukeException","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Please indicate the date \u0026 time of this event using /at !\");","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"     * Checks if index given by user is valid.","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of MARK/UNMARK/DELETE command calls.","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given task number is invalid.","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkIndex(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"            Integer.parseInt(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Purr... Did you add a wrong task number?\");","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"     * Checks if the index given by user is valid.","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of NOTE command calls.","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given task number is invalid","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkNote(String description) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"        String[] descriptionArr \u003d description.split(\" \", 2);","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"            String taskIndex \u003d descriptionArr[0];","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"            String taskNote \u003d descriptionArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"            checkIndex(taskIndex); // Throws DukeException","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Please write the note you want to add!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the CommandWord.","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"anthonyhoth"},"content":"     * @return CommandWord command of this class.","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"anthonyhoth"},"content":"    public static CommandWord getCommand() {","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"anthonyhoth"},"content":"        assert command !\u003d null : \"Command does not exist!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"anthonyhoth"},"content":"        return command;","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the description string.","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"anthonyhoth"},"content":"     * @return Description string of this class.","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"anthonyhoth"},"content":"    public static String getDescription() {","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"anthonyhoth"},"content":"        assert description !\u003d null : \"Description does not exist!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"anthonyhoth"},"content":"        return description;","lastModifiedDate":"2022-09-19"},{"lineNumber":152,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"},{"lineNumber":154,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":154}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Event;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":" * Class dealing with loading tasks from the save file and saving tasks into the file.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"public class Storage {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    private static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    private static final Path DATA_FOLDER_PATH \u003d Paths.get(PROJECT_ROOT, \"data\");","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    private static boolean directoryExists \u003d java.nio.file.Files.exists(DATA_FOLDER_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    private static final Path SAVE_FILE_PATH \u003d DATA_FOLDER_PATH.resolve(\"duke.txt\");","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    private static boolean fileExists \u003d Files.exists(SAVE_FILE_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"     * Saves input task list to the save file.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList TaskList to be saved.","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    public static void saveTaskList(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        // Create directory if it does not exist","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"        if (!directoryExists) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"                Files.createDirectory(DATA_FOLDER_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"        // Save task list into save file","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"            if (fileExists) {","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"                // Overwrite the current save file","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"                clearSaveFile();","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"                for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"                    Task task \u003d taskList.getTask(Integer.toString(i));","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"                    String reformattedTask \u003d task.changeFormat();","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"                    Files.write(SAVE_FILE_PATH, (reformattedTask + System.lineSeparator()).getBytes(),","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"                            StandardOpenOption.APPEND);","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"                // Create new file and save","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"                Files.createFile(SAVE_FILE_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"                for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"                    Task task \u003d taskList.getTask(Integer.toString(i));","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"                    String reformattedTask \u003d task.changeFormat();","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"                    Files.write(SAVE_FILE_PATH, (reformattedTask + System.lineSeparator()).getBytes(),","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"                            StandardOpenOption.APPEND);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"     * Clears the data in the save file.","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"    public static void clearSaveFile() {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"            Files.newBufferedWriter(SAVE_FILE_PATH, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"     * Loads saved tasks in the save file into the TaskList.","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If there is an error loading the file.","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"    public static ArrayList\u003cTask\u003e loadTaskList() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"            ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"            String[] linesArr \u003d Files.lines(SAVE_FILE_PATH).toArray(String[]::new);","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"            for (String l : linesArr) {","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"                tempTaskList.add(parseString(l));","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"            return tempTaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Purr... looks like you don\u0027t have an existing save file, let\u0027s make one!\");","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"     * Parses a Task according to the details from the String.","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskString String containing details of the task.","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"     * @return Task created with details from the input.","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If there is error parsing the output task.","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"    private static Task parseString(String taskString) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"        // Split the string into an array of properties","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"        String[] taskProperties \u003d taskString.split(\" \\\\| \", 5);","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"            String taskType \u003d taskProperties[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"            String taskDone \u003d taskProperties[1];","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"            String taskDescription \u003d taskProperties[2];","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"            String taskNote \u003d taskProperties[3];","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"            Task task \u003d null;","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"            switch (taskType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"            case \"T\": {","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"            case \"E\": {","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"                String taskDateTime \u003d taskProperties[4];","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"                LocalDateTime dateTime \u003d DateTime.parseDate(taskDateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"                task \u003d new Event(taskDescription, dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"            case \"D\": {","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"                String taskDateTime \u003d taskProperties[4];","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"                LocalDateTime dateTime \u003d DateTime.parseDate(taskDateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"                task \u003d new Deadline(taskDescription, dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"            default: {","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"anthonyhoth"},"content":"            if (taskDone.equals(\"X\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"anthonyhoth"},"content":"                task.mark();","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"anthonyhoth"},"content":"            if (!taskNote.equals(\"-\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"anthonyhoth"},"content":"                task.addNote(taskNote);","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"anthonyhoth"},"content":"            return task;","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Error in saved file!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":147}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":" * Class encapsulating the task list and its methods.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"public class TaskList {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList ArrayList of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * Adds Task to the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Deletes Task from the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @param indexString String of the index of the task to be deleted.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given string index is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    public Task deleteTask(String indexString) throws DukeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"            Task delTask \u003d getTask(indexString); // Throws DE","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"            this.taskList.remove(delTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"            return delTask;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"            throw e;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"     * Returns Task from the given index in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"     * @param indexString String of the index of the task to be returned.","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"     * @return Task at the given index in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given string index is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"    public Task getTask(String indexString) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"            int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"            Task currTask \u003d this.taskList.get(index - 1); // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"            return currTask;","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Purr... Seems like that\u0027s an invalid task number :(\");","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"     * Prints the tasks in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"    public String printList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"        if (!this.taskList.isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"            output +\u003d \"Meow! These are your current tasks! :)\\n\";","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"                String s \u003d String.format(\"%d. %s\\n\", i, t);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"                output +\u003d s;","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"                i++;","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"            return output;","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"            return \"No tasks have been added yet!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"     * Marks or unmarks the task.","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"     * @param command Input command word.","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"     * @param description String array of the command word with the task number","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"    public void markUnmarkTask(CommandWord command, String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"            Task task \u003d getTask(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.MARK) {","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"                task.mark();","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"                task.unmark();","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"     * Find for tasks that contain keywords s.","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"     * @param s Keyword to search the tasklist.","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If task list is empty or if there are no matches.","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"    public String findTask(String s) {","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"        if (taskList.size() \u003d\u003d 0) { // If task list is empty","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"            return \"Purr... I don\u0027t think you have any tasks as of now!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"        } else { // if not empty, search","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"            return searchTaskList(s);","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"     * Adds a note to Task at given index.","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"     * @param index Index of Task to add a note to.","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"     * @param note Given note to add to the Task.","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given index is invalid.","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"    public void noteTask(String index, String note) throws DukeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"            Task taskToNote \u003d getTask(index);","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"            taskToNote.addNote(note);","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"anthonyhoth"},"content":"     * Searches task list for tasks that contain the given input.","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"anthonyhoth"},"content":"     * @param input Input string to search the task list with.","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of matching tasks.","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"anthonyhoth"},"content":"    public String searchTaskList(String input) {","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"anthonyhoth"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"anthonyhoth"},"content":"        String output \u003d String.format(\"Here are the tasks that have \\\"%s\\\"!\\n\", input);","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"anthonyhoth"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"anthonyhoth"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"anthonyhoth"},"content":"            if (currTask.toString().contains(input)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"anthonyhoth"},"content":"                output +\u003d String.format(\"%d. %s\\n\", count, currTask);","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"anthonyhoth"},"content":"                count++;","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"anthonyhoth"},"content":"        if (count \u003e 1) {","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"anthonyhoth"},"content":"            return output;","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"anthonyhoth"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"anthonyhoth"},"content":"            return \"Purr... I don\u0027t think you have such tasks in the list!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":155}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":" * Class encapsulating user interactions.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"public class Ui {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    public Ui() {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the greeting message","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    public static String greetUser() {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"        return \"Meow! I\u0027m Toothless :)\\n\" + \"What can I do for you today?\";","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the exit message.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public String exitJukebox() {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        return \"Purr...Ok, Hope to see you again!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out error message of DukeException.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @param de DukeException of which message to print.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"    public String printErrorMessage(DukeException de) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"        return de.getMessage();","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for a successful loading of save file.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"    public String successLoadMessage() {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"        return \"Loading save file... Done!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for adding a task.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task that was added into the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList Task list that the task was added into.","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"    public String addTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"        return \"Meow!\\n\" + \"Added: \" + task + \"\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"                + String.format(\"You meow have %d task(s) in your task list!\", taskList.getSize());","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for marking and unmarking a task.","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task that was marked or unmarked.","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"     * @param command Command that is either MARK or UNMARK.","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"    public String markUnmarkTaskMessage(Task task, CommandWord command) throws DukeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"        switch (command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"        case MARK: {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"            return \"Goodjob! This task is meow completed :)\\n\" + task;","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"        case UNMARK: {","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"            return \"Purr... Ok, I\u0027ll meow-rk this task as uncompleted!\\n\" + task;","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"        default: {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Purr...I\u0027m unable to mark/unmark this task...\");","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for deleting a task.","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList Task list that the task was deleted from.","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"    public String deleteTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"        return \"Meow! I\u0027ve re-meow-ved this task: \\n\" + task;","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"    public String addedNote(String note, Task task) {","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"        return \"Meow! I\u0027ve added \\\"\" + note + \"\\\" to the task!\\n\" + task;","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":87}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.main.DateTime;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":" * Class for Deadline-type Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    public Deadline(String name, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        this.deadline \u003d dateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", DateTime.printDate(deadline));","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Deadline object in format to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Deadline object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"D | %s | %s | %s | %s\", getStatus(), name, getNote(), DateTime.changeFormat(this.deadline));","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import duke.main.DateTime;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":" * Class for Event-type Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    public Event(String name, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        this.time \u003d dateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", DateTime.printDate(time));","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Event object in format to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Event object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"E | %s | %s | %s | %s\", getStatus(), name, getNote(), DateTime.changeFormat(this.time));","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":" * Class for Duke Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"    protected String name;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    protected String note;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"     * Gets the completion status of the Task","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"     * @return A status icon if its completed/uncompleted","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"        return isCompleted ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"     * Gets icon or note description of the Task.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"     * @return An icon or note description of Task.","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    public String getNote() {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        return note \u003d\u003d null ? \"-\" : note;","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"     * Marks the task to show completed","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"     * Unmarks the task to show uncompleted","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"            return String.format(\"[%s] %s\", getStatus(), name);","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"            return String.format(\"[%s] %s [Note: %s]\", getStatus(), name, note);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Task object in format to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Task object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"            return String.format(\"[%s] | %s\", getStatus(), name);","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"        } else {","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"            return String.format(\"[%s] | %s [Note: %s]\", getStatus(), name, note);","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"    };","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"     * Adds a note to Task object.","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"     * @param note String note to be added.","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"    public void addNote(String note) {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"anthonyhoth":81}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":" * Class for Todo-type Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Todo object in format to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Todo object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"T | %s | %s | %s\", getStatus(), name, getNote());","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"anthonyhoth":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"anthonyhoth":19}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"public class ParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public void parse_missingDescription_exceptionThrown() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"            parser.parse(\"todo\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"            assertEquals(\"Hmm... Seems like you did not add a task description or number!\", de.getMessage());","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"anthonyhoth":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public void changeFormat__Success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        Deadline d1 \u003d new Deadline(\"This is a Test Deadline\", LocalDateTime.of(2022, 9, 4, 12, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        Deadline d2 \u003d new Deadline(\"This is also a Test Deadline\", LocalDateTime.of(2022, 4, 9, 16, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        d2.mark();","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"D |   | This is a Test Deadline | 2022-09-04 1200\", d1.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"D | X | This is also a Test Deadline | 2022-04-09 1600\", d2.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"anthonyhoth":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"public class EventTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public void eventChangeFormatTest_Success() {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        Event e1 \u003d new Event(\"This is a Test Event\", LocalDateTime.of(2022, 9, 4, 12, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        Event e2 \u003d new Event(\"This is also a Test Event\", LocalDateTime.of(2022, 4, 9, 16, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        e1.mark();","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"E | X | This is a Test Event | 2022-09-04 1200\", e1.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"E |   | This is also a Test Event | 2022-04-09 1600\", e2.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"anthonyhoth":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    public void todoChangeFormatTest_Success() {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        Todo t1 \u003d new Todo(\"This is a Test Todo\");","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        Todo t2 \u003d new Todo(\"This is also a Test Todo\");","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        t2.mark();","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"T |   | This is a Test Todo\", t1.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"T | X | This is also a Test Todo\", t2.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"anthonyhoth":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"todo Read","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"deadline Return /by tmr","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"event Eat /at Sunday","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"mark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"unmark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"delete 2","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":10}}]

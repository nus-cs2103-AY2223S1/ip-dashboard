[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    mainClassName \u003d \"duke.main.Duke\"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anthonyhoth":1,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"T |   | read book","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"anthonyhoth":1}},{"path":"src/main/java/duke/commandword/CommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.commandword;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":" * Enum for the command word","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"public enum CommandWord {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    BYE(\"bye\");","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    // String field for comparing to the input to the enum","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    private final String command;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the CommandWord enum.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     * @param command User input command.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    CommandWord(String command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a CommandWord based on the given input string.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     * @param input Input command string","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     * @return CommandWord from the enum that matches the input command","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"     * @throws IllegalArgumentException If an invalid command is inputted","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    public static CommandWord getCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"        for (int i \u003d 0; i \u003c CommandWord.values().length; i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"            CommandWord temp \u003d CommandWord.values()[i];","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"            if (input.equals(temp.command)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"                return temp;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"        throw new DukeException(\"There is no such command called \" + input + \"!\\n\" + \"Please try again :)\\n\");","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":47}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.exception;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":" * DukeException class for exceptions specific for Duke","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"        /**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"         * Constructor for the DukeException class.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"         * @param message Input exception message.","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"         */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        public DukeException(String message) {","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"            super(message);","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"anthonyhoth":14}},{"path":"src/main/java/duke/main/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime; // Import the LocalDateTime class","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import java.time.format.DateTimeFormatter; // Import the DateTimeFormatter class","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":" * Utility Class managing LocalDateTime inputs and outputs","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"public class DateTime {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    private static DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    private static DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     * Parses the date given into a LocalDateTime.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     * @param date String input by user.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"     * @return LocalDateTime parsed from the input.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the string input by the user is not in the valid format.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    public static LocalDateTime parseDate(String date) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"            LocalDateTime parsedDate \u003d LocalDateTime.parse(date, inputFormat);","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"            return parsedDate;","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... your date and time has to be in YYYY-MM-DD HHmm format!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Prints String of given LocalDateTime.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @param date Input LocalDateTime.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     * @return String from the input LocalDateTime in its output format.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    public static String printDate(LocalDateTime date) {","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        return date.format(outputFormat);","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"     * Changes format of LocalDateTime into the input format.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"     * @param date LocalDateTime to be changed back to input format.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"     * @return String from the input LocalDateTime in its input format.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"    public static String changeFormat(LocalDateTime date) {","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"        return date.format(inputFormat);","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"anthonyhoth":48}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":" * Main Duke class.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    private Duke() {","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"        // Initialising the field variables","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"            taskList \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"            ui.successLoadMessage();","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"            ui.printErrorMessage(de);","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"     * Executes the logic flow of Duke.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"    public void run() {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"        ui.greetUser();","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"            // Variables","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"            // If input is invalid, then print error message","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"                Parser.parse(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"                ui.printErrorMessage(de);","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"                continue;","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"            // If input is valid","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"            CommandWord command \u003d Parser.getCommand();","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"            String description \u003d Parser.getDescription();","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"                switch (command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"                case BYE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"                    ui.exitJukebox();","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"                    isExit \u003d true;","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"                case LIST: {","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.printList();","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"                case MARK:","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"                case UNMARK: {","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.markUnmarkTask(command, description);","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"                    Task markedTask \u003d taskList.getTask(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"                    ui.markUnmarkTaskMessage(markedTask, command);","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"                case DELETE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"                    Task deletedTask \u003d taskList.getTask(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"                    ui.deleteTaskMessage(deletedTask, taskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.deleteTask(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"                case FIND: {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.findTask(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"                case TODO: {","lastModifiedDate":"2022-09-18"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"                    Task newTask \u003d new Todo(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"                    ui.addTaskMessage(newTask, taskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-18"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"                case DEADLINE: {","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"                    String[] descriptionArr \u003d description.split(\" /by \");","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"                    LocalDateTime dateTime \u003d DateTime.parseDate(descriptionArr[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"                    String taskDescription \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"                    Task newTask \u003d new Deadline(taskDescription, dateTime);","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"                    ui.addTaskMessage(newTask, taskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"                case EVENT: {","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"                    String[] descriptionArr \u003d description.split(\" /at \");","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"                    LocalDateTime dateTime \u003d DateTime.parseDate(descriptionArr[1]);","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"                    String taskDescription \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"                    Task newTask \u003d new Deadline(taskDescription, dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"                    ui.addTaskMessage(newTask, taskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"                default: {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"                    System.out.print(\"Oops... This is a rare error!\");","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"                storage.saveTaskList(taskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(de.getMessage());","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"     * Main method of Duke class.","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"     * @param args Main input arguments from user.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"anthonyhoth":133,"-":2}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":" * Class dealing with logic of user commands.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"public class Parser {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    private static CommandWord command; // Command word","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    private static String description; // Description field","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     * Parses input string, updates command word and task description if they are valid.","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * @param input Input string to be parsed.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If command or input description is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    public static void parse(String input) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"            String inputCommand \u003d inputArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"            command \u003d CommandWord.getCommand(inputCommand); // Throws DE","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"            // If the command word is not LIST or BYE, check if user input is valid.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"            if (command !\u003d CommandWord.LIST \u0026\u0026 command !\u003d CommandWord.BYE) {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"                String inputDescription \u003d inputArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"                checkDescription(inputDescription); // Throws DE","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"                description \u003d inputDescription;","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... Seems like you did not add a task description or number!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"     * Checks if user input task description is valid corresponding to the command word.","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Input task description.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If deadline/time/index fields are invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkDescription(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"            switch (command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"            case DEADLINE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"                checkDeadline(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"            case EVENT: {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"                checkTime(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"            case MARK:","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"            case UNMARK:","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"            case DELETE: {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"                checkIndex(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"     * Checks deadline field of Deadline objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of given Deadline object.","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If deadline does not exist or in the wrong format.","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkDeadline(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"        String[] descriptionArr \u003d description.split(\" /by \");","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"            String taskName \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"            String taskDeadline \u003d descriptionArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"            DateTime.parseDate(taskDeadline); // Throws DukeException","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Please indicate the date \u0026 time of this deadline using /by !\");","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"     * Checks time field of Event objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of given Event object.","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If time does not exist or in the wrong format.","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkTime(String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"        String[] descriptionArr \u003d description.split(\" /at \");","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"            String taskName \u003d descriptionArr[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"            String taskDeadline \u003d descriptionArr[1]; // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"            DateTime.parseDate(taskDeadline); // Throws DukeException","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Please indicate the date \u0026 time of this event using /at !\");","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"     * Checks if index given by user is valid.","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"     * @param description Description field of MARK/UNMARK/DELETE command calls.","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"    public static void checkIndex(String description) throws DukeException{","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"            Integer.parseInt(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... Did you add a wrong task number?\");","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the CommandWord.","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"     * @return CommandWord command of this class.","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"    public static CommandWord getCommand() {","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"        return command;","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the description string.","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"     * @return Description string of this class.","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"    public static String getDescription() {","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"        return description;","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":129}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"import java.nio.file.*;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":" * Class dealing with loading tasks from the save file and saving tasks into the file.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"public class Storage {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    private static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    private static final Path DATA_FOLDER_PATH \u003d Paths.get(PROJECT_ROOT, \"data\");","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    private static boolean directoryExists \u003d java.nio.file.Files.exists(DATA_FOLDER_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    private static final Path SAVE_FILE_PATH \u003d DATA_FOLDER_PATH.resolve(\"duke.txt\");","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    private static boolean fileExists \u003d Files.exists(SAVE_FILE_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"     * Saves input task list to the save file.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList TaskList to be saved.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    public static void saveTaskList(TaskList taskList) throws DukeException{","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"        // Create directory if it does not exist","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"        if (!directoryExists) {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"                Files.createDirectory(DATA_FOLDER_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"        // Save task list into save file","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"            if (fileExists) {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"                // Overwrite the current save file","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"                clearSaveFile();","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"                for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"                    Task task \u003d taskList.getTask(Integer.toString(i));","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"                    String reformattedTask \u003d task.changeFormat();","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"                    Files.write(SAVE_FILE_PATH, (reformattedTask + System.lineSeparator()).getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"                // Create new file and save","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"                Files.createFile(SAVE_FILE_PATH);","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"                for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"                    Task task \u003d taskList.getTask(Integer.toString(i));","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"                    String reformattedTask \u003d task.changeFormat();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"                    Files.write(SAVE_FILE_PATH, (reformattedTask + System.lineSeparator()).getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"     * Clears the data in the save file.","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"    public static void clearSaveFile() {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"            Files.newBufferedWriter(SAVE_FILE_PATH, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"     * Loads saved tasks in the save file into the TaskList.","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If there is an error loading the file.","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"    public static ArrayList\u003cTask\u003e loadTaskList() throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"        String[] linesArr \u003d Files.lines(SAVE_FILE_PATH).toArray(String[]::new);","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"            for (String l : linesArr) {","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"                tempTaskList.add(parseString(l));","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"        return tempTaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"        } catch (IOException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... looks like you don\u0027t have an existing save file, let\u0027s make one!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"     * Parses a Task according to the details from the String.","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskString String containing details of the task.","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"     * @return Task created with details from the input.","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If there is error parsing the output task.","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"    private static Task parseString(String taskString) throws DukeException{","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"        // Split the string into an array of properties","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"        String[] taskProperties \u003d taskString.split(\" \\\\| \", 4);","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"            String taskType \u003d taskProperties[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"            String taskDone \u003d taskProperties[1];","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"            String taskDescription \u003d taskProperties[2];","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"            Task task \u003d null;","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"            switch (taskType) {","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"            case \"T\": {","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"            case \"E\": {","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"                String taskDateTime \u003d taskProperties[3];","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"                LocalDateTime dateTime \u003d DateTime.parseDate(taskDateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"                task \u003d new Event(taskDescription, dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"            case \"D\": {","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"                String taskDateTime \u003d taskProperties[3];","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"                LocalDateTime dateTime \u003d DateTime.parseDate(taskDateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"                task \u003d new Deadline(taskDescription, dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"                break;","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"            if (taskDone.equals(\"X\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"                task.mark();","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"            return task;","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"anthonyhoth"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Error in saved file!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":134}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":" * Class encapsulating the task list and its methods.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"public class TaskList {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList ArrayList of tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * Adds Task to the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Deletes Task from the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @param indexString String of the index of the task to be deleted.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given string index is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    public void deleteTask(String indexString) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"            Task delTask \u003d getTask(indexString); // Throws DE","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"            this.taskList.remove(delTask);","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"            throw e;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"     * Returns Task from the given index in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"     * @param indexString String of the index of the task to be returned.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"     * @return Task at the given index in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"     * @throws DukeException If the given string index is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"    public Task getTask(String indexString) throws DukeException{","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"            int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"            Task currTask \u003d this.taskList.get(index - 1); // Throws AIOOBE","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"            return currTask;","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... Seems like that\u0027s an invalid task number :(\");","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"     * Prints the tasks in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"    public void printList() {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"        if (!this.taskList.isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(\"These are your current tasks! :)\");","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"                String s \u003d String.format(\"%d.%s\", i, t);","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(s);","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"                i++;","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"                // End of list","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"                if (t \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"                    break;","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"                }","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(\"No tasks have been added yet!\\n\");","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"     * Marks or unmarks the task.","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"     * @param command Input command word.","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"     * @param description String array of the command word with the task number","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"    public void markUnmarkTask (CommandWord command, String description) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"anthonyhoth"},"content":"            Task task \u003d getTask(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"anthonyhoth"},"content":"            if (command \u003d\u003d CommandWord.MARK) {","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"anthonyhoth"},"content":"                task.mark();","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"anthonyhoth"},"content":"            } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"anthonyhoth"},"content":"                task.unmark();","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"anthonyhoth"},"content":"            throw de;","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"anthonyhoth"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"anthonyhoth"},"content":"    public int getSize() {","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"anthonyhoth"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"anthonyhoth"},"content":"    public void findTask(String s) throws DukeException{","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"anthonyhoth"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"anthonyhoth"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"anthonyhoth"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"anthonyhoth"},"content":"            if (currTask.toString().contains(s)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"anthonyhoth"},"content":"                System.out.println(String.format(\"%d. %s\", count, currTask));","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"anthonyhoth"},"content":"                count++;","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"anthonyhoth"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"anthonyhoth"},"content":"        // If the task list is empty","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"anthonyhoth"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... I don\u0027t think you have any tasks as of now!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"anthonyhoth"},"content":"        // If there are no matches in the task list","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"anthonyhoth"},"content":"        if (count \u003c\u003d 1) {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"anthonyhoth"},"content":"            throw new DukeException(\"Hmm... I don\u0027t think you have such tasks in the list!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":129}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"import duke.commandword.CommandWord;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":" * Class encapsulating user interactions.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"public class Ui {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    public Ui() {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out the greeting message","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    public void greetUser() {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"        System.out.println(\"Hello! I\u0027m Jukebox :)\\n\" + \"What can I do for you today?\");","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out the exit message.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public void exitJukebox() {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        System.out.println(\"Aww... OK, Hope to see you again!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out error message of DukeException.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @param de DukeException of which message to print.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"    public void printErrorMessage(DukeException de) {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"        System.out.println(de.getMessage());","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for a successful loading of save file.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"    public void successLoadMessage() {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"        System.out.println(\"Loading save file... Done!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for adding a task.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task that was added into the task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList Task list that the task was added into.","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"    public void addTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(\"Okay!\\n\" + \"Added: \" + task);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(String.format(\"You now have %d task(s) in your task list!\", taskList.getSize()));","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for marking and unmarking a task.","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task that was marked or unmarked.","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"anthonyhoth"},"content":"     * @param command Command that is either MARK or UNMARK.","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"anthonyhoth"},"content":"    public void markUnmarkTaskMessage(Task task, CommandWord command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"anthonyhoth"},"content":"        switch (command) {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"anthonyhoth"},"content":"        case MARK: {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(String.format(\"Goodjob! This task is now completed :)\\n\" + \"%s\", task.toString()));","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"anthonyhoth"},"content":"        case UNMARK: {","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(String.format(\"Oh... OK, I\u0027ll mark this task as uncompleted!\\n\" + \"%s\", task.toString()));","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"anthonyhoth"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"anthonyhoth"},"content":"     * Prints out message for deleting a task.","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"anthonyhoth"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"anthonyhoth"},"content":"     * @param taskList Task list that the task was deleted from.","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"anthonyhoth"},"content":"    public void deleteTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"anthonyhoth"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"anthonyhoth"},"content":"            System.out.println(\"Ok! I\u0027ve removed this task: \\n\" + task);","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"anthonyhoth":87}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.main.DateTime;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":" * Class for Deadline-type Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    public Deadline(String name, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        this.deadline \u003d dateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        return \"[D]\" + super.toString() + String.format(\"(by: %s)\", DateTime.printDate(deadline));","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Deadline object in format to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Deadline object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"D | %s | %s | %s\", getStatus(), name, DateTime.changeFormat(this.deadline));","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import duke.main.DateTime;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":" * Class for Event-type Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    public Event(String name, LocalDateTime dateTime) {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"        this.time \u003d dateTime;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"        return \"[E]\" + super.toString() + String.format(\"(at: %s)\", DateTime.printDate(time));","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Event object in format to be saved. ","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Event object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"E | %s | %s | %s\", getStatus(), name, DateTime.changeFormat(this.time));","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":" * Class for Duke Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"    protected String name;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input description of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"     * Gets the completion status of the task","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"     * @return A status icon if its completed/uncompleted","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"        return isCompleted ? \"X\" : \" \";","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"     * Marks the task to show completed","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"anthonyhoth"},"content":"     * Unmarks the task to show uncompleted","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"anthonyhoth"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"anthonyhoth"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"[%s] %s \", getStatus(), name);","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Task object in format to be saved. ","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Task object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"[%s] | %s\", getStatus(), name);","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"anthonyhoth"},"content":"    };","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"anthonyhoth":57}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":" * Class for Todo-type Tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"     * Constructor for the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"     * @param name Input name of the task.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        super(name);","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"anthonyhoth"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"[T][%s] %s\", getStatus(), name);","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"anthonyhoth"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"anthonyhoth"},"content":"     * Returns the format of Todo object in format to be saved. ","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"anthonyhoth"},"content":"     * @return String of Todo object to be saved.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"anthonyhoth"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"anthonyhoth"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"anthonyhoth"},"content":"    public String changeFormat() {","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"anthonyhoth"},"content":"        return String.format(\"T | %s | %s\", getStatus(), name);","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":33}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.main;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"public class ParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public void parse_missingDescription_exceptionThrown() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"            parser.parse(\"todo\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"            assertEquals(\"Hmm... Seems like you did not add a task description or number!\", de.getMessage());","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"anthonyhoth":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public void changeFormat__Success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        Deadline d1 \u003d new Deadline(\"This is a Test Deadline\", LocalDateTime.of(2022, 9, 4, 12, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        Deadline d2 \u003d new Deadline(\"This is also a Test Deadline\", LocalDateTime.of(2022, 4, 9, 16, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        d2.mark();","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"D |   | This is a Test Deadline | 2022-09-04 1200\", d1.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"D | X | This is also a Test Deadline | 2022-04-09 1600\", d2.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"anthonyhoth":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"public class EventTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"    public void eventChangeFormatTest_Success() {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        Event e1 \u003d new Event(\"This is a Test Event\", LocalDateTime.of(2022, 9, 4, 12, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        Event e2 \u003d new Event(\"This is also a Test Event\", LocalDateTime.of(2022, 4, 9, 16, 00));","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        e1.mark();","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"E | X | This is a Test Event | 2022-09-04 1200\", e1.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"E |   | This is also a Test Event | 2022-04-09 1600\", e2.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"anthonyhoth":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"    public void todoChangeFormatTest_Success() {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"        Todo t1 \u003d new Todo(\"This is a Test Todo\");","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"anthonyhoth"},"content":"        Todo t2 \u003d new Todo(\"This is also a Test Todo\");","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"anthonyhoth"},"content":"        t2.mark();","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"T |   | This is a Test Todo\", t1.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"anthonyhoth"},"content":"        assertEquals(\"T | X | This is also a Test Todo\", t2.changeFormat());","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"anthonyhoth"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"anthonyhoth"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"anthonyhoth":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonyhoth"},"content":"todo Read","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"anthonyhoth"},"content":"deadline Return /by tmr","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"anthonyhoth"},"content":"event Eat /at Sunday","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"anthonyhoth"},"content":"mark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"anthonyhoth"},"content":"mark 2","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"anthonyhoth"},"content":"unmark 1","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"anthonyhoth"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"anthonyhoth"},"content":"delete 2","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"anthonyhoth"},"content":"list","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"anthonyhoth"},"content":"bye","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"anthonyhoth":10}}]

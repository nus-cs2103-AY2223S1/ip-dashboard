[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"   1. Important: In Duke.java, configure isTest to false.","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"5. To run the IO tests, navigate to the text-ui-test directory and run `./runtest.sh`.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"   1. Important: In Duke.java, configure isTest to true.","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"-":13,"stevenlimhw":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"stevenlimhw":2}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"D | 0 | task | 10/10/2020 10:00","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"stevenlimhw":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"    // IMPORTANT: Configure isTest to true if you are running ./runtest.sh in text-ui-test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    private static final String JAR_FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    private static final Boolean IS_TEST \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    private static final String FILE_PATH \u003d IS_TEST ? \"data/tasksUiTest.txt\" : JAR_FILE_PATH;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    private static List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"     * Main function of the app.","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"     * The first string consists of the command keyword. The possible keywords are defined","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"     * as an Enum. If no keyword is detected, the app alerts the user.","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"     * If a keyword is detected, an action corresponding to the keyword will be executed.","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"     * The descriptions or additional data written after the keyword will be parsed,","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"     * and the relevant actions will be executed.","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"     * @param args","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"            // Assume that user has duke.jar in an empty folder","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"            File dir \u003d new File(\"sample\");","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"            File f \u003d new File(\"sample/tasks.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"            // Create a new folder called data in the empty folder","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"            // Create a new file called tasks.txt in that folder to store data","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"            if (dir.mkdir()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"                f.createNewFile();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"            Ui.printIntroduction();","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"            // Load the tasks from the file tasks.txt","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"            storage.loadTasks(FILE_PATH, tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"            parser.parseCommand(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"            System.out.println(e1.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        } finally {","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"            if (!IS_TEST) {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"                storage.saveTasks(FILE_PATH, tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"-":4,"stevenlimhw":50}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.EmptyNameException;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    public enum Command {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    public static Scanner getScanner() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"        return input;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    public List\u003cTask\u003e getTasks() { return taskList.getTasks(); }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"     * This function will parse the input given by the user and try to match the","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"     * inputted command with the list of commands available.","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"     * Then, the function will execute the relevant actions according to the command.","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"     * @param tasks list of Task objects","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    public void parseCommand(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"        while (true) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"                // Scan input from the user","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"                String inputLine \u003d input.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"                String[] inputs \u003d inputLine.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"                String command \u003d inputs[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"                if (inputLine.equals(Command.BYE.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"                    Ui.endSession(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"                    return;","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"                } else if (inputLine.equals(Command.LIST.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"                    Ui.showTasks(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.MARK.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"                    // inputs[1] is the index number of the task to be marked","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"                    if (inputs.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"                        throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"                    ui.markTaskAsDone(Integer.parseInt(inputs[1]), tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.UNMARK.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"                    // inputs[1] is the index number of the task to be unmarked","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"                    if (inputs.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"                        throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"                    ui.markTaskAsNotDone(Integer.parseInt(inputs[1]), tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.TODO.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"                    taskList.addTodo(inputs);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.DEADLINE.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"                    taskList.addDeadline(inputs);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.EVENT.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"                    taskList.addEvent(inputs);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.DELETE.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"                    // inputs[1] is the index number of the task to be marked","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"                    if (inputs.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"                        throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"                    taskList.deleteTask(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"                } else if (command.equals(Command.FIND.name().toLowerCase())) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"                    // inputs[1] is the keyword (do not accept keywords)","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"                    taskList.findTasks(inputs[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"                    // when none of the commands match","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"            } catch (EmptyNameException | UnknownCommandException","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"                    | NoTasksException | InvalidTaskIndexException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":82}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import objects.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import objects.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import objects.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"     * This function reads the text file at the specified file path and parses the tasks,","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"     * adding them into list of tasks in the app. It allows for persistent storage of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"     * @param FILE_PATH path of the txt file that contains data of tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"     * @param tasks list of Task objects of the app","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"     * @throws FileNotFoundException exception thrown when the txt file is not found","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    public void loadTasks(String FILE_PATH, List\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        File dataFile \u003d new File(FILE_PATH);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"            String[] dataChunk \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            switch (dataChunk[0]) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            // Task is a Todo","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"            case \"T\": {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"                // \"1\" means done, \"0\" means not done","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"                Boolean isDone \u003d dataChunk[1].equals(\"1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"                String name \u003d dataChunk[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"                tasks.add(new Todo(name, isDone));","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"            // Task is a Deadline","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"            case \"D\": {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"                // \"1\" means done, \"0\" means not done","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"                boolean isDone \u003d dataChunk[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"                String name \u003d dataChunk[2] + \" \";","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"                String endDateTime \u003d dataChunk[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"                Deadline curr \u003d new Deadline(name, endDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"                tasks.add(curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"                    curr.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"            // Task is an Event","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"            case \"E\": {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"                // \"1\" means done, \"0\" means not done","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"                boolean isDone \u003d dataChunk[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"                String name \u003d dataChunk[2] + \" \";","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"                String periodDateTime \u003d dataChunk[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"                Event curr \u003d new Event(name, periodDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"                tasks.add(curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"                if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"                    curr.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"     * This function will write the tasks from the list of Task objects into","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"     * a txt file, ensuring persistent storage of the tasks. When the app is opened","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"     * again after being terminated, the tasks saved will be available again.","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"     * @param FILE_PATH path of the txt file that contains the tasks data","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"     * @param tasks list of Task objects in the app","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"     * @throws IOException an exception thrown when there is a problem with the input/output (IO)","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"    public void saveTasks(String FILE_PATH, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"            String isDoneSymbol \u003d task.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"                fw.write(\"T | \" + isDoneSymbol + \" | \" + task.getName() + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"                fw.write(\"D | \" + isDoneSymbol + \" | \" + task.getName()","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"                        + \" | \" + ((Deadline) task).getDateTime() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"                fw.write(\"E | \" + isDoneSymbol + \" | \" + task.getName()","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"                        + \" | \" + ((Event) task).getDateTime() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":92}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.EmptyNameException;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import objects.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import objects.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import objects.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"        return tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"     * Creates a new objects.Todo object and adds it to the tasks list.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"     * @param inputs array of input strings (e.g. [\"todo\", \"wash dishes\"]","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    public void addTodo(String[] inputs) throws EmptyNameException {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"            throw new EmptyNameException(\"Todo name cannot be empty...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder todoName \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 1; i \u003c inputs.length - 1; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            todoName.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        // Edge case: When inputs.length is 2, the todoName is not captured by the loop above.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"        todoName.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"        Todo newTodo \u003d new Todo(todoName.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + newTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"     * Creates a new objects.Deadline object and adds it to the tasks list.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"     * @param inputs array of input strings","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"    public void addDeadline(String[] inputs) throws EmptyNameException {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"            throw new EmptyNameException(\"Deadline name cannot be empty...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder deadlineName \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder endDateTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"        boolean readDateTime \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 1; i \u003c inputs.length - 1; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"            if (inputs[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"                readDateTime \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"            if (!readDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"                deadlineName.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"                endDateTime.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"        // Edge case: When name or date is only one string, they are not captured by the loop above.","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        if (!readDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"            deadlineName.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"            endDateTime.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"        Deadline newDeadline \u003d new Deadline(","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"                deadlineName.toString().trim(),","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"                endDateTime.toString().trim());","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + newDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"     * Creates a new objects.Event object and adds it to the tasks list.","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"     * @param inputs array of input strings","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"    public void addEvent(String[] inputs) throws EmptyNameException {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"            throw new EmptyNameException(\"Event name cannot be empty...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder eventName \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder periodDateTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"        boolean readDateTime \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 1; i \u003c inputs.length - 1; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"            if (inputs[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"                readDateTime \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"stevenlimhw"},"content":"            if (!readDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"stevenlimhw"},"content":"                eventName.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"stevenlimhw"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"stevenlimhw"},"content":"                periodDateTime.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"stevenlimhw"},"content":"        // Edge case: When name or date is only one string, they are not captured by the loop above.","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"stevenlimhw"},"content":"        if (!readDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"stevenlimhw"},"content":"            eventName.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"stevenlimhw"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"stevenlimhw"},"content":"            periodDateTime.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"stevenlimhw"},"content":"        Event newEvent \u003d new Event(eventName.toString().trim(), periodDateTime.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + newEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"stevenlimhw"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"stevenlimhw"},"content":"     * Deletes a task at a specific index.","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"stevenlimhw"},"content":"     * @param taskIndex index of the task to be removed (1-indexed)","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"stevenlimhw"},"content":"     * @throws NoTasksException an exception thrown when the list of Task objects is empty","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"stevenlimhw"},"content":"     * @throws InvalidTaskIndexException an exception thrown when there is no Task object","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"stevenlimhw"},"content":"     * at that particular index (1-indexed)","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"stevenlimhw"},"content":"    public void deleteTask(int taskIndex)","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"stevenlimhw"},"content":"            throws NoTasksException, InvalidTaskIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"stevenlimhw"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"stevenlimhw"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"stevenlimhw"},"content":"        // taskIndex is 1-indexed","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"stevenlimhw"},"content":"        Task t \u003d tasks.remove(taskIndex - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"stevenlimhw"},"content":"        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"stevenlimhw"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"stevenlimhw"},"content":"        boolean isNotFound \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"stevenlimhw"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"stevenlimhw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"stevenlimhw"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"stevenlimhw"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"stevenlimhw"},"content":"                System.out.println(index + \".\" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"stevenlimhw"},"content":"                isNotFound \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"stevenlimhw"},"content":"                index +\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"stevenlimhw"},"content":"        if (isNotFound) {","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"stevenlimhw"},"content":"            System.out.println(\"There are no matching tasks...\");","lastModifiedDate":"2022-08-25"},{"lineNumber":152,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":154,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":154}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    public Ui() {}","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    public static void printIntroduction() {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Hello there! My name\u0027s Duck...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Please type in a command...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"     * Prints out all the added tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    public static void showTasks(List\u003cTask\u003e tasks) throws NoTasksException {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        int id \u003d 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"            System.out.println(id + \".\" + task.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"            id +\u003d 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"     * Marks the task at the taskIndex in the list as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"     * @param taskIndex position of the task in the list (1-indexed)","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"    public void markTaskAsDone(int taskIndex, List\u003cTask\u003e tasks)","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"            throws NoTasksException, InvalidTaskIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1); // label starting from 1","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"        currTask.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + currTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"     * Marks the task at the taskIndex in the list as not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"     * @param taskIndex position of the task in the list (1-indexed)","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"    public void markTaskAsNotDone(int taskIndex, List\u003cTask\u003e tasks)","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"            throws NoTasksException, InvalidTaskIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1); // label starting from 1","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"        currTask.markAsNotDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + currTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"     * Prints a comment on the number of tasks added so far.","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"    public static void printNumberOfTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"    public static void printExceptionMessage(Exception e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"     * Exits the app. This will terminate the current session of the app, and the","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"     * tasks in the list of Task objects will be cleared (after being written into","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"     * a txt file to ensure persistent storage).","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"     * ","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"     * @param input scanner object","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"    public static void endSession(Scanner input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"Bye! See you next time!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"        input.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":93}},{"path":"src/main/java/exceptions/EmptyNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class EmptyNameException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    public EmptyNameException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":7}},{"path":"src/main/java/exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    public InvalidTaskIndexException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"        super(\"There are no tasks with that index...\");","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":7}},{"path":"src/main/java/exceptions/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class NoTasksException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    public NoTasksException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"        super(\"You can\u0027t do that! There are no tasks added yet...\");","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":7}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"        super(\"I don\u0027t get what you are saying...\");","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":7}},{"path":"src/main/java/objects/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import javax.swing.text.DateFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    private enum Calendar {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"        YEAR, MONTH, DAY, TIME","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private LocalDate endDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    // example: deadline return book /by 02/08/2019 1800","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    // only accept DD/MM/YYYY TTTT format","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    public Deadline(String name, String endDateTime) {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"        super(name.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        updateEndDateTime(endDateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    public Deadline(String name, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"        super(name.trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).toString()","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"                + \" \" + LocalTime.parse(this.endTime.toString(), DateTimeFormatter.ofPattern(\"HH:mm\")).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"    // endDateTime must follow either \"DD/MM/YYYY\" or \"DD/MM/YYYY TT:TT\"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    // where TT:TT is the time in 24-hour format","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"    // if time is not included, the default value of 00:00 will be used","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"    private void updateEndDateTime(String endDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder year \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder month \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder day \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder time \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"        Calendar currentlyAnalyzing \u003d Calendar.DAY;","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 0; i \u003c endDateTime.length(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"            if (endDateTime.charAt(i) \u003d\u003d \u0027/\u0027 \u0026\u0026 currentlyAnalyzing.equals(Calendar.DAY)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"                currentlyAnalyzing \u003d Calendar.MONTH;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"            } else if (endDateTime.charAt(i) \u003d\u003d \u0027/\u0027 \u0026\u0026 currentlyAnalyzing.equals(Calendar.MONTH)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"                currentlyAnalyzing \u003d Calendar.YEAR;","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"            } else if (endDateTime.charAt(i) \u003d\u003d \u0027 \u0027 \u0026\u0026 currentlyAnalyzing.equals(Calendar.YEAR)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"                currentlyAnalyzing \u003d Calendar.TIME;","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"            if (currentlyAnalyzing.equals(Calendar.DAY)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"                day.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"            } else if (currentlyAnalyzing.equals(Calendar.MONTH)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"                month.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"            } else if (currentlyAnalyzing.equals(Calendar.YEAR)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"                year.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"                time.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"        int y \u003d Integer.parseInt(year.toString()); // year","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"        int m \u003d Integer.parseInt(month.toString()); // month","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"        int d \u003d Integer.parseInt(day.toString()); // day","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"        LocalDate endDate \u003d LocalDate.of(y, m, d);","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"        LocalTime endTime \u003d LocalTime.of(0, 0);","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"        if (currentlyAnalyzing.equals(Calendar.TIME)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"            int hour \u003d Integer.parseInt(time.toString().substring(0, 2));","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"            int minute \u003d Integer.parseInt(time.toString().substring(3, 5));","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"            endTime \u003d LocalTime.parse(LocalTime.of(hour, minute).toString(), DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"        // value of endTime defaults to 00:00 if no time is indicated","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        return \"[D]\" + getStatus() + \" \" + getName() + \" (by: \" + getDateTime() + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":92}},{"path":"src/main/java/objects/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    private String periodDateTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    public Event(String name, String periodDateTime) {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"        super(name.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"        this.periodDateTime \u003d periodDateTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"        return this.periodDateTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"        return \"[E]\" + getStatus() + \" \" + getName() + \" (at: \" + getDateTime() + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":19}},{"path":"src/main/java/objects/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    private String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"    private Boolean isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    public Task(String name, Boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    public String getName() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        return this.name;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"    public Boolean getIsDone() { return this.isDone; }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"        return getStatus() + \" \" + getName();","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":38}},{"path":"src/main/java/objects/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"        super(name);","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"    public Todo(String name, Boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"        return \"[T]\" + getStatus() + \" \" + getName();","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":16}},{"path":"src/main/java/sample/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"T | 0 | task1","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"T | 0 | task2","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"T | 0 | task 3","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"stevenlimhw":3}},{"path":"src/main/java/sample/tasks1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"T | 1 | read book","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"D | 0 | return book | 02/08/2022 1000","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"stevenlimhw":4}},{"path":"src/main/java/sample/tasksTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"T | 1 | read book","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"stevenlimhw":4}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.EmptyNameException;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    public void addTodoWithoutExceptions() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"            taskList.addTodo(new String[] {\"todo\", \"wash dishes\"});","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"            assertEquals(\"wash dishes\", tasks.get(0).getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"        } catch (EmptyNameException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: EmptyNameException is thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    public void addTodoWithEmptyNameException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"            taskList.addTodo(new String[] {\"todo\"});","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: EmptyNameException is not thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"        } catch (EmptyNameException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"            assertNotNull(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"stevenlimhw":33}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"public class UiTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    public void showTasksWithoutExceptions() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            tasks.add(new Todo(\"make breakfast\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            Ui.showTasks(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"            assertEquals(\"1.[T][ ] make breakfast\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        } catch (NoTasksException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: NoTasksException is thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"    public void showTasksWithNoTasksException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"            Ui.showTasks(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: NoTasksException is not thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"        } catch (NoTasksException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"            assertNotNull(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"    @AfterEach","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"    public void clearDown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"stevenlimhw":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"delete 1","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"deadline return book /by 02/08/2019 1800","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"mark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"unmark 10","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":13}}]

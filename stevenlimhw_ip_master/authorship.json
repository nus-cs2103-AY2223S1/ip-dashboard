[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"# app.Duke project template","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"4. After that, locate the `src/main/java/app.Duke.java` file, right-click it, and choose `Run app.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"   1. Important: In app.Duke.java, configure isTest to false.","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"5. To run the IO tests, navigate to the text-ui-test directory and run `./runtest.sh`.","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"   1. Important: In app.Duke.java, configure isTest to true.","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"-":12,"stevenlimhw":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"stevenlimhw":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"## Step-by-Step Guide: Features and Usage","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"### Learn the features available by following the listed order, and by keying in the example usages into your app!","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"### (1) `todo`: Add Todo","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"Create a new Todo with a description. No additional information","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"is required for Todo.","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"`todo finish CS2103T iP assignment`","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"Quack! I\u0027ve added this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"  [T][] finish CS2103T iP assignment","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"Now you have 1 task in the list, quack!","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"### (2) `event`: Add Event","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"Create a new Event with a description and time period.","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"Keyword used is `/at`, where the text after this keyword is","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"considered as the time period. There are no restrictions to the","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"format of the time period.","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"`event attend Meta Software Engineering Conference /at Monday 1-3pm`","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"Quack! I\u0027ve added this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"  [E][] attend Meta Software Engineering Conference (at: Monday 1-3pm)","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"Now you have 2 tasks in the list, quack!","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"### (3) `deadline`: Add Deadline","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"Create a new Deadline with a description, date and time of the deadline.","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"Keyword used is `/by`. After the keyword, please take note that:","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"- date must follow DD/MM/YYYY format","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"- time must follow HH:MM in 24-hour format","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"- there must be a space between the date and time","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"`deadline return book /by 02/08/2019 18:00`","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"Quack! I\u0027ve added this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"  [D][] return book (by: 02/08/2019 18:00)","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"Now you have 3 tasks in the list, quack!","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"### (4) `list`: View all Tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"View all the Tasks (whether it be a Todo, Event or Deadline) at a glance.","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"`list`","lastModifiedDate":"2022-09-14"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"1. [T][] finish CS2103T iP assignment","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"2. [E][] attend Meta Software Engineering Conference (at: Monday 1-3pm)","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"3. [D][] return book (by: 02/08/2019 18:00)","lastModifiedDate":"2022-09-14"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"### (5) `sort`: Sort all Tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"Sorts the tasks in increasing lexicographical order by description.","lastModifiedDate":"2022-09-14"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"`sort`","lastModifiedDate":"2022-09-14"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":94,"author":{"gitId":"stevenlimhw"},"content":"Tasks are sorted successfully, quack!","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"stevenlimhw"},"content":"When you use the command `list` after, you will see the following output:","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"stevenlimhw"},"content":"1. [E][] attend Meta Software Engineering Conference (at: Monday 1-3pm) ","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"stevenlimhw"},"content":"2. [T][] finish CS2103T iP assignment","lastModifiedDate":"2022-09-14"},{"lineNumber":102,"author":{"gitId":"stevenlimhw"},"content":"3. [D][] return book (by: 02/08/2019 18:00)","lastModifiedDate":"2022-09-14"},{"lineNumber":103,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":104,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"stevenlimhw"},"content":"### (6) `find`: Find Tasks containing a keyword","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"stevenlimhw"},"content":"Find all the tasks containing the keyword you specified.","lastModifiedDate":"2022-09-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"stevenlimhw"},"content":"`find Meta`","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"stevenlimhw"},"content":"Here are the matching tasks in your list, quack:","lastModifiedDate":"2022-09-14"},{"lineNumber":117,"author":{"gitId":"stevenlimhw"},"content":"1. [E][] attend Meta Software Engineering Conference (at: Monday 1-3pm)","lastModifiedDate":"2022-09-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":120,"author":{"gitId":"stevenlimhw"},"content":"### (7) `delete`: Delete a Task","lastModifiedDate":"2022-09-14"},{"lineNumber":121,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":122,"author":{"gitId":"stevenlimhw"},"content":"Delete the task in the specified index, considering the current ordering of the tasks","lastModifiedDate":"2022-09-14"},{"lineNumber":123,"author":{"gitId":"stevenlimhw"},"content":"(use `list` to check the ordering). Note that this feature works with 1-indexing. ","lastModifiedDate":"2022-09-14"},{"lineNumber":124,"author":{"gitId":"stevenlimhw"},"content":"The index 0 is not a valid index.","lastModifiedDate":"2022-09-14"},{"lineNumber":125,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":126,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":127,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":128,"author":{"gitId":"stevenlimhw"},"content":"`delete 1`","lastModifiedDate":"2022-09-14"},{"lineNumber":129,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":130,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":131,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":132,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":133,"author":{"gitId":"stevenlimhw"},"content":"Quack! I\u0027ve removed this task:","lastModifiedDate":"2022-09-14"},{"lineNumber":134,"author":{"gitId":"stevenlimhw"},"content":"[E][] attend Meta Software Engineering Conference (at: Monday 1-3pm)","lastModifiedDate":"2022-09-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":137,"author":{"gitId":"stevenlimhw"},"content":"### (8) `mark`: Mark a Task as completed","lastModifiedDate":"2022-09-14"},{"lineNumber":138,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":139,"author":{"gitId":"stevenlimhw"},"content":"Marks a task in a specified index as completed, as indicated by an X symbol.","lastModifiedDate":"2022-09-14"},{"lineNumber":140,"author":{"gitId":"stevenlimhw"},"content":"Note that index starts at 1 and follows the current ordering of tasks, as","lastModifiedDate":"2022-09-14"},{"lineNumber":141,"author":{"gitId":"stevenlimhw"},"content":"seen when you call the command `list`.","lastModifiedDate":"2022-09-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":143,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":145,"author":{"gitId":"stevenlimhw"},"content":"`mark 1`","lastModifiedDate":"2022-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":149,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":150,"author":{"gitId":"stevenlimhw"},"content":"Quack! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-14"},{"lineNumber":151,"author":{"gitId":"stevenlimhw"},"content":"  [T][X] finish CS2103T iP assignment","lastModifiedDate":"2022-09-14"},{"lineNumber":152,"author":{"gitId":"stevenlimhw"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":153,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":154,"author":{"gitId":"stevenlimhw"},"content":"### (9) `unmark`: Mark a Task as incomplete","lastModifiedDate":"2022-09-14"},{"lineNumber":155,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":156,"author":{"gitId":"stevenlimhw"},"content":"Marks a task in a specified index as incomplete, as indicated by the lack of an X symbol.","lastModifiedDate":"2022-09-14"},{"lineNumber":157,"author":{"gitId":"stevenlimhw"},"content":"Note that index starts at 1 and follows the current ordering of tasks, as","lastModifiedDate":"2022-09-14"},{"lineNumber":158,"author":{"gitId":"stevenlimhw"},"content":"seen when you call the command `list`.","lastModifiedDate":"2022-09-14"},{"lineNumber":159,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":160,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":161,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":162,"author":{"gitId":"stevenlimhw"},"content":"`unmark 1`","lastModifiedDate":"2022-09-14"},{"lineNumber":163,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":164,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":167,"author":{"gitId":"stevenlimhw"},"content":"Quack, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-14"},{"lineNumber":168,"author":{"gitId":"stevenlimhw"},"content":"  [T][] finish CS2103T iP assignment","lastModifiedDate":"2022-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":170,"author":{"gitId":"stevenlimhw"},"content":"---","lastModifiedDate":"2022-09-14"},{"lineNumber":171,"author":{"gitId":"stevenlimhw"},"content":"### (10) `bye`: Close the program (saving is automatic when you exit)","lastModifiedDate":"2022-09-14"},{"lineNumber":172,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":173,"author":{"gitId":"stevenlimhw"},"content":"Saves the tasks in the current list into the hard disk (preserving the current","lastModifiedDate":"2022-09-14"},{"lineNumber":174,"author":{"gitId":"stevenlimhw"},"content":"ordering). Then, the program exits and closes the JavaFX UI window automatically.","lastModifiedDate":"2022-09-14"},{"lineNumber":175,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":176,"author":{"gitId":"stevenlimhw"},"content":"Example of usage:","lastModifiedDate":"2022-09-14"},{"lineNumber":177,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":178,"author":{"gitId":"stevenlimhw"},"content":"`bye`","lastModifiedDate":"2022-09-14"},{"lineNumber":179,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":180,"author":{"gitId":"stevenlimhw"},"content":"Expected outcome:","lastModifiedDate":"2022-09-14"},{"lineNumber":181,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":182,"author":{"gitId":"stevenlimhw"},"content":"The app saves the tasks in the current list (preserving the current ordering),","lastModifiedDate":"2022-09-14"},{"lineNumber":183,"author":{"gitId":"stevenlimhw"},"content":"and closes the app automatically.","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"-":27,"stevenlimhw":156}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import app.Main;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"public class Launcher {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"stevenlimhw":15}},{"path":"src/main/java/app/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package app;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import utils.Parser;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import utils.Storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import utils.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":" * The Duke class has all the ui and util objects,","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":" * and handles the bot response to the command inputs","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":" * the user types in.","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"public class Duke {","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private static TaskList taskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private static List\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    private static Storage storage;","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    private static Parser parser;","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    public Duke() {","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"     * Loads tasks from hard disk to the app.","lastModifiedDate":"2022-09-06"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"     * @throws IOException exception related to input or output","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    public static void loadDuke() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"        assert tasks.size() \u003d\u003d 0;","lastModifiedDate":"2022-09-06"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"        storage.loadTasks(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-06"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"     * Saves tasks from the app to the hard disk.","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"     * @throws IOException exception related to input or output","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"    public static void saveDuke() throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"     * Uses the parser to parse the input by the user,","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"     * and creates the appropriate bot response.","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"     * @param input the user\u0027s command input","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"     * @return response of the bot to the user\u0027s command input","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"        return parser.parseCommand(tasks, input);","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"stevenlimhw":55}},{"path":"src/main/java/app/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package app;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import ui.MainWindow;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":" * A GUI for app.Duke using FXML.","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"     * Starts the GUI using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"     * @param stage JavaFX stage object","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"     * @throws IOException exception related to input or output","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"            Duke.loadDuke();","lastModifiedDate":"2022-09-05"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"            stage.setTitle(\"Duck the Duke\");","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"            stage.show();","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"stevenlimhw":40}},{"path":"src/main/java/exceptions/EmptyNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":" * Exception when the user created a task without a name.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"public class EmptyNameException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"     * Constructor for this exception.","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"     * @param message the bot response when this exception occurs","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    public EmptyNameException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":14}},{"path":"src/main/java/exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":" * Exception when the user tries to access a task index that does not exist.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"     * Constructor for this exception.","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    public InvalidTaskIndexException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"        super(\"Quack! There are no tasks with that index...\");","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":13}},{"path":"src/main/java/exceptions/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":" * Exception when the user tries to access an empty task list.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"public class NoTasksException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"     * Constructor for this exception.","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    public NoTasksException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"        super(\"You can\u0027t do that, quack! There are no tasks added yet...\");","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":13}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package exceptions;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":" * Exception when the user inputs a command that is not recognised.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"     * Constructor for this exception.","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"        super(\"I don\u0027t get what you are saying, quack!\");","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"stevenlimhw":13}},{"path":"src/main/java/objects/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":" * Deadline is a Task object with end date and end time, which literally","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":" * serves as the \u0027deadline\u0027.","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    private enum Calendar {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"        YEAR, MONTH, DAY, TIME","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private LocalDate endDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"     * Constructor for Deadline object that takes in name and endDateTime.","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"     * Example: deadline return book /by 02/08/2019 18:00","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"     * The time TT:TT is in 24-hour format.","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"     * @param name description of the Deadline object","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"     * @param endDateTime date and time for the Deadline object","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"    public Deadline(String name, String endDateTime) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"        super(name.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        updateEndDateTime(endDateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    public Deadline(String name, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"        super(name.trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).toString()","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"                + \" \" + LocalTime.parse(this.endTime.toString(), DateTimeFormatter.ofPattern(\"HH:mm\")).toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"    // endDateTime must follow either \"DD/MM/YYYY\" or \"DD/MM/YYYY TT:TT\"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"    // where TT:TT is the time in 24-hour format","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"    // if time is not included, the default value of 00:00 will be used","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"    private void updateEndDateTime(String endDateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        // Initializing variables needed","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder year \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder month \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder day \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder time \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"        Calendar currentlyAnalyzing \u003d Calendar.DAY;","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"        // Updates the variables by parsing endDateTime string","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"        parseEndDateTime(endDateTime, currentlyAnalyzing, day, month, year, time);","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"        // Obtain the required values","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"        this.endDate \u003d getEndDate(day, month, year);","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"        this.endTime \u003d getEndTime(time); // value of endTime defaults to 00:00 if no time is indicated","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"    private void parseEndDateTime(String endDateTime, Calendar currentlyAnalyzing,","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"                                  StringBuilder day, StringBuilder month, StringBuilder year, StringBuilder time) {","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 0; i \u003c endDateTime.length(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"            if (endDateTime.charAt(i) \u003d\u003d \u0027/\u0027 \u0026\u0026 currentlyAnalyzing.equals(Calendar.DAY)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"                currentlyAnalyzing \u003d Calendar.MONTH;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"            } else if (endDateTime.charAt(i) \u003d\u003d \u0027/\u0027 \u0026\u0026 currentlyAnalyzing.equals(Calendar.MONTH)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"                currentlyAnalyzing \u003d Calendar.YEAR;","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"            } else if (endDateTime.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"                // deadline return book /by 02/08/2019 18:00","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"                currentlyAnalyzing \u003d Calendar.TIME;","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"            parseAppend(i, endDateTime, currentlyAnalyzing, day, month, year, time);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"    private void parseAppend(int i, String endDateTime, Calendar currentlyAnalyzing, StringBuilder day,","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"                             StringBuilder month, StringBuilder year, StringBuilder time) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"        // Build the string for the relevant StringBuilder","lastModifiedDate":"2022-09-14"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"        if (currentlyAnalyzing.equals(Calendar.DAY)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"            day.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"        } else if (currentlyAnalyzing.equals(Calendar.MONTH)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"            month.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"        } else if (currentlyAnalyzing.equals(Calendar.YEAR)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"            year.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        } else if (currentlyAnalyzing.equals(Calendar.TIME)) {","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"            time.append(endDateTime.charAt(i));","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"stevenlimhw"},"content":"    private LocalDate getEndDate(StringBuilder day, StringBuilder month, StringBuilder year) {","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"stevenlimhw"},"content":"        int y \u003d Integer.parseInt(year.toString()); // year","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"stevenlimhw"},"content":"        int m \u003d Integer.parseInt(month.toString()); // month","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"stevenlimhw"},"content":"        int d \u003d Integer.parseInt(day.toString()); // day","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"stevenlimhw"},"content":"        LocalDate endDate \u003d LocalDate.of(y, m, d);","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"stevenlimhw"},"content":"        return endDate;","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":102,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"stevenlimhw"},"content":"    private LocalTime getEndTime(StringBuilder time) {","lastModifiedDate":"2022-09-14"},{"lineNumber":104,"author":{"gitId":"stevenlimhw"},"content":"        LocalTime endTime \u003d LocalTime.of(0, 0);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"stevenlimhw"},"content":"        if (time.length() !\u003d 0) {","lastModifiedDate":"2022-09-14"},{"lineNumber":106,"author":{"gitId":"stevenlimhw"},"content":"            int hour \u003d Integer.parseInt(time.toString().substring(0, 2));","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"stevenlimhw"},"content":"            int minute \u003d Integer.parseInt(time.toString().substring(3, 5));","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"stevenlimhw"},"content":"            endTime \u003d LocalTime.parse(LocalTime.of(hour, minute).toString(), DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"stevenlimhw"},"content":"        return endTime;","lastModifiedDate":"2022-09-14"},{"lineNumber":111,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":115,"author":{"gitId":"stevenlimhw"},"content":"        return \"[D]\" + getStatus() + \" \" + getName() + \" (by: \" + getDateTime() + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":116,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":117,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":117}},{"path":"src/main/java/objects/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":" * Event is a Task object that has a datetime that is","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" * a time period.","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"    private String periodDateTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    public Event(String name, String periodDateTime) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"        super(name.trim());","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"        this.periodDateTime \u003d periodDateTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"     * Getter function for the periodDateTime field.","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"     * @return string containing the datetime period","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    public String getDateTime() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"        return this.periodDateTime;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        return \"[E]\" + getStatus() + \" \" + getName() + \" (at: \" + getDateTime() + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":27}},{"path":"src/main/java/objects/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":" * Task object that is the parent class for Deadline, Event and Todo.","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"public class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"    private String name;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"    private Boolean isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"    public Task(String name, Boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    public String getName() {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"        return this.name;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"        return getStatus() + \" \" + getName();","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":43}},{"path":"src/main/java/objects/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package objects;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"        super(name);","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"    public Todo(String name, Boolean isDone) {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"        return \"[T]\" + getStatus() + \" \" + getName();","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":16}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import app.Duke;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":" * Controller for ui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-04"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    private Image duck \u003d new Image(this.getClass().getResourceAsStream(\"/images/duck.png\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"        dialogContainer.getChildren().add(MessageContainer.getIntroduction(duck));","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing app.Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"                MessageContainer.getUserMessage(userInput.getText(), user),","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"                MessageContainer.getBotMessage(duke.getResponse(userInput.getText()), duck)","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"stevenlimhw":51}},{"path":"src/main/java/ui/MessageContainer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"public class MessageContainer extends HBox {","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    private Text message;","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"    private Label label;","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    private ImageView profile;","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"    private Circle circleProfile;","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"    private MessageContainer(String message, Image profile) {","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MessageContainer.fxml\"));","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"        circleProfile.setFill(new ImagePattern(profile));","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        this.message.setText(message);","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"    private void setBotStyle() {","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"        this.label.setStyle(","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"                \"-fx-background-color: #FFFF99; \" +","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"                \"-fx-background-radius: 10px; \" +","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"                \"-fx-padding: 10px; \" +","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"                \"-fx-max-height: 120px; \" +","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"                \"-fx-font-size: 13px;\" +","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"                \"-fx-font-family: \u0027Droid Sans\u0027;\"","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"        this.message.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-09-04"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"    public static MessageContainer getUserMessage(String message, Image profile) {","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"        return new MessageContainer(message, profile);","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"    public static MessageContainer getBotMessage(String message, Image profile) {","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"        var botMessageContainer \u003d new MessageContainer(message, profile);","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"        botMessageContainer.setBotStyle();","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"        return botMessageContainer;","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"    public static MessageContainer getIntroduction(Image profile) {","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"        var introMessageContainer \u003d new MessageContainer(Ui.printIntroduction(), profile);","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"        introMessageContainer.setBotStyle();","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"        return introMessageContainer;","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"stevenlimhw":81}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    public Ui() {}","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"    public static String printIntroduction() {","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"        return \"Hello there! My name\u0027s Duck...\\nPlease type in a command...\";","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"     * Prints out all the added tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    public static String showTasks(List\u003cTask\u003e tasks) throws NoTasksException {","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        int id \u003d 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            text.append(id).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            id +\u003d 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        return text.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"     * Marks the task at the taskIndex in the list as done.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"     * @param taskIndex position of the task in the list (1-indexed)","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"    public String markTaskAsDone(int taskIndex, List\u003cTask\u003e tasks)","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"            throws NoTasksException, InvalidTaskIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1); // label starting from 1","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"        currTask.markAsDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack! I\u0027ve marked this task as done:\\n\" + \"  \" + currTask;","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"     * Marks the task at the taskIndex in the list as not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"     * @param taskIndex position of the task in the list (1-indexed)","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"    public String markTaskAsNotDone(int taskIndex, List\u003cTask\u003e tasks)","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"            throws NoTasksException, InvalidTaskIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1); // label starting from 1","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        currTask.markAsNotDone();","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"        System.out.println(\"  \" + currTask);","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack, I\u0027ve marked this task as not done yet:\\n\" + \"  \" + currTask;","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"     * Prints a comment on the number of tasks added so far.","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"    public static String printNumberOfTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"            return \"Now you have \" + tasks.size() + \" task in the list, quack!\";","lastModifiedDate":"2022-09-14"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"            return \"Now you have \" + tasks.size() + \" tasks in the list, quack!\";","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":80}},{"path":"src/main/java/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package utils;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import app.Duke;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import ui.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.EmptyNameException;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"public class Parser {","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"    public enum Command {","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, SORT","lastModifiedDate":"2022-09-06"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-05"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"     * This function will parse the input given by the user and try to match the","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"     * inputted command with the list of commands available.","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"     * Then, the function will execute the relevant actions according to the command.","lastModifiedDate":"2022-09-05"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"     * Reason for long method:","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"     * This method is not decomposed into smaller methods to improve readability","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"     * by centralizing the parsing processes. By doing so, all the methods called","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"     * for each command can be seen at a glance in one place.","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"     * @param tasks list of Task objects","lastModifiedDate":"2022-09-05"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"    public String parseCommand(List\u003cTask\u003e tasks, String textInput) {","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-09-05"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"            // Scan input from the user","lastModifiedDate":"2022-09-05"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"            String[] inputs \u003d textInput.split(\" \");","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"            String command \u003d inputs[0];","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"            if (textInput.equals(Command.BYE.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"                Duke.saveDuke();","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"            } else if (textInput.equals(Command.LIST.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"                return Ui.showTasks(tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.MARK.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"                // inputs[1] is the index number of the task to be marked","lastModifiedDate":"2022-09-05"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"                    throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"                }","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"                return ui.markTaskAsDone(Integer.parseInt(inputs[1]), tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.UNMARK.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"                // inputs[1] is the index number of the task to be unmarked","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"                    throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-05"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"                }","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"                return ui.markTaskAsNotDone(Integer.parseInt(inputs[1]), tasks);","lastModifiedDate":"2022-09-05"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.TODO.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"                return taskList.addTodo(inputs);","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.DEADLINE.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"                return taskList.addDeadline(inputs);","lastModifiedDate":"2022-09-05"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.EVENT.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"                return taskList.addEvent(inputs);","lastModifiedDate":"2022-09-05"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.DELETE.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"                // inputs[1] is the index number of the task to be marked","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"                if (inputs.length \u003c 2) {","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"                    throw new InvalidTaskIndexException();","lastModifiedDate":"2022-09-05"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"                }","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"                return taskList.deleteTask(Integer.parseInt(inputs[1]));","lastModifiedDate":"2022-09-05"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.FIND.name().toLowerCase())) {","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"                // inputs[1] is the keyword (do not accept keywords)","lastModifiedDate":"2022-09-05"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"                return taskList.findTasks(inputs[1]);","lastModifiedDate":"2022-09-05"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"            } else if (command.equals(Command.SORT.name().toLowerCase())) {","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"                return taskList.sortByName();","lastModifiedDate":"2022-09-06"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"            } else {","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"                // when none of the commands match","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-09-05"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"        } catch (EmptyNameException | UnknownCommandException","lastModifiedDate":"2022-09-05"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"                | NoTasksException | InvalidTaskIndexException | IOException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"            return e.getMessage();","lastModifiedDate":"2022-09-05"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack! I can\u0027t parse your message!\";","lastModifiedDate":"2022-09-05"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"stevenlimhw":84}},{"path":"src/main/java/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package utils;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import objects.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import objects.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private static final File file \u003d new File(FILE_PATH);","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"     * This function reads the text file at the specified file path and parses the tasks,","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"     * adding them into list of tasks in the app. It allows for persistent storage of tasks.","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"     * @param tasks list of Task objects of the app","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"     * @throws FileNotFoundException exception thrown when the txt file is not found","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    public void loadTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"        file.getParentFile().mkdir();","lastModifiedDate":"2022-09-05"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"        file.createNewFile();","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"            String[] dataChunk \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"            switch (dataChunk[0]) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"            case \"T\": {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"                loadTodo(tasks, dataChunk);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"            case \"D\": {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"                loadDeadline(tasks, dataChunk);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"            case \"E\": {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"                loadEvent(tasks, dataChunk);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"                break;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"    private void loadTodo(List\u003cTask\u003e tasks, String[] dataChunk) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"        // \"1\" means done, \"0\" means not done","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"        Boolean isDone \u003d dataChunk[1].equals(\"1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"        String name \u003d dataChunk[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(new Todo(name, isDone));","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"    private void loadDeadline(List\u003cTask\u003e tasks, String[] dataChunk) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"        // \"1\" means done, \"0\" means not done","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"        boolean isDone \u003d dataChunk[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"        String name \u003d dataChunk[2] + \" \";","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"        String endDateTime \u003d dataChunk[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"        Deadline curr \u003d new Deadline(name, endDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"            curr.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"    private void loadEvent(List\u003cTask\u003e tasks, String[] dataChunk) {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"        // \"1\" means done, \"0\" means not done","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"        boolean isDone \u003d dataChunk[1].equals(\"1\");","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"        String name \u003d dataChunk[2] + \" \";","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"        String periodDateTime \u003d dataChunk[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"        Event curr \u003d new Event(name, periodDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(curr);","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"        if (isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"            curr.markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"     * This function will write the tasks from the list of Task objects into","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"     * a txt file, ensuring persistent storage of the tasks. When the app is opened","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"     * again after being terminated, the tasks saved will be available again.","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"     * @param tasks list of Task objects in the app","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"     * @throws IOException an exception thrown when there is a problem with the input/output (IO)","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        FileWriter fw \u003d new FileWriter(file.getPath());","lastModifiedDate":"2022-09-04"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"            String isDoneSymbol \u003d task.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"stevenlimhw"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"stevenlimhw"},"content":"                fw.write(\"T | \" + isDoneSymbol + \" | \" + task.getName() + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"stevenlimhw"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"stevenlimhw"},"content":"                fw.write(\"D | \" + isDoneSymbol + \" | \" + task.getName()","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"stevenlimhw"},"content":"                        + \" | \" + ((Deadline) task).getDateTime() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"stevenlimhw"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"stevenlimhw"},"content":"                fw.write(\"E | \" + isDoneSymbol + \" | \" + task.getName()","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"stevenlimhw"},"content":"                        + \" | \" + ((Event) task).getDateTime() + \"\\n\");","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"stevenlimhw"},"content":"        fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":105}},{"path":"src/main/java/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"package utils;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import ui.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.EmptyNameException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import objects.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import objects.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import objects.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-06"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"        return tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"     * Creates a new Todo object and adds it to the tasks list.","lastModifiedDate":"2022-09-06"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"     * @param inputs array of input strings (e.g. [\"todo\", \"wash dishes\"])","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    public String addTodo(String[] inputs) throws EmptyNameException {","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            throw new EmptyNameException(\"Todo name cannot be empty...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder todoName \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 1; i \u003c inputs.length - 1; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"            todoName.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"        // Edge case: When inputs.length is 2, the todoName is not captured by the loop above.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"        todoName.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"        Todo newTodo \u003d new Todo(todoName.toString().trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"        assert Objects.equals(newTodo.getName(), todoName.toString().trim());","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack! I\u0027ve added this task:\\n\" + \"  \" + newTodo + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"stevenlimhw"},"content":"     * Creates a new objects.Deadline object and adds it to the tasks list.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"stevenlimhw"},"content":"     * @param inputs array of input strings","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"stevenlimhw"},"content":"    public String addDeadline(String[] inputs) throws EmptyNameException {","lastModifiedDate":"2022-09-04"},{"lineNumber":49,"author":{"gitId":"stevenlimhw"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"stevenlimhw"},"content":"            throw new EmptyNameException(\"Deadline name cannot be empty, quack!\");","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder deadlineName \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder endDateTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"stevenlimhw"},"content":"        processDeadline(inputs, deadlineName, endDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"stevenlimhw"},"content":"        Deadline newDeadline \u003d obtainNewDeadline(deadlineName, endDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"stevenlimhw"},"content":"        assert Objects.equals(newDeadline.getName(), deadlineName.toString().trim());","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack! I\u0027ve added this task:\\n\" + \"  \"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"stevenlimhw"},"content":"                + newDeadline + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"stevenlimhw"},"content":"    private void processDeadline(String[] inputs, StringBuilder deadlineName, StringBuilder endDateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"stevenlimhw"},"content":"        boolean isReadingDateTime \u003d false;","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 1; i \u003c inputs.length - 1; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"stevenlimhw"},"content":"            if (inputs[i].equals(\"/by\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"stevenlimhw"},"content":"                isReadingDateTime \u003d true;","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"stevenlimhw"},"content":"            if (!isReadingDateTime) {","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"stevenlimhw"},"content":"                deadlineName.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"stevenlimhw"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"stevenlimhw"},"content":"                endDateTime.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"stevenlimhw"},"content":"        checkDeadlineEdgeCase(inputs, deadlineName, endDateTime, isReadingDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"stevenlimhw"},"content":"    private void checkDeadlineEdgeCase(String[] inputs, StringBuilder deadlineName,","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"stevenlimhw"},"content":"                                       StringBuilder endDateTime, boolean isReadingDateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"stevenlimhw"},"content":"        // Edge case: When name or date is only one string, they are not captured by the loop above.","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"stevenlimhw"},"content":"        if (!isReadingDateTime) {","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"stevenlimhw"},"content":"            deadlineName.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"stevenlimhw"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"stevenlimhw"},"content":"            endDateTime.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"stevenlimhw"},"content":"    private Deadline obtainNewDeadline(StringBuilder deadlineName, StringBuilder endDateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"stevenlimhw"},"content":"        Deadline newDeadline \u003d new Deadline(","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"stevenlimhw"},"content":"                deadlineName.toString().trim(),","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"stevenlimhw"},"content":"                endDateTime.toString().trim());","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"stevenlimhw"},"content":"        return newDeadline;","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"stevenlimhw"},"content":"     * Creates a new objects.Event object and adds it to the tasks list.","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"stevenlimhw"},"content":"     * @param inputs array of input strings","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"stevenlimhw"},"content":"    public String addEvent(String[] inputs) throws EmptyNameException {","lastModifiedDate":"2022-09-04"},{"lineNumber":102,"author":{"gitId":"stevenlimhw"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"stevenlimhw"},"content":"            throw new EmptyNameException(\"Event name cannot be empty...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder eventName \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder periodDateTime \u003d new StringBuilder();","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"stevenlimhw"},"content":"        processEvent(inputs, eventName, periodDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"stevenlimhw"},"content":"        Event newEvent \u003d new Event(eventName.toString().trim(), periodDateTime.toString().trim());","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"stevenlimhw"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"stevenlimhw"},"content":"        assert Objects.equals(newEvent.getName(), eventName.toString().trim());","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack! I\u0027ve added this task:\\n\" + \"  \"","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"stevenlimhw"},"content":"                + newEvent + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"stevenlimhw"},"content":"    private void processEvent(String[] inputs, StringBuilder eventName, StringBuilder periodDateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"stevenlimhw"},"content":"        boolean isReadingDateTime \u003d false;","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"stevenlimhw"},"content":"        for (int i \u003d 1; i \u003c inputs.length - 1; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"stevenlimhw"},"content":"            if (inputs[i].equals(\"/at\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"stevenlimhw"},"content":"                isReadingDateTime \u003d true;","lastModifiedDate":"2022-09-14"},{"lineNumber":122,"author":{"gitId":"stevenlimhw"},"content":"                continue;","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"stevenlimhw"},"content":"            if (!isReadingDateTime) {","lastModifiedDate":"2022-09-14"},{"lineNumber":125,"author":{"gitId":"stevenlimhw"},"content":"                eventName.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"stevenlimhw"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"stevenlimhw"},"content":"                periodDateTime.append(inputs[i]).append(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"stevenlimhw"},"content":"        checkEventEdgeCase(inputs, eventName, periodDateTime, isReadingDateTime);","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"stevenlimhw"},"content":"    private void checkEventEdgeCase(String[] inputs, StringBuilder eventName,","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"stevenlimhw"},"content":"                                       StringBuilder periodDateTime, boolean isReadingDateTime) {","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"stevenlimhw"},"content":"        // Edge case: When name or date is only one string, they are not captured by the loop above.","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"stevenlimhw"},"content":"        if (!isReadingDateTime) {","lastModifiedDate":"2022-09-14"},{"lineNumber":137,"author":{"gitId":"stevenlimhw"},"content":"            eventName.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"stevenlimhw"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"stevenlimhw"},"content":"            periodDateTime.append(inputs[inputs.length - 1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"stevenlimhw"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"stevenlimhw"},"content":"     * Deletes a task at a specific index.","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"stevenlimhw"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"stevenlimhw"},"content":"     * @param taskIndex index of the task to be removed (1-indexed)","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"stevenlimhw"},"content":"     * @throws NoTasksException an exception thrown when the list of Task objects is empty","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"stevenlimhw"},"content":"     * @throws InvalidTaskIndexException an exception thrown when there is no Task object","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"stevenlimhw"},"content":"     * at that particular index (1-indexed)","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"stevenlimhw"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"stevenlimhw"},"content":"    public String deleteTask(int taskIndex)","lastModifiedDate":"2022-09-04"},{"lineNumber":152,"author":{"gitId":"stevenlimhw"},"content":"            throws NoTasksException, InvalidTaskIndexException {","lastModifiedDate":"2022-08-25"},{"lineNumber":153,"author":{"gitId":"stevenlimhw"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"stevenlimhw"},"content":"            throw new NoTasksException();","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"stevenlimhw"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"stevenlimhw"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"stevenlimhw"},"content":"        // taskIndex is 1-indexed","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"stevenlimhw"},"content":"        Task t \u003d tasks.remove(taskIndex - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"stevenlimhw"},"content":"        return \"Quack! I\u0027ve removed this task:\\n\" + \"  \" + t","lastModifiedDate":"2022-09-14"},{"lineNumber":162,"author":{"gitId":"stevenlimhw"},"content":"                + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":165,"author":{"gitId":"stevenlimhw"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2022-09-04"},{"lineNumber":166,"author":{"gitId":"stevenlimhw"},"content":"        StringBuilder text \u003d new StringBuilder(\"Here are the matching tasks in your list, quack:\\n\");","lastModifiedDate":"2022-09-14"},{"lineNumber":167,"author":{"gitId":"stevenlimhw"},"content":"        boolean isNotFound \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":168,"author":{"gitId":"stevenlimhw"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":169,"author":{"gitId":"stevenlimhw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"stevenlimhw"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"stevenlimhw"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"stevenlimhw"},"content":"                text.append(index).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"stevenlimhw"},"content":"                isNotFound \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":174,"author":{"gitId":"stevenlimhw"},"content":"                index +\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":175,"author":{"gitId":"stevenlimhw"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":176,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"stevenlimhw"},"content":"        if (isNotFound) {","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"stevenlimhw"},"content":"            text.append(\"There are no matching tasks, quack quack quack...\");","lastModifiedDate":"2022-09-14"},{"lineNumber":179,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"stevenlimhw"},"content":"        return text.toString();","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-06"},{"lineNumber":183,"author":{"gitId":"stevenlimhw"},"content":"    public String sortByName() {","lastModifiedDate":"2022-09-06"},{"lineNumber":184,"author":{"gitId":"stevenlimhw"},"content":"        tasks.sort((t1, t2) -\u003e t1.getName().compareTo(t2.getName()));","lastModifiedDate":"2022-09-06"},{"lineNumber":185,"author":{"gitId":"stevenlimhw"},"content":"        return \"Tasks are sorted successfully, quack!\";","lastModifiedDate":"2022-09-06"},{"lineNumber":186,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-09-06"},{"lineNumber":187,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"stevenlimhw":187}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"\u003cAnchorPane prefHeight\u003d\"599.0\" prefWidth\u003d\"342.0\" style\u003d\"-fx-background-color: #FFFF99#FFFF99;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"557.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"380.0\" promptText\u003d\"Type in a message...\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.topAnchor\u003d\"557.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"      \u003c/TextField\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"66.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"546.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"541.0\" prefWidth\u003d\"370.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"stevenlimhw":28}},{"path":"src/main/resources/view/MessageContainer.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"300\" prefHeight\u003d\"102.0\" prefWidth\u003d\"310.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"        \u003cLabel fx:id\u003d\"label\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"81.0\" maxWidth\u003d\"258.0\" prefHeight\u003d\"81.0\" prefWidth\u003d\"258.0\" style\u003d\"-fx-background-color: white; -fx-background-radius: 10px; -fx-label-padding: 0px 20px; -fx-max-height: 40px; -fx-padding: 10px 20px;\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"         \u003cgraphic\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"            \u003cText fx:id\u003d\"message\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" style\u003d\"-fx-font-family: monospaced;\" text\u003d\"Text\" textAlignment\u003d\"RIGHT\" wrappingWidth\u003d\"230.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"         \u003c/graphic\u003e\u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"      \u003cCircle fx:id\u003d\"circleProfile\" fill\u003d\"#1f93ff00\" radius\u003d\"21.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"      \u003c/Circle\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"stevenlimhw":31}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.EmptyNameException;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import utils.TaskList;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"    public void addTodoWithoutExceptions() {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"            taskList.addTodo(new String[] {\"todo\", \"wash dishes\"});","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"            assertEquals(\"wash dishes\", tasks.get(0).getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"        } catch (EmptyNameException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: EmptyNameException is thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    public void addTodoWithEmptyNameException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            taskList.addTodo(new String[] {\"todo\"});","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: EmptyNameException is not thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"        } catch (EmptyNameException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"            assertNotNull(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"stevenlimhw":34}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"import ui.Ui;","lastModifiedDate":"2022-09-05"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"import exceptions.NoTasksException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"import objects.Task;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"import objects.Todo;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"stevenlimhw"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"stevenlimhw"},"content":"public class UiTest {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"stevenlimhw"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"stevenlimhw"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"stevenlimhw"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"stevenlimhw"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"stevenlimhw"},"content":"    @Test","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"stevenlimhw"},"content":"    public void showTasksWithNoTasksException() {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"stevenlimhw"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"stevenlimhw"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"stevenlimhw"},"content":"            Ui.showTasks(tasks);","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"stevenlimhw"},"content":"            fail(\"Test Fail: NoTasksException is not thrown.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"stevenlimhw"},"content":"        } catch (NoTasksException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"stevenlimhw"},"content":"            assertNotNull(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"stevenlimhw"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"stevenlimhw"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"stevenlimhw"},"content":"    @AfterEach","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"stevenlimhw"},"content":"    public void clearDown() {","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"stevenlimhw"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"stevenlimhw"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"stevenlimhw"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"stevenlimhw":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stevenlimhw"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"stevenlimhw"},"content":"delete 1","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"stevenlimhw"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"stevenlimhw"},"content":"list","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"stevenlimhw"},"content":"deadline return book /by 02/08/2019 1800","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"stevenlimhw"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"stevenlimhw"},"content":"mark 0","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"stevenlimhw"},"content":"unmark 10","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"stevenlimhw"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"stevenlimhw"},"content":"deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"stevenlimhw"},"content":"event","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"stevenlimhw"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"stevenlimhw"},"content":"bye","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"stevenlimhw":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"stevenlimhw"},"content":"java -classpath ..\\bin app.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"stevenlimhw":1}}]

[{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * AddCommand class is the parent class for Todo, Deadline and Event","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  protected String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  public AddCommand() {}","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"  public AddCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"    String[] addlst \u003d description.split(\" \", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"    if (addlst.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"Task description missing!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    this.description \u003d addlst[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {}","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"   * Prints the correct message depending on the tasks type","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   * @param tasklist Array of tasks","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"   * @param task The task that has been added","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"  public void printMessage(ArrayList\u003cTask\u003e tasklist, Task task) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"    System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"    System.out.println(task.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"    System.out.println(","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"      \"Now you have \" + tasklist.size() + \" task(s) in the list\"","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"    );","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":39}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * ByeCommand says bye to user","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":16}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * Parent class of all commands with single execute method","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  public abstract void execute(ArrayList\u003cTask\u003e TaskList) throws DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":13}},{"path":"src/main/java/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"public enum Commands {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"  bye,","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"  list,","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"  mark,","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"  unmark,","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"  delete,","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"  todo,","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"  deadline,","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"  event,","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"sharmaine1028":12}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * DeadlineCommand which handles creation and message of Deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  private String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for DeadlineCommand which includes description of task and when the task needed to be completed by","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"   * @param description Description of task","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"   * @param by When the task is required by","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"  public DeadlineCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"    String[] eventlst \u003d description.split(\"/by\", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    if (eventlst.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"Alamak! Fill in when the deadline is by...\");","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"    this.description \u003d eventlst[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"    this.by \u003d eventlst[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   * Creates a new Deadline object to tasklist and prints message to user","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"    Deadline task \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"    tasklist.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"    super.printMessage(tasklist, task);","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":37}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * DeleteCommand used to delete tasks","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  private int index;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   * Constuctor for DeleteCommand","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"   * @param description String representation of task number to be marked","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"   * @throws DukeException if user did not type in a correct task number","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"  public DeleteCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    try {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"      this.index \u003d Integer.parseInt(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"    } catch (Exception e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"Invalid tasks\");","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   * Marks command and prints out message to users depending on whether the command was successful","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"    if (index \u003c\u003d 0 || index \u003e tasklist.size()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"No such task found\");","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"    } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"      Task task \u003d tasklist.remove(index - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(task.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"sharmaine1028"},"content":"        \"Now you have \" + tasklist.size() + \" task(s) in the list\"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"sharmaine1028"},"content":"      );","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"sharmaine1028":44}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * Event command has an at field for the timing of the event","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  protected String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for EventCommand with at field","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"   * @param description Description of event","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"   * @param at When the event is at","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"  public EventCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"    String[] eventlst \u003d description.split(\"/at\", 2);","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    if (eventlst.length \u003c 2) {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"Alamak! Fill in when the event is at...\");","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"    this.description \u003d eventlst[0];","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"    this.at \u003d eventlst[1];","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   * Creates new Event and add to tasklist as well as print message to user","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"    Event task \u003d new Event(this.description, this.at);","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"    tasklist.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"    super.printMessage(tasklist, task);","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":37}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"   * Lists all tasks in tasklist or print default message if no tasks found","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"    if (tasklist.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\"No task found so far.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"      for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"        System.out.println((i + 1) + \". \" + tasklist.get(i).toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"      }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":23}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * MarkCommand used to mark tasks as done","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  private int index;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   * Constuctor for MarkCommand","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"   * @param description String representation of task number to be marked","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"   * @throws DukeException if user did not type in a correct task number","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"  public MarkCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"      this.index \u003d Integer.parseInt(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"    } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"Invalid tasks\");","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   * Marks command and prints out message to users depending on whether the command was successful","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"    if (index \u003c\u003d 0 || index \u003e tasklist.size()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"No such tasks found\");","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"      Task task \u003d tasklist.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"      task.markAsDone();","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\"Fuyoh! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(task.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":42}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" * ToDoCommand that creates a new Todo and prints message to user","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"public class ToDoCommand extends AddCommand {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for TodoCommand","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"   * @param description Description of Todo to be created","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"  public ToDoCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"   * Creates new Todo and prints message to user","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"    ToDo task \u003d new ToDo(this.description);","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"    tasklist.add(task);","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"    super.printMessage(tasklist, task);","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":29}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package commands;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"  private int index;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"   * Constuctor for UnmarkCommand","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"   * @param description String representation of task number to be marked","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   * @throws DukeException if user did not type in a correct task number","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"  public UnmarkCommand(String description) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"      this.index \u003d Integer.parseInt(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"    } catch (Exception e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"Invalid tasks\");","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"   * Unmarks command","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"   * @throws DukeException if task chosen is out of bounds","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"  public void execute(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"    if (index \u003c\u003d 0 || index \u003e tasklist.size()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"      throw new DukeException(\"No such tasks found\");","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"    } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"      Task task \u003d tasklist.get(index - 1);","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"      task.markUndone();","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\"Aiyah! I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(task.toString());","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":41}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package exception;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for DukeException","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"   * @param message message to be displayed to user when caught","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"  public DukeException(String message) {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"    super(message);","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":12}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package main;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import commands.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import exception.DukeException;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"import tasks.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":" * Duke is our helper which manages the commands","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"public class Duke {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  /** The tasklist keeps track of all the tasks added */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"  private ArrayList\u003cTask\u003e TaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"  /** isExit tells Duke whether to close */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"  private boolean isExit \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"  /** sc takes in user input infinitely until Duke is closed */","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"  private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"   * Greets user upon opening Duke and does commands until Duke is closed","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"  void run() {","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"    try {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"      this.greet();","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"      while (true) {","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"        if (isExit) {","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"          break;","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"        } else {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"          getCommand(sc.nextLine());","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"      }","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"    } catch (Exception e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"sharmaine1028"},"content":"   * Calls the parser to check the commands and catches exceptions","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"sharmaine1028"},"content":"   * @param input User input of commands","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"sharmaine1028"},"content":"  private void getCommand(String input) {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"sharmaine1028"},"content":"    try {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"sharmaine1028"},"content":"      Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"sharmaine1028"},"content":"      c.execute(TaskList);","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"sharmaine1028"},"content":"      if (c instanceof ByeCommand) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"sharmaine1028"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sharmaine1028"},"content":"      }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\u0027\\n\u0027);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"sharmaine1028"},"content":"    } catch (DukeException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(e.getMessage() + \u0027\\n\u0027);","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sharmaine1028"},"content":"    } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"sharmaine1028"},"content":"      System.out.println(\"No such command found \\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"sharmaine1028"},"content":"   * Prints out greeting when user just opened Duke","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"sharmaine1028"},"content":"  private void greet() {","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"sharmaine1028"},"content":"    String logo \u003d","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"sharmaine1028"},"content":"      \" ____        _        \\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"sharmaine1028"},"content":"      \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"sharmaine1028"},"content":"      \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"sharmaine1028"},"content":"      \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"sharmaine1028"},"content":"      \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"sharmaine1028"},"content":"    System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"sharmaine1028"},"content":"    System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"sharmaine1028"},"content":"   * Creates new Duke and run it","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"sharmaine1028"},"content":"   * @param args","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"sharmaine1028"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"sharmaine1028"},"content":"    Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"sharmaine1028"},"content":"    duke.run();","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":80}},{"path":"src/main/java/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package main;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"import commands.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"import exception.*;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":" * A parser that parses user input to the commands","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"public class Parser {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"   * Returns the correct command based on user input","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"   * @param text The text received from user","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"   * @throws DukeException","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"   * @throws Exception","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"  static Command parse(String text) throws DukeException {","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"    String[] instructions \u003d text.split(\" \", 2);","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"    String command \u003d instructions[0];","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"    switch (Commands.valueOf(command)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"      case list:","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"        return new ListCommand();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"      case bye:","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"        return new ByeCommand();","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"      case todo:","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"        return new ToDoCommand(text);","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"      case deadline:","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"        return new DeadlineCommand(text);","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"      case event:","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"        return new EventCommand(text);","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"      case mark:","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"        return new MarkCommand(instructions[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"      case unmark:","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"        return new UnmarkCommand(instructions[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"      case delete:","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"        return new DeleteCommand(instructions[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"      default:","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"        throw new DukeException(\"Unknown command found\");","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"sharmaine1028"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":42}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":" * Tasks that need to be done before a specific date/time","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"  private String by;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for deadline task","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"   * @param description Description of task details","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"   * @param by When user requires the task to be done by","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"  public Deadline(String description, String by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"    this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"   * Returns String representation of Deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"   * @return String representation of Deadline","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"    return \"[D]\" + super.toString() + \"(by:\" + this.by + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":29}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":" * Tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"  private String at;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for Event","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"   * @param description Description of task details","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"   * @param by When the task is at","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"  public Event(String description, String at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"    this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"   * Returns String representation of Event","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"   * @return String representation of Event","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"    return \"[E]\" + super.toString() + \"(at:\" + this.at + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":29}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"  /** isDone keeps track of whether the task is marked */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"  private boolean isDone;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"  /** Description of task */","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"  private String description;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor of task, and initialise it as unmarked","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"   * @param txt Description of task","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  public Task(String txt) {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"    this.description \u003d txt;","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"   * Based on isDone, return the correct status Icon","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"   * @return String representation of status Icon","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"    return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sharmaine1028"},"content":"   * Mark task as done","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"sharmaine1028"},"content":"  public void markAsDone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"sharmaine1028"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":32,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"sharmaine1028"},"content":"   * Mark task as undone","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"sharmaine1028"},"content":"  public void markUndone() {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sharmaine1028"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"sharmaine1028"},"content":"   * String representaion of task","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"sharmaine1028"},"content":"   * @return String representation of task","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"sharmaine1028"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"sharmaine1028"},"content":"    return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":50}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"package tasks;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"/**","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":" * Tasks without any date/time attached to it","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":" */","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"   * Constructor for Todo","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"   * @param description Description of Todo","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"sharmaine1028"},"content":"  public ToDo(String description) {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sharmaine1028"},"content":"    super(description);","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sharmaine1028"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"  /**","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"sharmaine1028"},"content":"   * Returns string representation of Todo","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"   *","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"sharmaine1028"},"content":"   * @return String representation of Todo","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"sharmaine1028"},"content":"   */","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"sharmaine1028"},"content":"  @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"sharmaine1028"},"content":"  public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sharmaine1028"},"content":"  }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sharmaine1028"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sharmaine1028":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sharmaine1028"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"sharmaine1028"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"sharmaine1028"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"sharmaine1028"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"sharmaine1028"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"sharmaine1028"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"sharmaine1028"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"sharmaine1028"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"sharmaine1028"},"content":"delete 1","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"sharmaine1028":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sharmaine1028"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\main\\*.java ..\\src\\main\\java\\exception\\*.java ..\\src\\main\\java\\tasks\\*.java ..\\src\\main\\java\\commands\\*.java ","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sharmaine1028"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sharmaine1028":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"sharmaine1028"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/main/*.java ../src/main/java/exception/*.java ../src/main/java/tasks/*.java ../src/main/java/commands/*.java ","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"sharmaine1028"},"content":"java -classpath ../bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sharmaine1028":2,"-":36}}]

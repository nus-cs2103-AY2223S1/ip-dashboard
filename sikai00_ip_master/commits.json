{"authorDailyContributionsMap":{"sikai00":[{"date":"2022-08-16","commitResults":[{"hash":"b43e3e85dc7f317d826615c9f38554cb86ba8dbb","messageTitle":"Duke.java: Add pretty print method to format all messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":8}}},{"hash":"cc194fb7cd49d37dd41fd7d9ffce9b69da25befb","messageTitle":"Duke.java: Complete Level 1. Greet, Echo, Exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"78d21d157dcee8c0f23f0960ea0b8d44f5396fe5","messageTitle":"Duke.java: Complete Level 2: Add, List","messageBody":"Refactored Duke into its own object\n\nDuke now has instance level methods and attributes. This is primarily\ndone to allow better future code expansion.\n\nChange usrCommand variable to usrInput\n\nusrCommand is misleading as tasks are not commands. The use case of the\ncommand line have expanded to include addition of new tasks without\ncommands but by simply entering the task into the command line.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":13}}},{"hash":"2610c25eb5d413b0221b4c63e77117722d1cb716","messageTitle":"Change representation of tasks into its own class","messageBody":"This is a more natural approach to represent tasks. Task can also have\nmore information beyond its title for future code extension. A TaskList\nclass is also added to manage and store these tasks. These changes allow\nfor abstraction barriers to be erected.\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":0}}},{"hash":"b44afd64eadae0b2c11c6c4bfe7a9af28faa1059","messageTitle":"Complete Level 3. Mark as Done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":24}}}]},{"date":"2022-08-17","commitResults":[{"hash":"d87289ec1677f980899ab5753c1388e330e71fd9","messageTitle":"Add support for different types of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"3235ad5255e3c07aaed09025a6c2e04ce47a6d2c","messageTitle":"Task.java: Change to an abstract class","messageBody":"We are now dividing task into 3 different types. As such we change Task\ninto an abstract class since these different types are all Task. This is\nto allow cleaner code and also to maintain our use of TaskList.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":7}}},{"hash":"7876a94079e80a627dbcdab8731ada75e9ff1526","messageTitle":"TaskList.java: Add size method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"c6d841f573b72e0c39769376c1bf3b6a7e79abae","messageTitle":"Complete Level 4. ToDos, Events, Deadlines","messageBody":"addTask now takes in Task instead of String.\n\nThis is to pass the logic of deciding what kind of a task to the main\nlogic loop. This is due to the different fields a task may have. Making\naddTask handle such decisions can lead to many parameters needed and\nhard to maintain.\n\nMessages are now divided into start, content and end.\n\nWe now require intro messages as well as end messages for any command\ninput. Splitting message up will allow us to have greater readability.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":88}}},{"hash":"e147509d0a3cda7a5fb64e570fe55572a3b4e46f","messageTitle":"Duke.java: Fix and tidy up messages to match change in style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"63af71ae1ee8eb2cb780df3174bc3574c530f0af","messageTitle":"Duke.java: Refactor main loop if-else into switch","messageBody":"Using if-else statements for main loop had bad readability. This is due to the denseness of the statements. Using switch statement will allow for better readability since the conditions are clear. One trade off is that the \"bye\" condition cannot exist within the switch statement due to the location of break. However, readability is more important and the \"bye\" condition is close enough to the switch statements.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":29}}},{"hash":"c36f94ba63382717cbfcaa9e405e8997bb58d745","messageTitle":"Complete A-TextUiTesting","messageBody":"After refactoring of code in the previous commit, the automated Text UI\ntesting was used to check for regressions.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0}}},{"hash":"35f7a302ea9a98232aa9cea95c030d1e36fbaed2","messageTitle":"Change wording from title to description to match guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":14}}},{"hash":"f190a777b469ebf17ed05c9ecad33a3b0c201a98","messageTitle":"Complete Level 5. Handle Errors","messageBody":"Other changes:\nChanged from 2 whitespaces for tabs to 4 as per guidelines.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":242,"deletions":166}}},{"hash":"41561df11b03aed7211e06724822629f8bd0fee3","messageTitle":"Complete Level 6. Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"sikai00":{"java":359,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":8}},"authorContributionVariance":{"sikai00":85927.336},"authorDisplayNameMap":{"sikai00":"CHAN.. KAI"}}

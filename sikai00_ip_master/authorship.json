[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"sikai00":21,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.Parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * Main class of Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" * This class also serves as the main entry point of application.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Duke instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public Duke() {","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        this.storage \u003d new Storage(\"data\", \"duke\");","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.taskList \u003d this.storage.readFromStorage();","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        Command c \u003d parser.parseCommand(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"            CommandResult cr \u003d c.execute(this.taskList, this.storage);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"            return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"            CommandResult cr \u003d new CommandResult(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"            return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sikai00":36,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"            stage.setTitle(\"Dodie\");","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":33}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that adds a Task to the specified TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new AddCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        String taskString \u003d size \u003e 1 ? \"tasks\" : \"task\";","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        String msgBegin \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        String msgEnd \u003d \"\\nNow you have \" + size + \" \" + taskString + \" in this list.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        String msg \u003d msgBegin + \"  \" + task + msgEnd;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        storage.appendTaskToStorage(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":41}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"     * Executes the command and returns its result.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"     * If the command is successfully executed, a CommandResult with relevant information about execution of command","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * is returned.","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * @param taskList The TaskList to use","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * @param storage The storage to use","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @return CommandResult with relevant information about execution of command","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @throws DukeException If the command executed encounters an issue with the parameters","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    public abstract CommandResult execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"sikai00":22}},{"path":"src/main/java/duke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":" * Represents the result of an executed command.","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"    private final String msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"    private final boolean shouldExit;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"     * Initializes a new CommandResult instance. Defaults shouldExit to false.","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"     * @param msg Response message from the executed Command.","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    public CommandResult(String msg) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * Initializes a new CommandResult instance.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * @param msg Response message from the executed Command.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * @param shouldExit Whether the Command led to a call for the program to exit","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    public CommandResult(String msg, boolean shouldExit) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        this.shouldExit \u003d shouldExit;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        return this.msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    public boolean getShouldExit() {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        return this.shouldExit;","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":36}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that adds a Task to the specified TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new DeleteCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param taskIndex Index of the task to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        if (this.taskIndex \u003e taskList.size() - 1 || this.taskIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            throw new DukeException(\"There is no such task index... \"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                    + \"Try \u0027list\u0027 to view all the tasks and their index!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        String task \u003d taskList.getTask(taskIndex).toString();","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        String taskString \u003d size \u003e 1 ? \"tasks\" : \"task\";","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        String msgBegin \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        String msgEnd \u003d \"\\nNow you have \" + size + \" \" + taskString","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"                + \" in this list.\";","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        String msg \u003d msgBegin + \" \" + task + msgEnd;","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":47}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents an executable command to exit the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        String msg \u003d \"Bye. Hope to see you again soon!\\n(exiting in a second...)\";","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg, true);","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that finds a Task from the specified TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new FindCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param keyword The keyword to match","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        TaskList results \u003d taskList.findMatchingTasks(this.keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        String msgBegin \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        String msg \u003d msgBegin;","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        if (results.size() \u003e 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"            msg +\u003d results.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"            msg \u003d \"There are no matching tasks in your list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"sikai00":41}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that throws a DukeException.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * This command is only used when there is an error.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    private final String errorMsg;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     * Initializes a new InvalidCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * @param errorMsg Error message to be encapsulated by the command","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    public InvalidCommand(String errorMsg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        throw new DukeException(errorMsg);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":30}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents an executable command prints an overview of all added tasks and their status.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        String msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        if (taskList.size() \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"            msg \u003d \"You currently have no task in your list! Great job for completing all your tasks :-)\";","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"            msg \u003d \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":28}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that marks the task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new MarkCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param taskIndex Task index to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        if (this.taskIndex \u003e taskList.size() - 1 || this.taskIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            throw new DukeException(\"There is no such task index... \"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                    + \"Try \u0027list\u0027 to view all the tasks and their index!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        taskList.markTask(this.taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        String msgBegin \u003d \"Nice! I\u0027ve marked this task as done:\\n \";","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        String msg \u003d msgBegin + taskList.getTask(this.taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":42}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that marks the task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new UnmarkCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param taskIndex Task index to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        if (this.taskIndex \u003e taskList.size() - 1 || this.taskIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            throw new DukeException(\"There is no such task index... \"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                    + \"Try \u0027list\u0027 to view all the tasks and their index!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        taskList.unmarkTask(this.taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        String msgBegin \u003d \"OK, I\u0027ve marked this task as not done yet:\\n \";","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        String msg \u003d msgBegin + taskList.getTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        CommandResult cr \u003d new CommandResult(msg);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        return cr;","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":42}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":" * Represents an Exception due to Duke and encapsulates an exception message.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"        super(msg);","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":10}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Task identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String TASK_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Deadline instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param done Whether the task is completed or not","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @param by The deadline for this task","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    public Deadline(String description, boolean done, LocalDateTime by) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        super(description, done);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     * Returns an Optional of the time the task is due by.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     * @return Optional of the time the task is due by","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        return Optional.of(this.by);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"     * Returns the task type as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     * @return Task type as a String","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        return \"Deadline\";","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of the Deadline instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     * @return String representation of the Deadline instance","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        String checkbox \u003d this.getDone() ? \"[D][X]\" : \"[D][ ]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        String dateFormatted \u003d \"(by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        return checkbox + \" \" + super.getDescription() + \" \" + dateFormatted;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":55}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents a task with a specific event duration (e.g., starts at 4pm and ends at 6pm).","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /** Task identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public static final String TASK_WORD \u003d \"event\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Event instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @param done Whether the task is completed or not","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * @param at The event duration for this task","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public Event(String description, boolean done, LocalDateTime at) {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        super(description, done);","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     * Returns an Optional of the time of event.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     * @return Optional of the time of event","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        return Optional.of(this.at);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"     * Returns the task type as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"     * @return Task type as a String","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        return \"Event\";","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of the Deadline instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"     * @return String representation of the Deadline instance","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        String checkbox \u003d this.getDone() ? \"[E][X]\" : \"[E][ ]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"        String dateFormatted \u003d \"(at: \" + this.at.format(formatter) + \")\";","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        return checkbox + \" \" + super.getDescription() + \" \" + dateFormatted;","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":59}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    private final String description;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    private boolean done;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Task instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * @param done Whether the task is completed or not","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    public Task(String description, boolean done) {","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * Returns the task type as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     * @return Task type as a String","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"     * Returns an Optional of the time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * @return Optional of the time of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    public abstract Optional\u003cLocalDateTime\u003e getTime();","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"     * Returns a description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"     * @return Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        return this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"     * Returns whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"     * @return Whether the task is done or not","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        return this.done;","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"     * Sets the task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"     * Sets the task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"        // This method is preferred over a toggle method as it is clearer on","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        // its effects.","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sikai00":71}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents a task without any time specifications.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    /** Task identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    public static final String TASK_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Todo instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * @param done Whether the task is completed or not","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param at The event duration for this task","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public Todo(String description, boolean done) {","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        super(description, done);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * Returns an empty Optional.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     * @return Empty Optional","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        return Optional.empty();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     * Returns the task type as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     * @return Task type as a String","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        return \"Todo\";","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of the Todo instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     * @return String representation of the Todo instance","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        String checkbox \u003d this.getDone() ? \"[T][X]\" : \"[T][ ]\";","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        return checkbox + \" \" + super.getDescription();","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":54}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// @@author j-lum-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"// @@author","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":2,"-":62}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// @@author j-lum-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with some modifications","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Timer;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // @authors","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Initializes the MainWindow.","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * This is used by FXMLLoader.","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Greet user upon GUI initialize","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(greetingMsg, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandResult response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response.getMessage(), dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (response.getShouldExit()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            // Delay the exit, so that the goodbye message is shown","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                public void run() {","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    Platform.exit();","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    System.exit(0); // Platform.exit() does not end the run","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }, 1000);","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":2,"-":79}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import duke.commands.InvalidCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":" * Handles the parsing of user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    private static final InvalidCommand NUMBER_FORMAT \u003d new InvalidCommand(\"Task index should be integers!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     * Parses the user input and returns the appropriate Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     * @return Command based on user input","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        switch (command) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"            return prepareAdd(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"            return prepareDelete(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"            return prepareMark(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"            return prepareUnmark(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"            return prepareFind(userInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Sorry, I wasn\u0027t programmed to understand this...\");","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new AddCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"     * This method parses the user input to distinguish between the different Tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"     * and returns an AddCommand with the correct Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"     * @return AddCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"    private Command prepareAdd(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(\" \", 3);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 3) {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Oh no! Try add \u003ctask type\u003e \u003cdescription\u003e!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"        String taskType \u003d tokens[1].toLowerCase();","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"        case Todo.TASK_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"            String todoDescription \u003d tokens[2].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"            Todo newTodo \u003d new Todo(todoDescription, false);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"            return new AddCommand(newTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"        case Deadline.TASK_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"                String[] deadlineTokens \u003d tokens[2].split(\"/by\");","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"                if (deadlineTokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"                    return new InvalidCommand(\"Oh no! Try doing \u0027add deadline \u003cdescription\u003e /by \" + \"\u003cdate\u003e\u0027!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"                String deadlineDescription \u003d deadlineTokens[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"                LocalDateTime by \u003d parseDateTime(deadlineTokens[1].trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"                Deadline newDeadline \u003d new Deadline(deadlineDescription, false, by);","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"                return new AddCommand(newDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"        case Event.TASK_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"                String[] eventTokens \u003d tokens[2].split(\"/at\");","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"                if (eventTokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"                    return new InvalidCommand(\"Oh no! Try doing \u0027add event \u003cdescription\u003e /at\" + \" \u003cdate\u003e\u0027!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"                String eventDescription \u003d eventTokens[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"                LocalDateTime at \u003d parseDateTime(eventTokens[1].trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"                Event newEvent \u003d new Event(eventDescription, false, at);","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"                return new AddCommand(newEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"There\u0027s no such event type as \" + taskType + \"!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new DeleteCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"     * @return DeleteCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"    private Command prepareDelete(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Oh no! Try delete \u003ctask index\u003e!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1], 10) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"            return NUMBER_FORMAT;","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new MarkCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"     * @return MarkCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"    private Command prepareMark(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Oh no! Try delete \u003cmark index\u003e!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1], 10) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"sikai00"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"sikai00"},"content":"            return NUMBER_FORMAT;","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new UnmarkCommand.","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"     * @return UnmarkCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"sikai00"},"content":"    private Command prepareUnmark(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Oh no! Try delete \u003cunmark index\u003e!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"sikai00"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1], 10) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"sikai00"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"sikai00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"            return NUMBER_FORMAT;","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"    private Command prepareFind(String userInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Oh no! Try find \u003ckeyword\u003e!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"        return new FindCommand(tokens[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"sikai00"},"content":"     * Creates and returns LocalDate objects by parsing user\u0027s input for date.","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"     * User input date should follow the format (yyyy-mm-dd HH:MM), in 24-hour time format.","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"     * The date can have a delimiter of a character from \"-/|\" (characters within the double quotes).","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"sikai00"},"content":"     * The time can have a delimiter of a character from \":.-|\" (characters within the double quotes).","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"sikai00"},"content":"     * The date and time must be separated by a single whitespace.","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"sikai00"},"content":"     * @param dateText User\u0027s input of date and time following the format specified.","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"sikai00"},"content":"     * @return LocalDateTime","lastModifiedDate":"2022-08-23"},{"lineNumber":182,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"sikai00"},"content":"    private static LocalDateTime parseDateTime(String dateText) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":184,"author":{"gitId":"sikai00"},"content":"        final DukeException wrongFormat \u003d new DukeException(\"Date and time is in the wrong format! \"","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"sikai00"},"content":"                + \"Correct format: yyyy-mm-dd HH:MM\");","lastModifiedDate":"2022-08-23"},{"lineNumber":186,"author":{"gitId":"sikai00"},"content":"        final DukeException cannotParse \u003d new DukeException(\"Date and time may have invalid values!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"sikai00"},"content":"        String[] dateTextTokens \u003d dateText.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":189,"author":{"gitId":"sikai00"},"content":"        if (dateTextTokens.length !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":190,"author":{"gitId":"sikai00"},"content":"            throw wrongFormat;","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":192,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"        String unparsedDate \u003d dateTextTokens[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":194,"author":{"gitId":"sikai00"},"content":"        String[] dateTokens \u003d unparsedDate.split(\"[-./|]\");","lastModifiedDate":"2022-08-23"},{"lineNumber":195,"author":{"gitId":"sikai00"},"content":"        if (dateTokens.length !\u003d 3) {","lastModifiedDate":"2022-08-23"},{"lineNumber":196,"author":{"gitId":"sikai00"},"content":"            throw wrongFormat;","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":198,"author":{"gitId":"sikai00"},"content":"        if (dateTokens[0].length() !\u003d 4 || dateTokens[1].length() !\u003d 2 || dateTokens[2].length() !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":199,"author":{"gitId":"sikai00"},"content":"            throw wrongFormat;","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":201,"author":{"gitId":"sikai00"},"content":"        String parsedDate \u003d String.join(\"-\", dateTokens);","lastModifiedDate":"2022-08-23"},{"lineNumber":202,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":203,"author":{"gitId":"sikai00"},"content":"        String unparsedTime \u003d dateTextTokens[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":204,"author":{"gitId":"sikai00"},"content":"        String[] timeTokens \u003d unparsedTime.split(\"[-:.|]\");","lastModifiedDate":"2022-08-23"},{"lineNumber":205,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":206,"author":{"gitId":"sikai00"},"content":"        if (timeTokens.length !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":207,"author":{"gitId":"sikai00"},"content":"            throw wrongFormat;","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":209,"author":{"gitId":"sikai00"},"content":"        if (timeTokens[0].length() !\u003d 2 || timeTokens[1].length() !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":210,"author":{"gitId":"sikai00"},"content":"            throw wrongFormat;","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":212,"author":{"gitId":"sikai00"},"content":"        String parsedTime \u003d String.join(\":\", timeTokens);","lastModifiedDate":"2022-08-23"},{"lineNumber":213,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":214,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":215,"author":{"gitId":"sikai00"},"content":"        String parsedDateTime \u003d parsedDate + \"T\" + parsedTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":216,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"            return LocalDateTime.parse(parsedDateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":218,"author":{"gitId":"sikai00"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":219,"author":{"gitId":"sikai00"},"content":"            throw cannotParse;","lastModifiedDate":"2022-08-26"},{"lineNumber":220,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":221,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":222,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":222}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":" * Handles all the storage-related tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    private final String folderDirectory;","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    private final String fileDirectory;","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Storage instance.","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     * @param folderDirectory Directory of the persistent storage file","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * @param fileName Name of the persistent storage file","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    public Storage(String folderDirectory, String fileName) {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        this.folderDirectory \u003d folderDirectory;","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        this.fileDirectory \u003d folderDirectory + \"/\" + fileName + \".txt\";","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"     * Reads and parses the task list from persistent storage and returns it.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * If no existing storage file is found, this method returns a new empty TaskList.","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"     * @return TaskList from persistent storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    public TaskList readFromStorage() {","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"            File f \u003d new File(this.fileDirectory);","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"                String taskStr \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"                String[] taskStrTokens \u003d taskStr.split(\"\\\\|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"                String taskType \u003d taskStrTokens[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"                String taskDescription \u003d taskStrTokens[1];","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"                boolean isTaskDone \u003d taskStrTokens[2].equals(\"0\") ? false : true;","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"                switch (taskType) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"                case \"Todo\":","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"                    Todo currTodo \u003d new Todo(taskDescription, isTaskDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"                    taskList.addTask(currTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"                case \"Deadline\":","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(taskStrTokens[3]);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"                    Deadline currDeadline \u003d new Deadline(taskDescription, isTaskDone, by);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"                    taskList.addTask(currDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"                case \"Event\":","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"                    LocalDateTime at \u003d LocalDateTime.parse(taskStrTokens[3]);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"                    Event currEvent \u003d new Event(taskDescription, isTaskDone, at);","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"                    taskList.addTask(currEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"                default:","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"                    // Something that cannot be recognized","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"            return taskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"        return taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"    private static String taskStrRepresentation(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"        String taskDone \u003d task.getDone() ? \"1\" : \"0\";","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"        String taskTime \u003d task.getTime().map(LocalDateTime::toString).orElse(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"        String strRepresentation \u003d taskType + \"|\" + taskDescription + \"|\" + taskDone + \"|\" + taskTime + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"        return strRepresentation;","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"     * Creates a new, blank persistent storage file and writes the input duke.utils.TaskList into the file.","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"     * @param taskList Input TaskList to read from and write into the persistent storage file.","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"    public void writeAllToStorage(TaskList taskList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"        File folderDirectory \u003d new File(this.folderDirectory);","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"        if (!folderDirectory.exists()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"            folderDirectory.mkdirs();","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory, false);","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"            int lenTaskList \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"            for (int i \u003d 0; i \u003c lenTaskList; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"                String strRepresentation \u003d Storage.taskStrRepresentation(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"                fw.append(strRepresentation);","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"     * Appends a new Task to persistent storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"    public void appendTaskToStorage(Task task) {","lastModifiedDate":"2022-08-30"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        File folderDirectory \u003d new File(this.folderDirectory);","lastModifiedDate":"2022-08-30"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"        if (!folderDirectory.exists()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"            folderDirectory.mkdirs();","lastModifiedDate":"2022-08-30"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory, true);","lastModifiedDate":"2022-08-30"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"            String strRepresentation \u003d Storage.taskStrRepresentation(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"            fw.write(strRepresentation);","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":128}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * Represents a List of Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * Initializes a new TaskList instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     * Adds a new task.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"     * Deletes a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     * @param index Index of the task as printed by TaskList\u0027s toString.","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     * Returns the number of tasks in the task list currently.","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    public int size() {","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"     * Returns the task with the input index.","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"     * @param index Index of the task as printed by viewAllTask.","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"     * @return Task with the input index.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"     * @param index Position of the task as indicated by TaskList\u0027s string","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"     *              representation.","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"    public void markTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        task.setDone();","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"     * @param index Position of the task as indicated by TaskList\u0027s string","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"     *              representation.","lastModifiedDate":"2022-08-16"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"        task.setNotDone();","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"     * Finds and returns a TaskList with subset of tasks with description matching the keyword.","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"     * @param keyword String to match the descriptions","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"     * @return TaskList of matching tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"    public TaskList findMatchingTasks(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"        Pattern pattern \u003d Pattern.compile(keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"            Matcher matcher \u003d pattern.matcher(task.getDescription());","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"            if (matcher.find()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"                result.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"        return result;","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"     * Return a string representation of all tasks.","lastModifiedDate":"2022-08-16"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"     * @return String representation of all tasks","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        int taskListSize \u003d this.tasks.size();","lastModifiedDate":"2022-08-16"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"        // String in java are immutable and leads to O(n^2) time complexity","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"        for (int i \u003d 0; i \u003c taskListSize; i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-16"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"            String taskStr \u003d index + \".\" + task + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"            allTasks.append(taskStr);","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        return allTasks.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sikai00":117}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":19}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    public void taskWordTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"        assertEquals(\"todo\", Todo.TASK_WORD);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public void taskTypeTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"        Todo todo \u003d new Todo(\"test\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        assertEquals(todo.getTaskType(), \"Todo\");","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public void getTimeTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        Todo todo \u003d new Todo(\"test1\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        assertEquals(Optional.empty(), todo.getTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        Todo todo \u003d new Todo(\"test1\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        assertEquals(\"[T][X] test1\", todo.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"sikai00":32}},{"path":"src/test/java/duke/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.io.File;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    private static final String FOLDER_DIRECTORY \u003d \"storage\";","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private static final String FILE_NAME \u003d \"testStorage\";","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private static final String FILE_DIRECTORY \u003d \"storage/testStorage.txt\";","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    // Solution below adapted from https://www.baeldung.com/java-delete-directory","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    private static void deleteDirectory(File directoryToBeDeleted) {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        File[] allContents \u003d directoryToBeDeleted.listFiles();","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        if (allContents !\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"            for (File file : allContents) {","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"                deleteDirectory(file);","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        directoryToBeDeleted.delete();","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public void createEmptyStorageTest() {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        Storage storage \u003d new Storage(FOLDER_DIRECTORY, FILE_NAME);","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(new TaskList());","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        File f \u003d new File(FILE_DIRECTORY);","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public void writeSimpleStorageTest() {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        Storage storage \u003d new Storage(FOLDER_DIRECTORY, FILE_NAME);","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        tl.addTask(new Todo(\"test\", true));","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        tl.addTask(new Todo(\"test\", true));","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        tl.addTask(new Todo(\"test\", true));","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(new TaskList());","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        File f \u003d new File(FILE_DIRECTORY);","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"                assertEquals(\"Todo|test|0| \", sc.nextLine());","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    @AfterEach","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    public void cleanUp() {","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        deleteDirectory(new File(FOLDER_DIRECTORY));","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"sikai00":62}},{"path":"src/test/java/duke/utils/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public void addTaskTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"        Task task \u003d new TaskStub();","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"        assertEquals(taskList.getTask(0), task);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        IndexOutOfBoundsException thrown \u003d assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"            taskList.deleteTask(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        });","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        assertEquals(\"Index 0 out of bounds for length 0\", thrown.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"sikai00":27}},{"path":"src/test/java/duke/utils/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Represents a stub for Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public TaskStub() {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"        super(\"\", false);","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        return \"TaskStub\";","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        return Optional.empty();","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        return \"taskstub\";","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"sikai00":30}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"sikai00":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"_KarenBot_ is a rude, self entitled desktop **chatbot** that will help you remember your **tasks**, all for the ","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"_low cost_ of having to deal with her attitude. _KarenBot_ is optimized for use via a Command Line Interface (CLI) while","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"still having the benefits of a Graphical User Interface (GUI). _KarenBot_ is best suited for the quick typist, ","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"maximising your productivity by spending less time on handling your tasks!","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"2. [Features](#features)","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"3. [Usage](#usage)","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"4. [Command summary](#command-summary)","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"5. [Product screenshots](#product-screenshots)","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"## Quick start","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/sikai00/ip/releases/download/A-Release-1.1/duke.jar).","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"3. Copy the file to the folder you want to use as the home folder for your _KarenBot_.","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"4. Navigate to the folder containing _KarenBot_ via CLI.","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"5. Run _KarenBot_ using the following command: `java -jar duke.jar`","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"6. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"![Freshly started KarenBot](FreshStart.png)","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"7. Type the command in the input box and press Enter to execute it.   ","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"e.g., typing `help` and pressing Enter will display a list of possible commands.","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"Some example commands you can try:","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"- `add todo Get groceries`: Adds a Todo with the description `Get groceries` to the list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"- `list`: Lists all tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"- `mark 1`: Marks the task with index 1 (as indicated by `list`) as done.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"- `unmark 1`: Marks the task with index 1 (as indicated by `list`) as not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"- `delete 1`: Deletes the task with index 1 (as indicated by `list`) from the list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"- `exit`: Exits the app.","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"8. Refer to [Features](#features) below for more detailed descriptions of each command.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"## Features","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"### Modifying saved data","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"_KarenBot_ stores saved data in a text file named `duke.txt`. Advanced users can directly modify the text files if ","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"they find it quicker for niche actions such as mass deletion. The text file can be located in","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"a folder named `data` in _KarenBot_\u0027s folder.","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"### Safeguarding against data corruption","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"On the event of a corruption of the text file `duke.txt` due to user modifications and _KarenBot_ is ","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"unable to parse it, _KarenBot_ can prevent loss of user data by renaming the corrupted","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"file to `duke-corrupt.txt` and continue to operate in a clean state. Users can then ","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"attempt to fix the erroneous modification (ensure that the file is renamed back to `duke.txt`). If there exists ","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"corrupted files already, _KarenBot_ will not overwrite `duke-corrupt.txt`. Instead, an incremental version, e.g.,","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"`duke-corrupt1.txt` will be created.","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"**Note:** ","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"- Where angle brackets i.e., `\u003c\u003e`  are used, users must replace them with","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"appropriate values as specified.","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"- All time values have to be formatted in this specific format: `yyyy-mm-dd HH:MM`.   ","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"Allowed delimiter characters are: `-:.|/`.","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"- `|` (pipe character) should never be used as an input, as it is used as a delimiter for data storing purposes. ","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"### `help`: Viewing list of all possible commands","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"Displays a list of all possible commands.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"Format: `help`","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"### `add todo`: Adds a Todo","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"Adds a Todo to the list of tasks.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"Format: `add todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"### `add deadline`: Adds a Deadline","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"Adds a Deadline to the list of tasks. A Deadline is used to create tasks due by a specific time.","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"Format: `add deadline \u003cdescription\u003e /by \u003ctime\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"- `add deadline Complete assignment 1 /by 2022-09-17 23-59`","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"- `add deadline Review contract agreement /by 2022.12.12 23:59`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"Note: `time` is formatted as `yyyy-mm-dd HH:MM`. Allowed delimiter characters are: `-:.|/`.","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"### `add event`: Adds an Event","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"Adds an Event to the list of tasks. An Event is used to create tasks happening at a specific time.","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"Format: `add event \u003cdescription\u003e /at \u003ctime\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"- `add deadline Gym /at 2022-09-17 18-00`","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"- `add deadline Internship day /at 2022/09/14 11:00`","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"Note: `time` is formatted as `yyyy-mm-dd HH:MM`. Allowed delimiter characters are: `-:.|/`.","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"### `list`: Lists all tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"Displays a list of all tasks.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"Format: `list`","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"### `mark`: Marks a task as done","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"Marks a specified task as done.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"Format: `mark \u003ctask index\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"- `mark 1`","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"- `mark 12`","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"Note: `task index` can be found by performing the [list](#list-lists-all-tasks) command.","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"### `unmark`: Marks a task as not done","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"Marks a specified task as not done.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"Format: `unmark \u003ctask index\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"- `unmark 5`","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"- `unmark 9`","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"Note: `task index` can be found by performing the [list](#list-lists-all-tasks) command.","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"### `delete`: Deletes a task","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"Deletes a specified task.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"Format: `delete \u003ctask index\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"- `delete 1`","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"- `delete 4`","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"Note: `task index` can be found by performing the [list](#list-lists-all-tasks) command.","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"### `find`: Find tasks using keyword","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"Finds all tasks whose description matches the keyword.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"Format: `find \u003ckeyword\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"- `find assignment`","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"- `find comp`","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"### `view`: View tasks happening within a specific period","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"Displays a list of tasks happening within a specific period.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"Format: `view \u003cperiod\u003e`  ","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"Example:","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"- `view today`","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"- `view tomorrow`","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"Note: There are 3 different types of period specifiable, namely:","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"- `today`: Today","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":"- `tomorrow`: Tomorrow","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"- `week`: One week from today","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":"### `exit`: Exits the program ","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"Exits _KarenBot_.  ","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"Format: `exit`","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"## Command summary  ","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"sikai00"},"content":"| Command                                 | Description                                                   |","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"|-----------------------------------------|---------------------------------------------------------------|","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"| `help`                                  | Displays a list of all possible commands.                     |","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"| `add todo \u003cdescription\u003e`                | Adds a Todo with the given description.                       |","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"| `add deadline \u003cdescription\u003e /by \u003ctime\u003e` | Adds a Deadline with the given description and time.          |","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"| `add event \u003cdescription\u003e /at \u003ctime\u003e`    | Adds an Event with the given description and time.            |","lastModifiedDate":"2022-09-16"},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"| `list`                                  | Displays a list of all tasks.                                 |","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"| `mark \u003ctask index\u003e`                     | Marks the task with the given task index as done.             |","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"| `unmark \u003ctask index\u003e`                   | Marks the task with the given task index as not done.         |","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"sikai00"},"content":"| `delete \u003ctask index\u003e`                   | Deletes the task with the given task index.                   |","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"| `find \u003ckeyword\u003e`                        | Finds all tasks whose description matches the keyword.        |","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"sikai00"},"content":"| `view \u003cperiod\u003e`                         | Displays a lists of tasks happening within a specific period. |","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"sikai00"},"content":"| `exit`                                  | Exits _KarenBot_.                                             |","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"sikai00"},"content":"## Product screenshots","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"sikai00"},"content":"![Main window](Ui.png)","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"sikai00":139,"-":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.Parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * Main class of Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * This class also serves as the main entry point of application.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Duke instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public Duke() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.storage \u003d new Storage(\"data\", \"duke\");","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        this.taskList \u003d this.storage.readFromStorage();","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    public CommandResult getResponse(String input) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        Command c \u003d parser.parseCommand(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        return c.execute(this.taskList, this.storage);","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sikai00":31,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" * A GUI for Dodie using FXML.","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"            stage.setTitle(\"KarenBot\");","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            stage.widthProperty().addListener((o, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                if (newValue.intValue() \u003c 500) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"                    stage.setResizable(false);","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"                    stage.setWidth(500);","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"                    stage.setResizable(true);","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"                }","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"            });","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":42}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that adds a Task to the specified TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"Adds a Todo:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"            + \"    add todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"            + \"Add a Deadline:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"            + \"    add deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HH:MM\u003e\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"            + \"Add an Event:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"            + \"    add event \u003cdescription\u003e /at \u003cyyyy-mm-dd HH:MM\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    private final Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * Initializes a new AddCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        String taskString \u003d size \u003e 1 ? \"tasks\" : \"task\";","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        String msg \u003d \"Okay, I\u0027ve added the task, but not because you told me to.\\nNow you have \" + size + \" \"","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"                + taskString + \" in this list.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d ListBox.getListBox(this.task);","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        storage.appendTaskToStorage(task);","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(msg, lb);","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":49}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents an executable command.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"     * Executes the command and returns its result.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * If the command is successfully executed, a CommandResult with relevant information about execution of command","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     * is returned. Else, a CommandResult with appropriate error message is returned.","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * @param taskList The TaskList to use","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param storage The storage to use","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @return CommandResult with relevant information about execution of command","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    public abstract CommandResult execute(TaskList taskList, Storage storage);","lastModifiedDate":"2022-09-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"sikai00":22}},{"path":"src/main/java/duke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":" * Represents the result of an executed command.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    private final String msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    private final Node node;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     * Initializes a new CommandResult instance.","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * @param msg Response message from the executed Command.","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    public CommandResult(String msg) {","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        this.node \u003d null;","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     * Initializes a new CommandResult instance with a Node.","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * @param msg Response message from the executed Command.","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    public CommandResult(String msg, Node node) {","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        this.node \u003d node;","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        return this.msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    public Node getNode() {","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        return this.node;","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public boolean hasNode() {","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        return this.node !\u003d null;","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":43}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that adds a Task to the specified TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"Delete a task:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"            + \"    delete \u003ctask index\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * Initializes a new DeleteCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     * @param taskIndex Index of the task to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        // Checks for correct task index can only occur within the execution of the task.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        // Parser can only perform preliminary basic checks for correct input formats.","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        if (this.taskIndex \u003e taskList.size() - 1 || this.taskIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            String msg \u003d \"Do you even know what you\u0027re doing? There\u0027s such no task index!\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(msg);","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        String taskString \u003d size \u003e 1 ? \"tasks\" : \"task\";","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        String msg \u003d \"Deleting away your poor life choices, I see.\\nNow you have \"","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"                + size + \" \" + taskString + \" in this list.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d ListBox.getListBox(task);","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(msg, lb);","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":52}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * Represents an executable command to exit the program.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"Exit KarenBot:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"            + \"    exit\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        String msg \u003d \"Go away, don\u0027t come back!\\n(exiting in a second...)\";","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"            @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            public void run() {","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                Platform.exit();","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"                System.exit(0); // Platform.exit() does not end the run","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        }, 1000);","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(msg);","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":37}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that finds a Task from the specified TaskList.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"Find a task:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"            + \"    find \u003ckeyword\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * Initializes a new FindCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * @param keyword The keyword to match","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        TaskList results \u003d taskList.findMatchingTasks(this.keyword);","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        if (results.size() \u003e 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"            ListBox lb \u003d ListBox.getListBox(results);","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(\"Here are the matching tasks in your list. Now leave me alone.\\n\", lb);","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(\"Can\u0027t believe what an idiot I\u0027m dealing with... \"","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"                    + \"there\u0027s no matching tasks in your list!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"sikai00":42}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that prints all possible commands and their simple explanation.","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String INTRO \u003d \"\u0027Where are you from? How do you not already know this?\u0027\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public static final String DESCRIPTION \u003d \"KarenBot is a rude, self entitled chatbot that will help you \"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"            + \"remember your tasks, all for the low cost of having to deal with her attitude. \"","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"            + \"KarenBot is best suited for the quick typist, maximising \"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"            + \"your productivity by spending less time on handling your tasks!\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public static final String WARNING \u003d \"Note: | (pipe character) should not be used as an input.\\n\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"                INTRO + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"                     + DESCRIPTION + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"                     + WARNING + \"\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                     + AddCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"                     + ListCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"                     + MarkCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"                     + UnmarkCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"                     + DeleteCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"                     + FindCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"                     + ViewScheduleCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"                     + ExitCommand.MESSAGE_USAGE + \"\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"sikai00":41}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that throws a DukeException.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * This command is only used when there is an error.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final String errorMsg;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new InvalidCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param errorMsg Error message to be encapsulated by the command","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public InvalidCommand(String errorMsg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(errorMsg);","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Represents an executable command prints an overview of all added tasks and their status.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"List all tasks:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"            + \"    list\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        String msg;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        if (taskList.size() \u003c\u003d 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            msg \u003d \"There\u0027s nothing in your list! I want to see your manager for wasting my time.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"            msg \u003d \"Look at all these tasks you\u0027re never going to complete anyway:\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d ListBox.getListBox(taskList);","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(msg, lb);","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":33}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that marks the task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"Mark a task as done:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"            + \"    mark \u003ctask index\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * Initializes a new MarkCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * @param taskIndex Task index to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        // Checks for correct task index can only occur within the execution of the task.","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        // Parser can only perform preliminary basic checks for correct input formats.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        if (this.taskIndex \u003e taskList.size() - 1 || this.taskIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"            String msg \u003d \"Can\u0027t believe what an idiot I\u0027m dealing with... There\u0027s no such task index!\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(msg);","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        taskList.markTask(this.taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        String msg \u003d \"Wow, did you really complete a task? That\u0027s so unlike you... \"","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"                + \"I\u0027ve marked your task as done:\\n \";","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d ListBox.getListBox(taskList.getTask(this.taskIndex));","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(msg, lb);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":48}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents an executable command that marks the task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"Mark a task as not done:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"            + \"    unmark \u003ctask index\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * Initializes a new UnmarkCommand instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * @param taskIndex Task index to be added","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        // Checks for correct task index can only occur within the execution of the task.","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        // Parser can only perform preliminary basic checks for correct input formats.","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        if (this.taskIndex \u003e taskList.size() - 1 || this.taskIndex \u003c 0) {","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"            String msg \u003d \"Are you seriously not right in your head? There\u0027s no such task index!\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(msg);","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        taskList.unmarkTask(this.taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        String msg \u003d \"Of course... I knew you\u0027ve haven\u0027t really managed to get anything done... \"","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"                + \"I\u0027ve marked this task as not done:\\n \";","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d ListBox.getListBox(taskList.getTask(this.taskIndex));","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(taskList);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(msg, lb);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":48}},{"path":"src/main/java/duke/commands/ViewScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.commands;","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.ui.ListBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.Storage;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Represents an executable command.","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class ViewScheduleCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    /** Command identifier used by Parser **/","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_USAGE \u003d \"View a task for a time period:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"            + \"Periods specifiable are \u0027today\u0027, \u0027tomorrow\u0027 and \u0027week\u0027.\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"            + \"    view \u003cperiod\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime startDateRange;","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime endDateRange;","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     * Initializes a new ViewScheduleCommand instance.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * @param startDateRange Start of datetime range","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     * @param endDateRange End of datetime range (inclusive)","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public ViewScheduleCommand(LocalDateTime startDateRange, LocalDateTime endDateRange) {","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        this.startDateRange \u003d startDateRange;","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        this.endDateRange \u003d endDateRange;","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        TaskList results \u003d taskList.findDatedTasks(this.startDateRange, this.endDateRange);","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        if (results.size() \u003e 0) {","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"            ListBox lb \u003d ListBox.getListBox(results);","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(\"Why are you trying to get your sad life together now?\\n\", lb);","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"            return new CommandResult(\"There are no matching tasks... No surprises that you\u0027ve got nothing planned...\");","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"sikai00":46}},{"path":"src/main/java/duke/exceptions/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":" * Represents an Exception due to a corrupted storage file and encapsulates an exception message.","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"public class CorruptedFileException extends Exception {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    public CorruptedFileException(String msg) {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"        super(msg);","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"sikai00":12}},{"path":"src/main/java/duke/exceptions/ParseDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":" * Represents an Exception due to invalid datetime input and encapsulates an exception message.","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"public class ParseDateTimeException extends Exception {","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    public ParseDateTimeException(String msg) {","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"        super(msg);","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"sikai00":12}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    /** Task identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    public static final String TASK_WORD \u003d \"deadline\";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Deadline instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @param isDone Whether the task is completed or not","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * @param by The deadline for this task","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     * Returns an Optional of the time the task is due by.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * @return Optional of the time the task is due by","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        return Optional.of(this.by);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-04"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public String getTaskWord() {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        return Deadline.TASK_WORD;","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of the Deadline instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     * @return String representation of the Deadline instance","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        String checkbox \u003d this.getIsDone() ? \"[D][X]\" : \"[D][ ]\";","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        String dateFormatted \u003d \"(by: \" + this.by.format(FORMATTER) + \")\";","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        return checkbox + \" \" + super.getDescription() + \" \" + dateFormatted;","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":54}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents a task with a specific event duration (e.g., starts at 4pm and ends at 6pm).","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    /** Task identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    public static final String TASK_WORD \u003d \"event\";","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Event instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * @param isDone Whether the task is completed or not","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * @param at The event duration for this task","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public Event(String description, boolean isDone, LocalDateTime at) {","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * Returns an Optional of the time of event.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"     * @return Optional of the time of event","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        return Optional.of(this.at);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    public String getTaskWord() {","lastModifiedDate":"2022-09-04"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        return Event.TASK_WORD;","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of the Deadline instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"     * @return String representation of the Deadline instance","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        String checkbox \u003d this.getIsDone() ? \"[E][X]\" : \"[E][ ]\";","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        String dateFormatted \u003d \"(at: \" + this.at.format(FORMATTER) + \")\";","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        return checkbox + \" \" + super.getDescription() + \" \" + dateFormatted;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":57}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private final String description;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    private boolean isDone;","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Task instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * @param isDone Whether the task is completed or not","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     * Returns the task word as a String.","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"     * @return Task word as a String","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    // This is needed as all Tasks has a TASK_WORD, but the abstract class Task does not.","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    public abstract String getTaskWord();","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     * Returns an Optional of the time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"     * @return Optional of the time of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    public abstract Optional\u003cLocalDateTime\u003e getTime();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     * Returns a description of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     * @return Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        return this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"     * Returns whether the task is done or not.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"     * @return Whether the task is done or not","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"        return this.isDone;","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"     * Sets the task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"    public void setIsDone() {","lastModifiedDate":"2022-09-13"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-09-13"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"     * Sets the task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"    public void setIsNotDone() {","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"        // This method is preferred over a toggle method as it is clearer with its effects.","lastModifiedDate":"2022-09-04"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sikai00":75}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" * Represents a task without any time specifications.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    /** Task identifier used by Parser **/","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    public static final String TASK_WORD \u003d \"todo\";","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Todo instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * @param description Description of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @param isDone Whether the task is completed or not","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     * Returns an empty Optional.","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     * @return Empty Optional","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"        return Optional.empty();","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    public String getTaskWord() {","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        return Todo.TASK_WORD;","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of the Todo instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     * @return String representation of the Todo instance","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        String checkbox \u003d this.getIsDone() ? \"[T][X]\" : \"[T][ ]\";","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        return checkbox + \" \" + super.getDescription();","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"sikai00":53}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// @@author j-lum-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        displayPicture.setClip(new Circle(30, 30, 30));","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"// @@author","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":2,"-":66}},{"path":"src/main/java/duke/ui/ListBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.ui;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":" * This control represents a container for task items.","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"public class ListBox extends VBox {","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    private static final CornerRadii CORNER_RADII \u003d new CornerRadii(10.0);","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    private static final Color ODD_COLOR \u003d Color.web(\"#fcfcc0\");","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    private static final Color EVEN_COLOR \u003d Color.WHITE;","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    private static final DropShadow SHADOW \u003d new DropShadow(","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            8,","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"            Color.rgb(0, 0, 0, 0.1)","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    );","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    private ListBox() {","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ListBox.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    public static ListBox getListBox(TaskList taskList) {","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d new ListBox();","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        lb.setEffect(SHADOW);","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"            TaskItem ti \u003d TaskItem.getTaskItem(taskList.getTask(i));","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"            ti.setIndex(i);","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"            if (i % 2 \u003d\u003d 0) {","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"                ti.setBackground(new Background(new BackgroundFill(ODD_COLOR, CORNER_RADII, Insets.EMPTY)));","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"            } else {","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"                ti.setBackground(new Background(new BackgroundFill(EVEN_COLOR, CORNER_RADII, Insets.EMPTY)));","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"            lb.getChildren().add(ti);","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        return lb;","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"    public static ListBox getListBox(Task task) {","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"        ListBox lb \u003d new ListBox();","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        lb.setEffect(SHADOW);","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        TaskItem ti \u003d TaskItem.getTaskItem(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"        ti.setBackground(new Background(new BackgroundFill(ODD_COLOR, CORNER_RADII, Insets.EMPTY)));","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        lb.getChildren().add(ti);","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"        return lb;","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"sikai00":65}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// @@author j-lum-reused","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// with some modifications","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/KarenBot.jpg\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // @authors","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes the MainWindow.","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * This is used by FXMLLoader.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Greet user upon GUI initialize","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String greetingMsg \u003d \"What do you want? Do you know who I am?\\n(psst! type in help for help with commands!)\";","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(greetingMsg, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response.getMessage(), dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (response.hasNode()) {","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().add(response.getNode());","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":2,"-":69}},{"path":"src/main/java/duke/ui/TaskItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.ui;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" * This control represents a task item consisting labels that describe the task.","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"public class TaskItem extends GridPane {","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    private Label index;","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    private Label description;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    private Label isDone;","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    private Label time;","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    private Label type;","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    private TaskItem(Task task) {","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/TaskItem.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        index.setText(\"\");","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        description.setText(task.getDescription());","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        isDone.setText(task.getIsDone() ? \"DONE\" : \"NOT DONE\");","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        isDone.setTextFill(task.getIsDone() ? Color.color(0, 0.7, 0.4) : Color.color(1.0, 0, 0));","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        time.setText(task.getTime().map(t -\u003e t.format(Task.FORMATTER)).orElse(\"No due date\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        type.setText(task.getTaskWord());","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    public static TaskItem getTaskItem(Task task) {","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        return new TaskItem(task);","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"        this.index.setText(index + 1 + \")\");","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"sikai00":58}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"import duke.commands.InvalidCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"import duke.commands.ViewScheduleCommand;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.ParseDateTimeException;","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":" * Handles the parsing of user input.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    // Constants used by parseCommand and its prepare methods","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    private static final String USER_INPUT_DELIMITER \u003d \" \";","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    private static final InvalidCommand INVALID_NUMBER_FORMAT \u003d new InvalidCommand(\"It\u0027s really not that \"","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"            + \"hard, is it? Task index should be integers!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"    // Constants used by parseDateTime and its helper methods","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    private static final String DATETIME_DELIMITER \u003d \"[-:.|/]\";","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    private static final ParseDateTimeException ERR_WRONG_DATETIME_FORMAT \u003d new ParseDateTimeException(","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"            \"How have you not seen how dates should be written? It\u0027s \u0027yyyy-mm-dd HH:MM\u0027\");","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"     * Parses the user input and returns the appropriate Command.","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     * @return Command based on user input","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        String command \u003d userInput.split(USER_INPUT_DELIMITER, 2)[0].toLowerCase();","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        switch (command) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"            return prepareAdd(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"            return prepareDelete(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"            return prepareMark(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"            return prepareUnmark(userInput);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"            return prepareFind(userInput);","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"        case ViewScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"            return prepareViewSchedule(userInput);","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Is this some new magic word? Why don\u0027t I understand \"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"                    + \"anything you\u0027re saying?\\n(psst! Try inputting \u0027help\u0027 for help with commands.)\");","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new AddCommand. However, if there are errors in the user input, a new InvalidCommand is","lastModifiedDate":"2022-09-04"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"     * returned instead.","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"     * This method parses the user input to distinguish between the different Tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"     * and returns an AddCommand with the correct Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"     * @return AddCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"    private Command prepareAdd(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(USER_INPUT_DELIMITER, 3);","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 3) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"How do you not know this? It\u0027s \u0027add \u003ctask type\u003e \u003cdescription\u003e\u0027!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"        // TASK_WORDs are all in lowercase, to match all other class identifiers such as COMMAND_WORDs","lastModifiedDate":"2022-09-04"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"        String taskType \u003d tokens[1].toLowerCase();","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"        case Todo.TASK_WORD:","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"            return prepareTodo(tokens);","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"        case Deadline.TASK_WORD:","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"            return prepareDeadline(tokens);","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        case Event.TASK_WORD:","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"            return prepareEvent(tokens);","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"        default:","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"What part of \u0027\" + taskType + \"\u0027 makes you think that it\u0027s a valid task type?\");","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"    private Command prepareTodo(String[] tokens) {","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"        String todoDescription \u003d tokens[2].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"        Todo newTodo \u003d new Todo(todoDescription, false);","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        return new AddCommand(newTodo);","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"    private Command prepareDeadline(String[] tokens) {","lastModifiedDate":"2022-09-13"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"            String[] deadlineTokens \u003d tokens[2].split(\"/by\");","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"            if (deadlineTokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"                return new InvalidCommand(\"What? It\u0027s \u0027add deadline \u003cdescription\u003e /by \" + \"\u003cdate\u003e\u0027!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"            String deadlineDescription \u003d deadlineTokens[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"            LocalDateTime by \u003d parseDateTime(deadlineTokens[1].trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineDescription, false, by);","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"            return new AddCommand(newDeadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        } catch (ParseDateTimeException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":"    private Command prepareEvent(String[] tokens) {","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"            String[] eventTokens \u003d tokens[2].split(\"/at\");","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"            if (eventTokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"                return new InvalidCommand(\"It\u0027s \u0027add event \u003cdescription\u003e /at\" + \" \u003cdate\u003e\u0027 Do your research.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"            String eventDescription \u003d eventTokens[0].trim();","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"            LocalDateTime at \u003d parseDateTime(eventTokens[1].trim());","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"            Event newEvent \u003d new Event(eventDescription, false, at);","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"            return new AddCommand(newEvent);","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":"        } catch (ParseDateTimeException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new DeleteCommand. However, if there are errors in the user input, a new InvalidCommand is","lastModifiedDate":"2022-09-04"},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"     * returned instead.","lastModifiedDate":"2022-09-04"},{"lineNumber":142,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"     * @return DeleteCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"    private Command prepareDelete(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(USER_INPUT_DELIMITER, 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"Excuse you, I\u0027m a sovereign bot and I don\u0027t have to receive bad orders from you.\"","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"                    + \" Get it right, it\u0027s \u0027delete \u003ctask index\u003e\u0027.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1], 10) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"sikai00"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"sikai00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"sikai00"},"content":"            return INVALID_NUMBER_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":157,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new MarkCommand. However, if there are errors in the user input, a new InvalidCommand is","lastModifiedDate":"2022-09-04"},{"lineNumber":162,"author":{"gitId":"sikai00"},"content":"     * returned instead.","lastModifiedDate":"2022-09-04"},{"lineNumber":163,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"     * @return MarkCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"sikai00"},"content":"    private Command prepareMark(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(USER_INPUT_DELIMITER, 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"This is unacceptable... It\u0027s \u0027mark \u003ctask index\u003e\u0027. I know my rights!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1], 10) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"sikai00"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"            return INVALID_NUMBER_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new UnmarkCommand. However, if there are errors in the user input, a new InvalidCommand is","lastModifiedDate":"2022-09-04"},{"lineNumber":182,"author":{"gitId":"sikai00"},"content":"     * returned instead.","lastModifiedDate":"2022-09-04"},{"lineNumber":183,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"sikai00"},"content":"     * @return UnmarkCommand based on raw user input","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"sikai00"},"content":"    private Command prepareUnmark(String userInput) {","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(USER_INPUT_DELIMITER, 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":189,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":190,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"No. \u0027unmark \u003ctask index\u003e\u0027.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":191,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":192,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"            int taskIndex \u003d Integer.parseInt(tokens[1], 10) - 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":194,"author":{"gitId":"sikai00"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2022-08-23"},{"lineNumber":195,"author":{"gitId":"sikai00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":196,"author":{"gitId":"sikai00"},"content":"            return INVALID_NUMBER_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":197,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":198,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":199,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":200,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":201,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new FindCommand. However, if there are errors in the user input, a new InvalidCommand is","lastModifiedDate":"2022-09-04"},{"lineNumber":202,"author":{"gitId":"sikai00"},"content":"     * returned instead.","lastModifiedDate":"2022-09-04"},{"lineNumber":203,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":204,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-09-04"},{"lineNumber":205,"author":{"gitId":"sikai00"},"content":"     * @return FindCommand based on raw user input","lastModifiedDate":"2022-09-04"},{"lineNumber":206,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":207,"author":{"gitId":"sikai00"},"content":"    private Command prepareFind(String userInput) {","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(USER_INPUT_DELIMITER, 2);","lastModifiedDate":"2022-09-04"},{"lineNumber":209,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"I don\u0027t accept that. It\u0027s \u0027find \u003ckeyword\u003e\u0027, I know my rights!\");","lastModifiedDate":"2022-09-16"},{"lineNumber":211,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":212,"author":{"gitId":"sikai00"},"content":"        return new FindCommand(tokens[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":213,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":214,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":215,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":216,"author":{"gitId":"sikai00"},"content":"     * Prepares and returns a new ViewScheduleCommand. However, if there are errors in the user input, a new","lastModifiedDate":"2022-09-07"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"     * InvalidCommand is returned instead.","lastModifiedDate":"2022-09-07"},{"lineNumber":218,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":219,"author":{"gitId":"sikai00"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2022-09-07"},{"lineNumber":220,"author":{"gitId":"sikai00"},"content":"     * @return ViewScheduleCommand based on raw user input","lastModifiedDate":"2022-09-07"},{"lineNumber":221,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":222,"author":{"gitId":"sikai00"},"content":"    private Command prepareViewSchedule(String userInput) {","lastModifiedDate":"2022-09-07"},{"lineNumber":223,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d userInput.split(USER_INPUT_DELIMITER, 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":224,"author":{"gitId":"sikai00"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2022-09-07"},{"lineNumber":225,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"You\u0027re being cheeky now, aren\u0027t you? It\u0027s \u0027view \u003cperiod\u003e\u0027. You can use \"","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"sikai00"},"content":"                    + \"\u0027today\u0027, \u0027tomorrow\u0027 or \u0027week\u0027 for period.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":228,"author":{"gitId":"sikai00"},"content":"        String keyword \u003d tokens[1].toLowerCase();","lastModifiedDate":"2022-09-07"},{"lineNumber":229,"author":{"gitId":"sikai00"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-07"},{"lineNumber":230,"author":{"gitId":"sikai00"},"content":"        case \"today\":","lastModifiedDate":"2022-09-07"},{"lineNumber":231,"author":{"gitId":"sikai00"},"content":"            LocalDateTime startToday \u003d LocalDateTime.of(LocalDate.now(), LocalTime.MIDNIGHT);","lastModifiedDate":"2022-09-07"},{"lineNumber":232,"author":{"gitId":"sikai00"},"content":"            LocalDateTime endToday \u003d LocalDateTime.of(LocalDate.now(), LocalTime.MAX);","lastModifiedDate":"2022-09-07"},{"lineNumber":233,"author":{"gitId":"sikai00"},"content":"            return new ViewScheduleCommand(startToday, endToday);","lastModifiedDate":"2022-09-07"},{"lineNumber":234,"author":{"gitId":"sikai00"},"content":"        case \"tomorrow\":","lastModifiedDate":"2022-09-07"},{"lineNumber":235,"author":{"gitId":"sikai00"},"content":"            LocalDate tomorrow \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2022-09-07"},{"lineNumber":236,"author":{"gitId":"sikai00"},"content":"            LocalDateTime startTomorrow \u003d LocalDateTime.of(tomorrow, LocalTime.MIDNIGHT);","lastModifiedDate":"2022-09-07"},{"lineNumber":237,"author":{"gitId":"sikai00"},"content":"            LocalDateTime endTomorrow \u003d LocalDateTime.of(tomorrow, LocalTime.MAX);","lastModifiedDate":"2022-09-07"},{"lineNumber":238,"author":{"gitId":"sikai00"},"content":"            return new ViewScheduleCommand(startTomorrow, endTomorrow);","lastModifiedDate":"2022-09-07"},{"lineNumber":239,"author":{"gitId":"sikai00"},"content":"        case \"week\":","lastModifiedDate":"2022-09-07"},{"lineNumber":240,"author":{"gitId":"sikai00"},"content":"            LocalDate endOfWeek \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2022-09-07"},{"lineNumber":241,"author":{"gitId":"sikai00"},"content":"            LocalDateTime startWeek \u003d LocalDateTime.of(LocalDate.now(), LocalTime.MIDNIGHT);","lastModifiedDate":"2022-09-07"},{"lineNumber":242,"author":{"gitId":"sikai00"},"content":"            LocalDateTime endWeek \u003d LocalDateTime.of(endOfWeek, LocalTime.MAX);","lastModifiedDate":"2022-09-07"},{"lineNumber":243,"author":{"gitId":"sikai00"},"content":"            return new ViewScheduleCommand(startWeek, endWeek);","lastModifiedDate":"2022-09-07"},{"lineNumber":244,"author":{"gitId":"sikai00"},"content":"        default:","lastModifiedDate":"2022-09-07"},{"lineNumber":245,"author":{"gitId":"sikai00"},"content":"            return new InvalidCommand(\"You\u0027re being cheeky now, aren\u0027t you? It\u0027s \u0027view \u003cperiod\u003e\u0027. You can use \"","lastModifiedDate":"2022-09-16"},{"lineNumber":246,"author":{"gitId":"sikai00"},"content":"                    + \"\u0027today\u0027, \u0027tomorrow\u0027 or \u0027week\u0027 for period.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":247,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":248,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":249,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":250,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":251,"author":{"gitId":"sikai00"},"content":"     * Creates and returns LocalDate objects by parsing user\u0027s input for date.","lastModifiedDate":"2022-08-23"},{"lineNumber":252,"author":{"gitId":"sikai00"},"content":"     * User input date should follow the format (yyyy-mm-dd HH:MM), in 24-hour time format.","lastModifiedDate":"2022-08-23"},{"lineNumber":253,"author":{"gitId":"sikai00"},"content":"     * The date and time can have a delimiter of a character from \"-:.|/\" (characters within the double quotes).","lastModifiedDate":"2022-09-04"},{"lineNumber":254,"author":{"gitId":"sikai00"},"content":"     * The date and time must be separated by a single whitespace.","lastModifiedDate":"2022-08-23"},{"lineNumber":255,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":256,"author":{"gitId":"sikai00"},"content":"     * @param dateText User\u0027s input of date and time following the format specified.","lastModifiedDate":"2022-08-23"},{"lineNumber":257,"author":{"gitId":"sikai00"},"content":"     * @return LocalDateTime","lastModifiedDate":"2022-08-23"},{"lineNumber":258,"author":{"gitId":"sikai00"},"content":"     * @throws ParseDateTimeException If the datetime user input is invalid","lastModifiedDate":"2022-09-04"},{"lineNumber":259,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":260,"author":{"gitId":"sikai00"},"content":"    private static LocalDateTime parseDateTime(String dateText) throws ParseDateTimeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":261,"author":{"gitId":"sikai00"},"content":"        String[] dateTextTokens \u003d dateText.split(USER_INPUT_DELIMITER);","lastModifiedDate":"2022-09-04"},{"lineNumber":262,"author":{"gitId":"sikai00"},"content":"        // Require 2 tokens, as the first token represents date input, the second token represents time input","lastModifiedDate":"2022-09-04"},{"lineNumber":263,"author":{"gitId":"sikai00"},"content":"        if (dateTextTokens.length !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":264,"author":{"gitId":"sikai00"},"content":"            throw ERR_WRONG_DATETIME_FORMAT;","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":266,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":267,"author":{"gitId":"sikai00"},"content":"        String parsedDate \u003d parseDateTokens(dateTextTokens[0]);","lastModifiedDate":"2022-09-04"},{"lineNumber":268,"author":{"gitId":"sikai00"},"content":"        assert parsedDate.split(DATETIME_DELIMITER).length \u003d\u003d 3;","lastModifiedDate":"2022-09-07"},{"lineNumber":269,"author":{"gitId":"sikai00"},"content":"        String parsedTime \u003d parseTimeTokens(dateTextTokens[1]);","lastModifiedDate":"2022-09-04"},{"lineNumber":270,"author":{"gitId":"sikai00"},"content":"        assert parsedTime.split(DATETIME_DELIMITER).length \u003d\u003d 2;","lastModifiedDate":"2022-09-07"},{"lineNumber":271,"author":{"gitId":"sikai00"},"content":"        // Create the default toString representation (ISO-8601 format, uuuu-MM-dd\u0027T\u0027HH:mm) or","lastModifiedDate":"2022-09-04"},{"lineNumber":272,"author":{"gitId":"sikai00"},"content":"        // (DateTimeFormatter#ISO_LOCAL_DATE_TIME) for easier parsing and creation of LocalDateTime","lastModifiedDate":"2022-09-04"},{"lineNumber":273,"author":{"gitId":"sikai00"},"content":"        String parsedDateTime \u003d parsedDate + \"T\" + parsedTime;","lastModifiedDate":"2022-09-04"},{"lineNumber":274,"author":{"gitId":"sikai00"},"content":"        assert parsedDateTime.split(\"T\").length \u003d\u003d 2;","lastModifiedDate":"2022-09-04"},{"lineNumber":275,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-09-04"},{"lineNumber":276,"author":{"gitId":"sikai00"},"content":"            return LocalDateTime.parse(parsedDateTime);","lastModifiedDate":"2022-09-04"},{"lineNumber":277,"author":{"gitId":"sikai00"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":278,"author":{"gitId":"sikai00"},"content":"            // Unexpected errors, code should never reach here","lastModifiedDate":"2022-09-04"},{"lineNumber":279,"author":{"gitId":"sikai00"},"content":"            throw new ParseDateTimeException(e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":280,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":281,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":282,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":283,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":284,"author":{"gitId":"sikai00"},"content":"     * Parses raw user input of date and returns a date that forms part of a parsable string to be used by","lastModifiedDate":"2022-09-04"},{"lineNumber":285,"author":{"gitId":"sikai00"},"content":"     * LocalDateTime::parse.","lastModifiedDate":"2022-09-04"},{"lineNumber":286,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":287,"author":{"gitId":"sikai00"},"content":"     * @param unparsedDate User\u0027s input of date following the format specified.","lastModifiedDate":"2022-09-04"},{"lineNumber":288,"author":{"gitId":"sikai00"},"content":"     * @return Date string usable by LocalDateTime::parse","lastModifiedDate":"2022-09-04"},{"lineNumber":289,"author":{"gitId":"sikai00"},"content":"     * @throws ParseDateTimeException If the datetime user input is invalid","lastModifiedDate":"2022-09-04"},{"lineNumber":290,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":291,"author":{"gitId":"sikai00"},"content":"    private static String parseDateTokens(String unparsedDate) throws ParseDateTimeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":292,"author":{"gitId":"sikai00"},"content":"        String[] dateTokens \u003d unparsedDate.split(DATETIME_DELIMITER);","lastModifiedDate":"2022-09-04"},{"lineNumber":293,"author":{"gitId":"sikai00"},"content":"        // Require 3 tokens to represent year, month and day","lastModifiedDate":"2022-09-04"},{"lineNumber":294,"author":{"gitId":"sikai00"},"content":"        if (dateTokens.length !\u003d 3) {","lastModifiedDate":"2022-08-23"},{"lineNumber":295,"author":{"gitId":"sikai00"},"content":"            throw ERR_WRONG_DATETIME_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":296,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":297,"author":{"gitId":"sikai00"},"content":"        if (dateTokens[0].length() !\u003d 4 || dateTokens[1].length() !\u003d 2 || dateTokens[2].length() !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":298,"author":{"gitId":"sikai00"},"content":"            throw ERR_WRONG_DATETIME_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":299,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-04"},{"lineNumber":300,"author":{"gitId":"sikai00"},"content":"        // Delimiter here is not a constant to follow DateTimeFormatter#ISO_LOCAL_DATE_TIME formatting","lastModifiedDate":"2022-09-04"},{"lineNumber":301,"author":{"gitId":"sikai00"},"content":"        return String.join(\"-\", dateTokens);","lastModifiedDate":"2022-09-04"},{"lineNumber":302,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":303,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":304,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":305,"author":{"gitId":"sikai00"},"content":"     * Parses raw user input of time and returns a time that forms part of a parsable string to be used by","lastModifiedDate":"2022-09-04"},{"lineNumber":306,"author":{"gitId":"sikai00"},"content":"     * LocalDateTime::parse.","lastModifiedDate":"2022-09-04"},{"lineNumber":307,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":308,"author":{"gitId":"sikai00"},"content":"     * @param unparsedTime User\u0027s input of time following the format specified.","lastModifiedDate":"2022-09-04"},{"lineNumber":309,"author":{"gitId":"sikai00"},"content":"     * @return Date string usable by LocalDateTime::parse","lastModifiedDate":"2022-09-04"},{"lineNumber":310,"author":{"gitId":"sikai00"},"content":"     * @throws ParseDateTimeException If the datetime user input is invalid","lastModifiedDate":"2022-09-04"},{"lineNumber":311,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":312,"author":{"gitId":"sikai00"},"content":"    private static String parseTimeTokens(String unparsedTime) throws ParseDateTimeException {","lastModifiedDate":"2022-09-04"},{"lineNumber":313,"author":{"gitId":"sikai00"},"content":"        String[] timeTokens \u003d unparsedTime.split(DATETIME_DELIMITER);","lastModifiedDate":"2022-09-04"},{"lineNumber":314,"author":{"gitId":"sikai00"},"content":"        if (timeTokens.length !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":315,"author":{"gitId":"sikai00"},"content":"            throw ERR_WRONG_DATETIME_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":316,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":317,"author":{"gitId":"sikai00"},"content":"        if (timeTokens[0].length() !\u003d 2 || timeTokens[1].length() !\u003d 2) {","lastModifiedDate":"2022-08-23"},{"lineNumber":318,"author":{"gitId":"sikai00"},"content":"            throw ERR_WRONG_DATETIME_FORMAT;","lastModifiedDate":"2022-09-04"},{"lineNumber":319,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":320,"author":{"gitId":"sikai00"},"content":"        // Delimiter here is not a constant to follow DateTimeFormatter#ISO_LOCAL_DATE_TIME formatting","lastModifiedDate":"2022-09-04"},{"lineNumber":321,"author":{"gitId":"sikai00"},"content":"        return String.join(\":\", timeTokens);","lastModifiedDate":"2022-09-04"},{"lineNumber":322,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":323,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":323}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import duke.exceptions.CorruptedFileException;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":" * Handles all the storage-related tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    private static final String CORRUPT_POSTFIX \u003d \"-corrupt\";","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    private final String folderDirectory;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    private final String fileDirectory;","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    private final String fileName;","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"     * Initializes a new Storage instance.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"     * @param folderDirectory Directory of the persistent storage file","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"     * @param fileName Name of the persistent storage file","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    public Storage(String folderDirectory, String fileName) {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        this.folderDirectory \u003d folderDirectory;","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        // All persistent storage files are in \u0027.txt\u0027 format","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        this.fileDirectory \u003d folderDirectory + \"/\" + fileName + \".txt\";","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     * Reads and parses the task list from persistent storage and returns it.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"     * If no existing storage file is found, this method returns a new empty TaskList.","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     * @return TaskList from persistent storage","lastModifiedDate":"2022-09-04"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    public TaskList readFromStorage() {","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"            File f \u003d new File(this.fileDirectory);","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"                String taskStr \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"                taskList.addTask(parseTask(taskStr));","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"        } catch (CorruptedFileException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"            duplicateCorruptFile();","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"            return new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"            // Allow KarenBot to continue operation on a clean slate","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"            return new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"        return taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"     * Parses and returns a Task based on its string representation.","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"     * @param taskStr String representation of a Task","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"     * @return Task based on its string representation","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"     * @throws CorruptedFileException if the data file is corrupted","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"    private Task parseTask(String taskStr) throws CorruptedFileException {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"        String[] tokens \u003d taskStr.split(\"\\\\|\");","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"            String taskType \u003d tokens[0];","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"            String taskDescription \u003d tokens[1];","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"            boolean isTaskDone \u003d tokens[2].equals(\"0\") ? false : true;","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"            switch (taskType) {","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"            case Todo.TASK_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"                return new Todo(taskDescription, isTaskDone);","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"            case Deadline.TASK_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(tokens[3]);","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"                return new Deadline(taskDescription, isTaskDone, by);","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"            case Event.TASK_WORD:","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(tokens[3]);","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"                return new Event(taskDescription, isTaskDone, at);","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"            default:","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"                break;","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"            // Missing separator usually, causing array index out of bounds","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"            throw new CorruptedFileException(\"Corrupted data in storage file!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        // Other unrelated errors","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"        throw new CorruptedFileException(\"Corrupted data in storage file!\");","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"     * Makes a copy of the storage file and rename it as corrupt.","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"     * This is to allow the user to fix the storage file manually in the case of corruption,","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"     * while allowing functionality of KarenBot on a clean state upon file corruption.","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"    private void duplicateCorruptFile() {","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        File originalFile \u003d new File(fileDirectory);","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        String corruptFileDirectory \u003d folderDirectory + \"/\" + this.fileName + CORRUPT_POSTFIX + counter + \".txt\";","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"        File corruptFile \u003d new File(corruptFileDirectory);","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        while (corruptFile.exists()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"            counter++;","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"            corruptFileDirectory \u003d folderDirectory + \"/\" + this.fileName + CORRUPT_POSTFIX + counter + \".txt\";","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"            corruptFile \u003d new File(corruptFileDirectory);","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"            Files.copy(originalFile.toPath(), corruptFile.toPath());","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"            originalFile.delete();","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"            assert false;","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"     * Creates a new, blank persistent storage file and writes the input TaskList into the file.","lastModifiedDate":"2022-09-04"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"     * @param taskList Input TaskList to read from and write into the persistent storage file","lastModifiedDate":"2022-09-04"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"    public void writeAllToStorage(TaskList taskList) {","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"        File folderDirectory \u003d new File(this.folderDirectory);","lastModifiedDate":"2022-08-30"},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"        if (!folderDirectory.exists()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"            folderDirectory.mkdirs();","lastModifiedDate":"2022-08-30"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory, false);","lastModifiedDate":"2022-08-30"},{"lineNumber":136,"author":{"gitId":"sikai00"},"content":"            int lenTaskList \u003d taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":"            for (int i \u003d 0; i \u003c lenTaskList; i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"                String strRepresentation \u003d Storage.taskStrRepresentation(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"sikai00"},"content":"                fw.append(strRepresentation);","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"sikai00"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"            // TODO: Fix, user will never see this","lastModifiedDate":"2022-09-04"},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"            assert false;","lastModifiedDate":"2022-09-04"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"     * Appends a new Task to persistent storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"    public void appendTaskToStorage(Task task) {","lastModifiedDate":"2022-08-30"},{"lineNumber":154,"author":{"gitId":"sikai00"},"content":"        File folderDirectory \u003d new File(this.folderDirectory);","lastModifiedDate":"2022-08-30"},{"lineNumber":155,"author":{"gitId":"sikai00"},"content":"        if (!folderDirectory.exists()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":156,"author":{"gitId":"sikai00"},"content":"            folderDirectory.mkdirs();","lastModifiedDate":"2022-08-30"},{"lineNumber":157,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"sikai00"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory, true);","lastModifiedDate":"2022-08-30"},{"lineNumber":160,"author":{"gitId":"sikai00"},"content":"            String strRepresentation \u003d Storage.taskStrRepresentation(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"            fw.write(strRepresentation);","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"sikai00"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"sikai00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"sikai00"},"content":"            // TODO: Fix, user will never see this","lastModifiedDate":"2022-09-04"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"            assert false;","lastModifiedDate":"2022-09-04"},{"lineNumber":166,"author":{"gitId":"sikai00"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-04"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":"     * Returns a string representation of a task safe for use in persistent storage file.","lastModifiedDate":"2022-09-04"},{"lineNumber":172,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-04"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":"     * @param task Task to be converted into its storage-safe string representation","lastModifiedDate":"2022-09-04"},{"lineNumber":174,"author":{"gitId":"sikai00"},"content":"     * @return Storage-safe string representation of task","lastModifiedDate":"2022-09-04"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-04"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"    private static String taskStrRepresentation(Task task) {","lastModifiedDate":"2022-09-04"},{"lineNumber":177,"author":{"gitId":"sikai00"},"content":"        String taskType \u003d task.getTaskWord();","lastModifiedDate":"2022-09-04"},{"lineNumber":178,"author":{"gitId":"sikai00"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2022-09-04"},{"lineNumber":179,"author":{"gitId":"sikai00"},"content":"        String taskDone \u003d task.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2022-09-13"},{"lineNumber":180,"author":{"gitId":"sikai00"},"content":"        String taskTime \u003d task.getTime().map(LocalDateTime::toString).orElse(\" \");","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"sikai00"},"content":"        return taskType + \"|\" + taskDescription + \"|\" + taskDone + \"|\" + taskTime + \"\\n\";","lastModifiedDate":"2022-09-04"},{"lineNumber":182,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":183,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"sikai00":183}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * Represents a List of Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" * @author sikai00","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * Initializes a new TaskList instance.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * Returns the number of tasks in the task list currently.","lastModifiedDate":"2022-09-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     * @return Number of tasks in the task list","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    public int size() {","lastModifiedDate":"2022-09-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * Adds a new task.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        assert this.tasks.contains(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     * Deletes a task.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"     * @param index Index of the task as printed by TaskList\u0027s toString","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        Task deletedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        assert !this.tasks.contains(deletedTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"     * Returns the task with the input index.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"     * @param index Index of the task as printed by viewAllTask","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"     * @return Task with the input index","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"     * @param index Position of the task as indicated by TaskList\u0027s string","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"     *              representation","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"    public void markTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"        task.setIsDone();","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"     * @param index Position of the task as indicated by TaskList\u0027s string","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"     *              representation","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"        task.setIsNotDone();","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"     * Finds and returns a TaskList with tasks with description matching the keyword.","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"     * @param keyword String to match the descriptions","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"     * @return TaskList of matching tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"    public TaskList findMatchingTasks(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"        this.tasks.stream()","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2022-09-04"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"                .forEach(result::addTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        return result;","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"     * Finds and returns a TaskList with tasks with dates falling in between the given LocalDateTime parameters","lastModifiedDate":"2022-09-07"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"     * @param startDateRange Start of datetime range","lastModifiedDate":"2022-09-07"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"     * @param endDateRange End of datetime range (inclusive)","lastModifiedDate":"2022-09-07"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"     * @return TaskList of matching tasks","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"    public TaskList findDatedTasks(LocalDateTime startDateRange, LocalDateTime endDateRange) {","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2022-09-07"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        this.tasks.stream()","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"                .filter(task -\u003e task","lastModifiedDate":"2022-09-07"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"                        .getTime()","lastModifiedDate":"2022-09-07"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"                        .map(dateTime -\u003e checkDateInRange(dateTime, startDateRange, endDateRange))","lastModifiedDate":"2022-09-07"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"                        .orElse(false) // Tasks that don\u0027t have time are false by default","lastModifiedDate":"2022-09-07"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"                ).forEach(result::addTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        return result;","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"    private boolean checkDateInRange(LocalDateTime dateTime, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2022-09-07"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        return dateTime.isAfter(startDateTime)","lastModifiedDate":"2022-09-07"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"                \u0026\u0026 dateTime.isBefore(endDateTime)","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"                || dateTime.isEqual(startDateTime)","lastModifiedDate":"2022-09-07"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"                || dateTime.isEqual(endDateTime);","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"     * Return a string representation of all tasks.","lastModifiedDate":"2022-08-16"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"     * @return String representation of all tasks","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"        int taskListSize \u003d this.tasks.size();","lastModifiedDate":"2022-08-16"},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"        // String in java are immutable and leads to O(n^2) time complexity","lastModifiedDate":"2022-08-16"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"        for (int i \u003d 0; i \u003c taskListSize; i++) {","lastModifiedDate":"2022-08-16"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-16"},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2022-08-16"},{"lineNumber":136,"author":{"gitId":"sikai00"},"content":"            String taskStr \u003d index + \".\" + task + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":"            allTasks.append(taskStr);","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"        return allTasks.toString();","lastModifiedDate":"2022-08-16"},{"lineNumber":140,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"sikai00":141}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #fcfcc0; -fx-background-radius: 15;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":27}},{"path":"src/main/resources/view/ListBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003cfx:root fx:id\u003d\"ListBox\" alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"30.0\" prefWidth\u003d\"375.0\" style\u003d\"-fx-background-radius: 15; -fx-border-radius: 15;\" type\u003d\"VBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"sikai00":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"\u003cAnchorPane prefHeight\u003d\"710.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: grey;\" /\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"sikai00":26}},{"path":"src/main/resources/view/TaskItem.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" type\u003d\"GridPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"      \u003cColumnConstraints fillWidth\u003d\"false\" halignment\u003d\"RIGHT\" hgrow\u003d\"NEVER\" maxWidth\u003d\"501.0\" minWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"10.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"      \u003cColumnConstraints halignment\u003d\"RIGHT\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"10.0\" prefWidth\u003d\"115.0\" /\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"  \u003crowConstraints\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    \u003cRowConstraints maxHeight\u003d\"216.0\" minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    \u003cRowConstraints maxHeight\u003d\"315.0\" minHeight\u003d\"3.0\" prefHeight\u003d\"27.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"  \u003c/rowConstraints\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"      \u003cLabel fx:id\u003d\"description\" style\u003d\"-fx-background-radius: 15; -fx-border-radius: 15;\" text\u003d\"Description\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"      \u003cLabel fx:id\u003d\"isDone\" alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-radius: 15; -fx-border-radius: 15;\" text\u003d\"Done\" textAlignment\u003d\"RIGHT\" GridPane.columnIndex\u003d\"2\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"            \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"            \u003cInsets right\u003d\"6.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"      \u003cLabel fx:id\u003d\"time\" alignment\u003d\"TOP_RIGHT\" text\u003d\"Due Date\" textAlignment\u003d\"RIGHT\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"            \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"            \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"            \u003cInsets right\u003d\"6.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"      \u003cLabel fx:id\u003d\"type\" alignment\u003d\"TOP_LEFT\" text\u003d\"Task type\" textAlignment\u003d\"RIGHT\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial Italic\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"            \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"      \u003cLabel fx:id\u003d\"index\" alignment\u003d\"CENTER_RIGHT\" text\u003d\"100)\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"sikai00":71}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    public void taskWordTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"        assertEquals(\"todo\", Todo.TASK_WORD);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public void taskTypeTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"        Todo todo \u003d new Todo(\"test\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        assertEquals(todo.getTaskWord(), \"todo\");","lastModifiedDate":"2022-09-04"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public void getTimeTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        Todo todo \u003d new Todo(\"test1\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        assertEquals(Optional.empty(), todo.getTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        Todo todo \u003d new Todo(\"test1\", true);","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        assertEquals(\"[T][X] test1\", todo.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"sikai00":32}},{"path":"src/test/java/duke/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.io.File;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    private static final String FOLDER_DIRECTORY \u003d \"storage\";","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    private static final String FILE_NAME \u003d \"testStorage\";","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private static final String FILE_DIRECTORY \u003d \"storage/testStorage.txt\";","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    // Solution below adapted from https://www.baeldung.com/java-delete-directory","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    private static void deleteDirectory(File directoryToBeDeleted) {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        File[] allContents \u003d directoryToBeDeleted.listFiles();","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        if (allContents !\u003d null) {","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"            for (File file : allContents) {","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"                deleteDirectory(file);","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        directoryToBeDeleted.delete();","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public void createEmptyStorageTest() {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        Storage storage \u003d new Storage(FOLDER_DIRECTORY, FILE_NAME);","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(new TaskList());","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        File f \u003d new File(FILE_DIRECTORY);","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public void writeSimpleStorageTest() {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        Storage storage \u003d new Storage(FOLDER_DIRECTORY, FILE_NAME);","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        tl.addTask(new Todo(\"test\", true));","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        tl.addTask(new Todo(\"test\", true));","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        tl.addTask(new Todo(\"test\", true));","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        storage.writeAllToStorage(new TaskList());","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        File f \u003d new File(FILE_DIRECTORY);","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"                assertEquals(\"Todo|test|0| \", sc.nextLine());","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    @AfterEach","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    public void cleanUp() {","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        deleteDirectory(new File(FOLDER_DIRECTORY));","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"sikai00":62}},{"path":"src/test/java/duke/utils/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public void addTaskTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"        Task task \u003d new TaskStub(\"\");","lastModifiedDate":"2022-09-04"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        assertEquals(taskList.getTask(0), task);","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        IndexOutOfBoundsException thrown \u003d assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"            taskList.deleteTask(0);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        });","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        assertEquals(\"Index 0 out of bounds for length 0\", thrown.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-09-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public void findTaskTest() {","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-04"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        Task vanillaTask \u003d new TaskStub(\"nothing much\");","lastModifiedDate":"2022-09-04"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        String keyword \u003d \"nothing much\";","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(vanillaTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        TaskList vanillaResult \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        assertEquals(","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"                vanillaTask.getDescription(),","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"                vanillaResult.getTask(0).getDescription()","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    public void findInBetweenTaskTest() {","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        Task inBetweenTask \u003d new TaskStub(\"searchinbetweenwords\");","lastModifiedDate":"2022-09-04"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        String keyword \u003d \"inbetween\";","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(inBetweenTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        TaskList inBetweenResult \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2022-09-13"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        assertEquals(","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"                inBetweenTask.getDescription(),","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"                inBetweenResult.getTask(0).getDescription()","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    public void findSingleWordTaskTest() {","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        Task singleWordSearchTask \u003d new TaskStub(\"single word\");","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"        String keyword \u003d \"single\";","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(singleWordSearchTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"        TaskList singleWordResult \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"        assertEquals(","lastModifiedDate":"2022-09-04"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"                singleWordSearchTask.getDescription(),","lastModifiedDate":"2022-09-04"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"                singleWordResult.getTask(0).getDescription()","lastModifiedDate":"2022-09-04"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"    public void findMultipleTaskTest() {","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"        Task pairedOneTask \u003d new TaskStub(\"pair one\");","lastModifiedDate":"2022-09-04"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"        Task pairedTwoTask \u003d new TaskStub(\"pair two\");","lastModifiedDate":"2022-09-04"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"        String keyword \u003d \"pair\";","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(pairedOneTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(pairedTwoTask);","lastModifiedDate":"2022-09-04"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"        TaskList pairedResult \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"        assertEquals(","lastModifiedDate":"2022-09-04"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"                pairedOneTask.getDescription(),","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"                pairedResult.getTask(0).getDescription()","lastModifiedDate":"2022-09-04"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"        assertEquals(","lastModifiedDate":"2022-09-04"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"                pairedTwoTask.getDescription(),","lastModifiedDate":"2022-09-04"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"                pairedResult.getTask(1).getDescription()","lastModifiedDate":"2022-09-04"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-04"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-04"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"    public void findTaskLargeTaskListTest() {","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-13"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"        String keyword \u003d \"single\";","lastModifiedDate":"2022-09-13"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"        Task singleTask \u003d new TaskStub(\"single\");","lastModifiedDate":"2022-09-13"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2022-09-13"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"            if (i \u003d\u003d 13) {","lastModifiedDate":"2022-09-13"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"                taskList.addTask(singleTask);","lastModifiedDate":"2022-09-13"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"            } else {","lastModifiedDate":"2022-09-13"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"                taskList.addTask(new TaskStub(\"taskstub\" + i));","lastModifiedDate":"2022-09-13"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"        TaskList result \u003d taskList.findMatchingTasks(keyword);","lastModifiedDate":"2022-09-13"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"        assertEquals(","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"                singleTask.getDescription(),","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"                result.getTask(0).getDescription()","lastModifiedDate":"2022-09-13"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"        );","lastModifiedDate":"2022-09-13"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"    public void findDatedTaskTest() {","lastModifiedDate":"2022-09-07"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        Task event \u003d new Event(\"test\", false, LocalDateTime.parse(\"2022-09-07T04:20\"));","lastModifiedDate":"2022-09-07"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-07"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"        taskList.addTask(event);","lastModifiedDate":"2022-09-07"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"        LocalDateTime eventBefore \u003d LocalDateTime.parse(\"2022-09-07T04:19\");","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        LocalDateTime eventAfter \u003d LocalDateTime.parse(\"2022-09-07T04:21\");","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        Task sameEvent \u003d taskList.findDatedTasks(eventBefore, eventAfter).getTask(0);","lastModifiedDate":"2022-09-07"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"        assertEquals(event, sameEvent);","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        // reversedTaskList should be empty","lastModifiedDate":"2022-09-07"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        TaskList reversedTaskList \u003d taskList.findDatedTasks(eventAfter, eventBefore);","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"        assertEquals(0, reversedTaskList.size());","lastModifiedDate":"2022-09-07"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"sikai00":122}},{"path":"src/test/java/duke/utils/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package duke.utils;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Represents a stub for Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    public TaskStub(String description) {","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"        super(description, false);","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    public String getTaskWord() {","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        return \"TaskStub\";","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public Optional\u003cLocalDateTime\u003e getTime() {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        return Optional.empty();","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        return \"taskstub\";","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"sikai00":30}}]

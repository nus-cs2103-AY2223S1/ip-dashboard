[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"    private LocalDateTime datetime;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"     * Constructor for Deadline instance","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"charleslimjh"},"content":"     * @param name Description of task","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"charleslimjh"},"content":"     * @param datetime Deadline of task","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"charleslimjh"},"content":"    public Deadline(String name, String datetime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"charleslimjh"},"content":"        super(name);","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"charleslimjh"},"content":"        this.datetime \u003d LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"charleslimjh"},"content":"    public Deadline(String[] data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"charleslimjh"},"content":"        super(data[2], (data[1].equals(\"1\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"charleslimjh"},"content":"        this.datetime \u003d data[3];","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"charleslimjh"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"charleslimjh"},"content":"     * @return Task deadline","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"charleslimjh"},"content":"    public String getDatetime() {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"charleslimjh"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"charleslimjh"},"content":"     * Sets the deadline of the task to the input deadline.","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"charleslimjh"},"content":"     * @param datetime New deadline","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"charleslimjh"},"content":"    public void setDatetime(String datetime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"charleslimjh"},"content":"        this.datetime \u003d LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"charleslimjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"charleslimjh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getDatetime() + \"H)\";","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"charleslimjh"},"content":"    public String toStringWritable() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"charleslimjh"},"content":"        return \" D |\" + super.toStringWritable() + String.format(\"| %s \", this.getDatetime());","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"charleslimjh"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"charleslimjh":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"charleslimjh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"charleslimjh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"charleslimjh"},"content":"    private final ArrayList\u003cTask\u003e db \u003d new ArrayList\u003c\u003e(10);","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"charleslimjh"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"charleslimjh"},"content":"     * Prints welcome message upon starting the bot.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"charleslimjh"},"content":"    public void greet() {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"Hello from Duke!\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"charleslimjh"},"content":"     * Prompts the user for input.","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"charleslimjh"},"content":"     * @param sc Scanner object to read user input","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"charleslimjh"},"content":"     * @return User input for processing","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"charleslimjh"},"content":"    public String getInput(Scanner sc) {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"charleslimjh"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"charleslimjh"},"content":"     * Checks the user input and performs the necessary instruction.","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"charleslimjh"},"content":"     * @param s User input","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"charleslimjh"},"content":"     * @return false if \"bye\" is input, true for any other instruction","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"charleslimjh"},"content":"    public boolean processInput(String s) {","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"charleslimjh"},"content":"        String[] userInput \u003d s.split(\" \", 2);","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"charleslimjh"},"content":"        boolean goodbye \u003d false;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"charleslimjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"charleslimjh"},"content":"            if (s.equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"charleslimjh"},"content":"                System.out.println(\"Bye. Hope to see you again!\");","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"charleslimjh"},"content":"                goodbye \u003d true;","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"charleslimjh"},"content":"                return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"charleslimjh"},"content":"            } else if (s.equals(\"list\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"charleslimjh"},"content":"                this.list();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"charleslimjh"},"content":"            } else if (userInput[0].equals(\"todo\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"charleslimjh"},"content":"                this.addTodo(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"charleslimjh"},"content":"            } else if (userInput[0].equals(\"deadline\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"charleslimjh"},"content":"                this.addDeadline(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"charleslimjh"},"content":"            } else if (userInput[0].equals(\"event\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"charleslimjh"},"content":"                this.addEvent(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"charleslimjh"},"content":"            } else if (userInput[0].equals(\"mark\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"charleslimjh"},"content":"                this.mark(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"charleslimjh"},"content":"            } else if (userInput[0].equals(\"unmark\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"charleslimjh"},"content":"                this.unmark(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"charleslimjh"},"content":"            } else if (userInput[0].equals(\"delete\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"charleslimjh"},"content":"                this.delete(userInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"charleslimjh"},"content":"            } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"charleslimjh"},"content":"                throw new DukeException(\"Unrecognized command.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"charleslimjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"charleslimjh"},"content":"            this.write();","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"charleslimjh"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(err);","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"charleslimjh"},"content":"        } catch (IOException err) {","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(err);","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"charleslimjh"},"content":"        } finally {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"charleslimjh"},"content":"            return goodbye;","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"charleslimjh"},"content":"     * Lists out all Tasks stored in Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"charleslimjh"},"content":"    private void list() {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"charleslimjh"},"content":"        for (int i \u003d 0; i \u003c db.size(); i++) {","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(i + 1 + \". \" + db.get(i).toString());","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"charleslimjh"},"content":"     * Marks the input task as completed.","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"charleslimjh"},"content":"     * @param userInput Input task number","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"charleslimjh"},"content":"    private void mark(String[] userInput) {","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"charleslimjh"},"content":"        Task tmp \u003d db.get(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"charleslimjh"},"content":"        tmp.setDone();","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(tmp);","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"charleslimjh"},"content":"     * Marks the input task as incomplete.","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"charleslimjh"},"content":"     * @param userInput Input task number","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"charleslimjh"},"content":"    private void unmark(String[] userInput) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"charleslimjh"},"content":"        Task tmp \u003d db.get(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"charleslimjh"},"content":"        tmp.setUndone();","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as undone:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(tmp);","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"charleslimjh"},"content":"     * Adds a new To-Do task.","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"charleslimjh"},"content":"     * @param s Input task with description","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"charleslimjh"},"content":"    private void addTodo(String[] s) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"charleslimjh"},"content":"        if (s.length \u003c 2 || s[1].strip().equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Todo description is empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"charleslimjh"},"content":"        Todo task \u003d new Todo(s[1]);","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"charleslimjh"},"content":"        db.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"Got it. I added this task:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"charleslimjh"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", db.size());","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"charleslimjh"},"content":"     * Adds a new Event task.","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"charleslimjh"},"content":"     * @param s Input task with description","lastModifiedDate":"2022-08-24"},{"lineNumber":127,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"charleslimjh"},"content":"    private void addEvent(String[] s) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"charleslimjh"},"content":"        if (s.length \u003c 2 || s[1].strip().equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Event description is empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"charleslimjh"},"content":"        String[] tmp \u003d s[1].split(\"/at\");","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"charleslimjh"},"content":"        if (tmp.length \u003c 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Event description is missing the /at tag.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"charleslimjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"charleslimjh"},"content":"            Event task \u003d new Event(tmp[0].strip(), tmp[1].strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"charleslimjh"},"content":"            db.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(\"Got it. I added this event:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(\"\\t\" + task);","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"charleslimjh"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", db.size());","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"charleslimjh"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Invalid datetime argument passed to event.\\nPlease enter in YYYY-MM-DD HHMM format.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"charleslimjh"},"content":"     * Adds a new Deadline task.","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"charleslimjh"},"content":"     * @param s Input task with description","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"charleslimjh"},"content":"    private void addDeadline(String[] s) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"charleslimjh"},"content":"        if (s.length \u003c 2 || s[1].strip().equals(\"\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Deadline description is empty.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":158,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":159,"author":{"gitId":"charleslimjh"},"content":"        String[] tmp \u003d s[1].split(\"/by\");","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"charleslimjh"},"content":"        if (tmp.length \u003c 2) {","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Deadline description is missing the /by tag.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"charleslimjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"charleslimjh"},"content":"            Deadline task \u003d new Deadline(tmp[0].strip(), tmp[1].strip());","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"charleslimjh"},"content":"            db.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":168,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(\"Got it. I added this deadline:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"charleslimjh"},"content":"            System.out.println(\"\\t\" + task);","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"charleslimjh"},"content":"            System.out.printf(\"Now you have %d tasks in the list.%n\", db.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":171,"author":{"gitId":"charleslimjh"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"charleslimjh"},"content":"            throw new DukeException(\"Invalid datetime argument passed to deadline.\\nPlease enter in YYYY-MM-DD HHMM format.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":173,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":174,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":176,"author":{"gitId":"charleslimjh"},"content":"    private void delete(String[] userInput) {","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"charleslimjh"},"content":"        Task tmp \u003d db.remove(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":178,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"OK, I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":179,"author":{"gitId":"charleslimjh"},"content":"        System.out.println(\"\\t\" + tmp);","lastModifiedDate":"2022-08-24"},{"lineNumber":180,"author":{"gitId":"charleslimjh"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\", db.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":181,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":183,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":184,"author":{"gitId":"charleslimjh"},"content":"     * Stores the current list of Tasks to data/duke.txt.","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":186,"author":{"gitId":"charleslimjh"},"content":"    private void write() throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"charleslimjh"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-08-24"},{"lineNumber":188,"author":{"gitId":"charleslimjh"},"content":"        for (Task t: db) {","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"charleslimjh"},"content":"            fw.write(t.toStringWritable().strip());","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"charleslimjh"},"content":"            fw.write(\"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":192,"author":{"gitId":"charleslimjh"},"content":"        fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":193,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":194,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":195,"author":{"gitId":"charleslimjh"},"content":"    private void load() throws IOException {","lastModifiedDate":"2022-08-24"},{"lineNumber":196,"author":{"gitId":"charleslimjh"},"content":"        Scanner s \u003d new Scanner(new File(\"data/duke.txt\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"charleslimjh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":198,"author":{"gitId":"charleslimjh"},"content":"            String[] tmp \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2022-08-24"},{"lineNumber":199,"author":{"gitId":"charleslimjh"},"content":"            for (int i \u003d 0; i \u003c tmp.length; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":200,"author":{"gitId":"charleslimjh"},"content":"                tmp[i] \u003d tmp[i].strip();","lastModifiedDate":"2022-08-24"},{"lineNumber":201,"author":{"gitId":"charleslimjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":202,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":203,"author":{"gitId":"charleslimjh"},"content":"            switch (tmp[0]) {","lastModifiedDate":"2022-08-24"},{"lineNumber":204,"author":{"gitId":"charleslimjh"},"content":"                case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":205,"author":{"gitId":"charleslimjh"},"content":"                    db.add(new Todo(tmp));","lastModifiedDate":"2022-08-24"},{"lineNumber":206,"author":{"gitId":"charleslimjh"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":207,"author":{"gitId":"charleslimjh"},"content":"                case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":208,"author":{"gitId":"charleslimjh"},"content":"                    db.add(new Deadline(tmp));","lastModifiedDate":"2022-08-24"},{"lineNumber":209,"author":{"gitId":"charleslimjh"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":210,"author":{"gitId":"charleslimjh"},"content":"                case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":211,"author":{"gitId":"charleslimjh"},"content":"                    db.add(new Event(tmp));","lastModifiedDate":"2022-08-24"},{"lineNumber":212,"author":{"gitId":"charleslimjh"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":213,"author":{"gitId":"charleslimjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":214,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":215,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":216,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":217,"author":{"gitId":"charleslimjh"},"content":"    // Initializes and starts a Duke instance.","lastModifiedDate":"2022-08-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-20"},{"lineNumber":219,"author":{"gitId":"charleslimjh"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-24"},{"lineNumber":220,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":221,"author":{"gitId":"charleslimjh"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":222,"author":{"gitId":"charleslimjh"},"content":"            if (!Files.isDirectory(Paths.get(\"data/\"))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":223,"author":{"gitId":"charleslimjh"},"content":"                Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":224,"author":{"gitId":"charleslimjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":225,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":226,"author":{"gitId":"charleslimjh"},"content":"            if (!Files.exists(Paths.get(\"data/duke.txt\"))) {","lastModifiedDate":"2022-08-24"},{"lineNumber":227,"author":{"gitId":"charleslimjh"},"content":"                Files.createFile(Paths.get(\"data/duke.txt\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":228,"author":{"gitId":"charleslimjh"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":229,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":230,"author":{"gitId":"charleslimjh"},"content":"            duke.load();","lastModifiedDate":"2022-08-24"},{"lineNumber":231,"author":{"gitId":"charleslimjh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":232,"author":{"gitId":"charleslimjh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":233,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":234,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":235,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":236,"author":{"gitId":"charleslimjh"},"content":"        duke.greet();","lastModifiedDate":"2022-08-20"},{"lineNumber":237,"author":{"gitId":"charleslimjh"},"content":"        while (true) {","lastModifiedDate":"2022-08-20"},{"lineNumber":238,"author":{"gitId":"charleslimjh"},"content":"            String input \u003d duke.getInput(duke.sc);","lastModifiedDate":"2022-08-20"},{"lineNumber":239,"author":{"gitId":"charleslimjh"},"content":"            if (duke.processInput(input)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":240,"author":{"gitId":"charleslimjh"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":241,"author":{"gitId":"charleslimjh"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":242,"author":{"gitId":"charleslimjh"},"content":"            System.out.println();","lastModifiedDate":"2022-08-20"},{"lineNumber":243,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":244,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":245,"author":{"gitId":"charleslimjh"},"content":"        duke.sc.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"charleslimjh":242,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":" * General Exception for the Duke bot.","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"    public DukeException (String error) {","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"        super(error);","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"charleslimjh":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"    private LocalDateTime datetime;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"     * Constructor for Event instance","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"charleslimjh"},"content":"     * @param name Description of event","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"charleslimjh"},"content":"     * @param datetime Date/time of the event","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"charleslimjh"},"content":"    public Event(String name, String datetime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"charleslimjh"},"content":"        super(name);","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"charleslimjh"},"content":"        this.datetime \u003d LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"charleslimjh"},"content":"    public Event(String[] data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"charleslimjh"},"content":"        super(data[2], (data[1].equals(\"1\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"charleslimjh"},"content":"        this.datetime \u003d data[3];","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"charleslimjh"},"content":"     * Returns the date/time of the event.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"charleslimjh"},"content":"     * @return Date/time of the event","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"charleslimjh"},"content":"    public String getDatetime() {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"charleslimjh"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"charleslimjh"},"content":"     * Sets the date/time of the event to the input date/time.","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"charleslimjh"},"content":"     * @param datetime New date/time of the event","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"charleslimjh"},"content":"    public void setDatetime(String datetime) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"charleslimjh"},"content":"        this.datetime \u003d LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"charleslimjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"charleslimjh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getDatetime() + \"H)\";","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"charleslimjh"},"content":"    public String toStringWritable() {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"charleslimjh"},"content":"        return \" E |\" + super.toStringWritable() + String.format(\"| %s \", this.getDatetime());","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"charleslimjh"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"charleslimjh":47}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"/**","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":" * Class that encapsulates a task and tracks its completion status.","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":" */","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"     * Stores the description and completion status of the task.","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"    private boolean done;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"charleslimjh"},"content":"    private String name;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"charleslimjh"},"content":"     * Constructor for a Task item.","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"charleslimjh"},"content":"     * @param name Description of task","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"charleslimjh"},"content":"    Task(String name) {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"charleslimjh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"charleslimjh"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"charleslimjh"},"content":"     * Constructor for a Task item.","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"charleslimjh"},"content":"     * @param name Description of task","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"charleslimjh"},"content":"     * @param done Whether task is done or not","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"charleslimjh"},"content":"    Task (String name, boolean done) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"charleslimjh"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"charleslimjh"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"charleslimjh"},"content":"     * Retrieves the description of the Task.","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"charleslimjh"},"content":"     * @return Task description","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"charleslimjh"},"content":"    public String getName() {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"charleslimjh"},"content":"        return name;","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"charleslimjh"},"content":"     * Renames the Task to the input name.","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"charleslimjh"},"content":"     * @param s New name of task","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"charleslimjh"},"content":"    public void renameTask(String s) {","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"charleslimjh"},"content":"        this.name \u003d s;","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"charleslimjh"},"content":"     * Checks if Task is completed","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"charleslimjh"},"content":"     * @return True if Task completed, False if not","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"charleslimjh"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"charleslimjh"},"content":"        return done;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"charleslimjh"},"content":"     * Marks the Task as completed.","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"charleslimjh"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"charleslimjh"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"charleslimjh"},"content":"     * Marks the Task as incomplete.","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"charleslimjh"},"content":"    public void setUndone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"charleslimjh"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"charleslimjh"},"content":"     * Returns a string representation of the Task instance.","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"charleslimjh"},"content":"     * @return String representation of Task","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"charleslimjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"charleslimjh"},"content":"        if (this.isDone()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"charleslimjh"},"content":"            return \"[X] \" + this.getName();","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"charleslimjh"},"content":"        } else {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"charleslimjh"},"content":"            return \"[ ] \" + this.getName();","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"charleslimjh"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"charleslimjh"},"content":"     * Returns the string representation of the task for saving to a file.","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"charleslimjh"},"content":"     * @return String representation of task to save to file","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"charleslimjh"},"content":"    public String toStringWritable() {","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"charleslimjh"},"content":"        int done \u003d this.isDone() ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"charleslimjh"},"content":"        return String.format(\" %d | %s \", done, this.getName());","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"charleslimjh"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"charleslimjh":89}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"     * Constructor for a To-do item.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"     * @param name Description of task","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"    Todo(String name) {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"charleslimjh"},"content":"        super(name);","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"charleslimjh"},"content":"    Todo(String[] data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"charleslimjh"},"content":"        super(data[2], (data[1].equals(\"1\")));","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"charleslimjh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"charleslimjh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"charleslimjh"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"charleslimjh"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"charleslimjh"},"content":"    public String toStringWritable() {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"charleslimjh"},"content":"        return \" T |\" + super.toStringWritable();","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"charleslimjh"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"charleslimjh"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"charleslimjh":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"charleslimjh"},"content":"todo do homework","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"charleslimjh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"charleslimjh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"charleslimjh"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"charleslimjh"},"content":"mark 1","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"charleslimjh"},"content":"mark 2","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"charleslimjh"},"content":"unmark 1","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"charleslimjh"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"charleslimjh"},"content":"bye","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"charleslimjh":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"charleslimjh"},"content":"fc.exe ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"charleslimjh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"charleslimjh"},"content":"diff -w ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"charleslimjh":1,"-":33}}]

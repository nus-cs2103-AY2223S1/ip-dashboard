[{"path":"src/main/java/gibson/Gibson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import gibson.task.Deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import gibson.task.Event;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import gibson.task.Parser;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import gibson.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import gibson.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":" *  The Gibson program. It works as a Personal Assistant Chatbot","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":" *  that helps a person to keep track of various things.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"public class Gibson {","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a new Gibson object that starts the whole program.","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"     * It saves a text file with the given name to the given path.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"     * @param filePath the relative path where you want the text file to be saved","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"     * @param pathName the name of the text file that will be saved","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    public Gibson(String filePath, String pathName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"        storage \u003d new Storage(filePath, pathName);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"     * The main method that starts the entire program","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"     * @param args","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        new Gibson(\"data\", \"gibson.txt\").run();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"     * Start running the Gibson program from an instance of Gibson.","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"    public void run() {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"        ui.printWelcome();","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"            // BYE","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"                ui.printBye();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"                break;","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"            // LIST","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"                ui.printMessage(\"Here are the task(s) in your list:\\n\" + taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"            // MARK","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"            } else if (Pattern.matches(\"mark [0-9]+\", input)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"                int number \u003d Parser.getTrailingInt(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"                int index \u003d number - 1;","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"                    Task t \u003d taskList.mark(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"                    storage.save(taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + t.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(\"There is not task numbered as \" + number + \".\");","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"            // UNMARK","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"            else if (Pattern.matches(\"unmark [0-9]+\", input)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"                int number \u003d Parser.getTrailingInt(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"                int index \u003d number - 1;","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"                    Task t \u003d taskList.unmark(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"                    storage.save(taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\" + t.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(\"There is not task numbered as \" + number + \".\");","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"            // TODOS","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"            } else if (Pattern.matches(\"(todo .+)|(todo( )?)\", input)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"                String taskString \u003d Parser.substringAfterToken(input, \"todo\");","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"                    Task task \u003d new Task(taskString);","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"Got it. I\u0027ve added this task:\\n\" + task +","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"                            \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"                    storage.save(taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"            // DEADLINES","lastModifiedDate":"2022-08-15"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"            } else if (Pattern.matches(\"(deadline .+ /by .+)|(deadline .+ /by( )?)\", input)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"                String taskString \u003d Parser.substringAfterToken(input, \"deadline\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"                String[] stringArray \u003d Parser.substringBeforeAfterToken(taskString, \"/by\");","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"                    Deadline deadline \u003d new Deadline(stringArray[0], stringArray[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"Got it. I\u0027ve added this task:\\n\" + deadline +","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"                            \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"                    storage.save(taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"            // EVENTS","lastModifiedDate":"2022-08-15"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"            } else if (Pattern.matches(\"(event .+ /at .+)|(event .+ /at( )?)\", input)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"                String taskString \u003d Parser.substringAfterToken(input, \"event\");","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"                String[] stringArray \u003d Parser.substringBeforeAfterToken(taskString, \"/at\");","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"                    Event event \u003d new Event(stringArray[0], stringArray[1]);","lastModifiedDate":"2022-08-15"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"                    taskList.add(event);","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"                    storage.save(taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"Got it. I\u0027ve added this task:\\n\" + event +","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"                            \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"            // REMOVE","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":"            } else if (Pattern.matches(\"delete [0-9]+\", input)) {","lastModifiedDate":"2022-08-15"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"                int number \u003d Parser.getTrailingInt(input);","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"                int index \u003d number - 1;","lastModifiedDate":"2022-08-15"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-15"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"                    Task t \u003d taskList.remove(index);","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"KeithPJX"},"content":"                    storage.save(taskList.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\" + t.toString() +","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"                            \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-15"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(\"There is not task numbered as \" + number + \".\");","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"            // FIND","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"KeithPJX"},"content":"            } else if (Pattern.matches(\"(find .+)|(find( )?)\", input)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"                String searchQuery \u003d Parser.substringAfterToken(input, \"find\");","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"                TaskList result \u003d taskList.find(searchQuery);","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"                if (!result.isEmpty()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":"                    ui.printMessage(\"Here are your results:\\n\" + result.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"                } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"                    ui.printErrorMessage(\"Unable to find task with \\\"\" + searchQuery + \"\\\".\");","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":"            // NOT RECOGNIZED","lastModifiedDate":"2022-08-15"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"            } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"                ui.printErrorMessage(\"I\u0027m sorry. I do not know what that means.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"KeithPJX":145}},{"path":"src/main/java/gibson/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"    private Path directoryPath;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    private boolean hasDataToLoad \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a new Storage object that saves to the given directory","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"     * and name the text file with the given name.","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"     * @param directoryString the relative path where you want the text file to be saved","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"     * @param fileName the name of the text file that will be saved","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    public Storage(String directoryString, String fileName) {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"        this.directoryPath \u003d Paths.get(directoryString);","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        this.filePath \u003d Paths.get(directoryString, fileName);","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"            if (Files.exists(directoryPath)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"                if (Files.exists(filePath)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                    hasDataToLoad \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"                    Files.createFile(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"            System.out.println(\"Failed to create directory/file. \" + e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    public boolean hasDataToLoad() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        return hasDataToLoad;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"     * Saves the given data to the directory specified in the constructor","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"     * and with the name specified in the constructor.","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"     * @param data String to be saved in the file","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"    public void save(String data) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"            Files.write(filePath, data.getBytes());","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"            System.out.println(\"Failed to write to Gibson.txt. \" + e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"     * Loads the text in the text file described in the constructor of the object","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"     * into a List of Strings. Each index in the List is a line in the text file.","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"     * @return the List of Strings in the text file","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"    public List\u003cString\u003e load() {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"        List\u003cString\u003e linesInSave \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"            linesInSave \u003d Files.readAllLines(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"            System.out.println(\"Failed to read Gibson.txt. \" + e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"        return linesInSave;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"KeithPJX":73}},{"path":"src/main/java/gibson/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"    private static final String ERROR_LINE \u003d \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\";","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"    private static final String LOGO \u003d \" _____ ______ ____   _____  ____  _   _\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"            \"/ _____|_   _|  _ \\\\ / ____|/ __ \\\\| \\\\ | |\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"            \"| |  __  | | | |_) | (___ | |  | |  \\\\| |\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"            \"| | |_ | | | |  _ \u003c \\\\___ \\\\| |  | | . ` |\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"            \"| |__| |_| |_| |_) |____) | |__| | |\\\\  |\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"            \"\\\\______|_____|____/|_____/ \\\\____/|_| \\\\_|\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"     * Prints welcome message.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    public void printWelcome() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(\"Hello! I\u0027m Gibson\");","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"     * Prints goodbye message.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    public void printBye() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"     * Prints message between 2 lines.","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"     * @param message the String to be printed","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"     * Prints error message between 2 lines of exclamation marks.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"     * @param message the String to be printed","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(ERROR_LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(message);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"        System.out.println(ERROR_LINE);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"KeithPJX":52}},{"path":"src/main/java/gibson/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"    private static final String[] FORMATS \u003d new String[] {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"            \"y-M-d H:m\", \"d MMM yyyy H:m\"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    };","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a Deadline object that is represented by a task and a date.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"     * @param taskString the task","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"     * @param date the deadline of given task","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    public Deadline(String taskString, String date) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        super(taskString);","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalArgumentException(\"Time of deadline cannot be empty.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"            for (int i \u003d 0; i \u003c FORMATS.length; i++) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"                    this.date \u003d LocalDateTime.parse(date, DateTimeFormatter.ofPattern(FORMATS[i]));","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                    if (i \u003d\u003d FORMATS.length - 1) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"                        throw new IllegalArgumentException(\"Date format is invalid. Try it in y-M-d H:m. For example, 2020-1-12 23:59.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    public char getChar() {","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        return super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy H:m\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"KeithPJX":46}},{"path":"src/main/java/gibson/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"    private String startEnd;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"     * Constructs an Event object that is represented by a task","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"     * and a String that represent the time of the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"     * @param taskString the task","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"     * @param startEnd the time of the task","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public Event(String taskString, String startEnd) {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"        super(taskString);","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"        if (startEnd.isBlank()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalArgumentException(\"Time of event cannot be blank.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        this.startEnd \u003d startEnd;","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"    public char getChar() {","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        return super.toString() + \" (at: \" + startEnd + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"KeithPJX":29}},{"path":"src/main/java/gibson/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"public final class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"    private Parser() {}","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"    // Returns trailing integers from a String","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    // Throws error if no trailing integers","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"     * Returns trailing integers from a given String.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"     * @param string the String to get trailing integers from","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"     * @return the trailing integers","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    public static int getTrailingInt(String string) {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"        Pattern pattern \u003d Pattern.compile(\"[^0-9]+([0-9]+)$\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        if (matcher.find()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"            return Integer.parseInt(matcher.group(1));","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalArgumentException(\"String is invalid\");","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"     * Returns substring after the first instance of the token string.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"     * @param string the String to be substring-ed","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"     * @param token the String that marks where to substring-ed","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"     * @return substring after the token string","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"     * @throws IllegalArgumentException if token is not found in the String","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"    public static String substringAfterToken(String string, String token) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        Pattern pattern \u003d Pattern.compile(token);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"        if (matcher.find()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"                return string.substring(matcher.end() + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"                return \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalArgumentException(\"Unable to find token in string\");","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"     * Returns substring before and after the first instance of the token string.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"     * Before stored in [0]. After stored in [1].","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"     * @param string the String to be split","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"     * @param token the String that marks where to split","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"     * @return an array of 2 Strings","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"     * @throws IllegalArgumentException if token cannot be found in given string","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"    public static String[] substringBeforeAfterToken(String string, String token) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"        String[] stringArray \u003d new String[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"        Pattern pattern \u003d Pattern.compile(token);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        if (matcher.find()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"                stringArray[0] \u003d string.substring(0, matcher.start() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"                stringArray[0] \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"            try {","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"                stringArray[1] \u003d string.substring(matcher.end() + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"                stringArray[1] \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"            return stringArray;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalArgumentException(\"Unable to find token in string\");","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"KeithPJX":76}},{"path":"src/main/java/gibson/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"    private String taskString;","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"    private boolean done;","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a Task object that is represented by a task String which describes the task.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"     * @param taskString the task","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    public Task(String taskString) {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"        if (taskString.isBlank()) {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalArgumentException(\"Task description cannot be blank.\");","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    public void mark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    public char getChar() {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    public boolean taskContains(String s) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"        return taskString.contains(s);","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"        if (done) {","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"            return \"[\" + getChar() + \"][X] \" + taskString;","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"            return \"[\" + getChar() + \"][ ] \" + taskString;","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"KeithPJX":43}},{"path":"src/main/java/gibson/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"public class TaskList {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    public TaskList(List\u003cString\u003e list) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        for (String line : list) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"            Pattern pattern \u003d Pattern.compile(\"]\");","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"            Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"            matcher.find();","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"            char type \u003d line.charAt(matcher.start() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"            matcher.find();","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"            char marker \u003d line.charAt(matcher.start() - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"            String body \u003d line.substring(matcher.end() + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"            Task t;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"                t \u003d new Task(body);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"                String[] stringArray \u003d Parser.substringBeforeAfterToken(body, \"\\\\(at:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                t \u003d new Event(stringArray[0], stringArray[1].substring(0, stringArray[1].length() - 1));","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"                String[] stringArray \u003d Parser.substringBeforeAfterToken(body, \"\\\\(by:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"                t \u003d new Deadline(stringArray[0], stringArray[1].substring(0, stringArray[1].length() - 1));","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"            if (marker \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"                t.mark();","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"            taskList.add(t);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"    public Task remove(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"        Task t \u003d taskList.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"        taskList.remove(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"        return t;","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"    public Task mark(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"        Task t \u003d taskList.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"        t.mark();","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"        return t;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"    public Task unmark(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"        Task t \u003d taskList.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"        t.unmark();","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        return t;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"    public TaskList find(String searchQuery) {","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"            if (t.taskContains(searchQuery)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"                tl.add(t);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        return tl;","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"    public int size() {","lastModifiedDate":"2022-08-22"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"            sb.append(i + 1).append(\".\").append(taskList.get(i).toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"            if (i + 1 \u003c taskList.size()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"KeithPJX":92}},{"path":"src/test/java/gibson/task/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"    public void getTrailingInt_inputWithTrailingInt_success() {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"        assertEquals(12345, Parser.getTrailingInt(\"Test12345\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"        assertEquals(45, Parser.getTrailingInt(\"Test123Test45\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public void getTrailingInt_inputWithoutTrailingInt_exceptionThrown() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"            Parser.getTrailingInt(\"TEST\");","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"            assertEquals(\"String is invalid\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"            Parser.getTrailingInt(\"TEST123T\");","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"            assertEquals(\"String is invalid\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"KeithPJX":29}},{"path":"src/test/java/gibson/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package gibson.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"    public void TaskList_emptyList_success() {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003cString\u003e());","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"        assertEquals(\"\", tl.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public void TaskList_populatedList_success() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        ArrayList\u003cString\u003e al \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        al.add(\"1.[T][ ] Test\");","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"        al.add(\"2.[D][ ] Test2 (by: 1 Aug 2022 23:59)\");","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        al.add(\"3.[E][ ] Test3 (at: 1 August)\");","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        TaskList tl \u003d new TaskList(al);","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        assertEquals(\"1.[T][ ] Test\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"                \"2.[D][ ] Test2 (by: 1 Aug 2022 23:59)\\n\" +","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"                \"3.[E][ ] Test3 (at: 1 August)\", tl.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"KeithPJX":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"todo Borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"deadline Return book /by Sunday","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"event Book reading club /at Monday 2-4PM","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"unmark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"nonsense","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"KeithPJX":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"java -classpath ..\\bin Gibson \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KeithPJX":1,"-":20}}]

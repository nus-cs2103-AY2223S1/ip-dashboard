[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"    protected String time;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), time);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"D | %s | %s\", super.getSaveFormat(), time);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import java.util.List;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"        duke.run();","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    private void getData() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"        Scanner sc;","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"            sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"File not found: Unable to retrieve data.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"        sc.useDelimiter(\"( \\\\| )|(\\\\n)\");  // split by | or new line","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"                String type \u003d sc.next(), status \u003d sc.next(), description \u003d sc.next();","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"                Task task;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"                switch (type) {","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"                case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"                case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d new Deadline(description, sc.next());","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"                case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d new Event(description, sc.next());","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"                default:","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"                    throw new DukeException(\"Invalid task type: %s\", type);","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"                if (status.equals(\"1\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"                    task.markAsDone();;","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"                } else if (!status.equals(\"0\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"                    throw new DukeException(\"Invalid task status: %s\", status);","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"                tasks.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"File content is not in the correct format.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"    private void saveData() throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"            FileWriter fileWriter \u003d new FileWriter(new File(filePath));","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"            String content \u003d tasks.stream().map(x -\u003e x.getSaveFormat() + \"\\n\").reduce(\"\", (x,y) -\u003e x + y);","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"            fileWriter.write(content);","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"IOException: Unable to save data.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"    private void run() {","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"            getData();","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"            print(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"        scanner: while (sc.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"            String input \u003d sc.next();","lastModifiedDate":"2022-08-16"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"                switch (input) {","lastModifiedDate":"2022-08-16"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"                    case \"list\":","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"                        list();","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"                    ","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"                    case \"todo\":","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"                    case \"deadline\":","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"                    case \"event\":","lastModifiedDate":"2022-08-16"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"                        add(input, sc.nextLine().trim());","lastModifiedDate":"2022-08-16"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"                    case \"mark\":","lastModifiedDate":"2022-08-16"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"                        mark(sc.nextLine().trim());","lastModifiedDate":"2022-08-16"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"                    case \"unmark\":","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"                        unmark(sc.nextLine().trim());","lastModifiedDate":"2022-08-16"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"                    ","lastModifiedDate":"2022-08-16"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"                    case \"delete\":","lastModifiedDate":"2022-08-16"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"                        delete(sc.nextLine().trim());","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"                        break;","lastModifiedDate":"2022-08-16"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"        ","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"                    case \"bye\":","lastModifiedDate":"2022-08-16"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"                        bye();","lastModifiedDate":"2022-08-16"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"                        break scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"                    ","lastModifiedDate":"2022-08-16"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"                    default:","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"                        sc.nextLine();","lastModifiedDate":"2022-08-16"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"                        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-16"},{"lineNumber":110,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":111,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"nmtuan2001"},"content":"                print(e.getMessage());","lastModifiedDate":"2022-08-16"},{"lineNumber":113,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":114,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":115,"author":{"gitId":"nmtuan2001"},"content":"        sc.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"nmtuan2001"},"content":"            saveData();","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"nmtuan2001"},"content":"            print(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":122,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":123,"author":{"gitId":"nmtuan2001"},"content":"    private void print(String s, Object... args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"nmtuan2001"},"content":"        String seperator \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-08-16"},{"lineNumber":125,"author":{"gitId":"nmtuan2001"},"content":"        System.out.println(seperator + Stream.of(String.format(s, args).split(\"\\n\")).map(x -\u003e \"     \" + x + \"\\n\").reduce(\"\", (x,y) -\u003e x + y) + seperator);","lastModifiedDate":"2022-08-24"},{"lineNumber":126,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":127,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"nmtuan2001"},"content":"    private void list() {","lastModifiedDate":"2022-08-16"},{"lineNumber":129,"author":{"gitId":"nmtuan2001"},"content":"        print(IntStream.range(0, tasks.size()).mapToObj(x -\u003e String.format(\"%d.%s\\n\", x + 1, tasks.get(x))).reduce(\"Here are the tasks in your list:\\n\", (x,y) -\u003e x + y));","lastModifiedDate":"2022-08-16"},{"lineNumber":130,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":131,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":132,"author":{"gitId":"nmtuan2001"},"content":"    private String[] getTaskDetails(String rawDetails, String delimiter) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"nmtuan2001"},"content":"        String[] details \u003d rawDetails.split(delimiter);","lastModifiedDate":"2022-08-16"},{"lineNumber":134,"author":{"gitId":"nmtuan2001"},"content":"        if (details.length !\u003d 2 || details[0].isEmpty() || details[1].isEmpty()) {","lastModifiedDate":"2022-08-16"},{"lineNumber":135,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Please make sure task description and dates are inputted properly!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":136,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":137,"author":{"gitId":"nmtuan2001"},"content":"        return details;","lastModifiedDate":"2022-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":140,"author":{"gitId":"nmtuan2001"},"content":"    private void add(String taskType, String rawDetails) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":141,"author":{"gitId":"nmtuan2001"},"content":"        Task task;","lastModifiedDate":"2022-08-16"},{"lineNumber":142,"author":{"gitId":"nmtuan2001"},"content":"        if (rawDetails.isEmpty()) throw new DukeException(\"\\u2639 OOPS!!! The description of a %s cannot be empty.\", taskType);","lastModifiedDate":"2022-08-24"},{"lineNumber":143,"author":{"gitId":"nmtuan2001"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":144,"author":{"gitId":"nmtuan2001"},"content":"            String[] details \u003d getTaskDetails(rawDetails, \" /by \");","lastModifiedDate":"2022-08-16"},{"lineNumber":145,"author":{"gitId":"nmtuan2001"},"content":"            task \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2022-08-16"},{"lineNumber":146,"author":{"gitId":"nmtuan2001"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-08-16"},{"lineNumber":147,"author":{"gitId":"nmtuan2001"},"content":"            String[] details \u003d getTaskDetails(rawDetails, \" /at \");","lastModifiedDate":"2022-08-16"},{"lineNumber":148,"author":{"gitId":"nmtuan2001"},"content":"            task \u003d new Event(details[0], details[1]);","lastModifiedDate":"2022-08-16"},{"lineNumber":149,"author":{"gitId":"nmtuan2001"},"content":"        } else {","lastModifiedDate":"2022-08-16"},{"lineNumber":150,"author":{"gitId":"nmtuan2001"},"content":"            task \u003d new Todo(rawDetails);","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":152,"author":{"gitId":"nmtuan2001"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-16"},{"lineNumber":153,"author":{"gitId":"nmtuan2001"},"content":"        print(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\", tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":154,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":155,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":156,"author":{"gitId":"nmtuan2001"},"content":"    private void mark(String input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":157,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":158,"author":{"gitId":"nmtuan2001"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-16"},{"lineNumber":159,"author":{"gitId":"nmtuan2001"},"content":"            tasks.get(index - 1).markAsDone();","lastModifiedDate":"2022-08-16"},{"lineNumber":160,"author":{"gitId":"nmtuan2001"},"content":"            print(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(index - 1));","lastModifiedDate":"2022-08-16"},{"lineNumber":161,"author":{"gitId":"nmtuan2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":162,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. Index must be an integer and must not be blank.\", input);","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":164,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. You only have %d tasks in your list.\", input, tasks.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":165,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":166,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":167,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":168,"author":{"gitId":"nmtuan2001"},"content":"    private void unmark(String input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":169,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":170,"author":{"gitId":"nmtuan2001"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-16"},{"lineNumber":171,"author":{"gitId":"nmtuan2001"},"content":"            tasks.get(index - 1).markAsDone();","lastModifiedDate":"2022-08-16"},{"lineNumber":172,"author":{"gitId":"nmtuan2001"},"content":"            print(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(index - 1));","lastModifiedDate":"2022-08-16"},{"lineNumber":173,"author":{"gitId":"nmtuan2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":174,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. Index must be an integer and must not be blank.\", input);","lastModifiedDate":"2022-08-24"},{"lineNumber":175,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":176,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. You only have %d tasks in your list.\", input, tasks.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":177,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":178,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":179,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":180,"author":{"gitId":"nmtuan2001"},"content":"    private void delete(String input) throws DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":181,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":182,"author":{"gitId":"nmtuan2001"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2022-08-16"},{"lineNumber":183,"author":{"gitId":"nmtuan2001"},"content":"            Task removedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2022-08-16"},{"lineNumber":184,"author":{"gitId":"nmtuan2001"},"content":"            print(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\", removedTask, tasks.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":185,"author":{"gitId":"nmtuan2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":186,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. Index must be an integer and must not be blank.\", input);","lastModifiedDate":"2022-08-24"},{"lineNumber":187,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":188,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. You only have %d tasks in your list.\", input, tasks.size());","lastModifiedDate":"2022-08-24"},{"lineNumber":189,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":190,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":191,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":192,"author":{"gitId":"nmtuan2001"},"content":"    private void bye() {","lastModifiedDate":"2022-08-16"},{"lineNumber":193,"author":{"gitId":"nmtuan2001"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nmtuan2001":190,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"    public DukeException(String msg, Object... args) {","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"        super(String.format(msg, args));","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"    protected String time;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), time);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"E | %s | %s\", super.getSaveFormat(), time);","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"        return \"T | \" + super.getSaveFormat();","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"nmtuan2001":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"mark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"invalid command","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":11}}]

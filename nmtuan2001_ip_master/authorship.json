[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nmtuan2001":1,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.TimedTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":" * Duke is an interactive chatbot, which functions as a todo manager to help users keep track of their tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Duke with a given file path to the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * @param filePath Path to the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"            ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"            tasks \u003d storage.getData();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"            ui.showSuccess(\"Data is loaded successfully.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"            ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        duke.run();","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    private void run() {","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"        scanner: while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"            String[] parsedCommands;","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"            Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"                parsedCommands \u003d Parser.parse(sc.nextLine());","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"                ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"                continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-16"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"                switch (parsedCommands[0]) {","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"                case \"list\":","lastModifiedDate":"2022-08-16"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"                    if (parsedCommands.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"                        ui.showTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"                    } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"                        ui.showTasks(tasks, parsedCommands[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"                    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"                ","lastModifiedDate":"2022-08-16"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"                case \"todo\":","lastModifiedDate":"2022-08-16"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"                    tasks.add(new Todo(parsedCommands[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showSuccess(\"Got it. I\u0027ve added this todo:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"                            tasks.get(tasks.size()), tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"                case \"deadline\":","lastModifiedDate":"2022-08-16"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"                    tasks.add(new Deadline(parsedCommands[1], parsedCommands[2]));","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showSuccess(\"Got it. I\u0027ve added this deadline:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"                            tasks.get(tasks.size()), tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"                case \"event\":","lastModifiedDate":"2022-08-16"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"                    tasks.add(new Event(parsedCommands[1], parsedCommands[2]));","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showSuccess(\"Got it. I\u0027ve added this event:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"                            tasks.get(tasks.size()), tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"                ","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"                case \"sort\":","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"                    tasks.sort();","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"                ","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"                case \"find\":","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showTasks(tasks.filter(parsedCommands[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"                case \"format\":","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"                    TimedTask.setFormat(parsedCommands[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showTasks(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"                case \"mark\":","lastModifiedDate":"2022-08-16"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d tasks.mark(Integer.parseInt(parsedCommands[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showSuccess(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"                case \"unmark\":","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d tasks.unmark(Integer.parseInt(parsedCommands[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showSuccess(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"                ","lastModifiedDate":"2022-08-16"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"                case \"delete\":","lastModifiedDate":"2022-08-16"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d tasks.delete(Integer.parseInt(parsedCommands[1]));","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"                    ui.showSuccess(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"nmtuan2001"},"content":"                            task, tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"nmtuan2001"},"content":"    ","lastModifiedDate":"2022-08-16"},{"lineNumber":113,"author":{"gitId":"nmtuan2001"},"content":"                case \"bye\":","lastModifiedDate":"2022-08-16"},{"lineNumber":114,"author":{"gitId":"nmtuan2001"},"content":"                    ui.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"nmtuan2001"},"content":"                    break scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-16"},{"lineNumber":117,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-16"},{"lineNumber":118,"author":{"gitId":"nmtuan2001"},"content":"                ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-16"},{"lineNumber":120,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":121,"author":{"gitId":"nmtuan2001"},"content":"        sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"nmtuan2001"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"nmtuan2001"},"content":"            ui.showSuccess(\"Data is saved successfully.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":126,"author":{"gitId":"nmtuan2001"},"content":"            ui.showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":127,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nmtuan2001":127,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * An Exception class to handle all exceptions in this package.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new DukeException.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * @param msg Error message. May be a formatted String.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * @param args Addition arguments for the formatted error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    public DukeException(String msg, Object... args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"        super(String.format(msg, args));","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"     * Parses the command into a simpler form.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"     * @param command A String given by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"     * @return An array of strings to be handled by Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    public static String[] parse(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"        String[] splitCommands \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"        switch (splitCommands[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"        case \"sort\":","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Description cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        case \"format\":","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Format cannot be blank.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"        ","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"        case \"find\":","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Keyword cannot be blank.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Description cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"            String regex \u003d splitCommands[0].equals(\"deadline\") ? \" /by \" : \" /at \";","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"            String[] details \u003d splitCommands[1].split(regex);","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"            if (details.length !\u003d 2 || details[0].isEmpty() || details[1].isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Please make sure task description and dates are inputted properly!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"            return new String[]{ splitCommands[0], details[0], details[1] };","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"    ","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"                Integer.parseInt(splitCommands[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Index must not be blank.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. Index must be an integer.\", splitCommands[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":65}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":" * Storage loads and saves data from a specific path.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    protected File file;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Storage from the file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"     * @param filePath The path to the file that data will be stored in.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        if (filePath.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! File path cannot be empty.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"     * Loads data from the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList getData() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        Scanner sc;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! File not found: Unable to retrieve data.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"        sc.useDelimiter(\"( \\\\| )|(\\\\n)\");  // split by | or new line","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"                String type \u003d sc.next(), status \u003d sc.next(), description \u003d sc.next();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"                Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"                switch (type) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"                case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"                case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d new Deadline(description, sc.next());","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"                case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"                    task \u003d new Event(description, sc.next());","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"                    break;","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"                default:","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"                    throw new DukeException(\"\\u2639 OOPS!!! Invalid task type: %s\", type);","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"                if (status.equals(\"1\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"                } else if (!status.equals(\"0\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"                    throw new DukeException(\"\\u2639 OOPS!!! Invalid task status: %s\", status);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"                tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"                sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"\\u2639 OOPS!!! File content is not in the correct format.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"        sc.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"     * Saves data into the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"    public void saveData(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"            String content \u003d tasks.getTasks().stream().map(x -\u003e x.getSaveFormat() + \"\\n\").reduce(\"\", (x,y) -\u003e x + y);","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"            fileWriter.write(content);","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Unable to save data.\");","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":94}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.TimedTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":" * List of tasks with methods to add, delete and interact with the tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new empty list.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new list with the given tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the list of tasks as a List.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the number of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the task at this index. Index is one-based.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"     * @return The task at the given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. You only have %d tasks in your list.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"                    index, tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"     * Returns the list of tasks that are on the given date.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"     * @param date The date to find the tasks from. Must be valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList getTasksByDate(String date) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"        LocalDate convertedDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"            convertedDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(TimedTask.format));","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Wrong date format. Please input date in the format %s.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"                    TimedTask.format);","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"                .filter(x -\u003e x instanceof TimedTask \u0026\u0026 ((TimedTask) x).getTime().toLocalDate().equals(convertedDate))","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"                .filter(x -\u003e x.getDescription().contains(keyword))","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"        );","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"     * Adds a new task.","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"     * @param task Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"     * @return The marked task at that index.","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"    public Task mark(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"        this.get(index).markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"        return this.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"nmtuan2001"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"nmtuan2001"},"content":"     * @return The unmarked task at that index.","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"nmtuan2001"},"content":"    public Task unmark(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"nmtuan2001"},"content":"        this.get(index).markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"nmtuan2001"},"content":"        return this.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":120,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"nmtuan2001"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"nmtuan2001"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"nmtuan2001"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"nmtuan2001"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid index %s. You only have %d tasks in your list.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"nmtuan2001"},"content":"                    index, tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"nmtuan2001"},"content":"     * Sorts all tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"nmtuan2001"},"content":"    public void sort() {","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"nmtuan2001"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":143}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":" * A UI to show outputs, success and error messages to the users.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    private void print(String s) {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"        String seperator \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"        System.out.println(seperator + Stream.of(s.split(\"\\n\")).map(x -\u003e \"     \" + x + \"\\n\")","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"                .reduce(\"\", (x,y) -\u003e x + y) + seperator);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs a welcome message.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs all tasks or all tasks on a certain date.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     * @param date Optional date to find tasks from.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    public void showTasks(TaskList tasks, String... date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"        String content \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        if (date.length \u003d\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"                    content +\u003d String.format(\"%d.%s\\n\", i, tasks.get(i));","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"                } catch (DukeException e) { }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"            print(content);","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"                showTasks(tasks.getTasksByDate(date[0]));","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"                showError(e);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs a success message.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"     * @param msg Main message. It can be a formatted String.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"     * @param args Addition arguments for the formatted message.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"    public void showSuccess(String msg, Object... args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        print(String.format(msg, args));","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs an error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"     * @param e Error.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"        print(e.getMessage());","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the closing message.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"    public void close() {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":68}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"public class Deadline extends TimedTask {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Deadline. DukeException is thrown if datetime format is not followed.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime The time and date to complete the task by.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    public Deadline(String description, String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"        super(description, rawDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"D | %s | %s\", super.getSaveFormat(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":31}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"public class Event extends TimedTask {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Event. DukeException is thrown if datetime format is not followed.","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime The date and time that the event will be held at.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    public Event(String description, String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"        super(description, rawDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"E | %s | %s\", super.getSaveFormat(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * Abstract class for all types of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"        return description;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     * Marks task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"     * Marks task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"        if (isDone !\u003d other.isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"            return Boolean.compare(isDone, other.isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"        return description.compareTo(other.description);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":59}},{"path":"src/main/java/duke/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":" * Abstract class for all types of tasks with a specific time.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    public static String format \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new TimedTask.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime The date and time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    public TimedTask(String description, String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"        this.time \u003d convertRawTime(rawDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"     * Sets a new datetime format for existing and future tasks to follow.","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"     * @param format A String representing the datetime format. Must be valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"    public static void setFormat(String format) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"        if (format.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Format cannot be blank.\");","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"            DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! Invalid format %s.\", format);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"        TimedTask.format \u003d format;","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"    ","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"     * @return time.","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        return time;","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs a String representation of the time of the task. ","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"     * @return String representation of time.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"    public String getFormattedTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"        return time.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"    ","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"     * Converts raw datetime from String to LocalDateTime. Raw datetime must be valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime Raw datetime as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"     * @return Time of the task as a LocalDateTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"    public LocalDateTime convertRawTime(String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"        LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"            time \u003d LocalDateTime.parse(rawDateTime, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"                time \u003d LocalDateTime.of(LocalDate.parse(rawDateTime,","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"                        DateTimeFormatter.ofPattern(format.split(\" \")[0])), LocalTime.MIDNIGHT);","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"                    time \u003d LocalDateTime.of(LocalDate.now(), LocalTime.parse(rawDateTime,","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"                            DateTimeFormatter.ofPattern(format.split(\" \")[1])));","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"                    throw new DukeException(\"\\u2639 OOPS!!! Wrong datetime format. Please input datetime in the format %s\",","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"                            TimedTask.format);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"        return time;","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"        if (!(other instanceof TimedTask)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"            return -1;","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"        TimedTask otherTimedTask \u003d (TimedTask) other;","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"        if (time.compareTo(otherTimedTask.time) !\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"            return time.compareTo(otherTimedTask.time);","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"            return super.compareTo(other);","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":101}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        return \"T | \" + super.getSaveFormat();","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":27}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"    ","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"            Deadline deadline \u003d new Deadline(\"deadline\", \"25/08/2022 06:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"            assertEquals(\"[D][ ] deadline (by: 25/08/2022 06:00)\", deadline.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class, () -\u003e new Deadline(\"deadline\", \"wrong time format\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"        assertTrue(thrown.getMessage().contains(\"Wrong datetime format\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    public void getSaveFormatTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"            Deadline deadline \u003d new Deadline(\"deadline\", \"25/08/2022 06:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"            assertEquals(\"D | 0 | deadline | 25/08/2022 06:00\", deadline.getSaveFormat());","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nmtuan2001":34}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"        assertEquals(\"[T][ ] todo\", new Todo(\"todo\").toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    public void getSaveFormatTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        assertEquals(\"T | 0 | todo\", new Todo(\"todo\").getSaveFormat());","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nmtuan2001":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"mark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"invalid command","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":11}}]

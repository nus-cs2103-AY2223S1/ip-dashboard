[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"checkstyle {","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nmtuan2001":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"## Quickstart","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"1. [Installation](#installation) ","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"2. [Features](#features)","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    * [Create new tasks](#create-new-tasks)","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    * [Manage your tasks](#manage-your-tasks)","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    * [View your tasks](#view-your-tasks)","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    * [Load and save your tasks](#load-and-save-your-tasks)","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    * [Close Duke](#close-duke)","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"3. [Usage](#usage) ","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    * [`todo` - Create a new *todo*](#todo---create-a-new-todo)","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    * [`deadline` - Create a new *deadline*](#deadline---create-a-new-deadline)","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    * [`event` - Create a new *event*](#event---create-a-new-event)","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    * [`mark` - Mark a task as done](#mark---mark-a-task-as-done)","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    * [`unmark` - Mark a task as not done](#unmark---mark-a-task-as-not-done)","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    * [`delete` - Delete a task](#delete---delete-a-task)","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    * [`list` - View your tasks](#list---view-all-tasks)","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    * [`find` - Find a task](#find---find-a-task)","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    * [`schedule` - View schedule on a day](#schedule---view-schedule-on-a-day)","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    * [`sort` - Sort your tasks](#sort---sort-your-tasks)","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    * [`format` - Change format for date and time](#format---change-format-for-date-and-time)","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    * [`bye` - Close Duke](#bye---close-duke)","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"## Installation","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"Download the latest release and run `java -jar duke.jar`.","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"If you wish to customise Duke,","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"* clone this repository","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"* make your changes","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"* start the new Duke app with command `gradlew run`","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"### Create new tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"You can create new tasks of one of the 3 types (*todo*, *event*, *deadline*).","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"* A **todo** is a simple task with a description about the task.","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"* A **deadline** also has a description and additionally, date and time to represent a cutoff time.","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"* Similar to a deadline, an **event** has a description and date and time to represent the time when the event takes place for an **event**.","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"### Manage your tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"You can manage your tasks with Duke using the following commands (*mark*, *unmark*, *delete*).","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"* **mark** is used to denote a task has been completed. It\u0027s like ticking a checkbox in a physical todo list!","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"* **unmark** is used to denote a task has not been completed.","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"* **delete** is used to remove a task (done or not done) from your list.","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"### View your tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"Duke supports various different commands for you to view your tasks and look for the tasks that you need (*list*, *find*, *schedule*, *sort*, *format*).","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"* **list** is used to display every task you currently have in your list.","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"* If you only wish to view a few specific tasks, you can use **find** to look for the tasks by specifying specific key words or phrases.","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"* You can also look for tasks on a specific date using the command **schedule**.","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"* You can also **sort** your tasks to view your tasks sorted by date.","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"* **format** is used to change the format in which date and time are displayed and view the tasks with the new format.","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"### Load and save your tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"Duke automatically loads after the app is opened from a *txt* file. After closing the app, your tasks will be saved into the same file.","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"### Close Duke","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"You can close the app with the command **bye**.","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"### `todo` - Create a new *todo*","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"Create a new todo with a given description.","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** A new **todo** is created and added to the list of existing tasks.","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"Got it. I\u0027ve added this todo:","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"  [T][ ] buy groceries","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"### `deadline` - Create a new *deadline*","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"Create a new deadline with a given description and the cutoff date and time to complete the task by.","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `deadline \u003cdescription\u003e /by (\u003cdd/MM/yyyy\u003e) (\u003cHH:mm\u003e)`","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"At least 1 of date or time must be provided.","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** A new **deadline** is created and added to the list of existing tasks. The current date will be used if date is not provided. Midnight (00:00) will be used if time is not provided.","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"Got it. I\u0027ve added this deadline:","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"  [D][ ] submit homework (by: 16/09/2022 00:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"### `event` - Create a new *event*","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"Create a new event with a given description and the date and time when the event takes place.","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `event \u003cdescription\u003e /at (\u003cdd/MM/yyyy\u003e) (\u003cHH:mm\u003e)`","lastModifiedDate":"2022-09-15"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"At least 1 of date or time must be provided.","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** A new **event** is created and added to the list of existing tasks. The current date will be used if date is not provided. Midnight (00:00) will be used if time is not provided.","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":111,"author":{"gitId":"nmtuan2001"},"content":"Got it. I\u0027ve added this event:","lastModifiedDate":"2022-09-15"},{"lineNumber":112,"author":{"gitId":"nmtuan2001"},"content":"  [E][ ] meet friends (at: 15/09/2022 12:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"nmtuan2001"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":115,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":116,"author":{"gitId":"nmtuan2001"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2022-09-15"},{"lineNumber":117,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `mark INDEX`","lastModifiedDate":"2022-09-15"},{"lineNumber":119,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"nmtuan2001"},"content":"`INDEX` must be between 1 and the size of the current list of tasks.","lastModifiedDate":"2022-09-15"},{"lineNumber":121,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** The task with the given index will be marked as done. There will be no change if the task has already been marked previously.","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"nmtuan2001"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-15"},{"lineNumber":126,"author":{"gitId":"nmtuan2001"},"content":"  [T][X] buy groceries","lastModifiedDate":"2022-09-15"},{"lineNumber":127,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":128,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":129,"author":{"gitId":"nmtuan2001"},"content":"### `unmark` - Mark a task as not done","lastModifiedDate":"2022-09-15"},{"lineNumber":130,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":131,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `unmark INDEX`","lastModifiedDate":"2022-09-15"},{"lineNumber":132,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":133,"author":{"gitId":"nmtuan2001"},"content":"`INDEX` must be between 1 and the size of the current list of tasks.","lastModifiedDate":"2022-09-15"},{"lineNumber":134,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":135,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** The task with the given index will be marked as not done. There will be no change if the task has not been marked previously.","lastModifiedDate":"2022-09-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":138,"author":{"gitId":"nmtuan2001"},"content":"Nice! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-15"},{"lineNumber":139,"author":{"gitId":"nmtuan2001"},"content":"  [T][ ] buy groceries","lastModifiedDate":"2022-09-15"},{"lineNumber":140,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":141,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":142,"author":{"gitId":"nmtuan2001"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-09-15"},{"lineNumber":143,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":144,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `delete INDEX`","lastModifiedDate":"2022-09-15"},{"lineNumber":145,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":146,"author":{"gitId":"nmtuan2001"},"content":"`INDEX` must be between 1 and the size of the current list of tasks.","lastModifiedDate":"2022-09-15"},{"lineNumber":147,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":148,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** The task with the given index will be deleted. This task will no longer be available in your list of tasks and will not be displayed in the future.","lastModifiedDate":"2022-09-15"},{"lineNumber":149,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":151,"author":{"gitId":"nmtuan2001"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-15"},{"lineNumber":152,"author":{"gitId":"nmtuan2001"},"content":"  [T][ ] buy groceries","lastModifiedDate":"2022-09-15"},{"lineNumber":153,"author":{"gitId":"nmtuan2001"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-15"},{"lineNumber":154,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":155,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":156,"author":{"gitId":"nmtuan2001"},"content":"### `list` - View all tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":157,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":158,"author":{"gitId":"nmtuan2001"},"content":"Display all tasks from your list of tasks.","lastModifiedDate":"2022-09-15"},{"lineNumber":159,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":160,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `list`","lastModifiedDate":"2022-09-15"},{"lineNumber":161,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":162,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** All tasks with their description, dates, and status (done/not done) are displayed in one message.","lastModifiedDate":"2022-09-15"},{"lineNumber":163,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":164,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":165,"author":{"gitId":"nmtuan2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-15"},{"lineNumber":166,"author":{"gitId":"nmtuan2001"},"content":"1.[D][ ] submit homework (by: 16/09/2022 00:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":167,"author":{"gitId":"nmtuan2001"},"content":"2.[E][ ] meet friends (at: 15/09/2022 12:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":168,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":169,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":170,"author":{"gitId":"nmtuan2001"},"content":"### `find` - Find a task","lastModifiedDate":"2022-09-15"},{"lineNumber":171,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":172,"author":{"gitId":"nmtuan2001"},"content":"Find a task by given keywords or phrases.","lastModifiedDate":"2022-09-15"},{"lineNumber":173,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":174,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `find \u003ckeyword\u003e`","lastModifiedDate":"2022-09-15"},{"lineNumber":175,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":176,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** All tasks with the keyword in their description are displayed.","lastModifiedDate":"2022-09-15"},{"lineNumber":177,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":178,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":179,"author":{"gitId":"nmtuan2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-15"},{"lineNumber":180,"author":{"gitId":"nmtuan2001"},"content":"1.[D][ ] submit homework (by: 16/09/2022 00:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":181,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":182,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":183,"author":{"gitId":"nmtuan2001"},"content":"### `schedule` - View schedule on a day","lastModifiedDate":"2022-09-15"},{"lineNumber":184,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":185,"author":{"gitId":"nmtuan2001"},"content":"View all your tasks on a specific day.","lastModifiedDate":"2022-09-15"},{"lineNumber":186,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":187,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `schedule \u003cdd/MM/yyyy\u003e`","lastModifiedDate":"2022-09-15"},{"lineNumber":188,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":189,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** All tasks on that day are displayed.","lastModifiedDate":"2022-09-15"},{"lineNumber":190,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":191,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":192,"author":{"gitId":"nmtuan2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-15"},{"lineNumber":193,"author":{"gitId":"nmtuan2001"},"content":"1.[E][ ] meet friends (at: 15/09/2022 12:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":194,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":195,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":196,"author":{"gitId":"nmtuan2001"},"content":"### `sort` - Sort your tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":197,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":198,"author":{"gitId":"nmtuan2001"},"content":"View all your tasks after they are sorted according to date, status (done/not done) and description.","lastModifiedDate":"2022-09-15"},{"lineNumber":199,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":200,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `sort`","lastModifiedDate":"2022-09-15"},{"lineNumber":201,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":202,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** All tasks with their description, dates, and status (done/not done) are displayed in one message. The tasks are sorted by *date* (closest dates first), then *status* (incomplete tasks first) and finally by *description* according to alphabetical order.","lastModifiedDate":"2022-09-15"},{"lineNumber":203,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":204,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":205,"author":{"gitId":"nmtuan2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-15"},{"lineNumber":206,"author":{"gitId":"nmtuan2001"},"content":"1.[E][ ] meet friends (at: 15/09/2022 12:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":207,"author":{"gitId":"nmtuan2001"},"content":"2.[D][ ] submit homework (by: 16/09/2022 00:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":208,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":209,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":210,"author":{"gitId":"nmtuan2001"},"content":"### `format` - Change format for date and time","lastModifiedDate":"2022-09-15"},{"lineNumber":211,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":212,"author":{"gitId":"nmtuan2001"},"content":"View all your tasks after the specified format for date and time is applied.","lastModifiedDate":"2022-09-15"},{"lineNumber":213,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":214,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `format`","lastModifiedDate":"2022-09-15"},{"lineNumber":215,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":216,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** All tasks with their description, status (done/not done) and dates in the new format are displayed in one message.","lastModifiedDate":"2022-09-15"},{"lineNumber":217,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":218,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":219,"author":{"gitId":"nmtuan2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-15"},{"lineNumber":220,"author":{"gitId":"nmtuan2001"},"content":"1.[D][ ] submit homework (by: 16-Sep-22 00:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":221,"author":{"gitId":"nmtuan2001"},"content":"2.[E][ ] meet friends (at: 15-Sep-22 12:00)","lastModifiedDate":"2022-09-15"},{"lineNumber":222,"author":{"gitId":"nmtuan2001"},"content":"```","lastModifiedDate":"2022-09-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"nmtuan2001"},"content":"### `bye` - Close Duke","lastModifiedDate":"2022-09-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"nmtuan2001"},"content":"Close the app and save your tasks into the save file.","lastModifiedDate":"2022-09-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"nmtuan2001"},"content":"**Example of usage:** `bye`","lastModifiedDate":"2022-09-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"nmtuan2001"},"content":"**Expected outcome:** Duke is closed and all your tasks are now recorded in your save file. The saved data will be available for the next time you open Duke.","lastModifiedDate":"2022-09-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":233,"author":{"gitId":"nmtuan2001"},"content":"Data is saved successfully.","lastModifiedDate":"2022-09-15"},{"lineNumber":234,"author":{"gitId":"nmtuan2001"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"nmtuan2001":217,"-":18}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"    private void flip() {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-02"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-02"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-02"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"        db.flip();","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"        return db;","lastModifiedDate":"2022-09-02"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nmtuan2001":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.util.List;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.TimedTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":" * Duke is an interactive chatbot, which functions as a todo manager to help users keep track of their tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    private static final List\u003cString\u003e ADD_COMMANDS \u003d List.of(\"todo\", \"deadline\", \"event\");","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    private static final List\u003cString\u003e EDIT_COMMANDS \u003d List.of(\"mark\", \"unmark\", \"delete\");","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    private static final List\u003cString\u003e VIEW_COMMANDS \u003d List.of(\"list\", \"sort\", \"schedule\", \"find\", \"format\");","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Duke with a given file path to the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     * @param filePath Path to the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"            tasks \u003d storage.getData();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs responses to user queries.","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"     * @param input User query.","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"     * @return Response as a String.","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"        String[] parsedCommands \u003d Parser.parse(input);","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"        String command \u003d parsedCommands[0];","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"        if (ADD_COMMANDS.contains(command)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"            return addTask(parsedCommands);","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        } else if (EDIT_COMMANDS.contains(command)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"            return editTask(parsedCommands);","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        } else if (VIEW_COMMANDS.contains(command)) {","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"            return viewTasks(parsedCommands);","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"                storage.saveData(tasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"                return ui.showSuccess(Ui.SAVE_SUCCESS);","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"                return ui.showSuccess(Ui.SAVE_ERROR, e.getMessage());","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Unknown command %s\", command);","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"    private String addTask(String... args) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"        String command \u003d args[0];","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"        switch (command) {","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"            Todo todo \u003d new Todo(args[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"            tasks.add(todo);","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showSuccess(Ui.TODO, todo, tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-02"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"            Deadline deadline \u003d new Deadline(args[1], args[2]);","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"            tasks.add(deadline);","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showSuccess(Ui.DEADLINE, deadline, tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"        case \"event\":","lastModifiedDate":"2022-09-02"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"            Event event \u003d new Event(args[1], args[2]);","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"            tasks.add(event);","lastModifiedDate":"2022-09-08"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showSuccess(Ui.DEADLINE, event, tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"        default:","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Unknown command %s\", command);","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"    private String editTask(String... args) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"        String command \u003d args[0];","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"        switch (command) {","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"            Task markedTask \u003d tasks.mark(Integer.parseInt(args[1]));","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showSuccess(Ui.MARK, markedTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"            Task unmarkedTask \u003d tasks.unmark(Integer.parseInt(args[1]));","lastModifiedDate":"2022-09-15"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showSuccess(Ui.UNMARK, unmarkedTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"            Task deletedTask \u003d tasks.delete(Integer.parseInt(args[1]));","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showSuccess(Ui.DELETE, deletedTask, tasks.size());","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"        default:","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Unknown command %s\", command);","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"nmtuan2001"},"content":"    private String viewTasks(String... args) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":111,"author":{"gitId":"nmtuan2001"},"content":"        String command \u003d args[0];","lastModifiedDate":"2022-09-15"},{"lineNumber":112,"author":{"gitId":"nmtuan2001"},"content":"        switch (command) {","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"nmtuan2001"},"content":"        case \"list\":","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showTasks(tasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":115,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":116,"author":{"gitId":"nmtuan2001"},"content":"        case \"sort\":","lastModifiedDate":"2022-09-02"},{"lineNumber":117,"author":{"gitId":"nmtuan2001"},"content":"            tasks.sort();","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":119,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":120,"author":{"gitId":"nmtuan2001"},"content":"        case \"schedule\":","lastModifiedDate":"2022-09-09"},{"lineNumber":121,"author":{"gitId":"nmtuan2001"},"content":"            return ui.viewScheduleOnDate(tasks, args[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"nmtuan2001"},"content":"        case \"find\":","lastModifiedDate":"2022-09-02"},{"lineNumber":124,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showTasks(tasks.filter(args[1]));","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":126,"author":{"gitId":"nmtuan2001"},"content":"        case \"format\":","lastModifiedDate":"2022-09-02"},{"lineNumber":127,"author":{"gitId":"nmtuan2001"},"content":"            TimedTask.setFormat(args[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":128,"author":{"gitId":"nmtuan2001"},"content":"            return ui.showTasks(tasks);","lastModifiedDate":"2022-09-02"},{"lineNumber":129,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":130,"author":{"gitId":"nmtuan2001"},"content":"        default:","lastModifiedDate":"2022-09-02"},{"lineNumber":131,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Unknown command %s\", command);","lastModifiedDate":"2022-09-15"},{"lineNumber":132,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":133,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nmtuan2001":132,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * An Exception class to handle all exceptions in this package.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new DukeException.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * @param msg Error message. May be a formatted String.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * @param args Addition arguments for the formatted error message.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    public DukeException(String msg, Object... args) {","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"        super(String.format(\"\\u2639 OOPS!!! \" + msg, args));","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"public class Launcher {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nmtuan2001":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"            stage.setTitle(\"Duke: Your personal todo manager\");","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"            stage.show();","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nmtuan2001":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-02"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"    @FXML","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"        String response;","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-02"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-02"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-02"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"        );","lastModifiedDate":"2022-09-02"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-02"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nmtuan2001":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * Parser class helps break down user command and handle any exceptions in the process.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * Parses the command into a simpler form.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * @param command A String given by the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     * @return An array of strings to be handled by Duke.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    public static String[] parse(String command) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"        String[] splitCommands \u003d command.split(\" \", 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        switch (splitCommands[0]) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        case \"list\":","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"        case \"sort\":","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length !\u003d 1) {","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"Do you mean \\\"%s\\\"?\", splitCommands[0]);","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"        case \"format\":","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        case \"find\":","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"        case \"schedule\":","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length !\u003d 2) {","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"Missing argument.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"            if (splitCommands.length !\u003d 2) {","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"Description cannot be empty.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"            String regex \u003d splitCommands[0].equals(\"deadline\") ? \" /by \" : \" /at \";","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"            String[] details \u003d splitCommands[1].split(regex);","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"            if (details.length !\u003d 2 || details[0].isEmpty() || details[1].isEmpty()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"Make sure task description and dates are inputted properly!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"            return new String[]{ splitCommands[0], details[0], details[1] };","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"                Integer.parseInt(splitCommands[1]);","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"Index must not be blank.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"Invalid index %s. Index must be an integer.\", splitCommands[1]);","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"            return splitCommands;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":62}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":" * Storage loads and saves data from a specific path.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    protected File file;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Storage from the file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"     * @param filePath The path to the file that data will be stored in.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"        assert !filePath.isEmpty() : \"File path cannot be empty!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"     * Loads data from the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList getData() throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"        Scanner sc;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"File not found: Unable to retrieve data.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"                Task task \u003d getTaskFromLine(sc.nextLine());","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"                tasks.add(task);","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"                sc.close();","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"                throw new DukeException(\"File content is not in the correct format.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"        sc.close();","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"        return tasks;","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"    private Task getTaskFromLine(String line) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"        String[] splitStrings \u003d line.split(\"( \\\\| )\");","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"        if (splitStrings.length \u003c 2 \u0026\u0026 splitStrings.length \u003e 3) {","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"File content is not in the correct format.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"        String type \u003d splitStrings[0];","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"        String status \u003d splitStrings[1];","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"        String description \u003d splitStrings[2];","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"        Task task;","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"        switch (type) {","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"        case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"        case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"            task \u003d new Deadline(description, splitStrings[3]);","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"        case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"            task \u003d new Event(description, splitStrings[3]);","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Invalid task type: %s\", type);","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"            task.markAsDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"        } else if (!status.equals(\"0\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Invalid task status: %s\", status);","lastModifiedDate":"2022-09-15"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"        return task;","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"     * Saves data into the savefile.","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"    public void saveData(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"            String content \u003d tasks.getTasks().stream()","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"                    .map(x -\u003e x.getSaveFormat() + \"\\n\")","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"                    .reduce(\"\", (x, y) -\u003e x + y);","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"            fileWriter.write(content);","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Unable to save data.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"import java.util.List;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.TimedTask;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":" * List of tasks with methods to add, delete and interact with the tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new empty list.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new list with the given tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the list of tasks as a List.","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        return tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the number of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"     * @return Number of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"    public int size() {","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs the task at this index. Index is one-based.","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"     * @return The task at the given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Invalid index %s. You only have %d tasks in your list.\",","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"                    index, tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"     * Returns the list of tasks that are on the given date.","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"     * @param date The date to find the tasks from. Must be valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList getTasksByDate(String date) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"        LocalDate convertedDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"            convertedDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(TimedTask.getDateFormat()));","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Wrong date format. Please input date in the format %s.\",","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"                    TimedTask.getDateFormat());","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"                .filter(x -\u003e isSameDate(x, convertedDate))","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"    private boolean isSameDate(Task task, LocalDate date) {","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"        if (!(task instanceof TimedTask)) {","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"            return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"        TimedTask timedTask \u003d (TimedTask) task;","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"        LocalDate taskDate \u003d timedTask.getTime().toLocalDate();","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"        return taskDate.equals(date);","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"     * Filters tasks by keyword.","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"     * @param keyword Keyword to search tasks by.","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"     * @return List of tasks with the given keyword.","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"        return new TaskList(tasks.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"                .filter(x -\u003e x.getDescription().contains(keyword))","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"        );","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"     * Adds a new task.","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"     * @param task Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"nmtuan2001"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"nmtuan2001"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"nmtuan2001"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"nmtuan2001"},"content":"     * @return The marked task at that index.","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"nmtuan2001"},"content":"    public Task mark(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":121,"author":{"gitId":"nmtuan2001"},"content":"        this.get(index).markAsDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":122,"author":{"gitId":"nmtuan2001"},"content":"        return this.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":123,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":124,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"nmtuan2001"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"nmtuan2001"},"content":"     * @return The unmarked task at that index.","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"nmtuan2001"},"content":"    public Task unmark(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"nmtuan2001"},"content":"        this.get(index).markAsNotDone();","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"nmtuan2001"},"content":"        return this.get(index);","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"nmtuan2001"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"nmtuan2001"},"content":"     * @param index One-based index.","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"nmtuan2001"},"content":"     * @return The deleted task.","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"nmtuan2001"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"nmtuan2001"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Invalid index %s. You only have %d tasks in your list.\",","lastModifiedDate":"2022-09-15"},{"lineNumber":147,"author":{"gitId":"nmtuan2001"},"content":"                    index, tasks.size());","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"nmtuan2001"},"content":"     * Sorts all tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"nmtuan2001"},"content":"    public void sort() {","lastModifiedDate":"2022-08-25"},{"lineNumber":155,"author":{"gitId":"nmtuan2001"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2022-08-25"},{"lineNumber":156,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":157,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":157}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * A UI to show outputs, success and error messages to the users.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    public static final String DEADLINE \u003d \"Got it. I\u0027ve added this deadline:\\n  %s\\nNow you have %d tasks in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    public static final String DELETE \u003d \"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    public static final String EVENT \u003d \"Got it. I\u0027ve added this event:\\n  %s\\nNow you have %d tasks in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    public static final String LIST \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    public static final String MARK \u003d \"Nice! I\u0027ve marked this task as done:\\n  %s\";","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    public static final String SAVE_ERROR \u003d \"%s.\\nBye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    public static final String SAVE_SUCCESS \u003d \"Data is saved successfully.\\nBye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    public static final String SCHEDULE \u003d \"Here are the scheduled tasks on %s in your list:\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    public static final String TODO \u003d \"Got it. I\u0027ve added this todo:\\n  %s\\nNow you have %d tasks in the list.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    public static final String UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  %s\";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs all tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * @return String representing the list of tasks.","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public String showTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        String content \u003d LIST;","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"            content +\u003d String.format(\"%d.%s\\n\", i, tasks.get(i));","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"        return content;","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs all tasks on a certain date.","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"     * @param date Optional date to find tasks from.","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"     * @return String representing the list of tasks.","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"    public String viewScheduleOnDate(TaskList tasks, String date) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"        String content \u003d String.format(SCHEDULE, date);","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"        TaskList filteredTasks \u003d tasks.getTasksByDate(date);","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"        filteredTasks.sort();","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"        for (int i \u003d 1; i \u003c\u003d filteredTasks.size(); i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"            content +\u003d String.format(\"%d.%s\\n\", i, filteredTasks.get(i));","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"        return content;","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"    public String showSuccess(String message, Object... args) {","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(message, args);","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":50}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":" * Deadline class.","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"public class Deadline extends TimedTask {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Deadline. DukeException is thrown if datetime format is not followed.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime The time and date to complete the task by.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    public Deadline(String description, String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        super(description, rawDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"D | %s | %s\", super.getSaveFormat(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":" * Event class","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"public class Event extends TimedTask {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Event. DukeException is thrown if datetime format is not followed.","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime The date and time that the event will be held at.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    public Event(String description, String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        super(description, rawDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"E | %s | %s\", super.getSaveFormat(), getFormattedTime());","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * Abstract class for all types of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    protected String description;","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Task.","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"        return description;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     * Marks task as done.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"     * Marks task as not done.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"        if (isDone !\u003d other.isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"            return Boolean.compare(isDone, other.isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"        return description.compareTo(other.description);","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":59}},{"path":"src/main/java/duke/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":" * Abstract class for all types of tasks with a specific time.","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    private static String format \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new TimedTask.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime The date and time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    public TimedTask(String description, String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"        this.time \u003d convertRawTime(rawDateTime);","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"    public static String getFormat() {","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"        return format;","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"    public static String getDateFormat() {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"        return format.split(\" \")[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"nmtuan2001"},"content":"     * Sets a new datetime format for existing and future tasks to follow.","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"nmtuan2001"},"content":"     * @param format A String representing the datetime format. Must be valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"nmtuan2001"},"content":"    public static void setFormat(String format) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"nmtuan2001"},"content":"        if (format.isEmpty()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Format cannot be blank.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"nmtuan2001"},"content":"            DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"nmtuan2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"nmtuan2001"},"content":"            throw new DukeException(\"Invalid format %s.\", format);","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"nmtuan2001"},"content":"        TimedTask.format \u003d format;","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"nmtuan2001"},"content":"     * @return time.","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"nmtuan2001"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"nmtuan2001"},"content":"        return time;","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs a String representation of the time of the task.","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"nmtuan2001"},"content":"     * @return String representation of time.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"nmtuan2001"},"content":"    public String getFormattedTime() {","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"nmtuan2001"},"content":"        return time.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"nmtuan2001"},"content":"     * Converts raw datetime from String to LocalDateTime. Raw datetime must be valid.","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"nmtuan2001"},"content":"     * @param rawDateTime Raw datetime as a String.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"nmtuan2001"},"content":"     * @return Time of the task as a LocalDateTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"nmtuan2001"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"nmtuan2001"},"content":"    public LocalDateTime convertRawTime(String rawDateTime) throws DukeException {","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"nmtuan2001"},"content":"        LocalDateTime time;","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"nmtuan2001"},"content":"            time \u003d LocalDateTime.parse(rawDateTime, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"nmtuan2001"},"content":"            try {","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"nmtuan2001"},"content":"                time \u003d LocalDateTime.of(LocalDate.parse(rawDateTime,","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"nmtuan2001"},"content":"                        DateTimeFormatter.ofPattern(format.split(\" \")[0])), LocalTime.MIDNIGHT);","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"nmtuan2001"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"nmtuan2001"},"content":"                try {","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"nmtuan2001"},"content":"                    time \u003d LocalDateTime.of(LocalDate.now(), LocalTime.parse(rawDateTime,","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"nmtuan2001"},"content":"                            DateTimeFormatter.ofPattern(format.split(\" \")[1])));","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"nmtuan2001"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"nmtuan2001"},"content":"                    throw new DukeException(\"Wrong format. Please input datetime in the format %s\",","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"nmtuan2001"},"content":"                            TimedTask.format);","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"nmtuan2001"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"nmtuan2001"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"nmtuan2001"},"content":"        return time;","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"nmtuan2001"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"nmtuan2001"},"content":"        if (!(other instanceof TimedTask)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"nmtuan2001"},"content":"            return -1;","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"nmtuan2001"},"content":"        TimedTask otherTimedTask \u003d (TimedTask) other;","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"nmtuan2001"},"content":"        if (time.compareTo(otherTimedTask.time) !\u003d 0) {","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"nmtuan2001"},"content":"            return time.compareTo(otherTimedTask.time);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"nmtuan2001"},"content":"        } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"nmtuan2001"},"content":"            return super.compareTo(other);","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":109}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke.task;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":" * Todo class.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"     * Creates a new Todo.","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"        super(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be printed by UI.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"     * Outputs as a String to be saved by Storage.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"        return \"T | \" + super.getSaveFormat();","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"nmtuan2001":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nmtuan2001":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nmtuan2001":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"            Deadline deadline \u003d new Deadline(\"deadline\", \"25/08/2022 06:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"            assertEquals(\"[D][ ] deadline (by: 25/08/2022 06:00)\", deadline.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"nmtuan2001"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class, () -\u003e new Deadline(\"deadline\", \"wrong time format\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"nmtuan2001"},"content":"        assertTrue(thrown.getMessage().contains(\"Wrong format\"));","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"nmtuan2001"},"content":"    public void getSaveFormatTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nmtuan2001"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"nmtuan2001"},"content":"            Deadline deadline \u003d new Deadline(\"deadline\", \"25/08/2022 06:00\");","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"nmtuan2001"},"content":"            assertEquals(\"D | 0 | deadline | 25/08/2022 06:00\", deadline.getSaveFormat());","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"nmtuan2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"nmtuan2001"},"content":"            System.out.println(e);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"nmtuan2001"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nmtuan2001":34}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"package duke;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nmtuan2001"},"content":"        assertEquals(\"[T][ ] todo\", new Todo(\"todo\").toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nmtuan2001"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nmtuan2001"},"content":"    @Test","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"nmtuan2001"},"content":"    public void getSaveFormatTest() {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nmtuan2001"},"content":"        assertEquals(\"T | 0 | todo\", new Todo(\"todo\").getSaveFormat());","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"nmtuan2001"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"nmtuan2001"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nmtuan2001":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nmtuan2001"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"nmtuan2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"nmtuan2001"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"nmtuan2001"},"content":"mark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"nmtuan2001"},"content":"mark 3","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"nmtuan2001"},"content":"unmark 2","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"nmtuan2001"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"nmtuan2001"},"content":"invalid command","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"nmtuan2001"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"nmtuan2001":11}}]

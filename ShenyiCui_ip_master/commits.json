{"authorDailyContributionsMap":{"ShenyiCui":[{"date":"2022-08-18","commitResults":[{"hash":"80c713901cd2f04f75e42d3942fb610cd2bb0354","messageTitle":"feature: complete level-1 criteria","messageBody":"- add echo to user input\n- loop cli infinitely\n\naddresses ip-level-1\n","tags":["Level-1","A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"4eb21b7767dbe4809a605f310606e84b70df15fb","messageTitle":"feature: create Task class to store items added by user","messageBody":"- create a Task class to store items added by the user\n\naddresses Level-2 A-Classes\n","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"1657ee987dc64672fbbe8e3e533fbde269ba3fab","messageTitle":"feature: add function for main to add tasks","messageBody":"- add function to add tasks\n- refactor out the greetings message into it\u0027s own method\n- create new method to list tasks\n\naddresses Level-2\n","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":5}}},{"hash":"35408e054fff32f8b2a7b537407b527a5a6cb37e","messageTitle":"feature: add task marking methods","messageBody":"- allow tasks to be marked as complete and incomplete\n\naddresses Level-3\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"d338c7f0d031bc53131c500ca72028377397dcdc","messageTitle":"refactor: change mark and unmark output msg","messageBody":"- change mark and unmark output msg\n\naddresses Level-3\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"1cd9afaaa04ca78634ebf8108b0e67566d26c126","messageTitle":"feature: add control flow to mark and unmark command","messageBody":"- add control flow to mark and unmark command\n\naddresses Level-3\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":6}}},{"hash":"4d740294ca8bb6235b5de87b92fb22fe511c7658","messageTitle":"feature: add new classes for subtypes of Task","messageBody":"- add new Class Todo\n- add new Class Event\n- add new Class Deadline\n- make Task abstract\n\naddresses Level-4 A-Inheritance\n","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":9}}},{"hash":"3b9e5dd2956294fc51dfb474a6508daddb935b4d","messageTitle":"fix: fix infinite toString recursion error","messageBody":"- fix infinite toString recursion error\n\naddresses Level-4\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"2339fe9bf13e63c6d4b2bbc9eccd9ef2ea265493","messageTitle":"refactor: change user output logic for the creation of tasks","messageBody":"- centralise the user output\n- practice DNR\n\naddresses Level-4\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":13}}},{"hash":"75af6292959dd210e4f97a3bd74d03a4572408a9","messageTitle":"feature: add-text-ui-testing","messageBody":"- add tests to project\n\naddresses A-TextUiTesting\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"87b7c2054ca8df0c10151be9fd57072b7c3e4749","messageTitle":"feature: add exception handling","messageBody":"- create custom class DukeException\n- handle all possible errors\n\naddresses Level-5 A-Exceptions\n","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":7}}},{"hash":"f055b47f2cb56941c96c52aaf7f441a75f937bc3","messageTitle":"refactor: remove taskCount","messageBody":"remove taskCount\n\naddresses Level-6\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"46f2a8e57fbcc38d1243c9e1de94ca72443452e4","messageTitle":"feature: add Delete Feature","messageBody":"- add delete feature\n\naddresses Level-6\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"3b31edcf1159ffc6ed1495f7f5599dcc2e02ceb2","messageTitle":"feature: add enums","messageBody":"- add enums for command flags\n- add enums for TaskTypes\n\naddresses A-Enums\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":18}}},{"hash":"078d67f4a48fd1044dba0b93edf2ed4acd015bf0","messageTitle":"refactor: fix code with google-styleguide","messageBody":"- fix code with google-styleguide\n\naddresses Level-6\n","fileTypesAndContributionMap":{"java":{"insertions":218,"deletions":220}}},{"hash":"0be5907154cc2209212e45358f8302775c54434a","messageTitle":"refactor: refactor out logo into static constant","messageBody":"- refactor out logo into static constant\n\naddresses Level-6\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"a777310b99574d1ecbfcabde17e806498b0ea135","messageTitle":"feature: add new test cases","messageBody":"- add new test cases\n\naddresses A-TextUiTesting\n","fileTypesAndContributionMap":{"txt":{"insertions":28,"deletions":1}}}]},{"date":"2022-08-19","commitResults":[{"hash":"41835b5e1641ec8d4ce0ae36c1b370c8e9b96095","messageTitle":"refactor: refactor java styles","messageBody":"- refactor java styles\n\naddresses Level-6\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":12}}}]},{"date":"2022-08-20","commitResults":[{"hash":"ed2f9266f7661e1a2944cf142c59919fdb34cf33","messageTitle":"refactor: move logic for commands from Duke to Command","messageBody":"- move logic for commands from Duke to Command enum class\n- Add javadocs for respective classes\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":127,"deletions":70}}},{"hash":"6edd53d41366c783ca0295d98db194e749fc70ca","messageTitle":"chore: remove unused Commands file","messageBody":"- remove unused Commands file\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":10}}},{"hash":"2920356cca9d1401e26669c73c7aead01d09ce95","messageTitle":"feature: add new AllTaskList to track all Tasks","messageBody":"- add skeleton code for AllTaskList to track all Tasks\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"ec232d27a3fa133a9d3a7b940f45f1a7d42d74d9","messageTitle":"refactor: finish moving logic of commands from Duke to Command","messageBody":"- finish moving logic of commands from Duke to Command\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":34}}},{"hash":"2ba32d67b8c0f0cacf820a4bf67d46fbb97645db","messageTitle":"refactor: refactor method to throw DukeException","messageBody":"- refactor method to throw DukeException instead of IndexOutOfBounds\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":9}}},{"hash":"5e3fb89408ea1aae44647634add59a6e5bdebf32","messageTitle":"refactor: refactor logic for error handling","messageBody":"- move error handling to chat instead of main\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"aecbfb50b404e464070b6a52dc8e5a0071d8118e","messageTitle":"refactor: refactor logic for Task Creation","messageBody":"- add a common super constructor to create the \"task\" string\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":55}}},{"hash":"1200027bd49f99bf9ddc4e80beb863f2cc215474","messageTitle":"refactor: refactor output to user for add and delete","messageBody":"- refactor output to user for add and delete\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"3178152167b271e604e9af35b250194f35527f51","messageTitle":"refactor: create uniform execption handling with DukeException","messageBody":"- create uniform execption handling with DukeException\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":42}}},{"hash":"c273e2df100dddb2b1ef83c4169e03d6f3bff857","messageTitle":"fix: fix user output bugs","messageBody":"- fix user output bugs\n\naddresses week-2-refactor\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":26}}}]},{"date":"2022-09-02","commitResults":[{"hash":"2c9fe9ddea06dbc97c2af59cb6b5d10c07d324fa","messageTitle":"fix: styling indentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":437,"deletions":416}}},{"hash":"c16bedac4396aa92820406f5aea96bb92f4d3dc7","messageTitle":"feat: make classes serializable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}},{"hash":"4e2ec5da65f55a2d3545da67228ec5f3d5443420","messageTitle":"feat: create storage utility functions","messageBody":"- create storage utility functions\n- init storage text files\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":0}}},{"hash":"a5ad2154cc3de36eda8250a7a8dfdb6e9da41406","messageTitle":"feat: init load and store from storage","messageBody":"- init program with storage\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"a444cdadd81040b726a318afa5ca0905e0622bb3","messageTitle":"feat: add storage initilizer","messageBody":"- creates storage textfile and directory if it doesn\u0027t already exist\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}},{"hash":"5d3ff54530e5586d28e2fa9f97b3f0ed35c69cc3","messageTitle":"feat: add date-time support to Deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"8c8c815838426fc76de8e0bbf1325b48dca89ba0","messageTitle":"refactor: refactor duke into a package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":20},"md":{"insertions":12,"deletions":7}}},{"hash":"6641d67a773dffb145c85527a1ffaf5358519dbc","messageTitle":"feat: add jUnit Tests","messageBody":"","tags":["A-MoreOOP","A-JavaDoc","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":34,"deletions":1}}},{"hash":"b755a38383de7770e2084bbb4a24b8f53db12fad","messageTitle":"feat: add jar build","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1}}},{"hash":"5a6d4550abe5ba51941e05c69d0cc2dd931e39d1","messageTitle":"fix: coding style for switch case","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":34}}},{"hash":"b134563525a208f082ecc8477c2e0cd3fb807248","messageTitle":"feat: add javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"fbd4c799a447cef3c381893bf8d8ee335fe2a50b","messageTitle":"feat: fix coding standards of javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"1e446bf17632c8511183473d8eb6a2c0980202b5","messageTitle":"feat: add find function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}}]},{"date":"2022-09-03","commitResults":[{"hash":"40626f0158559499dcbb8de1fac5803ad4924bb6","messageTitle":"feat: add checkstyle to project","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"5ce1b673c340b11c54bf835895a2fb10a192f214","messageTitle":"refactor: refactor code to match checkstyle standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":24}}}]},{"date":"2022-09-04","commitResults":[{"hash":"275daa12007e0db33d655077da4dc77dbb1c54b0","messageTitle":"feat: add GUI","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":218,"deletions":101}}}]},{"date":"2022-09-11","commitResults":[{"hash":"58e4c52705aa25b7e3873b8194f0b84d9ee8d96f","messageTitle":"feat: use java fxml","messageBody":"- use java fxml to build UI\n- integrated SceneBuilder\n","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":115,"deletions":125}}}]}]},"authorFileTypeContributionMap":{"ShenyiCui":{"java":843,"md":9,"fxml":35,"sh":0,"bat":0,"gradle":21,"txt":28}},"authorContributionVariance":{"ShenyiCui":83069.91},"authorDisplayNameMap":{"ShenyiCui":"CS2103T-T12-2 CUI ..N YI"}}

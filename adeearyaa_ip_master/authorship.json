[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"# duke project template","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"adeearyaa":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"[T][ ]yay","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"[T][ ]sex","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"[T][ ]beast","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"[T][ ]beastline","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"[T][ ]beast","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"[T][ ]beastline","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"[T][ ]read book","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"[T][ ]smell boks","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"[T][ ]smell books","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"[D][ ]eat books  (by: Sep 8 2022 9pm)","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"adeearyaa":10}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":" * It is a class extending Task class","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"    protected String timing;","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"    protected String date;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"    public Deadline(String description, String date, String timing) {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":" * Returns string representation of the task","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":" * @return String representation of this task","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":" *","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"adeearyaa"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"adeearyaa"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"adeearyaa"},"content":"        LocalDate d1 \u003d LocalDate.parse(this.date);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"adeearyaa"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" +  super.toString() + \" (by: \" + d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.timing + \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"adeearyaa":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":" * Main class that calls the parsing of the user input.","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"        p.startParse();","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"adeearyaa":8,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":" * Class for throwing exceptions associated with Duke program.","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"    public DukeException (String message) {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"        super(message);","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"    * Returns String representing exception","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"    *","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"    * @return String representation describing the exception thrown","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"    */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"    @Override","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"    public String toString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"        return super.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"adeearyaa":19}},{"path":"src/main/java/duke/DukeOperations.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":" * Class containing all the various Duke program methods.","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"public class DukeOperations {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"    * method that returns exit message.","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"    *","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"    */","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"    public void exit() {","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"        Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":"    * Displays list of all tasks adeed/","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":"    * @param array contains arraylist of all the tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"    * @param counter integer value of the number of tasks in the array so far.","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"adeearyaa"},"content":"    */","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"adeearyaa"},"content":"    public void displayList(ArrayList\u003cTask\u003e array, int counter) {","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"adeearyaa"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"            if (array.get(i) !\u003d null) {","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"adeearyaa"},"content":"                int j \u003d i + 1;","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"adeearyaa"},"content":"                System.out.println(j + \". \" + array.get(i).toString());","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"adeearyaa"},"content":"            }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"adeearyaa"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"adeearyaa"},"content":"    * Marks as a task as done and displays output messages.","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"adeearyaa"},"content":"    * @param array arraylist of all the tasks so far.","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"adeearyaa"},"content":"    * @param number integer value of the task to be marked as done.","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"adeearyaa"},"content":"    */","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"adeearyaa"},"content":"    public void mark(ArrayList\u003cTask\u003e array, int number) {","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"adeearyaa"},"content":"        array.get(number-1).markAsDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(array.get(number-1).toString());","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":50,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":51,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"adeearyaa"},"content":"     * Unmarks as a task as done and displays output messages.","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"adeearyaa"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"adeearyaa"},"content":"     * @param array arraylist of all the tasks so far.","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"adeearyaa"},"content":"     * @param number integer value of the task to be unmarked as not done.","lastModifiedDate":"2022-08-25"},{"lineNumber":56,"author":{"gitId":"adeearyaa"},"content":"     * */","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"adeearyaa"},"content":"     public void unmark(ArrayList\u003cTask\u003earray, int number) {","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"adeearyaa"},"content":"         array.get(number-1).markAsNotDone();","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"adeearyaa"},"content":"         System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"adeearyaa"},"content":"         System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"adeearyaa"},"content":"         System.out.println(array.get(number-1).toString());","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"adeearyaa"},"content":"         System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"adeearyaa"},"content":"     }","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"adeearyaa"},"content":"     * Method that throws exception when unexpected input entered","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"adeearyaa"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"adeearyaa"},"content":"     * @param word word entered by the user.","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"adeearyaa"},"content":"     * @exception DukeException exception thrown when random word input by user.","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"adeearyaa"},"content":"     * */","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"adeearyaa"},"content":"     public void randomword(String word) throws DukeException{","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"adeearyaa"},"content":"         throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"adeearyaa"},"content":"     }","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":75,"author":{"gitId":"adeearyaa"},"content":"     public void findWord(String word, ArrayList\u003cTask\u003e array, int counter) {","lastModifiedDate":"2022-08-25"},{"lineNumber":76,"author":{"gitId":"adeearyaa"},"content":"         int j \u003d 0;","lastModifiedDate":"2022-08-25"},{"lineNumber":77,"author":{"gitId":"adeearyaa"},"content":"         for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"adeearyaa"},"content":"             if (array.get(i) !\u003d null \u0026\u0026 array.get(i).toString().contains(word)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":79,"author":{"gitId":"adeearyaa"},"content":"                 j++;","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"adeearyaa"},"content":"                 System.out.println(j + \". \" + array.get(i).toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"adeearyaa"},"content":"             }","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"adeearyaa"},"content":"         }","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"adeearyaa"},"content":"     }","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"adeearyaa":88}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":" * Class that extends Task class.","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":" */","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"public class Event extends Task{","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"    protected String timing;","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"    protected String date;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"     * Marks as a task as done and displays output messages.","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"     * @param description name of the event.","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"     * @param date date that the event will take place.","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"     * @param timing time that the event has taken place.","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":"     public Event(String description, String date, String timing) {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":"         super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":"         this.timing \u003d timing;","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":"         this.date  \u003d date;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":"     }","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"adeearyaa"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"adeearyaa"},"content":"     * String representation of an event that has been added to the list","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"adeearyaa"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"adeearyaa"},"content":"     * @returns String representation of the event","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"adeearyaa"},"content":"     @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"adeearyaa"},"content":"     public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"adeearyaa"},"content":"         LocalDate d1 \u003d LocalDate.parse(this.date);","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"adeearyaa"},"content":"         return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\" +  super.toString() + \" (at: \" + d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.timing +  \")\";","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"adeearyaa"},"content":"     }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"adeearyaa":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"public class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"    public String startParse() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Hello! I\u0027m Duke What can I do for you?\");","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"        ArrayList\u003cTask\u003e array \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"        DukeOperations ops \u003d new DukeOperations();","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":"        while (!flag) {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":"            String output \u003d in.nextLine();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":"            String arr[] \u003d output.split(\" \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":"            String firstword \u003d arr[0];","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"            if (output.equals(\"bye\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"adeearyaa"},"content":"                ops.exit();","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"adeearyaa"},"content":"                flag \u003d true;","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"adeearyaa"},"content":"            } else if (output.equals(\"list\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"                ops.displayList(array, counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"adeearyaa"},"content":"            } else if (firstword.equals(\"todo\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"adeearyaa"},"content":"                if (!storage.fileExists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(\"File doesnt exist yet\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"adeearyaa"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"adeearyaa"},"content":"                try {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"adeearyaa"},"content":"                    tl.todo(array, arr, counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"adeearyaa"},"content":"                    storage.writeToFile(array, counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"adeearyaa"},"content":"                    counter++;","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"adeearyaa"},"content":"                } catch (DukeException e1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(e1.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"adeearyaa"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"adeearyaa"},"content":"            } else if (firstword.equals(\"deadline\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"adeearyaa"},"content":"                if (!storage.fileExists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(\"File doesnt exist yet\");","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"adeearyaa"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"adeearyaa"},"content":"                String arr2[] \u003d arr[1].split(\"/by \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"adeearyaa"},"content":"                String arr3[] \u003d arr2[1].split(\" \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"adeearyaa"},"content":"                tl.deadline(array, arr2[0], arr3[0], arr3[1], counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"adeearyaa"},"content":"                storage.writeToFile(array, counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"adeearyaa"},"content":"                counter++;","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"adeearyaa"},"content":"            } else if (firstword.equals(\"event\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"adeearyaa"},"content":"                if (!storage.fileExists()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(\"File doesnt exist yet\");","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"adeearyaa"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"adeearyaa"},"content":"                String arr2[] \u003d arr[1].split(\"/at \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"adeearyaa"},"content":"                String arr3[] \u003d arr2[1].split(\" \", 2);","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"adeearyaa"},"content":"                tl.event(array, arr2[0], arr3[0], arr3[1], counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"adeearyaa"},"content":"                storage.writeToFile(array, counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"adeearyaa"},"content":"                counter++;","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"adeearyaa"},"content":"            } else if (firstword.equals(\"mark\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"adeearyaa"},"content":"                int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"adeearyaa"},"content":"                ops.mark(array, num);","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"adeearyaa"},"content":"            } else if (firstword.equals(\"unmark\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"adeearyaa"},"content":"                int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"adeearyaa"},"content":"                ops.mark(array, num);","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"adeearyaa"},"content":"            } else if (firstword.equals(\"delete\")) {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"adeearyaa"},"content":"                System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"adeearyaa"},"content":"                int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"adeearyaa"},"content":"                tl.delete(array, num, counter);","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"adeearyaa"},"content":"                counter--;","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"adeearyaa"},"content":"                System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":80,"author":{"gitId":"adeearyaa"},"content":"            } else if(firstword.equals(\"find\")) {","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"adeearyaa"},"content":"                System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"adeearyaa"},"content":"                String str \u003d arr[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":83,"author":{"gitId":"adeearyaa"},"content":"                ops.findWord(str,array,counter);","lastModifiedDate":"2022-08-25"},{"lineNumber":84,"author":{"gitId":"adeearyaa"},"content":"                System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":86,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":87,"author":{"gitId":"adeearyaa"},"content":"            } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"adeearyaa"},"content":"                try {","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"adeearyaa"},"content":"                    ops.randomword(output);","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"adeearyaa"},"content":"                } catch (DukeException e2) {","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(e2.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"adeearyaa"},"content":"                    System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"adeearyaa"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"adeearyaa"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"adeearyaa"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"adeearyaa"},"content":"        return \"Hello! I\u0027m Duke What can I do for you?\";","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"adeearyaa":100}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"import java.io.File;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"public class Storage {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e array, int counter) {","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\",true);","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"            fw.write(array.get(counter).toString() + System.lineSeparator());","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"            fw.close();","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":"    public boolean fileExists() {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":"        File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":"        return f.exists();","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"adeearyaa":25}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"public class Task {","lastModifiedDate":"2022-08-14"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"    protected String description;","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-14"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"adeearyaa"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"adeearyaa"},"content":"        return this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":31,"author":{"gitId":"adeearyaa"},"content":"    //...","lastModifiedDate":"2022-08-14"},{"lineNumber":32,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"adeearyaa":32}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"public class TaskList {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"    public void delete(ArrayList\u003cTask\u003e array, int number, int counter) {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(array.get(number-1).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"        int num \u003d counter - 1;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Now you have \" + num + \" tasks in the list\");","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"        array.remove(number - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"    public void todo(ArrayList\u003cTask\u003e array, String[] arr, int counter) throws DukeException{","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"adeearyaa"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"adeearyaa"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"adeearyaa"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"adeearyaa"},"content":"        else {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"adeearyaa"},"content":"            array.add(counter, new Todo(arr[1]));","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"adeearyaa"},"content":"            System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"adeearyaa"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"adeearyaa"},"content":"            System.out.println(array.get(counter).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"adeearyaa"},"content":"            counter++;","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"adeearyaa"},"content":"            System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"            System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"adeearyaa"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"adeearyaa"},"content":"    public void deadline(ArrayList\u003cTask\u003e array,String item, String deadline, String timing,  int counter){","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"adeearyaa"},"content":"        array.add(counter,new Deadline(item, deadline, timing));","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(array.get(counter).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"adeearyaa"},"content":"        counter ++;","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"adeearyaa"},"content":"    public void event(ArrayList\u003cTask\u003e array,String item, String deadline, String timing, int counter) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"adeearyaa"},"content":"        array.add(counter,new Event(item,deadline, timing));","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(array.get(counter).toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"adeearyaa"},"content":"        counter ++;","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"adeearyaa"},"content":"        System.out.println(\"_________________________________________________________________________\");","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"adeearyaa":55}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\"  + super.toString();","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"adeearyaa":18}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"import duke.Deadline;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"    @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"    public void deadlineString() {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"        Deadline d \u003d new Deadline(\"soccer\", \"2022-09-08\",\"9pm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"        assertEquals(\"[D][ ]soccer (by: Sep 8 2022 9pm)\",d.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"adeearyaa":16}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"import duke.Todo;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"adeearyaa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"adeearyaa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"adeearyaa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"adeearyaa"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"adeearyaa"},"content":"  @Test","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"adeearyaa"},"content":"  public void stringTest() {","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"adeearyaa"},"content":"      Todo p \u003d new Todo(\"football\");","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"adeearyaa"},"content":"      assertEquals(\"[T][ ]football\",p.toString());","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"adeearyaa"},"content":"  }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"adeearyaa"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"adeearyaa":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adeearyaa"},"content":"todo football","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"adeearyaa"},"content":"deadline assignment /by 6pm","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"adeearyaa"},"content":"event gay /at 7pm","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"adeearyaa":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"adeearyaa"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"adeearyaa":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"adeearyaa"},"content":"diff -B ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"adeearyaa":1,"-":37}}]

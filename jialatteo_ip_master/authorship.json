[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jialatteo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"    // NOT \u00278.29\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jialatteo":6,"-":41}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jialatteo":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":" * Represents a deadline with its description,","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":" * completion status and its due date.","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * @author  Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * @since   2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    protected String by;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Deadline class","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * @param description Description of deadline","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     * @param date Due date of deadline","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"     * @param isDone Completion status of deadline","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    public Deadline(String description, String date, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        this.by \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Deadline class without","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"     * specifying completion status","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"     * @param description Description of deadline","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"     * @param date Due date of deadline","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        this.by \u003d date;","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     * Returns the task\u0027s type, completion status, description and due date","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"     * @return String This returns the string of the deadline in the specified format","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" * The Duke program implements an application that","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * acts as your to-do list. It can add, delete, mark/unmark","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * and search for tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" * @author Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" * @since 2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Duke program","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     * @param filePath File path to txt file that stores task list data","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"     * This method is used to run the Duke program. Duke will","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     * respond after each command is entered. Entering command","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"     * \"bye\" will exit the program.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    public void run() {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        this.taskList.printList();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        ui.greet();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        ui.start(sc, this.storage, this.taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":46,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":" * DukeException class that allows the","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" * program throw exceptions specific to Duke","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * @author Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" * @since 2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"     * Constructor for DukeException for exceptions specific to Duke","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * @param message Error message of the DukeException","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":22}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":" * Represents an event with its description,","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":" * completion status and its date.","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * @author  Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * @since   2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    protected String at;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Event class","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * @param description Description of event","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     * @param date Date of event","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"     * @param isDone Completion status of event","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    public Event(String description, String date, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        this.at \u003d date;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Event class without","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"     * specifying completion status","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"     * @param description Description of event","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"     * @param date Date of event","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"        this.at \u003d date;","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     * Returns the task\u0027s type, completion status, description and date","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"     * @return String This returns the string of the event in the specified format","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":43}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * Parser class allows the Duke program","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" * to parse user inputs into commands.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" * @author Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":" * @since 2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"public class Parser {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public Parser() {}","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"     * This method is used to convert the date in YYYY-MM-DD format to MMM d YYYY","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"     * (e.g 2019-10-02 to OCT 2 2019)","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * @param date This is string of date in YYYY-MM-DD format","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     * @return String This returns the string of the date in the MMM d YYYY format","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    public static String parseDate(String date) {","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"        String formattedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        return formattedDate;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"     * This method is used to convert the user\u0027s string input into commands like","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     * quit, list out tasks, adding/removing/marking/finding specific tasks. When","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"     * an invalid input is received, an error is thrown and user can try another","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     * input","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     * @param command This is the user\u0027s string input","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     * @param taskList This is the user\u0027s current list of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"     * @param ui This is for the Duke program to interact/print outputs to the user","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    public static void parseCommand(String command, TaskList taskList, Ui ui) {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"                ui.quit();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"                ui.listOutTasks(taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"                String[] splitStr \u003d command.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"                Task taskToMark \u003d getTaskToMark(splitStr, taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"                Task taskToAdd \u003d getTaskToAdd(command);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"                Task taskToDelete \u003d getTaskToDelete(splitStr, taskList);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"                List\u003cTask\u003e taskListWithKeyWord \u003d getAllTaskWithKeyword(command, taskList);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"                if (taskToMark !\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"                    String action \u003d splitStr[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"                    if (action.equals(\"mark\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"                        ui.markTask(taskToMark);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"                    } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"                        ui.unmarkTask(taskToMark);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"                    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"                } else if (taskToAdd !\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"                    ui.addTask(taskList, taskToAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"                } else if (taskToDelete !\u003d null) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"                    ui.deleteTask(taskList, taskToDelete);","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"                } else if (taskListWithKeyWord.size() !\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"                    ui.printTasksWithKeyword(taskListWithKeyWord);","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"                } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"            System.out.println(de);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"     * This method takes in the string input of the user","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"     * and return the task from the taskList to be deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"     * When an invalid number is entered, user will get to","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"     * enter again","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"     * @param splitStr This is the user\u0027s string input split with \" \" into an array","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"     * @param taskList This is the user\u0027s list of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"     * @return Task The task from the user\u0027s task list to be deleted","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"     * @throws DukeException This tells user to enter a valid number when an invalid task number is entered","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"    private static Task getTaskToDelete(String[] splitStr, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"            if (splitStr.length !\u003d 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"                return null;","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"            int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"            String action \u003d splitStr[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"            boolean validAction \u003d action.equals(\"delete\");","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"            boolean validIndex \u003d index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.getSize();","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"            if (validIndex \u0026\u0026 validAction) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"                return taskList.getTask(index - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"            } else if (validAction \u0026\u0026 !validIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! Please enter a valid task number to delete\");","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"            return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"            return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"     * This method takes in the string input of the user","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"     * and return the task from the taskList to be marked/unmarked.","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"     * When an invalid number is entered, user will get to","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"     * enter again","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"     * @param splitStr This is the user\u0027s string input split with \" \" into an array","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"     * @param taskList This is the user\u0027s list of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"     * @return Task The task from the user\u0027s task list to be marked/unmarked","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"     * @throws DukeException This tells user to enter a valid number when an invalid task number is entered","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"    private static Task getTaskToMark(String[] splitStr, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"            if (splitStr.length !\u003d 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":117,"author":{"gitId":"jialatteo"},"content":"                return null;","lastModifiedDate":"2022-08-28"},{"lineNumber":118,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"jialatteo"},"content":"            int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"jialatteo"},"content":"            String action \u003d splitStr[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"jialatteo"},"content":"            boolean validAction \u003d action.equals(\"mark\") || action.equals(\"unmark\");","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"jialatteo"},"content":"            boolean validIndex \u003d index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.getSize();","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"jialatteo"},"content":"            if (validIndex \u0026\u0026 validAction) {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"jialatteo"},"content":"                return taskList.getTask(index - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"jialatteo"},"content":"            } else if (validAction \u0026\u0026 !validIndex) {","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! Please enter a valid task number to mark/unmark\");","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"jialatteo"},"content":"            return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"jialatteo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"jialatteo"},"content":"            return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"jialatteo"},"content":"     * This method takes in the string input of the user","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"jialatteo"},"content":"     * and return the task from the taskList to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"jialatteo"},"content":"     * @param str This is the user\u0027s string input","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"jialatteo"},"content":"     * @return Task The task to be added to the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"jialatteo"},"content":"     * @throws DukeException This tells the user whether the task is missing a date or description","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"jialatteo"},"content":"    private static Task getTaskToAdd(String str) throws DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"jialatteo"},"content":"        String[] splitStr \u003d str.split(\" \");","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"jialatteo"},"content":"        String type \u003d splitStr[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"jialatteo"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"jialatteo"},"content":"            if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":146,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"jialatteo"},"content":"            String description \u003d str.substring(type.length() + 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"jialatteo"},"content":"            return new ToDo(description);","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"jialatteo"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"jialatteo"},"content":"            if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"jialatteo"},"content":"            if (str.indexOf(\"/by\") - 1 \u003c 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! Please set date of deadline with /by.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"jialatteo"},"content":"            String description \u003d str.substring(type.length() + 1, str.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"jialatteo"},"content":"            String date \u003d str.substring(str.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"jialatteo"},"content":"            String formattedDate \u003d Parser.parseDate(date);","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"jialatteo"},"content":"            return new Deadline(description, formattedDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"jialatteo"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"jialatteo"},"content":"            if (splitStr.length \u003c 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"jialatteo"},"content":"            if (str.indexOf(\"/at\") - 1 \u003c 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! Please set date of event with /at.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":167,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"jialatteo"},"content":"            String description \u003d str.substring(type.length() + 1, str.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"jialatteo"},"content":"            String date \u003d str.substring(str.indexOf(\"/at\") + 4);","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"jialatteo"},"content":"            String formattedDate \u003d Parser.parseDate(date);","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"jialatteo"},"content":"            return new Event(description, formattedDate);","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"jialatteo"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"jialatteo"},"content":"            return null;","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"jialatteo"},"content":"     * This method takes in the users string input","lastModifiedDate":"2022-08-28"},{"lineNumber":179,"author":{"gitId":"jialatteo"},"content":"     * and returns a list of tasks that contains","lastModifiedDate":"2022-08-28"},{"lineNumber":180,"author":{"gitId":"jialatteo"},"content":"     * the user\u0027s search keyword","lastModifiedDate":"2022-08-28"},{"lineNumber":181,"author":{"gitId":"jialatteo"},"content":"     * @param str Command input from user","lastModifiedDate":"2022-08-28"},{"lineNumber":182,"author":{"gitId":"jialatteo"},"content":"     * @param taskList User\u0027s complete task list","lastModifiedDate":"2022-08-28"},{"lineNumber":183,"author":{"gitId":"jialatteo"},"content":"     * @return list of tasks containing user\u0027s search keyword","lastModifiedDate":"2022-08-28"},{"lineNumber":184,"author":{"gitId":"jialatteo"},"content":"     * @throws DukeException This tells the user if no such task contains the user\u0027s search keyword","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":186,"author":{"gitId":"jialatteo"},"content":"    private static List\u003cTask\u003e getAllTaskWithKeyword(String str, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"jialatteo"},"content":"        String[] splitStr \u003d str.split(\" \");","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"jialatteo"},"content":"        List\u003cTask\u003e taskListWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-28"},{"lineNumber":189,"author":{"gitId":"jialatteo"},"content":"        if (splitStr[0].equals(\"find\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"jialatteo"},"content":"            String keyword \u003d str.substring(5);","lastModifiedDate":"2022-08-28"},{"lineNumber":191,"author":{"gitId":"jialatteo"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":192,"author":{"gitId":"jialatteo"},"content":"                if (taskList.getTask(i).toString().contains(keyword)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":193,"author":{"gitId":"jialatteo"},"content":"                    taskListWithKeyword.add(taskList.getTask(i));","lastModifiedDate":"2022-08-28"},{"lineNumber":194,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":195,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":196,"author":{"gitId":"jialatteo"},"content":"            if (taskListWithKeyword.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":197,"author":{"gitId":"jialatteo"},"content":"                throw new DukeException(\"☹ OOPS!!! No such task with keyword is found.\");","lastModifiedDate":"2022-08-28"},{"lineNumber":198,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":199,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":200,"author":{"gitId":"jialatteo"},"content":"        return taskListWithKeyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":201,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":202,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"jialatteo":202}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" * Storage class allows the user to load/save","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":" * all its tasks and their respective states in a txt file.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":" * The txt file will be created if it does not exist in the filePath","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":" * @author Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":" * @since 2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    private String filePath;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Storage class","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     * @param filePath Path to txt file that stores task list data","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     * This method gets the existing txt file in the","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"     * file path and creates the txt file if it","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     * does not exist","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     * @return File This is the txtfile that stores all the user\u0027s task information","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public File getFile() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"                System.out.println(\"File is created!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"        return file;","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"     * This method gets the existing text file and","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"     * converts the text into a list of the user\u0027s tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"     * @return List This is the current list of the user\u0027s tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"        File file \u003d this.getFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"                String[] splitStr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"                String taskType \u003d splitStr[0];","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"                boolean isDone \u003d splitStr[1].equals(\"1\") ? true : false;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"                String description \u003d splitStr[2];","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"                String date \u003d \"\";","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"                if (splitStr.length \u003e 3) {","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"                    date \u003d splitStr[3];","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"                switch (taskType) {","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"                case \"T\":","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"                    taskList.add(new ToDo(description, isDone));","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"                case \"D\":","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"                    taskList.add(new Deadline(description, date, isDone));","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"                case \"E\":","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"                    taskList.add(new Event(description, date, isDone));","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"                default:","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"                    break;","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"        return taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"     * This method saves the latest version of the user\u0027s task","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"     * list to the txt file","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"     * @param taskList This is the latest version of user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"    public void save(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"                String isDone \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"                    fw.write(\"T|\" + isDone + \"|\" + task.description + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"                    fw.write(\"D|\" + isDone + \"|\" + task.description + \"|\" + ((Deadline) task).by + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"                    fw.write(\"E|\" + isDone + \"|\" + task.description + \"|\" + ((Event) task).at + \"\\n\");","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"            System.out.println(\"Unable to save: \" + e.getMessage() + e.getStackTrace());","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"jialatteo":116}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":" * Represents a task with its description and","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":" * its completion status","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * @author  Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * @since   2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"public class Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"    protected String description;","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Task class without","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     * specifying completion status","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"     * @param description Description of task","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     * Constructor for Task class","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"     * @param description Description of task","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"     * @param isDone Completion status of task","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     * This method marks the task as completed","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public void mark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"     * This method unmarks the task as not completed","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"     * This method returns the task\u0027s completion status as a string","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     * @return String This returns \"X\" when completed and \" \" when not completed","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"     * This method returns the task\u0027s completion status and description","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"     * @return String This returns the string of the task in the specified format","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" * Represents the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * @author  Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" * @since   2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"public class TaskList {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"     * This method prints out all the","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * tasks in the user\u0027s task list.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    public void printList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"            System.out.println(i + \".\" + taskList.get(i - 1));","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"     * This method returns the number of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     * in the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"     * @return int This returns the number of tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"    public int getSize() {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"     * This method adds a task to","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"     * the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"     * @param task Task to be added to user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        taskList.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"     * This method deletes a task from","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     * the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"     * @param task Task to be deleted from user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        taskList.remove(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"     * This method gets the","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"     * list of tasks from the user","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"     * @return List of tasks from the user","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        return this.taskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"     * This method gets the task","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"     * of a certain number from the list","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"     * @param i This is the task number","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"     * @return Task This returns the task of a certain number from the list","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"jialatteo":78}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":" * Represents a todo task with its description","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":" * and completion status","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * @author  Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" * @since   2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-15"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"        super(description);","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"     * This method returns the task\u0027s type, completion status and description","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"     * @return String This returns the string of the todo task in the specified format","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"    public String toString() {","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import java.util.List;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":" * Ui class allows Duke to interact/print messages","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":" * to the user when changes are made to the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":" *","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":" * @author  Gerald Teo Jin Wei","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":" * @version 0.1","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":" * @since   2022-08-28","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"public class Ui {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"     * This method prints out the greeting message","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"     * when the user starts the Duke program","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"    public void greet() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"        System.out.print(\"Hello I\u0027m duke.Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"     * This method prints out the quitting message","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"     * when the user exits the Duke program","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"    public void quit() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"jialatteo"},"content":"     * This method starts the Duke program","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"jialatteo"},"content":"     * and start accepting String input from the user","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"jialatteo"},"content":"     * @param sc Scanner that scans the user\u0027s String input","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"jialatteo"},"content":"     * @param storage Storage to load and save the user\u0027s todo task list","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"jialatteo"},"content":"     * @param taskList TaskList to update the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"jialatteo"},"content":"    public void start(Scanner sc, Storage storage, TaskList taskList) {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"jialatteo"},"content":"        while (true) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"jialatteo"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"jialatteo"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"jialatteo"},"content":"                break;","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"jialatteo"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"jialatteo"},"content":"            Parser.parseCommand(command, taskList, this);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"jialatteo"},"content":"            storage.save(taskList.getList());","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"jialatteo"},"content":"     * This method lists out the tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"jialatteo"},"content":"     * in the user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"jialatteo"},"content":"     * @param tasks List of tasks to be printed out","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"jialatteo"},"content":"    public void listOutTasks(TaskList tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"jialatteo"},"content":"        tasks.printList();","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"jialatteo"},"content":"     * This method marks the task and","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"jialatteo"},"content":"     * prints out a message","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"jialatteo"},"content":"     * @param taskToMark The task from the list to be marked","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"jialatteo"},"content":"    public void markTask(Task taskToMark) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"jialatteo"},"content":"        taskToMark.mark();","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskToMark);","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"jialatteo"},"content":"     * This method unmarks the task and","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"jialatteo"},"content":"     * prints out a message","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"jialatteo"},"content":"     * @param taskToMark The task from the list to be unmarked","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":73,"author":{"gitId":"jialatteo"},"content":"    public void unmarkTask(Task taskToMark) {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"jialatteo"},"content":"        taskToMark.unmark();","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskToMark);","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":79,"author":{"gitId":"jialatteo"},"content":"     * This method adds the new task to","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"jialatteo"},"content":"     * the user\u0027s task list and prints out","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"jialatteo"},"content":"     * a message","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"jialatteo"},"content":"     * @param taskList TaskList of the user","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"jialatteo"},"content":"     * @param taskToAdd The new task to be added to user\u0027s task list","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"jialatteo"},"content":"    public void addTask(TaskList taskList, Task taskToAdd) {","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"jialatteo"},"content":"        taskList.addTask(taskToAdd);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + taskToAdd + \"\\nNow you have \"","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"jialatteo"},"content":"                + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":92,"author":{"gitId":"jialatteo"},"content":"     * This method deletes the task","lastModifiedDate":"2022-08-28"},{"lineNumber":93,"author":{"gitId":"jialatteo"},"content":"     * from the user\u0027s task list and prints","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"jialatteo"},"content":"     * out a message","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"jialatteo"},"content":"     * @param taskList TaskList of the user","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"jialatteo"},"content":"     * @param taskToDelete The task from the user\u0027s task list to be deleted","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"jialatteo"},"content":"    public void deleteTask(TaskList taskList, Task taskToDelete) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"jialatteo"},"content":"        taskList.deleteTask(taskToDelete);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + taskToDelete + \"\\nNow you have \"","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"jialatteo"},"content":"                + taskList.getSize() + \" tasks in the list\");","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"jialatteo"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"jialatteo"},"content":"     * This method prints out all the tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"jialatteo"},"content":"     * with the user\u0027s search keyword","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"jialatteo"},"content":"     * @param taskListWithKeyword List of tasks containing user\u0027s search keyword","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"jialatteo"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"jialatteo"},"content":"    public void printTasksWithKeyword(List\u003cTask\u003e taskListWithKeyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"jialatteo"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"jialatteo"},"content":"        for (int i \u003d 1; i \u003c\u003d taskListWithKeyword.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"jialatteo"},"content":"            System.out.println(i + \".\" + taskListWithKeyword.get(i - 1));","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"jialatteo"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":114,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":115,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"jialatteo":115}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"  @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"  public void parseDateTest1(){","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"    assertEquals(Parser.parseDate(\"2019-02-19\"), \"Feb 19 2019\");","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"  @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"  public void parseDateTest2(){","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"    assertEquals(Parser.parseDate(\"2020-10-27\"), \"Oct 27 2020\");","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"  @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"  public void parseDateTest3(){","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    try {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"      Parser.parseDate(\"2020-20-27\");","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"jialatteo"},"content":"      assertEquals(e.toString(),","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"jialatteo"},"content":"              \"java.time.format.DateTimeParseException: Text \u00272020-20-27\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 20\");","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"jialatteo"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"jialatteo"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jialatteo":31}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"public class TodoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"  ToDo todo \u003d new ToDo(\"description\");","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"  @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"  public void createTodoObjectTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"    assertEquals(todo.toString(), \"[T][ ] \" + \"description\");","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"jialatteo"},"content":"  @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"jialatteo"},"content":"  public void markTodoTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"jialatteo"},"content":"    todo.mark();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"jialatteo"},"content":"    assertEquals(todo.getStatusIcon(), \"X\");","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"jialatteo"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"jialatteo"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"jialatteo"},"content":"  @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"jialatteo"},"content":"  public void unmarkTodoTest(){","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"jialatteo"},"content":"    todo.unmark();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"jialatteo"},"content":"    assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"jialatteo"},"content":"  }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"jialatteo"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"jialatteo":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jialatteo"},"content":"todo read book","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"jialatteo"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"jialatteo"},"content":"todo borrow book","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"jialatteo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"jialatteo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"jialatteo"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"jialatteo"},"content":"mark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"jialatteo"},"content":"mark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"jialatteo"},"content":"mark 4","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"jialatteo"},"content":"unmark 4","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"jialatteo"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"jialatteo"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"jialatteo":12}}]

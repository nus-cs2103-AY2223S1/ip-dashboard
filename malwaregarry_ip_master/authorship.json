[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-params\u0027, version: \u00275.8.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"checkstyle {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"sourceSets {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"    main {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"        java {","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"    test {","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"        java {","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"            srcDirs \u003d [\u0027src/test/java\u0027]","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"malwaregarry":20,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"T | 0 | hello","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"D | 0 | adf | 2022-10-10","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"T | 0 | everybody","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"T | 0 | add","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"D | 0 | tt | 2022-10-12","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"E | 1 | tt | 2022-10-12","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"E | 0 | tt | 2022-10-12","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-13"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":" * Simple CLI chatbot that reacts on user input.","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"    private static final String STORAGE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    private StorageInterface storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     * Initialises, Ui, TaskList and Storage used by the application.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     * @param storagePath filepath to use to store Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    Duke(String storagePath) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        this.storage \u003d new Storage(storagePath);","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"        Command.setUi(this.ui);","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"        Command.setStorage(this.storage);","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"            this.taskList \u003d new TaskList(this.storage.readFile());","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"            ui.formatAndPrint(\"Successfully loaded from storage file.\");","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"            ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"        } finally {","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"            Command.setTaskList(this.taskList);","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"     * Loop that listens for user input and executes Commands corresponding to the","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"     * inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"    void listenForInputs() {","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"        while (!isExit) {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"            try {","lastModifiedDate":"2022-08-14"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"                String commandString \u003d ui.readCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"                Command command \u003d Parser.parse(commandString);","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"                command.execute();","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-14"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"                ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"            }","lastModifiedDate":"2022-08-14"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-14"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"     * Shows welcome messge and start listening for user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"    public void run() {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"        this.listenForInputs();","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"     * Main function for the chatbot.","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-13"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"     * @param args","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"     *            System arguments. Not used for this program.","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-13"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"        new Duke(STORAGE_PATH).run();","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"malwaregarry":71,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":" * Exception raised in Duke.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"     * @param message error message.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     * @param error error that resulted in this error.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    public DukeException(String message, Throwable error) {","lastModifiedDate":"2022-08-14"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"        super(message, error);","lastModifiedDate":"2022-08-14"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * @param message error message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-14"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        super(message);","lastModifiedDate":"2022-08-14"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-14"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-14"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    public String toString() {","lastModifiedDate":"2022-08-14"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"        return \"Oh no! \" + super.getMessage();","lastModifiedDate":"2022-08-14"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-14"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"malwaregarry":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import java.util.AbstractMap.SimpleEntry;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":" * Class used to parse user inputs.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"public abstract class Parser {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"    private static final String DEADLINE_INDICATOR_PATTERN \u003d \"\\\\s*/by\\\\s*\";","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"    private static final String EVENT_INDICATOR_PATTERN \u003d \"\\\\s*/at\\\\s*\";","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"     * Parses input into Command indicator and arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"     * @return A command indicator and arguments pair.","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing input.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"    static Map.Entry\u003cString, Optional\u003cString\u003e\u003e getCommandAndArguments(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"        Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"        String indicator;","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"            indicator \u003d scanner.next();","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"            scanner.close();","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Can\u0027t read input!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"            scanner.skip(scanner.delimiter());","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"            String arguments \u003d scanner.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"            return new SimpleEntry\u003c\u003e(indicator, Optional.of(arguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"            return new SimpleEntry\u003c\u003e(indicator, Optional.empty());","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"        } finally {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"            scanner.close();","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"     * Retrieves Optional argument or throws DukeException if Optional is empty.","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"     * @param argument arugment wrapped in Optional.","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"     * @return argument in the Optional.","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when argument is empty.","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"    static String getCommandArgument(Optional\u003cString\u003e argument) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"        return argument.orElseThrow(() -\u003e new DukeException(\"Required arguments not found!\"));","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"     * Parses input into corresponding Command object.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"     * @return Command object.","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error in parsing or executing command.","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"    static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"        Map.Entry\u003cString, Optional\u003cString\u003e\u003e commandString \u003d getCommandAndArguments(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"malwaregarry"},"content":"        String commandIndicator \u003d commandString.getKey();","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"malwaregarry"},"content":"        Optional\u003cString\u003e commandArguments \u003d commandString.getValue();","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"malwaregarry"},"content":"        Command command;","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"malwaregarry"},"content":"        switch (commandIndicator) {","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"malwaregarry"},"content":"        case BYE:","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseBye();","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"malwaregarry"},"content":"        case LIST:","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseList();","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"malwaregarry"},"content":"        case TODO:","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseTodo(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"malwaregarry"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseDeadline(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"malwaregarry"},"content":"        case EVENT:","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseEvent(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"malwaregarry"},"content":"        case MARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseMark(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"malwaregarry"},"content":"        case UNMARK:","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseUnmark(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":115,"author":{"gitId":"malwaregarry"},"content":"        case DELETE:","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseDelete(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"malwaregarry"},"content":"        case FIND:","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseFind(getCommandArgument(commandArguments));","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"malwaregarry"},"content":"        default:","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"malwaregarry"},"content":"            command \u003d parseUnknown(commandIndicator);","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"malwaregarry"},"content":"            break;","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"malwaregarry"},"content":"        return command;","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"malwaregarry"},"content":"     * Returns a ByeCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"malwaregarry"},"content":"     * @return ByeCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"malwaregarry"},"content":"    static Command parseBye() {","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"malwaregarry"},"content":"        return new ByeCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"malwaregarry"},"content":"     * Returns a ListCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"malwaregarry"},"content":"     * @return ListCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"malwaregarry"},"content":"    static Command parseList() {","lastModifiedDate":"2022-08-19"},{"lineNumber":143,"author":{"gitId":"malwaregarry"},"content":"        return new ListCommand();","lastModifiedDate":"2022-08-19"},{"lineNumber":144,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":145,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":146,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"malwaregarry"},"content":"     * Returns an AddCommand that adds a Todo.","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"malwaregarry"},"content":"     * @param input Command arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"malwaregarry"},"content":"     * @return AddCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"malwaregarry"},"content":"    static Command parseTodo(String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"malwaregarry"},"content":"        Task task \u003d new Todo(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":154,"author":{"gitId":"malwaregarry"},"content":"        return new AddCommand(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":155,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":156,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":157,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"malwaregarry"},"content":"     * Returns an AddCommand that adds a Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"malwaregarry"},"content":"     * @param input command arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"malwaregarry"},"content":"     * @return AddCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":162,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when command arugments are invalid.","lastModifiedDate":"2022-08-21"},{"lineNumber":163,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"malwaregarry"},"content":"    static Command parseDeadline(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":165,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner lineScanner \u003d new Scanner(input)","lastModifiedDate":"2022-08-19"},{"lineNumber":166,"author":{"gitId":"malwaregarry"},"content":"                .useDelimiter(DEADLINE_INDICATOR_PATTERN)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":167,"author":{"gitId":"malwaregarry"},"content":"            String description \u003d lineScanner.next();","lastModifiedDate":"2022-08-19"},{"lineNumber":168,"author":{"gitId":"malwaregarry"},"content":"            String by \u003d lineScanner.next();","lastModifiedDate":"2022-08-19"},{"lineNumber":169,"author":{"gitId":"malwaregarry"},"content":"            Task task \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-19"},{"lineNumber":170,"author":{"gitId":"malwaregarry"},"content":"            return new AddCommand(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":171,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":172,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Invalid format for adding deadline!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":173,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":174,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":175,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":176,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"malwaregarry"},"content":"     * Returns an AddCommand that adds an Event.","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":179,"author":{"gitId":"malwaregarry"},"content":"     * @param input command arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":180,"author":{"gitId":"malwaregarry"},"content":"     * @return AddCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":181,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when command arugments are invalid.","lastModifiedDate":"2022-08-21"},{"lineNumber":182,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"malwaregarry"},"content":"    static Command parseEvent(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":184,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner lineScanner \u003d new Scanner(input)","lastModifiedDate":"2022-08-19"},{"lineNumber":185,"author":{"gitId":"malwaregarry"},"content":"                .useDelimiter(EVENT_INDICATOR_PATTERN)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":186,"author":{"gitId":"malwaregarry"},"content":"            String description \u003d lineScanner.next();","lastModifiedDate":"2022-08-19"},{"lineNumber":187,"author":{"gitId":"malwaregarry"},"content":"            String at \u003d lineScanner.next();","lastModifiedDate":"2022-08-19"},{"lineNumber":188,"author":{"gitId":"malwaregarry"},"content":"            Task task \u003d new Event(description, at);","lastModifiedDate":"2022-08-19"},{"lineNumber":189,"author":{"gitId":"malwaregarry"},"content":"            return new AddCommand(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":190,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":191,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Invalid format for adding event!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":192,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":193,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":194,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":195,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":196,"author":{"gitId":"malwaregarry"},"content":"     * Returns a MarkCommand","lastModifiedDate":"2022-08-21"},{"lineNumber":197,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":198,"author":{"gitId":"malwaregarry"},"content":"     * @param input command arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"malwaregarry"},"content":"     * @return MarkCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing index or index out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"malwaregarry"},"content":"    static Command parseMark(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":203,"author":{"gitId":"malwaregarry"},"content":"        int index \u003d parseIndex(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":204,"author":{"gitId":"malwaregarry"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":205,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":206,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":207,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":208,"author":{"gitId":"malwaregarry"},"content":"     * Returns an UnmarkCommand","lastModifiedDate":"2022-08-21"},{"lineNumber":209,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":210,"author":{"gitId":"malwaregarry"},"content":"     * @param input command arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":211,"author":{"gitId":"malwaregarry"},"content":"     * @return UnmarkCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":212,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing index or index out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":213,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":214,"author":{"gitId":"malwaregarry"},"content":"    static Command parseUnmark(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":215,"author":{"gitId":"malwaregarry"},"content":"        int index \u003d parseIndex(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":216,"author":{"gitId":"malwaregarry"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":217,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":218,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":219,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":220,"author":{"gitId":"malwaregarry"},"content":"     * Returns a DeleteCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":221,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":222,"author":{"gitId":"malwaregarry"},"content":"     * @param input command arguments.","lastModifiedDate":"2022-08-21"},{"lineNumber":223,"author":{"gitId":"malwaregarry"},"content":"     * @return DeleteCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":224,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing index or index out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":225,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":226,"author":{"gitId":"malwaregarry"},"content":"    static Command parseDelete(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":227,"author":{"gitId":"malwaregarry"},"content":"        int index \u003d parseIndex(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":228,"author":{"gitId":"malwaregarry"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":229,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":230,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":231,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":232,"author":{"gitId":"malwaregarry"},"content":"     * Returns a FindCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":233,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":234,"author":{"gitId":"malwaregarry"},"content":"     * @param input query text.","lastModifiedDate":"2022-08-21"},{"lineNumber":235,"author":{"gitId":"malwaregarry"},"content":"     * @return FindCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":236,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":237,"author":{"gitId":"malwaregarry"},"content":"    static Command parseFind(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":238,"author":{"gitId":"malwaregarry"},"content":"        return new FindCommand(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":239,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":240,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":241,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":242,"author":{"gitId":"malwaregarry"},"content":"     * Returns an UnknownCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":243,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":244,"author":{"gitId":"malwaregarry"},"content":"     * @param input command indicator.","lastModifiedDate":"2022-08-21"},{"lineNumber":245,"author":{"gitId":"malwaregarry"},"content":"     * @return UnknownCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":246,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":247,"author":{"gitId":"malwaregarry"},"content":"    static Command parseUnknown(String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":248,"author":{"gitId":"malwaregarry"},"content":"        return new UnknownCommand(input);","lastModifiedDate":"2022-08-19"},{"lineNumber":249,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":250,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":251,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":252,"author":{"gitId":"malwaregarry"},"content":"     * Parses command arguments to task index in 0-based index.","lastModifiedDate":"2022-08-21"},{"lineNumber":253,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":254,"author":{"gitId":"malwaregarry"},"content":"     * @param input command arugments.","lastModifiedDate":"2022-08-21"},{"lineNumber":255,"author":{"gitId":"malwaregarry"},"content":"     * @return index given by user.","lastModifiedDate":"2022-08-21"},{"lineNumber":256,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when index not an integer or no index detected.","lastModifiedDate":"2022-08-21"},{"lineNumber":257,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":258,"author":{"gitId":"malwaregarry"},"content":"    private static int parseIndex(String input) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":259,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner scanner \u003d new Scanner(input)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":260,"author":{"gitId":"malwaregarry"},"content":"            return scanner.nextInt() - 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":261,"author":{"gitId":"malwaregarry"},"content":"        } catch (InputMismatchException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":262,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"The index must be an Integer!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":263,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":264,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"No index detected!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":265,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":266,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":267,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":268,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":269,"author":{"gitId":"malwaregarry"},"content":"     * Converts date string to LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":270,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":271,"author":{"gitId":"malwaregarry"},"content":"     * @param dateString dateString to convert to LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":272,"author":{"gitId":"malwaregarry"},"content":"     * @return LocalDate.","lastModifiedDate":"2022-08-21"},{"lineNumber":273,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when {@code dateString} is in an invalid format.","lastModifiedDate":"2022-08-21"},{"lineNumber":274,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":275,"author":{"gitId":"malwaregarry"},"content":"    public static LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":276,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":277,"author":{"gitId":"malwaregarry"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2022-08-21"},{"lineNumber":278,"author":{"gitId":"malwaregarry"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":279,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Date format is invalid!\", e);","lastModifiedDate":"2022-08-21"},{"lineNumber":280,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":281,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":282,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":283,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":283}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":" * Implementation of StorageInterface that interacts with a text file for","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":" * storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"public class Storage implements StorageInterface {","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    private Path filePath;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"     * @param filePath path of storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"     * @param filePath path of storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"        this(Paths.get(filePath));","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"    public List\u003cTask\u003e readFile() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"        if (!isFileExist()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Storage file is empty!\");","lastModifiedDate":"2022-08-17"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"            List\u003cString\u003e taskStringList \u003d Files.readAllLines(filePath);","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"            for (String taskString : taskStringList) {","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"                taskList.add(StorageParser.parse(taskString));","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"            return taskList;","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Error occured when reading storage file!\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"    public void save(Task task) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"        String toAppend \u003d task.toStorageFormat();","lastModifiedDate":"2022-08-17"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"        appendLine(toAppend);","lastModifiedDate":"2022-08-17"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"    public void updateLine(int lineIndex, String updatedLine) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath, StandardCharsets.UTF_8);","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"            lines.set(lineIndex, updatedLine);","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"            Files.write(filePath, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Error occured when updating storage file!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"    private boolean isFileExist() {","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"        return Files.exists(filePath);","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"    private void createFile() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2022-08-17"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Error occured when creating storage file!\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"     * Append line to end of storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"malwaregarry"},"content":"     * @param line line of text to append.","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error updating file.","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"malwaregarry"},"content":"    private void appendLine(String line) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"malwaregarry"},"content":"        if (!isFileExist()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"malwaregarry"},"content":"            createFile();","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"malwaregarry"},"content":"            line +\u003d System.lineSeparator();","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"malwaregarry"},"content":"            Files.write(filePath, line.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"malwaregarry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Error occured when writing to storage file!\", e);","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"malwaregarry":103}},{"path":"src/main/java/duke/StorageInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":" * Interface for storage functions.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"public interface StorageInterface {","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     * Read storage file and return data in file as a list of Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * @return list of tasks stored in file.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error reading storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"    public List\u003cTask\u003e readFile() throws DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     * Saves task in storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"     * @param task task to save.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error updating storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    public void save(Task task) throws DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"     * Update line in storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"     * @param lineIndex index to update (0-based indexing).","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"     * @param updatedLine new line to update existing line in file.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error updating storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    public void updateLine(int lineIndex, String updatedLine) throws DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"malwaregarry":36}},{"path":"src/main/java/duke/StorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":" * Class to parse text in storage file.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"public abstract class StorageParser {","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    private static final String DELIMITER \u003d \"\\\\s*[|]\\\\s*\";","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"    private static final String TODO_INDICATOR \u003d \"T\";","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    private static final String DEADLINE_INDICATOR \u003d \"D\";","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"    private static final String EVENT_INDICATOR \u003d \"E\";","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"    private static Scanner createScanner(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"        Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"        scanner.useDelimiter(DELIMITER);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        return scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     * Parse a line of text in storage file into a Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"     * @param line line of text in storage file format.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"     * @return Task that was parsed from line.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing the text.","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    public static Task parse(String line) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner scanner \u003d createScanner(line)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"            String taskIndicator \u003d scanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"            Task task;","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"            switch (taskIndicator) {","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"            case (TODO_INDICATOR):","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"                task \u003d parseTodo(line);","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"            case (DEADLINE_INDICATOR):","lastModifiedDate":"2022-08-17"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"                task \u003d parseDeadline(line);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"            case (EVENT_INDICATOR):","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"                task \u003d parseEvent(line);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"                break;","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"            default:","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"                throw new DukeException(\"Unknown task\");","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"            return task;","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"    private static boolean intToBoolean(int number) {","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"        return number !\u003d 0;","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"     * Parses line of text into a Todo Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"     * @param line line of text in storage file format.","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"     * @return Todo that was parsed from line.","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing the text.","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"    static Todo parseTodo(String line) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner lineScanner \u003d createScanner(line)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"            lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"            boolean status \u003d intToBoolean(lineScanner.nextInt());","lastModifiedDate":"2022-08-17"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"            String description \u003d lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"            return new Todo(description, status);","lastModifiedDate":"2022-08-17"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Invalid format read when loading todo!\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"     * Parses line of text into a Deadline Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"     * @param line line of text in storage file format.","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"     * @return Deadline that was parsed from line.","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing the text.","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"    static Deadline parseDeadline(String line) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner lineScanner \u003d createScanner(line)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"            lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"            boolean status \u003d intToBoolean(lineScanner.nextInt());","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"            String description \u003d lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"            String by \u003d lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":89,"author":{"gitId":"malwaregarry"},"content":"            return new Deadline(description, status, by);","lastModifiedDate":"2022-08-17"},{"lineNumber":90,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":91,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Invalid format read when adding deadline!\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":92,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":93,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":94,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":95,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"malwaregarry"},"content":"     * Parses line of text into an Event Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"malwaregarry"},"content":"     * @param line line of text in storage file format.","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"malwaregarry"},"content":"     * @return Event that was parsed from line.","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error parsing the text.","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"malwaregarry"},"content":"    static Event parseEvent(String line) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"malwaregarry"},"content":"        try (Scanner lineScanner \u003d createScanner(line)) {","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"malwaregarry"},"content":"            lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":105,"author":{"gitId":"malwaregarry"},"content":"            boolean status \u003d intToBoolean(lineScanner.nextInt());","lastModifiedDate":"2022-08-17"},{"lineNumber":106,"author":{"gitId":"malwaregarry"},"content":"            String description \u003d lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":107,"author":{"gitId":"malwaregarry"},"content":"            String at \u003d lineScanner.next();","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"malwaregarry"},"content":"            return new Event(description, status, at);","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Invalid format read when adding event!\", e);","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":112,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":113,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":114,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"malwaregarry":114}},{"path":"src/main/java/duke/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":" * Stub implementation for StorageInterface for testing.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"public class StorageStub implements StorageInterface {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Storge stub","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     * @param tasks initial list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    public StorageStub(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    public List\u003cTask\u003e readFile() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    public void save(Task task) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"    public void updateLine(int lineIndex, String updatedLine) throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"malwaregarry":40}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":" * A class that handles logging of Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"public class TaskList {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    private final List\u003cTask\u003e logs;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     * @param tasks Initial list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"        this.logs \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for TaskList without an initial list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"     * Return number of tasks in TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"     * @return number of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"    public int size() {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"        return this.logs.size();","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"     * Add task to list.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"     * @param task task to add.","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"     * @return Task which was added.","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"    public Task add(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"        logs.add(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"        return task;","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"     * Delete task at specified index from list.","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of task to delete.","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"     * @return Task which was deleted","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when index specified is out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"            return logs.remove(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(outOfBoundsMessage(index), e);","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"     * Returns task at specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"     * @return Task at specified index.","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when index specified is out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"    Task getTask(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"            return logs.get(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(outOfBoundsMessage(index), e);","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"     * Mark task at index as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of task to mark.","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"     * @return Updated Task that was marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when index specified is out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"malwaregarry"},"content":"            getTask(index).mark();","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"malwaregarry"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(outOfBoundsMessage(index), e);","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"malwaregarry"},"content":"        return getTask(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":96,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"malwaregarry"},"content":"     * Mark task at index as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of task to unmark.","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"malwaregarry"},"content":"     * @return Updated Task that was unmarked.","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when index specified is out of range.","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"malwaregarry"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"malwaregarry"},"content":"            getTask(index).unmark();","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"malwaregarry"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(outOfBoundsMessage(index), e);","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"malwaregarry"},"content":"        return getTask(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":112,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"malwaregarry"},"content":"     * Returns a list of tasks in the TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"malwaregarry"},"content":"     * Each string is prefixed with their corresponding index in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"malwaregarry"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"malwaregarry"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"malwaregarry"},"content":"        return this.logs;","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"malwaregarry"},"content":"     * Returns a list of tasks that matches the query text.","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"malwaregarry"},"content":"     * @return List of matched tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"malwaregarry"},"content":"    public List\u003cTask\u003e find(String query) {","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"malwaregarry"},"content":"        return this.logs.stream()","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"malwaregarry"},"content":"                .filter((task) -\u003e task.getDescription().contains(query))","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"malwaregarry"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-19"},{"lineNumber":132,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":133,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":134,"author":{"gitId":"malwaregarry"},"content":"    private String outOfBoundsMessage(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"malwaregarry"},"content":"        return \"Index \" + (index + 1) + \" out of bounds. There are only \" + this.logs.size() + \" tasks!\";","lastModifiedDate":"2022-08-19"},{"lineNumber":136,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":137,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":138,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":139,"author":{"gitId":"malwaregarry"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":140,"author":{"gitId":"malwaregarry"},"content":"        return getTasks().toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":142,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":142}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import java.util.Optional;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":" * Class that handles input and output between the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"public class Ui {","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    public static final String DIVIDER \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    private static final String PADDING \u003d \"  \";","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Ui. Initialises input.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    public Ui() {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"     * Read user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"     * @return user input.","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException when error reading input.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"    String readCommand() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"            return this.scanner.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"            throw new DukeException(\"Can\u0027t read command!\", e);","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"     * Pads the text.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"     * @param text text to pad.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"     * @return Left padded text.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"    String leftPad(String text) {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"        return PADDING + text;","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"     * Format texts before displaying them to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"     * @param texts texts to display to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"    public void formatAndPrint(List\u003c? extends String\u003e texts) {","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"        texts.forEach((text) -\u003e System.out.println(leftPad(leftPad(\" \" + text))));","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"     * Format text before displaying it to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"     * @param text text to display to ther user.","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"    void formatAndPrint(String text) {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(List.of(text));","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"     * Displays error message to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"     * @param errorMessage message to display.","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"    void displayErrorMessage(String errorMessage) {","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(\"Error! \" + errorMessage);","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"     * Displays welcome message to the user.","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"malwaregarry"},"content":"    void showWelcome() {","lastModifiedDate":"2022-08-19"},{"lineNumber":90,"author":{"gitId":"malwaregarry"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"malwaregarry"},"content":"        String[] messages \u003d { \"Hello! I\u0027m Duke.\", \"What can I do for you?\" };","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(List.\u003cString\u003eof(messages));","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"malwaregarry"},"content":"     * Wrapper funtion for displaying update message.","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"malwaregarry"},"content":"     * @param task task that was added / deleted / updated.","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"malwaregarry"},"content":"     * @param updateMessage message to display first.","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"malwaregarry"},"content":"     * @param taskListSize size of TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"malwaregarry"},"content":"    private void displayUpdateMessage(Task task, String updateMessage, Optional\u003cInteger\u003e taskListSize) {","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"malwaregarry"},"content":"        List\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"malwaregarry"},"content":"        toPrint.add(updateMessage);","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"malwaregarry"},"content":"        toPrint.add(leftPad(task.toString()));","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"malwaregarry"},"content":"        taskListSize.ifPresent((size) -\u003e toPrint.add(\"There are now \" + size + \" tasks in the list.\"));","lastModifiedDate":"2022-08-19"},{"lineNumber":107,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(toPrint);","lastModifiedDate":"2022-08-19"},{"lineNumber":108,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":111,"author":{"gitId":"malwaregarry"},"content":"     * Returns a list of strings corresponding to the task in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"malwaregarry"},"content":"     * Each string is prefixed with their corresponding index in the list.","lastModifiedDate":"2022-08-21"},{"lineNumber":113,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":114,"author":{"gitId":"malwaregarry"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":115,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":116,"author":{"gitId":"malwaregarry"},"content":"     * @return List of task Strings.","lastModifiedDate":"2022-08-21"},{"lineNumber":117,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":118,"author":{"gitId":"malwaregarry"},"content":"    List\u003cString\u003e formatTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":119,"author":{"gitId":"malwaregarry"},"content":"        List\u003cString\u003e indexedList \u003d IntStream.range(0,","lastModifiedDate":"2022-08-21"},{"lineNumber":120,"author":{"gitId":"malwaregarry"},"content":"                tasks.size()).mapToObj((index) -\u003e String.format(\"%d. %s\", index + 1, tasks.get(index).toString()))","lastModifiedDate":"2022-08-21"},{"lineNumber":121,"author":{"gitId":"malwaregarry"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"malwaregarry"},"content":"        return indexedList;","lastModifiedDate":"2022-08-21"},{"lineNumber":123,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":124,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":125,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":126,"author":{"gitId":"malwaregarry"},"content":"     * Displays a list of tasks that is formatted by {@code formatTaskList}.","lastModifiedDate":"2022-08-21"},{"lineNumber":127,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":128,"author":{"gitId":"malwaregarry"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":129,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":130,"author":{"gitId":"malwaregarry"},"content":"    public void displayTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":131,"author":{"gitId":"malwaregarry"},"content":"        List\u003cString\u003e toPrint \u003d formatTaskList(tasks);","lastModifiedDate":"2022-08-21"},{"lineNumber":132,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(toPrint);","lastModifiedDate":"2022-08-21"},{"lineNumber":133,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":134,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":135,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"malwaregarry"},"content":"     * Displays a list of tasks that is formatted by {@code formatTaskList} along","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"malwaregarry"},"content":"     * with a search message. Will display a unsuccessful message if task list is","lastModifiedDate":"2022-08-21"},{"lineNumber":138,"author":{"gitId":"malwaregarry"},"content":"     * empty.","lastModifiedDate":"2022-08-21"},{"lineNumber":139,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":140,"author":{"gitId":"malwaregarry"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":142,"author":{"gitId":"malwaregarry"},"content":"    public void displayTaskListSearch(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"malwaregarry"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"malwaregarry"},"content":"            formatAndPrint(\"No task matched your query!\");","lastModifiedDate":"2022-08-21"},{"lineNumber":145,"author":{"gitId":"malwaregarry"},"content":"            return;","lastModifiedDate":"2022-08-21"},{"lineNumber":146,"author":{"gitId":"malwaregarry"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":147,"author":{"gitId":"malwaregarry"},"content":"        List\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"malwaregarry"},"content":"        toPrint.add(\"Here is what I found: \");","lastModifiedDate":"2022-08-21"},{"lineNumber":149,"author":{"gitId":"malwaregarry"},"content":"        toPrint.addAll(formatTaskList(tasks));","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(toPrint);","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":152,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":153,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":154,"author":{"gitId":"malwaregarry"},"content":"     * Displays add task message.","lastModifiedDate":"2022-08-21"},{"lineNumber":155,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":156,"author":{"gitId":"malwaregarry"},"content":"     * @param task task that was added.","lastModifiedDate":"2022-08-21"},{"lineNumber":157,"author":{"gitId":"malwaregarry"},"content":"     * @param taskListSize size of TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":158,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"malwaregarry"},"content":"    public void displayAddTaskMessage(Task task, int taskListSize) {","lastModifiedDate":"2022-08-19"},{"lineNumber":160,"author":{"gitId":"malwaregarry"},"content":"        displayUpdateMessage(task, \"Task added: \", Optional.of(taskListSize));","lastModifiedDate":"2022-08-19"},{"lineNumber":161,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":162,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":163,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":164,"author":{"gitId":"malwaregarry"},"content":"     * Displays delete task message.","lastModifiedDate":"2022-08-21"},{"lineNumber":165,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":166,"author":{"gitId":"malwaregarry"},"content":"     * @param task task that was deleted.","lastModifiedDate":"2022-08-21"},{"lineNumber":167,"author":{"gitId":"malwaregarry"},"content":"     * @param taskListSize size of TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":168,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":169,"author":{"gitId":"malwaregarry"},"content":"    public void displayDeleteTaskMessage(Task task, int taskListSize) {","lastModifiedDate":"2022-08-19"},{"lineNumber":170,"author":{"gitId":"malwaregarry"},"content":"        displayUpdateMessage(task, \"Task deleted: \", Optional.of(taskListSize));","lastModifiedDate":"2022-08-19"},{"lineNumber":171,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":172,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":173,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":174,"author":{"gitId":"malwaregarry"},"content":"     * Displays mark task message.","lastModifiedDate":"2022-08-21"},{"lineNumber":175,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":176,"author":{"gitId":"malwaregarry"},"content":"     * @param task task that was marked.","lastModifiedDate":"2022-08-21"},{"lineNumber":177,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":178,"author":{"gitId":"malwaregarry"},"content":"    public void displayMarkTaskMessage(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":179,"author":{"gitId":"malwaregarry"},"content":"        displayUpdateMessage(task, \"I have marked this task as done: \", Optional.empty());","lastModifiedDate":"2022-08-19"},{"lineNumber":180,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":181,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":182,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":183,"author":{"gitId":"malwaregarry"},"content":"     * Displays unmark task message.","lastModifiedDate":"2022-08-21"},{"lineNumber":184,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":185,"author":{"gitId":"malwaregarry"},"content":"     * @param task task that was unmarked.","lastModifiedDate":"2022-08-21"},{"lineNumber":186,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":187,"author":{"gitId":"malwaregarry"},"content":"    public void displayUnmarkTaskMessage(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":188,"author":{"gitId":"malwaregarry"},"content":"        displayUpdateMessage(task, \"I have unmarked the completion of this task: \", Optional.empty());","lastModifiedDate":"2022-08-19"},{"lineNumber":189,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":190,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":191,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":192,"author":{"gitId":"malwaregarry"},"content":"     * Displays exit message.","lastModifiedDate":"2022-08-21"},{"lineNumber":193,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":194,"author":{"gitId":"malwaregarry"},"content":"    public void displayExitMessage() {","lastModifiedDate":"2022-08-19"},{"lineNumber":195,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(\"Bye bye\");","lastModifiedDate":"2022-08-19"},{"lineNumber":196,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":197,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":198,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":199,"author":{"gitId":"malwaregarry"},"content":"     * Displays unknown command message.","lastModifiedDate":"2022-08-21"},{"lineNumber":200,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":201,"author":{"gitId":"malwaregarry"},"content":"     * @param input unknown command text.","lastModifiedDate":"2022-08-21"},{"lineNumber":202,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":203,"author":{"gitId":"malwaregarry"},"content":"    public void displayUnknownCommandMessage(String input) {","lastModifiedDate":"2022-08-19"},{"lineNumber":204,"author":{"gitId":"malwaregarry"},"content":"        formatAndPrint(\"Unknown command: \" + input);","lastModifiedDate":"2022-08-19"},{"lineNumber":205,"author":{"gitId":"malwaregarry"},"content":"    };","lastModifiedDate":"2022-08-19"},{"lineNumber":206,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":207,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":207}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":" * Command for adding of tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"    private Task task;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * @param task task to add to TaskList when command is executed.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"        super.isExit \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"     * Add task to TaskList, Storage and displays update message.","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"        Command.taskList.add(this.task);","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"        Command.storage.save(this.task);","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayAddTaskMessage(this.task, Command.taskList.size());","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":31}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":" * Command for exiting program.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for ByeCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"     * {@code isExit \u003d true} to signal exiting of application.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"        super.isExit \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     * Displays exit message.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    public void execute() {","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayExitMessage();","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import duke.StorageInterface;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":" * Abstract superclass that handles Commands given by user.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    protected static Ui ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    protected static TaskList taskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    protected static StorageInterface storage;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    protected boolean isExit;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     * Sets Ui object to be used for all Commands;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * @param ui Ui object to be used.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    public static void setUi(Ui ui) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        Command.ui \u003d ui;","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     * Sets TaskList object to be used for all Commands;","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"     * @param taskList TaskList object to be used.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    public static void setTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"        Command.taskList \u003d taskList;","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"     * Sets Storage object to be used for all Commands;","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"     * @param storage Storage object to be used.","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"    public static void setStorage(StorageInterface storage) {","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"        Command.storage \u003d storage;","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"     * Returns if application should exit.","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"     * @return isExit variable.","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"        return this.isExit;","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"     * Executes Command.","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"     * @throws DukeException","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"     *             Exception might occur when saving tasks to Storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"    public abstract void execute() throws DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"malwaregarry":60}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":" * Command for deleting Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"public class DeleteCommand extends IndexedCommand {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of Task in TaskList to delete.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"        super(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * Deletes task, updates Storage and displays delete message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"        Task task \u003d Command.taskList.delete(super.index);","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"        Command.storage.save(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayDeleteTaskMessage(task, Command.taskList.size());","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":" * Command for finding tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    private final String query;","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     * @param query query string.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"        super.isExit \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"     * Searches TaskList for tasks with description that contains {@code query} and","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"     * displays the matched tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"        List\u003cTask\u003e matched \u003d Command.taskList.find(this.query);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayTaskListSearch(matched);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"malwaregarry":33}},{"path":"src/main/java/duke/command/IndexedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":" * Abstract superclass for Commands that access TaskList with an index.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"public abstract class IndexedCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"    protected int index;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for IndexedCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of Task in TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    IndexedCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":17}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":" * Command for listing Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for ListCommad.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"        super.isExit \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * Displays Tasks in TaskList.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"    public void execute() {","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayTaskList(Command.taskList.getTasks());","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":21}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":" * Command for marking Tasks as complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"public class MarkCommand extends IndexedCommand {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of Task .","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"        super(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * Update TaskList and Storage and displays mark task message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"        Task task \u003d taskList.markTask(super.index);","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"        Command.storage.updateLine(index, task.toStorageFormat());","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayMarkTaskMessage(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":28}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":" * Command for unknown commands given.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"    private String command;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Unknown command.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     * @param command input given by user that resulted in this command.","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    public UnknownCommand(String command) {","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"        super.isExit \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * Displays \"unknown command\" message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    public void execute() {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayUnknownCommandMessage(this.command);","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":26}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":" * Command for marking tasks as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"public class UnmarkCommand extends IndexedCommand {","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"     * @param index index of Task to mark as incomplete.","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"        super(index);","lastModifiedDate":"2022-08-19"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * Update TaskList and Storage and displays unmark task message.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"        Task task \u003d taskList.unmarkTask(super.index);","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"        Command.storage.updateLine(index, task.toStorageFormat());","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"        Command.ui.displayUnmarkTaskMessage(task);","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"malwaregarry":28}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":" * Tasks with a deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    private LocalDate by;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     * @param isComplete whether task is complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     * @param by deadline date.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    Deadline(String description, boolean isComplete, LocalDate by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"        super(description, isComplete);","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline. {@code isComplete} defaults to {@code false}.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"     * @param by deadline date.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"    Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"        this(description, false, by);","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"     * @param isComplete whether task is complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"     * @param by deadline date in String format.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"    public Deadline(String description, boolean isComplete, String by) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        this(description, isComplete, Parser.parseDate(by));","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline. {@code isComplete} defaults to {@code false}.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"     * @param by deadline date in String format.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"        this(description, false, Parser.parseDate(by));","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"     * Returns deadline of task as a LocalDate object.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"     * @return deadline of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"    LocalDate getDate() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"        return this.by;","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"     * Returns deadline of task as a formatted String.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"     * @return deadline of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"    String getFormattedDate() {","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"        return this.getDate().format(DATE_FORMAT);","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"        return \"D | \" + super.toStorageFormat() + \" | \" + this.by;","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getFormattedDate() + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"malwaregarry":84}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import duke.Parser;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":" * Event tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"    private LocalDate at;","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     * @param isComplete whether task is complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     * @param by event date.","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    Event(String description, boolean isComplete, LocalDate at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"        super(description, isComplete);","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline. {@code isComplete} defaults to {@code false}.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"     * @param by event date.","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"    Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-17"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"        this(description, false, at);","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"     * @param isComplete whether task is complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"     * @param by event date in String format.","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"    public Event(String description, boolean isComplete, String at) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        this(description, isComplete, Parser.parseDate(at));","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Deadline. {@code isComplete} defaults to {@code false};","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"     * @param by event date in String format.","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"        this(description, false, Parser.parseDate(at));","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"     * Returns deadline of task as a LocalDate object.","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"     * @return deadline of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"    LocalDate getDate() {","lastModifiedDate":"2022-08-17"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"        return this.at;","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"     * Returns deadline of task as a formatted String.","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"     * @return deadline of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"    String getFormattedDate() {","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"        return this.getDate().format(DATE_FORMAT);","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"        return \"E | \" + super.toStorageFormat() + \" | \" + this.at;","lastModifiedDate":"2022-08-17"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"        return \"[D]\" + super.toString() + \" (at: \" + this.getFormattedDate() + \")\";","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"malwaregarry":84}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":" * Abstract superclass for handling Tasks.","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"    protected static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"    private final String description;","lastModifiedDate":"2022-08-13"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-08-13"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"     * @param isComplete whether Task is complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    Task(String description, boolean isComplete) {","lastModifiedDate":"2022-08-13"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-13"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2022-08-13"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Task. {@code isComplete} defaults to {@code true}.","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of Task.","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"        this(description, false);","lastModifiedDate":"2022-08-13"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"     * Sets {@code isComplete} to {@code true}","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"    public void mark() {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2022-08-13"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"     * Sets {@code isComplete} to {@code false}","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"     * Returns Task description.","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"     * @return Task description","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"        return this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"     * Returns {@code isComplete} status String.","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"     * @return {@code isComplete} status String.","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"    String getStatusIcon() {","lastModifiedDate":"2022-08-13"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"        return isComplete ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-08-13"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"     * Returns {@code isComplete} status in integer format.","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"     * @return {@code isComplete} status.","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"     *         {@code 0} signfies incomplete. {@code 1} signifies complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"    int getStatusNumber() {","lastModifiedDate":"2022-08-17"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"        return isComplete ? 1 : 0;","lastModifiedDate":"2022-08-17"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"     * Converts Task to a String format used by Storage.","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"     * @return Storage-readable String.","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"        return this.getStatusNumber() + \" | \" + this.description;","lastModifiedDate":"2022-08-17"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), description);","lastModifiedDate":"2022-08-17"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"malwaregarry":88}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.task;","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"/**","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":" * Todo task.","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":" */","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-13"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Todo.","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"     * @param isComplete whether task is complete.","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"    public Todo(String description, boolean isComplete) {","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"        super(description, isComplete);","lastModifiedDate":"2022-08-13"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"    /**","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"     * Constructor for Todo. {@code isComplete} defaults to {@code false}.","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"     *","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"     * @param description description of task.","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"     */","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"        this(description, false);","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"        return \"T | \" + super.toStorageFormat();","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"    @Override","lastModifiedDate":"2022-08-13"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-13"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"malwaregarry":35}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"public class UiTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"    private final PrintStream orignalOut \u003d System.out;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"    void setUp() {","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    @AfterEach","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    void restore() {","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"        System.setOut(orignalOut);","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"    @ParameterizedTest","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"    @ValueSource(strings \u003d { \"Hello\", \"Good bye\" })","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"    void formatAndPrint_output(String input) {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"        ui.formatAndPrint(input);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"        assertTrue(outContent.toString().contains(input));","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"malwaregarry":34}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"package duke.command;","lastModifiedDate":"2022-08-21"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"malwaregarry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malwaregarry"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"malwaregarry"},"content":"import duke.StorageStub;","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"malwaregarry"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"malwaregarry"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"malwaregarry"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"malwaregarry"},"content":"public class CommandTest {","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malwaregarry"},"content":"    private final StorageStub storageStub \u003d new StorageStub(List.\u003cTask\u003eof());","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"    private final PrintStream orignalOut \u003d System.out;","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"malwaregarry"},"content":"    void setUp() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malwaregarry"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malwaregarry"},"content":"        Command.setStorage(storageStub);","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"malwaregarry"},"content":"        Command.setTaskList(taskList);","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"malwaregarry"},"content":"        Command.setUi(ui);","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"malwaregarry"},"content":"    @AfterEach","lastModifiedDate":"2022-08-21"},{"lineNumber":36,"author":{"gitId":"malwaregarry"},"content":"    void restore() {","lastModifiedDate":"2022-08-21"},{"lineNumber":37,"author":{"gitId":"malwaregarry"},"content":"        System.setOut(orignalOut);","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malwaregarry"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malwaregarry"},"content":"    void execute_addCommand() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(storageStub.getTasks().size(), 0);","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"malwaregarry"},"content":"        Task task \u003d new Todo(\"Test task\");","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"malwaregarry"},"content":"        Command command \u003d new AddCommand(task);","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"malwaregarry"},"content":"        command.execute();","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(storageStub.getTasks().size(), 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":49,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(taskList.size(), 1);","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malwaregarry"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"malwaregarry"},"content":"    void execute_listCommand() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"malwaregarry"},"content":"        String divider \u003d \"    ____________________________________________________________\"","lastModifiedDate":"2022-08-21"},{"lineNumber":55,"author":{"gitId":"malwaregarry"},"content":"                + System.lineSeparator();","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malwaregarry"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"malwaregarry"},"content":"        command.execute();","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"malwaregarry"},"content":"        String firstExpected \u003d divider + divider;","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(firstExpected,","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"malwaregarry"},"content":"                outContent.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"malwaregarry"},"content":"        Task todo \u003d new Todo(\"Test task\");","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"malwaregarry"},"content":"        Command.setTaskList(new TaskList(List.of(todo)));","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"malwaregarry"},"content":"        command.execute();","lastModifiedDate":"2022-08-21"},{"lineNumber":67,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":68,"author":{"gitId":"malwaregarry"},"content":"        String secondExpected \u003d firstExpected","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"malwaregarry"},"content":"                + divider","lastModifiedDate":"2022-08-21"},{"lineNumber":70,"author":{"gitId":"malwaregarry"},"content":"                + \"     1. \" + todo.toString() + System.lineSeparator()","lastModifiedDate":"2022-08-21"},{"lineNumber":71,"author":{"gitId":"malwaregarry"},"content":"                + divider;","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(secondExpected,","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"malwaregarry"},"content":"                outContent.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":76,"author":{"gitId":"malwaregarry"},"content":"    @Test","lastModifiedDate":"2022-08-21"},{"lineNumber":77,"author":{"gitId":"malwaregarry"},"content":"    void execute_findCommand() throws DukeException {","lastModifiedDate":"2022-08-21"},{"lineNumber":78,"author":{"gitId":"malwaregarry"},"content":"        String divider \u003d \"    ____________________________________________________________\"","lastModifiedDate":"2022-08-21"},{"lineNumber":79,"author":{"gitId":"malwaregarry"},"content":"                + System.lineSeparator();","lastModifiedDate":"2022-08-21"},{"lineNumber":80,"author":{"gitId":"malwaregarry"},"content":"        Task todo \u003d new Todo(\"Test task\");","lastModifiedDate":"2022-08-21"},{"lineNumber":81,"author":{"gitId":"malwaregarry"},"content":"        Command.setTaskList(new TaskList(List.of(todo)));","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"malwaregarry"},"content":"        Command command \u003d new FindCommand(\"Test\");","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"malwaregarry"},"content":"        command.execute();","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"malwaregarry"},"content":"        String firstExpected \u003d divider","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"malwaregarry"},"content":"                + \"     Here is what I found: \"","lastModifiedDate":"2022-08-21"},{"lineNumber":88,"author":{"gitId":"malwaregarry"},"content":"                + System.lineSeparator()","lastModifiedDate":"2022-08-21"},{"lineNumber":89,"author":{"gitId":"malwaregarry"},"content":"                + \"     1. \" + todo.toString() + System.lineSeparator()","lastModifiedDate":"2022-08-21"},{"lineNumber":90,"author":{"gitId":"malwaregarry"},"content":"                + divider;","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(firstExpected,","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"malwaregarry"},"content":"                outContent.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":93,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"malwaregarry"},"content":"        command \u003d new FindCommand(\"bad\");","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"malwaregarry"},"content":"        command.execute();","lastModifiedDate":"2022-08-21"},{"lineNumber":96,"author":{"gitId":"malwaregarry"},"content":"        String secondExpected \u003d firstExpected","lastModifiedDate":"2022-08-21"},{"lineNumber":97,"author":{"gitId":"malwaregarry"},"content":"                + divider","lastModifiedDate":"2022-08-21"},{"lineNumber":98,"author":{"gitId":"malwaregarry"},"content":"                + \"     No task matched your query!\" + System.lineSeparator()","lastModifiedDate":"2022-08-21"},{"lineNumber":99,"author":{"gitId":"malwaregarry"},"content":"                + divider;","lastModifiedDate":"2022-08-21"},{"lineNumber":100,"author":{"gitId":"malwaregarry"},"content":"        assertEquals(secondExpected,","lastModifiedDate":"2022-08-21"},{"lineNumber":101,"author":{"gitId":"malwaregarry"},"content":"                outContent.toString());","lastModifiedDate":"2022-08-21"},{"lineNumber":102,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":103,"author":{"gitId":"malwaregarry"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":104,"author":{"gitId":"malwaregarry"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"malwaregarry":104}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"T | 0 | read book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"T | 0 | join sports club","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"D | 0 | return book | 2022-08-07","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"E | 0 | project meeting | 2022-09-07","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"malwaregarry":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"deadline return book /by 2022-08-07","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"event project meeting /at 2022-09-07","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"mark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"unmark 2","lastModifiedDate":"2022-08-14"},{"lineNumber":6,"author":{"gitId":"malwaregarry"},"content":"mark 1","lastModifiedDate":"2022-08-14"},{"lineNumber":7,"author":{"gitId":"malwaregarry"},"content":"list","lastModifiedDate":"2022-08-14"},{"lineNumber":8,"author":{"gitId":"malwaregarry"},"content":"mark 10","lastModifiedDate":"2022-08-14"},{"lineNumber":9,"author":{"gitId":"malwaregarry"},"content":"delete 3","lastModifiedDate":"2022-08-14"},{"lineNumber":10,"author":{"gitId":"malwaregarry"},"content":"list","lastModifiedDate":"2022-08-14"}],"authorContributionMap":{"malwaregarry":10}},{"path":"text-ui-test/preinput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"malwaregarry"},"content":"todo read book","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"malwaregarry"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"malwaregarry"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"malwaregarry"},"content":"todo join sports club","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"malwaregarry"},"content":"todo borrow book","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"malwaregarry":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"malwaregarry"},"content":"# delete old storage file","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"malwaregarry"},"content":"rm ./data/duke.txt","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"malwaregarry"},"content":"# run the program and generate storage file","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"malwaregarry"},"content":"java -classpath ../bin Duke \u003c preinput.txt \u003e /dev/null","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"malwaregarry"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"malwaregarry":6,"-":38}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"    // Change this to your main class.","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sampy147":22,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import java.util.Date;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    private final String SAVED_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    private boolean isExit;","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    public Duke() {","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        this.storage \u003d new Storage(SAVED_PATH);","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"            this.tasks \u003d this.storage.load();","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"            this.ui \u003d new Ui(new TaskList());","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"            exit();","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"        this.ui \u003d new Ui(this.tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    public boolean exitNow() {","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        return this.isExit;","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"    public void exit() {","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"        TimerTask exitApp \u003d new TimerTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"            public void run() {","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        };","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"        timer.schedule(exitApp, new Date(System.currentTimeMillis() + 3 * 1000));","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"            String fullCommand \u003d input;","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"            String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"            if (c.isExit()) {","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"                this.isExit \u003d true;","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"            return output;","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Sampy147":59,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"        super(message);","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Sampy147":9}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"public class Launcher {","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Sampy147":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"            stage.show();","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Sampy147":32}},{"path":"src/main/java/duke/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"public class Message {","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"    public static final String HORIZONTAL_BORDER \u003d \"______________________________________________________\";","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye! I\u0027ll be closing soon, till we meet again!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_TODO_INPUT \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_DEADLINE_INPUT \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"            \"Please use proper deadline formatting: deadline {task} /by {time}\";","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_DATE_FORMAT \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"            \"Please indicate your date after {/bye} as YYYY-MM-DD (e.g 2019-12-09)\";","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_EVENT_INPUT \u003d \"Please use proper event formatting: event {task} /at {time}\";","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_ACCESS_EMPTY_TASKLIST \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"            \"Task does not exist. Initialise a task first, then try again\";","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_MARK_TASK_FORMAT \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"            \"To mark a task, please input this format: mark {task number}\";","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_UNMARK_TASK_FORMAT \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"            \"To unmark a task, please input this format: unmark {task number}\";","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_DELETE_TASK_FORMAT \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"            \"To delete a task, please input this format: delete {task number}\";","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_USER_INPUT \u003d","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"            \"Please use one of these keywords: {deadline, event, todo} followed by \\\\\\\"by\\\\\\\" and \\\\\\\"at\\\\\\\" \"","lastModifiedDate":"2022-09-12"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"                    + \"for deadline and event tasks respectively.\";","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_DATE_INPUT \u003d \"The date given should not be before today\u0027s date\";","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"    public static final String FILE_NOT_FOUND \u003d \"The memory file cannot be found.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    public static final String FILE_READ_ERROR \u003d \"There is an error when reading the memory file.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    public static final String FILE_CREATE_ERROR \u003d \"There is an error when creating the memory file\";","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    public static final String INVALID_FIND_TASK_FORMAT \u003d \"To find a task, please input this format: find {Keyword}\";","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"     * Returns a String that describes that the task does not exist within the specified tasklist","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"     * and suggests potential numbers for the user to try to locate the task. This method is called","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"     * when the task is not found in the tasklist specified","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the tasklist of type TaskList","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"     * @return a String message describing the task is not found","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    public static String returnTaskNotFound(TaskList tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        return \"Task does not exist. Try another number between 1 and \" + tasks.getCount();","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":45}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" * Adds a task to the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"    private final Task task;","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     * Creates a command to add a task to the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"     * @param task task to be added","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     * @return false by default","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     * Executes the addition of a task from the storage","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display messages to the user upon successful addition","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"     * @param storage the storage to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"     * @throws DukeException if the change cannot be saved in storage successfully","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        tasks.add(this.task);","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"        storage.save(this.task.toSimpleString());","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        return ui.showAddition(this.task, tasks.getCount());","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":50}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":" * Exits the program","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * @return true by default","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        return true;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     * Exits the program","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display the bye message","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     * @param storage the local storage","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"        return ui.showBye();","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":" * Represents a command that can be executed","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * @return boolean that determines whether program should end","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"     * Executes the command","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display messages after executing the command","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     * @param storage the local storage","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     * @throws DukeException if an exception is thrown when the command is executed","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" * Deletes a task from the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    private final int index;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     * Creates a command to delete a task from the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     * @return false by default","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     * Executes the deletion of a task from the storage","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display messages to the user upon successful deletion","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"     * @param storage the storage to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"     * @throws DukeException if the change cannot be saved in storage successfully or task cannot be deleted","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"            Task deletedTask \u003d tasks.deleteTaskAtPos(this.index);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"            assert this.index \u003c\u003d tasks.getCount() + 1 \u0026\u0026 this.index \u003e 0 :","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"                    \"Position argument should be more than 0 and less than or equal to the task list size\";","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"            return ui.showDeleted(deletedTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"            if (tasks.getCount() \u003d\u003d 0){","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_ACCESS_EMPTY_TASKLIST);","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"            } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"                assert tasks.getCount() \u003e 0 : \"task list should have 1 or more tasks\";","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.returnTaskNotFound(tasks));","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":62}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-12"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-12"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-12"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    private String keyword;","lastModifiedDate":"2022-09-12"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"        assert keyword !\u003d null : \"keyword cannot be null\";","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"        return false;","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        String foundTasks \u003d tasks.findTasks(this.keyword);","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"        return ui.showFound(foundTasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"Sampy147":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":" * Displays the list of tasks in the local storage","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * @return false by default","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     * Displays the list of tasks in the local storage using the ui","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display messages to the user","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     * @param storage the local storage","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"        return ui.showList();","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":35}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" * Marks a task in the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    private final int index;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     * Creates a command to mark a task in the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"     * @param index the index of the task to be marked","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     * @return false by default","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     * Executes the marking of a task in the local storage","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display messages to the user once the task is successfully marked","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"     * @param storage the storage to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"     * @throws DukeException if the change cannot be saved in storage successfully or task cannot be marked","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"            tasks.markTaskAtPos(this.index);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"            Task currentTask \u003d tasks.getTask(this.index);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"            assert this.index \u003c\u003d tasks.getCount() \u0026\u0026 this.index \u003e 0 :","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"                    \"Index should be more than 0 and less than or equal to the task list size\";","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"            return ui.showMarked(currentTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"            if (tasks.getCount() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_ACCESS_EMPTY_TASKLIST);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"            } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"                assert tasks.getCount() \u003e 0 : \"task list should have 1 or more tasks\";","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.returnTaskNotFound(tasks));","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":63}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" * Unmarks a task in the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    private final int index;","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     * Creates a command to unmark a task in the existing storage","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"     * @param index the index of the task to be unmarked","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * Determines if the command should end the program for the user","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     * @return false by default","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"        return false;","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     * Executes the unmarking of a task in the local storage","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"     * @param ui the ui used to display messages to the user once the task is successfully unmarked","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"     * @param storage the storage to be modified in execution","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"     * @throws DukeException if the change cannot be saved in storage successfully or task cannot be unmarked","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"            tasks.unmarkTaskAtPos(this.index);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"            Task currentTask \u003d tasks.getTask(this.index);","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"            assert this.index \u003c\u003d tasks.getCount() \u0026\u0026 this.index \u003e 0 :","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"                    \"Position argument should be more than 0 and less than or equal to the task list size\";","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"            return ui.showUnmarked(currentTask);","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"            if (tasks.getCount() \u003d\u003d 0) {","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_ACCESS_EMPTY_TASKLIST);","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"            } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"                assert tasks.getCount() \u003e 0 : \"task list should have 1 or more tasks\";","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.returnTaskNotFound(tasks));","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"}],"authorContributionMap":{"Sampy147":66}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.gui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        Rectangle clip \u003d new Rectangle(","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        );","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"        clip.setArcWidth(40);","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        clip.setArcHeight(40);","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"    private void flip() {","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"        db.flip();","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"        return db;","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Sampy147":69}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.gui;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"        displayInitMessage();","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    private void displayInitMessage() {","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Message.WELCOME_MESSAGE, dukeImage));","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"        );","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"        if (duke.exitNow()) {","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"            duke.exit();","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Sampy147":62}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.parser;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"public class Parser {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"        String[] commandList \u003d fullCommand.strip().split(\" \");","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"        String command \u003d commandList[0].toLowerCase();","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"        if (command.equals(\"bye\") \u0026\u0026 commandList.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"list\") \u0026\u0026 commandList.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"            return markTask(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"            return unmarkTask(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"            return addDeadline(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"            return addEvent(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"            return addToDo(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"            return deleteTask(fullCommand);","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"            return findTask(fullCommand);","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"        throw new DukeException(Message.INVALID_USER_INPUT);","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    private static AddCommand addToDo(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        String description \u003d input.substring(\"todo\".length()).strip();","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"        if (!description.equals(\"\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"            ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"            return new AddCommand(newToDo);","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_TODO_INPUT);","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"    private static AddCommand addDeadline(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"        String[] stringArray \u003d input.substring(\"deadline\".length()).strip().split(\"/by\");","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"            String description \u003d stringArray[0].strip();","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"            String by \u003d stringArray[1].strip();","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(by);","lastModifiedDate":"2022-09-10"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"            if (deadlineDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2022-09-12"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_DATE_INPUT);","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_DEADLINE_INPUT);","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"            Deadline newDeadline \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"            return new AddCommand(newDeadline);","lastModifiedDate":"2022-09-08"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_DEADLINE_INPUT);","lastModifiedDate":"2022-09-08"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_DATE_FORMAT);","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"    private static AddCommand addEvent(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"            String[] stringArray \u003d input.substring(\"event\".length()).strip().split(\"/at\");","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"            String description \u003d stringArray[0].strip();","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"            String at \u003d stringArray[1].strip();","lastModifiedDate":"2022-09-10"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"            if (description.equals(\"\") || at.equals(\"\")) {","lastModifiedDate":"2022-09-10"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_EVENT_INPUT);","lastModifiedDate":"2022-09-10"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-10"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"            Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-09-10"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"            return new AddCommand(newEvent);","lastModifiedDate":"2022-09-08"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_EVENT_INPUT);","lastModifiedDate":"2022-09-08"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"    private static MarkCommand markTask(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"        String[] commandList \u003d input.strip().split(\" \");","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"            int taskIndexNum \u003d Integer.parseInt(commandList[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"            return new MarkCommand(taskIndexNum);","lastModifiedDate":"2022-09-08"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_MARK_TASK_FORMAT);","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"    private static UnmarkCommand unmarkTask(String input) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"        String[] commandList \u003d input.strip().split(\" \");","lastModifiedDate":"2022-09-08"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"            int taskIndexNum \u003d Integer.parseInt(commandList[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"            return new UnmarkCommand(taskIndexNum);","lastModifiedDate":"2022-09-08"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_UNMARK_TASK_FORMAT);","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"    private static DeleteCommand deleteTask(String command) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"        String[] commandList \u003d command.strip().split(\" \");","lastModifiedDate":"2022-09-08"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"            int taskIndexNum \u003d Integer.parseInt(commandList[1]);","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"            return new DeleteCommand(taskIndexNum);","lastModifiedDate":"2022-09-08"},{"lineNumber":112,"author":{"gitId":"Sampy147"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":113,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_DELETE_TASK_FORMAT);","lastModifiedDate":"2022-09-08"},{"lineNumber":114,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":116,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":117,"author":{"gitId":"Sampy147"},"content":"    private static FindCommand findTask(String command) throws DukeException {","lastModifiedDate":"2022-09-12"},{"lineNumber":118,"author":{"gitId":"Sampy147"},"content":"        String[] commandList \u003d command.strip().split(\" \", 2);","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-12"},{"lineNumber":120,"author":{"gitId":"Sampy147"},"content":"            String keyword \u003d commandList[1].strip();","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"Sampy147"},"content":"            if (keyword.equals(\"\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.INVALID_FIND_TASK_FORMAT);","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"Sampy147"},"content":"            assert !keyword.equals(\"\") : \"keyword cannot be empty\";","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"Sampy147"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"Sampy147"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-12"},{"lineNumber":127,"author":{"gitId":"Sampy147"},"content":"            assert commandList.length \u003c 2 : \"Command list should contain at most 1 element\";","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.INVALID_FIND_TASK_FORMAT);","lastModifiedDate":"2022-09-12"},{"lineNumber":129,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":130,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":131,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":132,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":132}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.storage;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import java.io.File;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-06"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"public class Storage {","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    private final String filePath;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-03"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"            File localFile \u003d new File(this.filePath);","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"            Scanner s \u003d new Scanner(localFile);","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"                String taskString \u003d s.nextLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"                if (taskString.strip().equals(\"\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"                    continue;","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"                }","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"                tasks.add(makeTask(taskString));","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"            makeNewFile(this.filePath);","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        return tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    private void makeNewFile(String filePath) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        String[] pathArray \u003d filePath.split(\"/\");","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"        String fileName \u003d pathArray[pathArray.length - 1];","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        String[] directories \u003d Arrays.copyOfRange(pathArray, 0, pathArray.length - 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"        String directoryPath \u003d String.join(\"/\", directories);","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2022-09-03"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"        File newFile \u003d new File(fileName);","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"            directory.mkdirs();","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"            newFile.createNewFile();","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.FILE_CREATE_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"    private Event makeEvent(String markStatus, String description, String at) {","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"        Event newEvent \u003d new Event(description, at);","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"        newEvent.setMarkBasedOnSimpleStatus(markStatus);","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"        return newEvent;","lastModifiedDate":"2022-09-03"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"    private Deadline makeDeadline(String markStatus, String description, String by) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"            Deadline newDeadline \u003d new Deadline(description, LocalDate.parse(by));","lastModifiedDate":"2022-09-06"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"            newDeadline.setMarkBasedOnSimpleStatus(markStatus);","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"            return newDeadline;","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.FILE_READ_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"    private ToDo makeToDo(String markStatus, String description) {","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"        ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"        newToDo.setMarkBasedOnSimpleStatus(markStatus);","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"        return newToDo;","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"    public Task makeTask(String taskString) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"        Task newTask;","lastModifiedDate":"2022-09-03"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"            String[] taskSegments \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"            String taskIdentifier \u003d taskSegments[0].strip();","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"            String taskMarkStatus \u003d taskSegments[1].strip();","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"            String taskDescription \u003d taskSegments[2].strip();","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"            switch (taskIdentifier) {","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"            case \"E\":","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"                newTask \u003d makeEvent(taskMarkStatus, taskDescription, taskSegments[3].strip());","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"                break;","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"            case \"D\":","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"                newTask \u003d makeDeadline(taskMarkStatus, taskDescription, taskSegments[3].strip());","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"                break;","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"            case \"T\":","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"                newTask \u003d makeToDo(taskMarkStatus, taskDescription);","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"                break;","lastModifiedDate":"2022-09-03"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"            default:","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"                throw new DukeException(Message.FILE_READ_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.FILE_READ_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"        return newTask;","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":104,"author":{"gitId":"Sampy147"},"content":"    public void save(String taskString) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":106,"author":{"gitId":"Sampy147"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2022-09-03"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"            fw.write(taskString + \"\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"            fw.close();","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.FILE_NOT_FOUND);","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"Sampy147"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-09-03"},{"lineNumber":116,"author":{"gitId":"Sampy147"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"Sampy147"},"content":"            fw.write(tasks.toSimpleStrings());","lastModifiedDate":"2022-09-11"},{"lineNumber":118,"author":{"gitId":"Sampy147"},"content":"            fw.close();","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"Sampy147"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"Sampy147"},"content":"            throw new DukeException(Message.FILE_NOT_FOUND);","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":124,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"Sampy147":124}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-06"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-06"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":" * Represents a deadline task","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-09-06"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"     * Creates a new deadline","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     * @param by the date of the deadline","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-09-06"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     * Returns a string representation of this deadline","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     * @return string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"                + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"     * Returns a simplified string representation of this deadline","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"     * @return simplified string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    public String toSimpleString() {","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        return \"D | \" + super.toSimpleString() + \" | \" + this.by;","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Sampy147":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":" * Represents a event task","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"    protected String at;","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"     * Creates a new event task","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"     * @param description the description of the event","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"     * @param at the place or time of the event","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"     * Returns a string representation of this event","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     * @return string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"     * Returns a simplified string representation of this event","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"     * @return simplified string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"    public String toSimpleString() {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        return \"E | \" + super.toSimpleString() + \" | \" + this.at;","lastModifiedDate":"2022-09-03"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Sampy147":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":" * Represents a task unit.","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":" * A task unit can be an event, deadline or to-do","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"public class Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"    protected String description;","lastModifiedDate":"2022-08-21"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"     * Creates a new task that is not done yet","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"     * Returns a representation of whether a task is completed","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     * A \"X\" indicates a task is completed while a \" \" indicates an incomplete task","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     * @return whether task is done","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"     * Returns a simple representation of whether a task is completed","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"     * A \"1\" indicates a task is completed while a \"0\" indicates an incomplete task","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"     * @return whether task is done","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"    public String getSimpleStatus() {","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"        return (this.isDone ? \"1\": \"0\");","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     * Marks the task as completed","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-21"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-21"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"     * Unmarks the task which suggests task has yet to be completed","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"     * Marks the task if the simple status index is \"1\"","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"     * @param statusIndex the simple status index","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"    public void setMarkBasedOnSimpleStatus(String statusIndex) {","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"        if (statusIndex.equals(\"1\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"            markAsDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"     * Returns the description of the task","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"     * @return task description","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"        return this.description;","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"     * Returns a string representation of this task","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"     * @return string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"     * Returns a simple string representation of this task","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"     * @return simple string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"    public String toSimpleString() {","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"        return getSimpleStatus() + \" | \" + this.description;","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Sampy147":95}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":" * Represents a list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"public class TaskList {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"    private ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    private int count \u003d 0;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * Creates a new list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"        this.taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"     * Creates a new list of tasks using an existing ArrayList of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     * @param taskArray the list of tasks represented as an ArrayList","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        this.taskArray \u003d taskArray;","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"     * Adds a task into the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"     * @param task the task to be added","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    public void add(Task task){","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"        this.taskArray.add(task);","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        this.count +\u003d 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"     * Returns the task at a particular index in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"     * @param position the index of the task in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"     * @return the task at the given position","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"     * @throws IndexOutOfBoundsException if given position \u003e length of list of tasks or given position \u003c 1","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"    public Task getTask(int position) throws IndexOutOfBoundsException{","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"        return taskArray.get(position - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"     * Returns the total number of tasks in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"     * @return number of tasks in list","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"    public int getCount(){","lastModifiedDate":"2022-08-21"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"        return this.count;","lastModifiedDate":"2022-08-21"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"     * Marks a task at a particular position in the list of tasks as completed","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"     * @param position the index of the task in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"     * @throws IndexOutOfBoundsException if given position \u003e length of list of tasks or given position \u003c 1","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"    public void markTaskAtPos(int position) throws IndexOutOfBoundsException{","lastModifiedDate":"2022-09-08"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"        Task currTask \u003d getTask(position);","lastModifiedDate":"2022-08-21"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"        assert position \u003c\u003d this.count \u0026\u0026 position \u003e 0 :","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"                \"Position argument should be more than 0 and less than or equal to the task list size\";","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"        currTask.markAsDone();","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"     * Unmarks a task at a particular position in the list of tasks, representing the task is incomplete","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"     * @param position the index of the task in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"     * @throws IndexOutOfBoundsException if given position \u003e length of list of tasks or given position \u003c 1","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"    public void unmarkTaskAtPos(int position) throws IndexOutOfBoundsException{","lastModifiedDate":"2022-09-11"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"        Task currTask \u003d getTask(position);","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"        assert position \u003c\u003d this.count \u0026\u0026 position \u003e 0 :","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"                \"Position argument should be more than 0 and less than or equal to the task list size\";","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"        currTask.unmark();","lastModifiedDate":"2022-08-21"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"     * Deletes a task at a particular position in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"     * @param position the index of the task in the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"     * @return the deleted task","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"     * @throws IndexOutOfBoundsException the deleted task if given position \u003e length of list of tasks","lastModifiedDate":"2022-09-12"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"     * or given position \u003c 1","lastModifiedDate":"2022-09-12"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"    public Task deleteTaskAtPos(int position) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"        Task deletedTask \u003d getTask(position);","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"        assert position \u003c\u003d this.count \u0026\u0026 position \u003e 0 :","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"                \"Position argument should be more than 0 and less than or equal to the task list size\";","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"        this.taskArray.remove(position - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"        this.count -\u003d 1;","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"        return deletedTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-12"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"     * Returns a string listing all the tasks found that include the keyword parameters given","lastModifiedDate":"2022-09-12"},{"lineNumber":106,"author":{"gitId":"Sampy147"},"content":"     * in their descriptions","lastModifiedDate":"2022-09-12"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"     * @param keyword the word used to find tasks that have this keyword in their descriptions","lastModifiedDate":"2022-09-12"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"     * @return a list of tasks containing the keyword","lastModifiedDate":"2022-09-12"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-12"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2022-09-12"},{"lineNumber":112,"author":{"gitId":"Sampy147"},"content":"        String foundTasks \u003d \"\";","lastModifiedDate":"2022-09-12"},{"lineNumber":113,"author":{"gitId":"Sampy147"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2022-09-12"},{"lineNumber":114,"author":{"gitId":"Sampy147"},"content":"        for (Task task : this.taskArray) {","lastModifiedDate":"2022-09-12"},{"lineNumber":115,"author":{"gitId":"Sampy147"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2022-09-12"},{"lineNumber":116,"author":{"gitId":"Sampy147"},"content":"            String[] words \u003d description.split(\" \");","lastModifiedDate":"2022-09-12"},{"lineNumber":117,"author":{"gitId":"Sampy147"},"content":"            for (String word : words) {","lastModifiedDate":"2022-09-12"},{"lineNumber":118,"author":{"gitId":"Sampy147"},"content":"                if (word.equals(keyword)) {","lastModifiedDate":"2022-09-12"},{"lineNumber":119,"author":{"gitId":"Sampy147"},"content":"                    if (taskCount \u003d\u003d 1) {","lastModifiedDate":"2022-09-12"},{"lineNumber":120,"author":{"gitId":"Sampy147"},"content":"                         foundTasks +\u003d taskCount + \". \" + task;","lastModifiedDate":"2022-09-12"},{"lineNumber":121,"author":{"gitId":"Sampy147"},"content":"                    } else {","lastModifiedDate":"2022-09-12"},{"lineNumber":122,"author":{"gitId":"Sampy147"},"content":"                        foundTasks +\u003d \"\\n\" + taskCount + \". \" + task;","lastModifiedDate":"2022-09-12"},{"lineNumber":123,"author":{"gitId":"Sampy147"},"content":"                    }","lastModifiedDate":"2022-09-12"},{"lineNumber":124,"author":{"gitId":"Sampy147"},"content":"                    taskCount++;","lastModifiedDate":"2022-09-12"},{"lineNumber":125,"author":{"gitId":"Sampy147"},"content":"                }","lastModifiedDate":"2022-09-12"},{"lineNumber":126,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-09-12"},{"lineNumber":127,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-12"},{"lineNumber":128,"author":{"gitId":"Sampy147"},"content":"        return foundTasks;","lastModifiedDate":"2022-09-12"},{"lineNumber":129,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":130,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":131,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":132,"author":{"gitId":"Sampy147"},"content":"     * Returns the simple string representation of the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":134,"author":{"gitId":"Sampy147"},"content":"     * @return simple string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":135,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":136,"author":{"gitId":"Sampy147"},"content":"    public String toSimpleStrings() {","lastModifiedDate":"2022-09-03"},{"lineNumber":137,"author":{"gitId":"Sampy147"},"content":"        String stringedList \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":138,"author":{"gitId":"Sampy147"},"content":"        for (int i \u003d 0; i \u003c this.count; i++) {","lastModifiedDate":"2022-09-03"},{"lineNumber":139,"author":{"gitId":"Sampy147"},"content":"            stringedList +\u003d getTask(i + 1).toSimpleString() + \"\\n\";","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":141,"author":{"gitId":"Sampy147"},"content":"        return stringedList;","lastModifiedDate":"2022-09-03"},{"lineNumber":142,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":144,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":145,"author":{"gitId":"Sampy147"},"content":"     * Returns the string representation of the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":146,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":147,"author":{"gitId":"Sampy147"},"content":"     * @return string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":148,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":149,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":150,"author":{"gitId":"Sampy147"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":151,"author":{"gitId":"Sampy147"},"content":"        String stringedList \u003d \"\";","lastModifiedDate":"2022-08-19"},{"lineNumber":152,"author":{"gitId":"Sampy147"},"content":"        for (int i \u003d 0; i \u003c this.count; i++) {","lastModifiedDate":"2022-08-19"},{"lineNumber":153,"author":{"gitId":"Sampy147"},"content":"            if (i \u003d\u003d this.count -1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":154,"author":{"gitId":"Sampy147"},"content":"                stringedList +\u003d (i + 1) + \". \" + getTask(i + 1).toString();","lastModifiedDate":"2022-09-08"},{"lineNumber":155,"author":{"gitId":"Sampy147"},"content":"            } else {","lastModifiedDate":"2022-09-08"},{"lineNumber":156,"author":{"gitId":"Sampy147"},"content":"                stringedList +\u003d (i + 1) + \". \" + getTask(i + 1).toString() + \"\\n\";","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":158,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":159,"author":{"gitId":"Sampy147"},"content":"        return \"Here are the tasks in your list:\\n\" + stringedList;","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":161,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":162,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"Sampy147":162}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":" * Represents a to-do task","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"     * Creates a new to-do task","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"     * @param description the description of this to-do","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-21"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"        super(description);","lastModifiedDate":"2022-08-21"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     * Returns a string representation of this to-do","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"     * @return string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    public String toString(){","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"     * Returns a simplified string representation of this to-do","lastModifiedDate":"2022-09-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"     * @return string representation","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    public String toSimpleString() {","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"        return \"T | \" + super.toSimpleString();","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Sampy147":37}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.ui;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.Message;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":" * Represents a user interface to return messages to user","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"public class Ui {","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     * Creates a user interface to display messages to user","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"     * Returns a horizontal divider line","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"     * @return the string representing the line","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"    public String showLine() {","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"        return Message.HORIZONTAL_BORDER;","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"     * Returns the message with horizontal dividers","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"     * @param mainMessage the message to be displayed","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"     * @return the message string","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"    public String showFullMessage(String mainMessage) {","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"       return showLine() + \"\\n\" + mainMessage + \"\\n\" + showLine();","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     * Returns the full welcome message","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"     * @return the welcome message string","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(Message.WELCOME_MESSAGE);","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"     * Returns the full bye message","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"     * @return the bye message string","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"    public String showBye() {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(Message.BYE_MESSAGE);","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"     * Returns the formatted full error message","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"     * @return the formatted error message string","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(\"OOPS :( !!! \" + errorMessage);","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"     * Returns the list of tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"     * @return the string of the list of tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"    public String showList() {","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(this.tasks.toString());","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"     * Returns the addition message indicating a task has been successfully added","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"     * @param task the task to be added","lastModifiedDate":"2022-09-11"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"     * @param totalTasks the total number of tasks","lastModifiedDate":"2022-09-11"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"     * @return the formatted addition message string","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"    public String showAddition(Task task, int totalTasks) {","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(\"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"     * Returns the marked task message indicating a task has been successfully marked","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"     * @param task the task to be marked","lastModifiedDate":"2022-09-11"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"     * @return the marked task message string","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"    public String showMarked(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2022-09-15"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"     * Returns the unmarked task message indicating a task has been successfully unmarked","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"Sampy147"},"content":"     * @param task the task to be unmarked","lastModifiedDate":"2022-09-11"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"     * @return the un-marked task message string","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"    public String showUnmarked(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"Sampy147"},"content":"     * Returns the deleted task message indicating a task has been successfully deleted","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"Sampy147"},"content":"     * @param task the task to be deleted","lastModifiedDate":"2022-09-11"},{"lineNumber":115,"author":{"gitId":"Sampy147"},"content":"     * @return the deleted task message string","lastModifiedDate":"2022-09-15"},{"lineNumber":116,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":117,"author":{"gitId":"Sampy147"},"content":"    public String showDeleted(Task task) {","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(\"Noted. I\u0027ve removed this task:\\n\" + task","lastModifiedDate":"2022-09-15"},{"lineNumber":119,"author":{"gitId":"Sampy147"},"content":"                + \"\\nNow you have \" + this.tasks.getCount() + \" tasks in the list.\");","lastModifiedDate":"2022-09-12"},{"lineNumber":120,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":121,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":122,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"Sampy147"},"content":"     * Returns the tasks that are found and formatting them in a message","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":125,"author":{"gitId":"Sampy147"},"content":"     * @param foundTasks the string of found tasks","lastModifiedDate":"2022-09-15"},{"lineNumber":126,"author":{"gitId":"Sampy147"},"content":"     * @return the found task message string","lastModifiedDate":"2022-09-15"},{"lineNumber":127,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":128,"author":{"gitId":"Sampy147"},"content":"    public String showFound(String foundTasks) {","lastModifiedDate":"2022-09-15"},{"lineNumber":129,"author":{"gitId":"Sampy147"},"content":"        return showFullMessage(\"Here are the matching tasks in your list:\\n\" + foundTasks);","lastModifiedDate":"2022-09-15"},{"lineNumber":130,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-12"},{"lineNumber":131,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":132,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Sampy147":132}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"300\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"-10.0\"/\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90\" fitWidth\u003d\"90\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Sampy147":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Sampy147":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.parser;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"public class ParserTest {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    public void parse_incorrectInput_exceptionThrown() {","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"bye bye\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\" \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"list list\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"bye bye\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"event /at \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"event /at school\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline assignment /by tomorrow\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline assignment /by 11-11-2022\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline /by 2022-11-11\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"mark this\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"mark \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"unmark this\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"unmark \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete this\"));","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete \"));","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Sampy147":30}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package duke.task;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"    public void toStringTest() {","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"        LocalDate by \u003d LocalDate.parse(\"2022-11-11\");","lastModifiedDate":"2022-09-10"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"        Deadline newDeadline \u003d new Deadline(\"Deadline\", by);","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"        assertEquals(\"[D][ ] Deadline (by: Nov 11 2022)\", newDeadline.toString());","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-09-10"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    public void toSimpleStringTest() {","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"        LocalDate by \u003d LocalDate.parse(\"2022-11-11\");","lastModifiedDate":"2022-09-10"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"        Deadline newDeadline \u003d new Deadline(\"Deadline\", by);","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        assertEquals(\"D | 0 | Deadline | 2022-11-11\", newDeadline.toSimpleString());","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"Sampy147":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"event Tuition /at Mon 2-3pm","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"todo Eat dinner","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"deadline Math assignment submission /by Friday","lastModifiedDate":"2022-08-22"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"make up bed","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"mark 2","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"unmark 0","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"list","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"deadline Math assignment 2","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"bye","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"Sampy147":9}}]

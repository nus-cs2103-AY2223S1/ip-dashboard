[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"    public Deadline(String name, String date) throws DukeException {","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"            throw new DukeException(\"Please use this format for the deadline: YYYY-MM-DD\");","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"    public Deadline(String name, String date, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"    public static Deadline fromString(String inputString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"        boolean isDone \u003d inputString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"        String name \u003d inputString.substring(7, inputString.indexOf(\"(by\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"        String dateString \u003d inputString.substring(inputString.indexOf(\"(by: \") + 5, inputString.length() - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"        return new Deadline(name, dateString, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ish1506":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"        String name \u003d \"Duke\";","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \"\\nHow can I help you?\");","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"        // Initializing the Duke chatbot","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d FileHandler.readData();","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"                // Write tasks data to storage before terminating program","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"                StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"                for (Task task : tasksList) {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"                    data.append(task.toString() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"                FileHandler.writeData(data.toString());","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"                System.out.println(\"Bye! See you again :)\");","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"                return;","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"                for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"                    System.out.println(i + 1 + \". \" + tasksList.get(i));","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"                continue;","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"            } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"                tasksList.get(index).unmark();","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"                System.out.println(\"Okay, this task is now unchecked:\\n\" + tasksList.get(index));","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"            } else if (command.contains(\"mark\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-17"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"                tasksList.get(index).mark();","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"                System.out.println(\"Great! This task is completed:\\n\" + tasksList.get(index));","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"            } else if (command.contains(\"delete\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"                Task temp \u003d tasksList.get(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"                tasksList.remove(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + temp);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"ish1506"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"                try {","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"ish1506"},"content":"                    if (command.contains(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"ish1506"},"content":"                        String taskName \u003d command.length() \u003e 5 ? command.split(\"todo \")[1] : \"\";","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ish1506"},"content":"                        if (taskName.isBlank()) {","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"ish1506"},"content":"                            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"                        }","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"ish1506"},"content":"                        tasksList.add(new Todo(taskName));","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasksList.get(tasksList.size() - 1));","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"                    } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ish1506"},"content":"                        String[] res \u003d command.split(\"deadline \")[1].split(\"\\\\\\\\by \");","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"ish1506"},"content":"                        tasksList.add(new Deadline(res[0], res[1]));","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"ish1506"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasksList.get(tasksList.size() - 1));","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"ish1506"},"content":"                    } else if (command.contains(\"event\")) {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"ish1506"},"content":"                        String[] res \u003d command.split(\"event \")[1].split(\"\\\\\\\\at \");","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"ish1506"},"content":"                        tasksList.add(new Event(res[0], res[1]));","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"ish1506"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasksList.get(tasksList.size() - 1));","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"ish1506"},"content":"                    } else {","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"ish1506"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"ish1506"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"ish1506"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"ish1506"},"content":"                } finally {","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"ish1506"},"content":"                    continue;","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"ish1506"},"content":"                }","lastModifiedDate":"2022-08-17"},{"lineNumber":67,"author":{"gitId":"ish1506"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ish1506":65,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ish1506":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"    private final String duration;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"    public Event(String name, String duration) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"    public Event(String name, String duration, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"    public static Event fromString(String inputString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"        boolean isDone \u003d inputString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"        String name \u003d inputString.substring(7, inputString.indexOf(\"(at\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"        String duration \u003d inputString.substring(inputString.indexOf(\"(at: \") + 5, inputString.length() - 1);","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"        return new Event(name, duration, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.duration + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ish1506":25}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"public class FileHandler {","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"    private static final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"    private static final String PATH_NAME \u003d \"data/duke.txt\";","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"     * Reads task data from hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"     * If there\u0027s no existing directory or file, a new directory and/or file is created.","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"    public static ArrayList\u003cTask\u003e readData() {","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"            File dir \u003d new File(DIRECTORY);","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"            dir.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"            File dataFile \u003d new File(PATH_NAME);","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"            // dataFile is used as the input source of the Scanner","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"            ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"                tasksList.add(Task.fromString(input));","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"            return tasksList;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"     * Writes task data from Duke chatbot to hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"     * If there\u0027s no existing directory or file, a new directory and/or file is created.","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"ish1506"},"content":"     * @param data The task data to be written to hard disk.","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"ish1506"},"content":"    public static void writeData(String data) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"ish1506"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"ish1506"},"content":"            FileWriter fileWriter \u003d new FileWriter(PATH_NAME);","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"ish1506"},"content":"            fileWriter.write(data);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"            fileWriter.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"ish1506"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"ish1506":54}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"    private final String name;","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-17"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"    public void mark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-17"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-17"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-17"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"    public static Task fromString(String inputString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"        char typeOfTask \u003d inputString.charAt(1);","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"            return Todo.fromString(inputString);","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"            return Deadline.fromString(inputString);","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"            return Event.fromString(inputString);","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"        return null;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"        String icon \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-08-17"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"        return icon + this.name;","lastModifiedDate":"2022-08-17"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"ish1506":40}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"        super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"        super(name, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"    public static Todo fromString(String inputString) {","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"        boolean isDone \u003d inputString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"        String name \u003d inputString.substring(7);","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"        return new Todo(name, isDone);","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ish1506":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"todo item1","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"deadline item2 \\by 2023-01-14","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"event item3 \\at Sat to Sun","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"blah","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"todo","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"event item4 \\at COM3","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"deadline item5 \\by graduation","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"delete 2","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"delete 1","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"ish1506":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"if exist data\\duke.txt del data\\duke.txt","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ish1506":1,"-":21}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":21,"-":40}},{"path":"src/main/assets/logo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"                                                           (%%                                                          ","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"                                                         #\u0026\u0026%*                                                          ","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"                                                         @\u0026#                                                            ","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"                                                         #%.                                                            ","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"                                                        %#/(                                                            ","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"                                                   ,//*****,,,*,                                                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"                                          .(/,   %\u0026\u0026#**,********//.    ..                                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"                                            (((/@%(//((*,***///*//\u0026\u0026*,,*                                                ","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"                                            *((((//*,,,((///*,.,((/%*,*                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"                                            *((((**,,,,./(**,....(/***,                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"                                           .#/(/(/(,,,*%./*(@...,/****,                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"                                           /(((//****,,,//*,,..*/*****,                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"                                          */#((##((//////*,,***********                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"                                         %\u0026@\u0026(\u0026%##(((((((/,,,,,**(*#/*.                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"                                            (@(/@%****////**,.   #(*((                                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"                                           %#/*/*(##((((/#(//**/#/\u0026/*/%                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"                                        *(\u0026(/**/,,.,*(////*****,.. ****\u0026*                                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"                                     *(/(#@///****,,,,,,.......  .,**,,##,**,                                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                                 *////(//#@#((///***********,,,,,,,,,,*\u0026%,,,,**                                         ","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"                             .****//((((((\u0026\u0026%((((////////*********,,**\u0026\u0026,,,****,*,                                      ","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"                            //((/*****/(##((\u0026@\u0026\u0026\u0026#(((/((//////****(%\u0026\u0026#,,*//**,,,**.                                    ","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"                          *///(#((*//////((##%%%%\u0026\u0026@@@@@@\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026%(****/(/***,,,,,,*,                                   ","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                         **/////(///***********///((#%\u0026\u0026\u0026\u0026\u0026\u0026%(//***/(#//***,,,,,,,,,*,                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"                         /////((/////////********///(#\u0026@\u0026\u0026\u0026*./**(((/*****,,,,,,,,,,,**                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                         ///(((((((////////////****////#..,*(((/********,*,,,,,,,,,,**                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                         /(((((((((((/////////////*****(/((((///*********,,,,,,,,,***.                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                          /((((((((((((//////////////*((((((//////**********,,******,                                   ","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                           ,((((((((((((((((////////##((((((((//////***************                                     ","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                             .(#(((((((((((((((((##(((##(((((((((///////********/.                                      ","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                                  .*(#(##/,.###(((((((((####((((((((////////(*                                          ","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                                             #%####(((((((((((###  ...                                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                                             /%%%%%%%%##########/                                                       ","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"                                             ,%%%%%%%######(((((                                                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                                              .%%%%%%%%#####.                                                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                                              /%%%%%%######                                                             ","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                                              #%%%%%%####(                                                              ","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                                              #%%%%%####%                                                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"                                              *%%%%%####*         ,//*                                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                                               %\u0026%%%%###\u0026(...*%\u0026\u0026%%##(#(                                                ","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                                                *%%%%%%%%%\u0026%\u0026\u0026\u0026\u0026%#(((((/                                                ","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                                                  .#\u0026%%%%%%%%%%###(*.                                                   ","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"                                                           *%%%#                                                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"                                                           /%%#(/((                                                     ","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"                                                                  .#,,,           (/       ..                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"                                                                       .#%//*..,%\u0026#*/%,. (/. *(,                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"                                                                           #(/(((##(/,,/(/#*.                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"                                                                             ,%%%%###(##.                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                                                                                .%%##.                                  ","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ErrorCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.BaseTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.NoCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * The type duke.Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String defaultFilePath \u003d \"src/main/java/duke/data/tasks.txt\";","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private final String filepath;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * Duke Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file where the data is stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        tasks \u003d new TaskList(storage.load(this.filepath));","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * Duke Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    public Duke() {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        this.filepath \u003d defaultFilePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        tasks \u003d new TaskList(storage.load(this.filepath));","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * The runCommandLoopUntilExitCommand function runs a loop that will continue to","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * run until the user enters an exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * It first asks for a command from the user, and then tries to parse it using","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * the Parser class. If there is an error in parsing,","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * it will display that error message and ask for another command. Otherwise, if","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * there are no errors in parsing, it runs runCommand on","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * the parsed Command object (which returns a CommandResult). The function then","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * displays this result on screen using Ui\u0027s showResult method.","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        BaseCommand command;","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        do {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"            String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"                command \u003d parser.parse(userCommandText);","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (NoCommandException | ParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"                command \u003d new ErrorCommand(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"            CommandResult result \u003d runCommand(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"            ui.showResult(result);","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"        } while (!ExitCommand.equals(command));","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     * The runCommand function takes a BaseCommand object as an argument and","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * executes it.","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * If the command is a BaseTaskCommand, then the task list is set to this","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskList object.","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     * The function returns the result of executing that command.","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     * @param command","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the command object to the run command method","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result object","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"    private CommandResult runCommand(BaseCommand command) {","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        CommandResult result;","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        if (command instanceof BaseTaskCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"            BaseTaskCommand taskCommand \u003d (BaseTaskCommand) command;","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"            taskCommand.setTaskList(this.tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d taskCommand.execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"            storage.writeDataToFile(this.filepath, tasks.exportTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"            return result;","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"        return command.execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"     * The run function is the main function of the program. It starts by showing","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"     * a greeting message to the user, then enters a loop that runs until an exit","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"     * command is entered. Inside this loop, it parses and executes commands from","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"     * standard input (the keyboard). The run function also handles exceptions and","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"     * prints error messages to standard output (the screen). When an exception is","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * thrown during execution of a command, it will be caught here so that we can","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     * print out an appropriate error message before continuing with our program.","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"    public void run() {","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"     * The entry point of application.","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"     * @param args","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"     *            the input arguments","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-16"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"        if (args.length \u003e 0 \u0026\u0026 isValidFilePath(args[0])) {","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"            new Duke(args[0]).run();","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"            new Duke().run();","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"     * The isValidFilePath function checks to see if the string passed in is a valid","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"     * file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"     * @param string","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"     *            Check if the file path is valid","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"     * @return True","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean isValidFilePath(String string) {","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"     * The getResponse function takes a String as an argument and returns a String.","lastModifiedDate":"2022-08-31"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"     * The function is used to return the response from Duke after he has heard","lastModifiedDate":"2022-08-31"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"     * something from the user. It simply returns \u0026quot;Duke heard: \u0026quot; followed","lastModifiedDate":"2022-08-31"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"     * by the","lastModifiedDate":"2022-08-31"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"     * text that was passed in as an argument. This function is called by other","lastModifiedDate":"2022-08-31"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"     * functions, such as run().","lastModifiedDate":"2022-08-31"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the text from the main function to getresponse","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"    public String getResponse(String text) {","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"        BaseCommand command;","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"            command \u003d parser.parse(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (NoCommandException | ParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"            command \u003d new ErrorCommand(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"        CommandResult result \u003d runCommand(command);","lastModifiedDate":"2022-08-31"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"        return result.getMessage();","lastModifiedDate":"2022-08-31"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"johnbenedictyan":159,"-":3}},{"path":"src/main/java/duke/DukeCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The enum duke.Duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public enum DukeCommands {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"     * Exit duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * List duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * Mark duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * Unmark duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Todo duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * Deadline duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Event duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * Delete duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    private final String text;","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    DukeCommands(String text) {","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        return this.text;","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":50}},{"path":"src/main/java/duke/DukeLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * A launcher class to launch the duke application.","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class DukeLauncher {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"johnbenedictyan":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.gui.DukeWindow;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * Main application class.","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * The start function is called by the JavaFX runtime when the application is","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * launched. It creates a new stage and sets its scene to a new instance of","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * MainWindow, which is defined in this class. The stage is then made visible.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * @param stage","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     *            Set the stage to the scene","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"        AnchorPane ap \u003d new DukeWindow(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"johnbenedictyan":30}},{"path":"src/main/java/duke/commands/BaseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * Base Command Interface","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public interface BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    CommandResult execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":8}},{"path":"src/main/java/duke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * CommandResult Class","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    private final String message;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructor for CommandResult Class","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * @param message","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(message);","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * The getMessage function returns the message that was passed into the","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The message variable","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        return message;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":30}},{"path":"src/main/java/duke/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * ErrorCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class ErrorCommand implements BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    private final String message;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * Constructor for the ErrorCommand class","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * @param message","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public ErrorCommand(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(message);","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(this.message);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the message","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        return message;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":32}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * ExitCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class ExitCommand implements BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"        String successMessage \u003d \"Thank you for using aladdin services!\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean equals(BaseCommand command) {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":18}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-09-10"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-10"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * Help Command Class","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-10"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class HelpCommand implements BaseCommand {","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are some wishes you can try:\\n\";","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private final Set\u003cString\u003e availableCommands;","lastModifiedDate":"2022-09-10"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * Help Command constructor method","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * @param availableCommands","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     *            The set of strings of available command words","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    public HelpCommand(Set\u003cString\u003e availableCommands) {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands \u003d availableCommands;","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-09-10"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                String.join(\"\\n\", availableCommands));","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-10"}],"authorContributionMap":{"johnbenedictyan":33}},{"path":"src/main/java/duke/commands/tasks/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * The AddDeadlineCommand Class","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class AddDeadlineCommand extends BaseTaskCommand {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String SUBCOMMAND_WORD \u003d \" by \";","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully added!\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * The AddDeadlineCommand constructor","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * @param deadline","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    public AddDeadlineCommand(Deadline deadline) {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList.addTask(deadline);","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(\"%s%s%s\", successMessage, \"\\n\", deadline);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":31}},{"path":"src/main/java/duke/commands/tasks/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Event;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * AddEventCommand Class","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class AddEventCommand extends BaseTaskCommand {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String SUBCOMMAND_WORD \u003d \" at \";","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private final Event event;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully added!\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * AddEventCommand constructor method","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * @param event","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList.addTask(event);","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(\"%s%s%s\", successMessage, \"\\n\", event);","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":31}},{"path":"src/main/java/duke/commands/tasks/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * AddTodoCommand Class","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class AddTodoCommand extends BaseTaskCommand {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private final Todo todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully added!\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * AddTodoCommand constructor method","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * @param todo","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    public AddTodoCommand(Todo todo) {","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList.addTask(todo);","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(\"%s%s%s\", successMessage, \"\\n\", todo);","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":30}},{"path":"src/main/java/duke/commands/tasks/BaseTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * Represents a Base Task.","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"public abstract class BaseTaskCommand implements BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * @param taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *            Task List to be set","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(taskList);","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":22}},{"path":"src/main/java/duke/commands/tasks/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * DeleteTaskCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"public class DeleteTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully deleted!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private String errorMessage \u003d \"An error occurred when deleting this task:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private final TaskIndex taskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public DeleteTaskCommand(TaskIndex taskIndex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(taskIndex);","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * (non-Javadoc)","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @see duke.commands.BaseCommand#execute()","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", successMessage, deletedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (TaskNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"            errorMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", errorMessage, e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(errorMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":46}},{"path":"src/main/java/duke/commands/tasks/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * Find Task Command Class","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class FindTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private final String searchTerm;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are the matching tasks:\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * Find Task Command Constructor","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * @param searchTerm","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    public FindTaskCommand(String searchTerm) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(searchTerm);","lastModifiedDate":"2022-09-05"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * The execute function is the main function of a command. It is called when","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * the user calls a command and returns a CommandResult object that contains","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * information about whether or not the command was successful, and if it was,","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * what to display to the user. In this case, we are using it to search for","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * tasks in our task list by name. We will be searching for all tasks with names","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * that contain our search term (case insensitive). If there are no matching","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * tasks found then we will return an error message saying so; otherwise we\u0027ll","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     * return successMessage which contains all of our matching task names separated","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * by newlines.","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"                taskList.searchTasks(this.searchTerm));","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"johnbenedictyan":46}},{"path":"src/main/java/duke/commands/tasks/ListTasksAfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * ListTasksAfterCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTasksAfterCommand extends ListTasksCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String SUBCOMMAND_WORD \u003d \"/after \";","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * ListTaskAfterCommand constructor","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public ListTasksAfterCommand(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * The execute function prints out all the tasks that are due after a certain","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * date.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result object","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                taskList.outputTasksAfterString(this.dateTime));","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":41}},{"path":"src/main/java/duke/commands/tasks/ListTasksBeforeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * ListTasksBeforeCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTasksBeforeCommand extends ListTasksCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String SUBCOMMAND_WORD \u003d \"/before \";","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * ListTasksBeforeCommand constructor method","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public ListTasksBeforeCommand(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * The execute function prints out the tasks that are due before a certain date.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result object","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                taskList.outputTasksBeforeString(this.dateTime));","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":39}},{"path":"src/main/java/duke/commands/tasks/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * ListTasksCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTasksCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\", successMessage, taskList.outputTasksString());","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":18}},{"path":"src/main/java/duke/commands/tasks/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * MarkTaskCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"public class MarkTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully marked!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private String errorMessage \u003d \"An error occurred when marking this task:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private final TaskIndex taskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public MarkTaskCommand(TaskIndex taskIndex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(taskIndex);","lastModifiedDate":"2022-09-05"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"            Task markedTask \u003d taskList.markTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"            successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", successMessage, markedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (TaskNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            errorMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", errorMessage, e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(errorMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":42}},{"path":"src/main/java/duke/commands/tasks/SortTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.enums.SortTaskEnum;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * SortTaskCommand Class","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"public class SortTasksCommand extends BaseTaskCommand {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully added!\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    private final SortTaskEnum direction;","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * SortTasksCommand constructor method","lastModifiedDate":"2022-09-10"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * @param direction","lastModifiedDate":"2022-09-10"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public SortTasksCommand(SortTaskEnum direction) {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(direction);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        taskList.sortTaskList(direction);","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\", successMessage, taskList.outputTasksString());","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":34}},{"path":"src/main/java/duke/commands/tasks/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * UnmarkTaskCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"public class UnmarkTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully unmarked!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private String errorMessage \u003d \"An error occurred when unmarking this task:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private final TaskIndex taskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public UnmarkTaskCommand(TaskIndex taskIndex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(taskIndex);","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"            Task unmarkedTask \u003d taskList.unmarkTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"            successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", successMessage, unmarkedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (TaskNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            errorMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", errorMessage, e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(errorMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":42}},{"path":"src/main/java/duke/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"T@@@0@@@read book@@@$_$","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"T@@@0@@@ buy book@@@$_$","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"T@@@0@@@ read book@@@$_$","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":3}},{"path":"src/main/java/duke/domain/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * The type Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private Deadline(String text, LocalDateTime deadline) {","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        super(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                \"[D] %s (by: %s)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"                super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                this.deadline.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                \"D\",","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"                super.exportString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                this.deadline.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * Of deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    public static Deadline of(String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(text);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return new Deadline(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * Of deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    public static Deadline of(","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"            String done,","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"            String text,","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"            LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(done);","lastModifiedDate":"2022-09-05"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(text);","lastModifiedDate":"2022-09-05"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"        Deadline newDeadline \u003d Deadline.of(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"            newDeadline.setComplete();","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"        return newDeadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        Deadline deadline1 \u003d (Deadline) o;","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        return deadline.equals(deadline1.deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        return Objects.hash(super.hashCode(), deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        return this.deadline.isBefore(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isAfter(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"        return this.deadline.isAfter(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     * The compareTo function compares two objects of the same type.","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"     * @param o","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"     *            The Deadline to compare to","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"     * @return 1 if the current event is before the other event and -1 otherwise","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"    public int compareTo(Deadline o) {","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"        if (this.deadline \u003d\u003d o.deadline) {","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"            return super.compareTo(o);","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"        return this.deadline.isBefore(o.deadline) ? 1 : -1;","lastModifiedDate":"2022-09-09"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":120}},{"path":"src/main/java/duke/domain/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" * The type Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private Event(String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        super(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                \"[E] %s (at: %s)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"                super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                this.dateTime.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                \"E\",","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"                super.exportString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                this.dateTime.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * Of event.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the event","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    public static Event of(String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(text);","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return new Event(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * Of event.","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the event","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    public static Event of(String done, String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(done);","lastModifiedDate":"2022-09-05"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(text);","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTime);","lastModifiedDate":"2022-09-05"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        Event newEvent \u003d Event.of(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"            newEvent.setComplete();","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        return newEvent;","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"        return dateTime.equals(event.dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        return Objects.hash(super.hashCode(), dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"        return this.dateTime.isBefore(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isAfter(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        return this.dateTime.isAfter(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * The compareTo function compares two events by their date and time.","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     * If the dates are equal, then it compares them by their name.","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     * @param o","lastModifiedDate":"2022-09-09"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"     *            Compare the datetime of this object with another","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"     * @return 1 if the current event is before the other event and -1 otherwise","lastModifiedDate":"2022-09-09"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"    public int compareTo(Event o) {","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"        if (this.dateTime \u003d\u003d o.dateTime) {","lastModifiedDate":"2022-09-09"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"            return super.compareTo(o);","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"        return this.dateTime.isBefore(o.dateTime) ? 1 : -1;","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":118}},{"path":"src/main/java/duke/domain/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * The type Todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private Todo(String text) {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"        super(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(\"%s%s%s\", \"T\", super.exportString(), NULL_SYMBOL);","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * Of todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * @param todoText","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     *            the todo text","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the todo","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    public static Todo of(String todoText) {","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(todoText);","lastModifiedDate":"2022-09-05"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        return new Todo(todoText);","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     * Of todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     * @param todoText","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     *            the todo text","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the todo","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public static Todo of(String done, String todoText) {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(done);","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(todoText);","lastModifiedDate":"2022-09-05"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        Todo newTodo \u003d Todo.of(todoText);","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"            newTodo.setComplete();","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        return newTodo;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":56}},{"path":"src/main/java/duke/domain/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain.task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Event;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * The type Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * The constant FORMATTER.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    protected static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"            \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    protected static final String NULL_SYMBOL \u003d \"$_$\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private final String text;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    private Boolean isComplete;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    protected Task(String text) {","lastModifiedDate":"2022-08-24"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the task to be complete.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    public void setComplete() {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the task to be incomplete.","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    public void setIncomplete() {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"        return this.isComplete","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"                ? String.format(\"[X] %s\", this.text)","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"                : String.format(\"[ ] %s\", this.text);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"    private static LocalDateTime interpretLocalDateTime(String input)","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"                \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     * Of task.","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     * @param type","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     *            the type","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTimeInput","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time input","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the task","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws InvalidDateTimeException","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     *             the invalid date time exception","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws InvalidTaskSpecificationException","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"     *             the invalid task specification exception","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"    public static Task of(","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"            String type,","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"            String done,","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"            String text,","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"            String dateTimeInput)","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"            throws InvalidDateTimeException, InvalidTaskSpecificationException {","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(type);","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(done);","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(text);","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(dateTimeInput);","lastModifiedDate":"2022-09-05"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isEvent \u003d Objects.equals(type, \"E\");","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isDeadline \u003d Objects.equals(type, \"D\");","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isTodo \u003d Objects.equals(type, \"T\");","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        if (isEvent || isDeadline || isTodo) {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            if (isEvent || isDeadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"                    LocalDateTime dateTime \u003d interpretLocalDateTime(","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"                            dateTimeInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"                    if (isEvent) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"                        return Event.of(done, text, dateTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"                    return Deadline.of(done, text, dateTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"                    throw new InvalidDateTimeException(","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"                            \"Must have valid date time!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"            return Todo.of(done, text);","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"            throw new InvalidTaskSpecificationException(","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Impossible for task to be not e d or t\");","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"     * Export the export string.","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the string","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%d%s%s%s\",","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"                \"@@@\",","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"                this.isComplete ? 1 : 0,","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"                \"@@@\",","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"                this.text,","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"                \"@@@\");","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-24"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2022-08-24"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"        return text.equals(task.text) \u0026\u0026 isComplete.equals(task.isComplete);","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"        return Objects.hash(text, isComplete);","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"     * Is before boolean.","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the boolean","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"     * Is after boolean.","lastModifiedDate":"2022-08-24"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the boolean","lastModifiedDate":"2022-08-24"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isAfter(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"     * The textContains function checks if the text of a task contains any of the","lastModifiedDate":"2022-09-01"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"     * search terms.","lastModifiedDate":"2022-09-01"},{"lineNumber":175,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"     * @param searchTerms","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass in a variable number of strings to the function","lastModifiedDate":"2022-09-01"},{"lineNumber":178,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A boolean value","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean textContains(String... searchTerms) {","lastModifiedDate":"2022-09-01"},{"lineNumber":181,"author":{"gitId":"johnbenedictyan"},"content":"        for (String searchTerm : searchTerms) {","lastModifiedDate":"2022-09-01"},{"lineNumber":182,"author":{"gitId":"johnbenedictyan"},"content":"            return this.text.contains(searchTerm);","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"johnbenedictyan"},"content":"        return false;","lastModifiedDate":"2022-09-01"},{"lineNumber":185,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":186,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":187,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"johnbenedictyan"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"johnbenedictyan"},"content":"        return this.text.compareTo(o.text);","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":191}},{"path":"src/main/java/duke/domain/task/TaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain.task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * TaskDescription Class","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskDescription {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain\"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"            + \" alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    public final String taskDescription;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskDescription constructor method","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * @param description","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        taskDescription \u003d description;","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isValid(String test) {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":24}},{"path":"src/main/java/duke/domain/task/TaskIndex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain.task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * TaskIndex Class","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskIndex {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    private final int zeroBasedTaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskIndex constructor method","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * @param zeroBasedTaskIndex","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private TaskIndex(int zeroBasedTaskIndex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        if (zeroBasedTaskIndex \u003c 0) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        this.zeroBasedTaskIndex \u003d zeroBasedTaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Return index with the count start at 0","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * @return index starting from 0","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public int getZeroBased() {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        return zeroBasedTaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     * Return index with the count start at 1","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * @return index starting from 1","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    public int getOneBased() {","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        return zeroBasedTaskIndex + 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * Return new TaskIndex object based on zero based indexing from given index","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * @return TaskIndex object","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    public static TaskIndex fromZeroBased(int zeroBasedTaskIndex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        return new TaskIndex(zeroBasedTaskIndex);","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * Return new TaskIndex object based on one based indexing from given index","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * @return TaskIndex object","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    public static TaskIndex fromOneBased(int oneBasedTaskIndex) {","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        return new TaskIndex(oneBasedTaskIndex - 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":58}},{"path":"src/main/java/duke/enums/SortTaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.enums;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * SortTaskEnum","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public enum SortTaskEnum {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    ASC, DESC;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns whether the test string is contained the sort task enum","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * @param test","lastModifiedDate":"2022-09-12"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     *            The test sting","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * @return Whether the test string is contained the sort task enum","lastModifiedDate":"2022-09-10"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean contains(String test) {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        for (SortTaskEnum e : SortTaskEnum.values()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"            if (e.name().equals(test)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"                return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":26}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type duke.Duke exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new duke.Duke exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public DukeException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/IncorrectArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Incorrect argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class IncorrectArgumentException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Incorrect argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public IncorrectArgumentException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Invalid date time exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Invalid date time exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public InvalidDateTimeException(String errorString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/InvalidTaskSpecificationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Invalid task specification exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class InvalidTaskSpecificationException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Invalid task specification exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public InvalidTaskSpecificationException(String errorString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Missing argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Missing argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public MissingArgumentException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * No Command Exception Class","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class NoCommandException extends DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * No command found exception constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public NoCommandException() {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        super(\"Please enter a command\");","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"johnbenedictyan":14}},{"path":"src/main/java/duke/exceptions/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * ParseException class","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class ParseException extends DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    public ParseException(String errorString) {","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":10}},{"path":"src/main/java/duke/exceptions/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * TaskIndexOutOfBoundsException class","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskIndexOutOfBoundsException extends RuntimeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskIndexOutOfBoundsException constructor method","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        super(\"Index is out of range\");","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskIndexOutOfBoundsException constructor method using given string","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskIndexOutOfBoundsException(String s) {","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        super(s);","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskIndexOutOfBoundsException constructor method using given integer index","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskIndexOutOfBoundsException(int index) {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        super(\"Index out of range: \" + index);","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskIndexOutOfBoundsException constructor method using given long index","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskIndexOutOfBoundsException(long index) {","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        super(\"Index out of range: \" + index);","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":36}},{"path":"src/main/java/duke/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Task not found exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Task not found exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        super(\"Sorry this task does not exist\");","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":14}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Unknown command exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Unknown command exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public UnknownCommandException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/gui/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.geometry.NodeOrientation;","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":" * Duke Dialog Box Class.","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    private Text dialog;","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-09-12"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    private VBox dialogBox;","lastModifiedDate":"2022-09-12"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    private DukeDialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            String dukeDialogBoxPath \u003d \"/view/DukeDialogBox.fxml\";","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                    this.getClass().getResource(dukeDialogBoxPath));","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        dialog.setFont(Font.font(\"verdana\", FontPosture.REGULAR, 14));","lastModifiedDate":"2022-09-12"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"        dialog.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);","lastModifiedDate":"2022-09-12"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        dialogBox.setStyle(","lastModifiedDate":"2022-09-12"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                \"-fx-background-color: lightgrey; -fx-text-fill: white; -fx-border-radius: 100px; -fx-padding: 15px;\");","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * The getUserDialog function creates a DukeDialogBox object with the given","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * userText","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * and image.","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * @param userText","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     *            Display the text that is typed by the user","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * @param image","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     *            Display the image of the user\u0027s avatar","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A DukeDialogBox object","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    public static DukeDialogBox getUserDialog(String userText, Image image) {","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        return new DukeDialogBox(userText, image);","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     * The getDukeDialog function creates a DukeDialogBox object with the given text","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     * and","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     * image.","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     * It also flips the DukeDialogBox so that it is facing right instead of left.","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dukeText","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the text that will be displayed in the dialog box","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * @param image","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     *            Display the image of duke","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A DukeDialogBox object","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"    public static DukeDialogBox getDukeDialog(String dukeText, Image image) {","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"        DukeDialogBox db \u003d new DukeDialogBox(dukeText, image);","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     * The flip function flips the HBox around so that it is facing the opposite","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * direction.","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        dialog.setNodeOrientation(NodeOrientation.LEFT_TO_RIGHT);","lastModifiedDate":"2022-09-12"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        dialog.setFont(Font.font(\"Comic Sans MS\", FontWeight.LIGHT, FontPosture.REGULAR, 14));","lastModifiedDate":"2022-09-12"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"johnbenedictyan":97}},{"path":"src/main/java/duke/gui/DukeWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" * The Duke Window class.","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"public class DukeWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    private final String userImagePath \u003d \"/images/student.jpeg\";","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    private final String dukeImagePath \u003d \"/images/genie.jpeg\";","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            Objects.requireNonNull(","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                    this.getClass().getResourceAsStream(userImagePath)));","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            Objects.requireNonNull(","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                    this.getClass().getResourceAsStream(dukeImagePath)));","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * Duke Window class constructor.","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * @param duke","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     *            The given duke object.","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public DukeWindow(Duke duke) {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"            String dukeWindowPath \u003d \"/view/DukeWindow.fxml\";","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"                    this.getClass().getResource(dukeWindowPath));","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"            this.duke \u003d duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * The initialize function is called when the FXML file is loaded.","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     * It sets up the dialog box and its contents, including all of its buttons.","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"                DukeDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"                DukeDialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2022-08-31"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"johnbenedictyan":84}},{"path":"src/main/java/duke/parser/AddDeadlineParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddDeadlineCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * AddDeadlineParser Class","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"public class AddDeadlineParser implements IParser\u003cAddDeadlineCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public AddDeadlineCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        if (arguments.contains(AddDeadlineCommand.SUBCOMMAND_WORD)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            String[] deadlineArgs \u003d arguments.split(","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                    AddDeadlineCommand.SUBCOMMAND_WORD);","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"            String deadlineTitle \u003d deadlineArgs[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"            String deadline \u003d deadlineArgs[1];","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"            Task newDeadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                newDeadline \u003d Task.of(","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                        \"D\",","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                        \"0\",","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                        deadlineTitle,","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                        deadline);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (InvalidDateTimeException | InvalidTaskSpecificationException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                throw new ParseException(e.getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"            if (newDeadline instanceof Deadline) {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                Deadline castedNewDeadline \u003d (Deadline) newDeadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                return new AddDeadlineCommand(castedNewDeadline);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"            throw new RuntimeException();","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Deadlines need a /by command\");","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":44}},{"path":"src/main/java/duke/parser/AddEventParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddEventCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Event;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" * AddEventParser Class","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"public class AddEventParser implements IParser\u003cAddEventCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public AddEventCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        if (arguments.contains(AddEventCommand.SUBCOMMAND_WORD)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            String[] eventArgs \u003d arguments.split(","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                    AddEventCommand.SUBCOMMAND_WORD);","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"            String eventTitle \u003d eventArgs[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"            String eventSubArgs \u003d eventArgs[1];","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"            Task newEvent;","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                newEvent \u003d Task.of(","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                        \"D\",","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                        \"0\",","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                        eventTitle,","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                        eventSubArgs);","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (InvalidDateTimeException | InvalidTaskSpecificationException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                throw new ParseException(e.getMessage());","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"            if (newEvent instanceof Event) {","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                Event castedNewEvent \u003d (Event) newEvent;","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                return new AddEventCommand(castedNewEvent);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"            throw new RuntimeException();","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Events need a /by command\");","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":45}},{"path":"src/main/java/duke/parser/AddTodoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddTodoCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * AddTodoParser Class","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class AddTodoParser implements IParser\u003cAddTodoCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public AddTodoCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        if (arguments.length() \u003e 0) {","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"            Todo newTodo \u003d Todo.of(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"            return new AddTodoCommand(newTodo);","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                    \"The description of the todo cannot be empty!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":23}},{"path":"src/main/java/duke/parser/DeleteTaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * DeleteTaskParser Class","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class DeleteTaskParser implements IParser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public DeleteTaskCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        if (ParserUtil.isNumeric(arguments)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"            TaskIndex taskIndex \u003d TaskIndex.fromOneBased(Integer.parseInt(arguments));","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"            return new DeleteTaskCommand(taskIndex);","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Sorry the second argument is not a number\");","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":23}},{"path":"src/main/java/duke/parser/FindTaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.FindTaskCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * FindTaskParser class","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class FindTaskParser implements IParser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public FindTaskCommand parse(String arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        return new FindTaskCommand(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":15}},{"path":"src/main/java/duke/parser/IParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * IParser interface","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public interface IParser\u003cT extends BaseCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    T parse(String arguments) throws ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":11}},{"path":"src/main/java/duke/parser/ListTaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksAfterCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksBeforeCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * ListTaskParser class","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTaskParser implements IParser\u003cListTasksCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public ListTasksCommand parse(String arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        String advancedListText \u003d String.join(\" \", arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        if (advancedListText.contains(ListTasksBeforeCommand.SUBCOMMAND_WORD)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"            String[] advancedListArgs \u003d advancedListText.split(","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"                    ListTasksBeforeCommand.SUBCOMMAND_WORD);","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            String advancedListDateTime \u003d advancedListArgs[1];","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"            return new ListTasksBeforeCommand(","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"                    ParserUtil.parseDateTimeString(advancedListDateTime));","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        } else if (advancedListText.contains(ListTasksAfterCommand.SUBCOMMAND_WORD)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"            String[] advancedListArgs \u003d advancedListText.split(","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                    ListTasksAfterCommand.SUBCOMMAND_WORD);","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"            String advancedListDateTime \u003d advancedListArgs[1];","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"            return new ListTasksAfterCommand(","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                    ParserUtil.parseDateTimeString(advancedListDateTime));","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":32}},{"path":"src/main/java/duke/parser/MarkTaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.MarkTaskCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * MarkTaskParser class","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class MarkTaskParser implements IParser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public MarkTaskCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        if (ParserUtil.isNumeric(arguments)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"            TaskIndex taskIndex \u003d TaskIndex.fromOneBased(Integer.parseInt(arguments));","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"            return new MarkTaskCommand(taskIndex);","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Sorry the second argument is not a number\");","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-10"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddDeadlineCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddEventCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddTodoCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.FindTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.MarkTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.SortTasksCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.UnmarkTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.NoCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":" * Parser Class in charge of parsing the users\u0027 command.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"You don\u0027t seem to be using that wish correctly.\";","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Im sorry I don\u0027t understand your wish! You can use the wish \u0027help\u0027 for help.\";","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"            \"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    private final Set\u003cString\u003e availableCommands;","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-10"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * Parser constructor method","lastModifiedDate":"2022-09-10"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    public Parser() {","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-09-10"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(AddTodoCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(AddDeadlineCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(AddEventCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(FindTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(ListTasksCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(MarkTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(UnmarkTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(DeleteTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(SortTasksCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        this.availableCommands.add(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2022-09-10"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse function takes a string as input and parses it into commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse function is responsible for parsing the user\u0027s input into","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * commands that can be executed by the program. It also handles any errors","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * that may occur during parsing, such as missing arguments or invalid date/time","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * formats.","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * @param userInput","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     *            Get the user input","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws NoCommandException","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    public BaseCommand parse(String userInput) throws NoCommandException, ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"            throw new NoCommandException();","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"            return new AddTodoParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"            return new AddDeadlineParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"            return new AddEventParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"            return new FindTaskParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        case ListTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"            return new ListTaskParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"            return new MarkTaskParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"            return new UnmarkTaskParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"            return new DeleteTaskParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        case SortTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"            return new SortTasksParser().parse(arguments);","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-10"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"            return new HelpCommand(availableCommands);","lastModifiedDate":"2022-09-10"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":103}},{"path":"src/main/java/duke/parser/ParserUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskDescription;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":" * ParserUtil class","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"public class ParserUtil {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"            \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the parsed task description","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * @param description","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     *            The unparsed description","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * @return Parsed task description","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task description is invalid","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    public static TaskDescription parseTaskDescription(String description) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        assert Objects.nonNull(description);","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        if (!TaskDescription.isValid(trimmedDescription)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        return new TaskDescription(description);","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the parsed task index","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     * @param oneBasedIndex","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     *            THe unparsed one based index","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The parsed task index","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws ParseException","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     *             If the index is wrong","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    public static TaskIndex parseTaskIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        if (!isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"        return TaskIndex.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns a predicate if the given string is a non zero unsigned integer","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * @param s","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     *            The test string","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * @return If the given string is a non zero unsigned integer","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-09-09"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns a predicate if the given strNum is numeric","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * @param strNum","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     *            The test string","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     * @return If the given string is a number","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"            Integer.parseInt(strNum);","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns the parsed date time string","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"     * @param inputDateTime","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"     *            The given inputDateTime string","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The parsed date time string to LocalDateTime","lastModifiedDate":"2022-09-09"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"    public static LocalDateTime parseDateTimeString(String inputDateTime)","lastModifiedDate":"2022-09-09"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"        return LocalDateTime.parse(inputDateTime, formatter);","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":105}},{"path":"src/main/java/duke/parser/SortTasksParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.SortTasksCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.enums.SortTaskEnum;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * SortTasksParser Class","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class SortTasksParser implements IParser\u003cSortTasksCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public SortTasksCommand parse(String arguments) {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"        if (SortTaskEnum.contains(arguments)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"            return new SortTasksCommand(SortTaskEnum.valueOf(arguments));","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        return new SortTasksCommand(SortTaskEnum.ASC);","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":19}},{"path":"src/main/java/duke/parser/UnmarkTaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.UnmarkTaskCommand;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * UnmarkTaskParser class","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class UnmarkTaskParser implements IParser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public UnmarkTaskCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        if (ParserUtil.isNumeric(arguments)) {","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"            TaskIndex taskIndex \u003d TaskIndex.fromOneBased(Integer.parseInt(arguments));","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"            return new UnmarkTaskCommand(taskIndex);","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Sorry the second argument is not a number\");","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"johnbenedictyan":23}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" * Storage class in charge of storing the tasks in a text file.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String delimiter \u003d \"@@@\";","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * Ensures that the data file exists, then reads the data file and returns a","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file where the data is stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    public List\u003cTask\u003e load(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            ensureDataFileExist(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            List\u003cTask\u003e initTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"            File dataFile \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                    String taskString \u003d sc.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"                    if (!Objects.equals(taskString, \"\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"                        String[] taskArgs \u003d taskString.split(delimiter);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"                        initTask.add(","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"                                Task.of(","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[0],","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[1],","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[2],","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[3]));","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"                sc.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"                return initTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"                throw new RuntimeException(","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"                        \"This cannot happen has the duke/data file is ensured to be there\");","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     * Writes the data to the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file you want to write to.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     * @param tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     *            The list of tasks to be written to the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    public void writeDataToFile(String filePath, List\u003cString\u003e tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"        FileWriter writer;","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"            writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"            for (String taskString : tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"                writer.write(String.format(\"%s%s\", taskString, \"\\n\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"                writer.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"                // TODO Auto-generated catch block","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"            // TODO Auto-generated catch block","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates the data file if it doesn\u0027t exist","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file that will be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    private static void ensureDataFileExist(String filePath)","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            throws IOException, SecurityException {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        Path dataFilePath \u003d Paths.get(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        boolean dataFileExists \u003d Files.exists(dataFilePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(dataFileExists)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"            createDataFile(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"        new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     * It creates a file at the given path","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file you want to create.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"    private static void createDataFile(String filePath)","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"            throws IOException, SecurityException {","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"        dataFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"        dataFile.createNewFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":120}},{"path":"src/main/java/duke/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.tasklist;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Set;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.task.TaskIndex;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.enums.SortTaskEnum;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":" * The type Task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    private final Set\u003cTask\u003e taskSet;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * @param initTaskList","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     *            Initial Task List","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskList(List\u003cTask\u003e initTaskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList \u003d initTaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     * Marks a task as complete.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * @param taskIndex","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     *            Find the task in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A task object","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws TaskNotFoundException","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task in the given index does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    public Task markTask(TaskIndex taskIndex) throws TaskNotFoundException {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"            Task curr \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"            curr.setComplete();","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"            return curr;","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * The unmarkTask function marks a task as incomplete.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * @param taskIndex","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     *            Find the task in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The task that was un-marked","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws TaskNotFoundException","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task in the given index does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    public Task unmarkTask(TaskIndex taskIndex) throws TaskNotFoundException {","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"            Task curr \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"            curr.setIncomplete();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"            return curr;","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * The addTask function adds a new task to the list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * @param newTask","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the task object to be added to the tasklist","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        boolean addFlag \u003d taskSet.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"        if (addFlag) {","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     * The deleteTask function removes the task at index idx from the list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * @param taskIndex","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"     *            Find the task to be deleted","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The task that was deleted","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws TaskNotFoundException","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task in the given index does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"    public Task deleteTask(TaskIndex taskIndex) throws TaskNotFoundException {","lastModifiedDate":"2022-09-09"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"            Task curr \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-09-09"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"            taskList.remove(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            taskSet.remove(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"            return curr;","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     * Export task list list.","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the list","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"    public List\u003cString\u003e exportTaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"        return this.taskList","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"                .stream()","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"                .map(Task::exportString)","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"     * The convertTaskListToString function takes a list of tasks and converts it to","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"     * a string.","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"     * @param tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"     *            List of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string representation of the list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"    public String convertTaskListToString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d String.format(\"%s%d%s%s%s\", result, counter, \": \", task, \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"        return result;","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"     * The outputTasksString function returns a string representation of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"     * list.","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string representation of the task list","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"    public String outputTasksString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(this.taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"     * The outputTasksBeforeString function takes a LocalDateTime dateTime as an","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"     * argument and returns","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"     * a String containing the tasks that are due before the given dateTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"     *            Filter out tasks that are before the datetime parameter","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string of tasks that are before a given date","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"    public String outputTasksBeforeString(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"                this.taskList","lastModifiedDate":"2022-09-09"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"                        .stream()","lastModifiedDate":"2022-09-09"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"                        .filter(task -\u003e task.isBefore(dateTime))","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"     * The outputTasksAfterString function takes a LocalDateTime dateTime as an","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"     * argument and returns","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"     * a String containing the tasks that are due after the given dateTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"     *            Filter the tasks that are after a certain date","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string containing the tasks that are after the datetime","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"    public String outputTasksAfterString(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.taskList","lastModifiedDate":"2022-09-09"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"                .stream()","lastModifiedDate":"2022-09-09"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"                .filter(task -\u003e task.isAfter(dateTime)).sorted().collect(Collectors.toList());","lastModifiedDate":"2022-09-10"},{"lineNumber":175,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(filteredTasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"     * The searchTasks function searches the task list for tasks that contain the","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"johnbenedictyan"},"content":"     * search term.","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"johnbenedictyan"},"content":"     * @param searchTerms","lastModifiedDate":"2022-09-01"},{"lineNumber":183,"author":{"gitId":"johnbenedictyan"},"content":"     *            The search terms","lastModifiedDate":"2022-09-01"},{"lineNumber":184,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"johnbenedictyan"},"content":"    public String searchTasks(String... searchTerms) {","lastModifiedDate":"2022-09-01"},{"lineNumber":187,"author":{"gitId":"johnbenedictyan"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.taskList","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"johnbenedictyan"},"content":"                .stream()","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"johnbenedictyan"},"content":"                .filter(task -\u003e task.textContains(searchTerms))","lastModifiedDate":"2022-09-01"},{"lineNumber":190,"author":{"gitId":"johnbenedictyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(filteredTasks);","lastModifiedDate":"2022-09-09"},{"lineNumber":192,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":193,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":194,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":195,"author":{"gitId":"johnbenedictyan"},"content":"     * The sortTaskList function sorts the taskList in ascending order.","lastModifiedDate":"2022-09-09"},{"lineNumber":196,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-09-09"},{"lineNumber":197,"author":{"gitId":"johnbenedictyan"},"content":"     * @param direction","lastModifiedDate":"2022-09-09"},{"lineNumber":198,"author":{"gitId":"johnbenedictyan"},"content":"     *            Determine whether the sort is ascending or descending","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-09-09"},{"lineNumber":200,"author":{"gitId":"johnbenedictyan"},"content":"    public void sortTaskList(SortTaskEnum direction) {","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"johnbenedictyan"},"content":"        if (direction \u003d\u003d SortTaskEnum.ASC) {","lastModifiedDate":"2022-09-09"},{"lineNumber":202,"author":{"gitId":"johnbenedictyan"},"content":"            Collections.sort(this.taskList);","lastModifiedDate":"2022-09-09"},{"lineNumber":203,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":204,"author":{"gitId":"johnbenedictyan"},"content":"        Collections.reverse(this.taskList);","lastModifiedDate":"2022-09-09"},{"lineNumber":205,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(this.taskList);","lastModifiedDate":"2022-09-09"},{"lineNumber":206,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":207}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * UI Class in charge of al things the users see","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String backupLogo \u003d \"********Aladdin********\";","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String greetingMessage \u003d \"Welcome to Aladdin Services\";","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String exitMessage \u003d \"Goodbye and have a nice day!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String getCommandMessage \u003d \"Enter Command:\";","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Ui Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    public Ui() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * The showGreeting function prints the Aladdin Services logo to the console.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        File file \u003d new File(\"src/main/assets/logo.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                System.out.println(sc.nextLine());","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            sc.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            System.out.println(backupLogo);","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(greetingMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     * The showGoodbye function prints a message to the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * The getUserCommand function prompts the user for a command and returns it.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(getCommandMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     * The showResult function prints the result of a command to the console.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"     * @param result","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     *            Return the result of the command execution","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    public void showResult(CommandResult result) {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(result.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":72}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" spacing\u003d\"20.0\"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"        \u003cInsets bottom\u003d\"25.0\" left\u003d\"25.0\" right\u003d\"25.0\" top\u003d\"25.0\"/\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    \u003cVBox fx:id\u003d\"dialogBox\"\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"            \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        \u003cText fx:id\u003d\"dialog\" wrappingWidth\u003d\"200.0\" textOrigin\u003d\"TOP\" textAlignment\u003d\"JUSTIFY\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"johnbenedictyan":22}},{"path":"src/main/resources/view/DukeWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.AnchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"275.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"275.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"125.0\" text\u003d\"Send Command\" /\u003e","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"johnbenedictyan":21}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ErrorCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.NoCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.ParseException;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse_emptyInput_returnsIncorrect function tests that the parse function","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * returns an ErrorCommand when given empty inputs.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The following","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    public void parse_emptyInput_returnsIncorrect() {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        final String[] emptyInputs \u003d { \"\", \"  \", \"\\n  \\n\" };","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        final String resultMessage \u003d \"Please enter a command\";","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse_unknownCommandWord_returnsError function tests that the parse","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * function returns an ErrorCommand","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * when given a string containing an unknown command word.","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @return An errorcommand","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    public void parse_unknownCommandWord_returnsError() {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"        final String input \u003d \"unknown command\";","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        parseAndAssertCommandType(","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"                input, ErrorCommand.class);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     * The parseAndAssertIncorrectWithMessage function is a helper function that","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * parses the given input and asserts that it is an ErrorCommand with the","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     * expected feedback message. The inputs are passed as varargs, so this function","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * can be used to test multiple inputs at once. This is useful for testing error","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * messages.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * @param feedbackMessage","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     *            Provide feedback to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * @param inputs","lastModifiedDate":"2022-09-10"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass an array of strings to the function","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * @return An errorcommand","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    private void parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"            String feedbackMessage, String... inputs) {","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        for (String input : inputs) {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"            final ErrorCommand result \u003d parseAndAssertCommandType(","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"                    input, ErrorCommand.class);","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"            assertEquals(result.getMessage(), feedbackMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * The parseAndAssertCommandType function takes a string input and an expected","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * command class.","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     * It parses the input using the parser, and asserts that the resulting command","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * is of type","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * expectedCommandClass. If it is not, then it throws an AssertionError with a","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     * helpful message.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * @param input","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the input to the parseandassertcommandtype function","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     * @param expectedCommandClass","lastModifiedDate":"2022-09-10"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"     *            Specify the type of command that is expected to be returned","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command of the expected type","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"    private \u003cT extends BaseCommand\u003e T parseAndAssertCommandType(","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"            String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        BaseCommand result;","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d parser.parse(input);","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (NoCommandException | ParseException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d new ErrorCommand(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        return (T) result;","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"johnbenedictyan":98}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"deadline return book /by 02-12-2019 18:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"event project meeting /at 05-12-2019 12:00","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"deadline do homework /by 05-02-2020 12:00","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"todo","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"blah","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"todo read book","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"deadline return book /by 06-06-2019 00:00","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"todo join sports club","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"mark 5","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"delete 3","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"list /before 21-02-2019 19:00","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"list /after 03-12-2019 19:00","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"find book","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"REM make the data directory","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"mkdir ..\\bin\\duke\\data\\","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"REM copy the existing data file into the test bin folder","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"copy ..\\src\\main\\java\\duke\\data\\data.txt ..\\bin\\duke\\data\\data.txt","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":8,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"# make the data directory","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"mkdir ../bin/duke/data/","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"# copy the existing data file into the test bin folder","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"cp ../src/main/java/duke/data/tasks.txt ../bin/duke/data/tasks.txt","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"java -classpath ../bin duke.Duke ../bin/duke/data/tasks.txt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":8,"-":36}}]

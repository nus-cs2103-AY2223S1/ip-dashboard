[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"checkstyle {","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":6,"-":40}},{"path":"src/main/assets/logo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"                                                           (%%                                                          ","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"                                                         #\u0026\u0026%*                                                          ","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"                                                         @\u0026#                                                            ","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"                                                         #%.                                                            ","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"                                                        %#/(                                                            ","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"                                                   ,//*****,,,*,                                                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"                                          .(/,   %\u0026\u0026#**,********//.    ..                                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"                                            (((/@%(//((*,***///*//\u0026\u0026*,,*                                                ","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"                                            *((((//*,,,((///*,.,((/%*,*                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"                                            *((((**,,,,./(**,....(/***,                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"                                           .#/(/(/(,,,*%./*(@...,/****,                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"                                           /(((//****,,,//*,,..*/*****,                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"                                          */#((##((//////*,,***********                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"                                         %\u0026@\u0026(\u0026%##(((((((/,,,,,**(*#/*.                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"                                            (@(/@%****////**,.   #(*((                                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"                                           %#/*/*(##((((/#(//**/#/\u0026/*/%                                                 ","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"                                        *(\u0026(/**/,,.,*(////*****,.. ****\u0026*                                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"                                     *(/(#@///****,,,,,,.......  .,**,,##,**,                                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"                                 *////(//#@#((///***********,,,,,,,,,,*\u0026%,,,,**                                         ","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"                             .****//((((((\u0026\u0026%((((////////*********,,**\u0026\u0026,,,****,*,                                      ","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"                            //((/*****/(##((\u0026@\u0026\u0026\u0026#(((/((//////****(%\u0026\u0026#,,*//**,,,**.                                    ","lastModifiedDate":"2022-08-16"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"                          *///(#((*//////((##%%%%\u0026\u0026@@@@@@\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026%(****/(/***,,,,,,*,                                   ","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                         **/////(///***********///((#%\u0026\u0026\u0026\u0026\u0026\u0026%(//***/(#//***,,,,,,,,,*,                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"                         /////((/////////********///(#\u0026@\u0026\u0026\u0026*./**(((/*****,,,,,,,,,,,**                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                         ///(((((((////////////****////#..,*(((/********,*,,,,,,,,,,**                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                         /(((((((((((/////////////*****(/((((///*********,,,,,,,,,***.                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                          /((((((((((((//////////////*((((((//////**********,,******,                                   ","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                           ,((((((((((((((((////////##((((((((//////***************                                     ","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                             .(#(((((((((((((((((##(((##(((((((((///////********/.                                      ","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                                  .*(#(##/,.###(((((((((####((((((((////////(*                                          ","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                                             #%####(((((((((((###  ...                                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                                             /%%%%%%%%##########/                                                       ","lastModifiedDate":"2022-08-16"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"                                             ,%%%%%%%######(((((                                                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"                                              .%%%%%%%%#####.                                                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                                              /%%%%%%######                                                             ","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                                              #%%%%%%####(                                                              ","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                                              #%%%%%####%                                                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"                                              *%%%%%####*         ,//*                                                  ","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                                               %\u0026%%%%###\u0026(...*%\u0026\u0026%%##(#(                                                ","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                                                *%%%%%%%%%\u0026%\u0026\u0026\u0026\u0026%#(((((/                                                ","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                                                  .#\u0026%%%%%%%%%%###(*.                                                   ","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"                                                           *%%%#                                                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"                                                           /%%#(/((                                                     ","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"                                                                  .#,,,           (/       ..                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"                                                                       .#%//*..,%\u0026#*/%,. (/. *(,                        ","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"                                                                           #(/(((##(/,,/(/#*.                           ","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"                                                                             ,%%%%###(##.                               ","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                                                                                .%%##.                                  ","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ErrorCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.BaseTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.IncorrectArgumentException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.MissingArgumentException;","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.NoCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":" * The type duke.Duke.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String defaultFilePath \u003d \"src/main/java/duke/data/tasks.txt\";","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    private final Parser parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    private final String filepath;","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Duke Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-16"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file where the data is stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-16"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        tasks \u003d new TaskList(storage.load(this.filepath));","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"     * Duke Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    public Duke() {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        this.filepath \u003d defaultFilePath;","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        tasks \u003d new TaskList(storage.load(this.filepath));","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * The runCommandLoopUntilExitCommand function runs a loop that will continue to","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * run until the user enters an exit command.","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     * It first asks for a command from the user, and then tries to parse it using","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * the Parser class. If there is an error in parsing,","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     * it will display that error message and ask for another command. Otherwise, if","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * there are no errors in parsing, it runs runCommand on","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     * the parsed Command object (which returns a CommandResult). The function then","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     * displays this result on screen using Ui\u0027s showResult method.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        BaseCommand command;","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        do {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"            String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-08-22"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"                command \u003d parser.parse(userCommandText);","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (MissingArgumentException | InvalidDateTimeException | InvalidTaskSpecificationException","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"                    | IncorrectArgumentException | UnknownCommandException | NoCommandException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"                command \u003d new ErrorCommand(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"            CommandResult result \u003d runCommand(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"            ui.showResult(result);","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"        } while (!ExitCommand.equals(command));","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"     * The runCommand function takes a BaseCommand object as an argument and","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     * executes it.","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"     * If the command is a BaseTaskCommand, then the task list is set to this","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"     * TaskList object.","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     * The function returns the result of executing that command.","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * @param command","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the command object to the run command method","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result object","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"    private CommandResult runCommand(BaseCommand command) {","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        CommandResult result;","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        if (command instanceof BaseTaskCommand) {","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"            BaseTaskCommand taskCommand \u003d (BaseTaskCommand) command;","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"            taskCommand.setTaskList(this.tasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d taskCommand.execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            storage.writeDataToFile(this.filepath, tasks.exportTaskList());","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"            return result;","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        return command.execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * The run function is the main function of the program. It starts by showing","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     * a greeting message to the user, then enters a loop that runs until an exit","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"     * command is entered. Inside this loop, it parses and executes commands from","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     * standard input (the keyboard). The run function also handles exceptions and","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"     * prints error messages to standard output (the screen). When an exception is","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"     * thrown during execution of a command, it will be caught here so that we can","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"     * print out an appropriate error message before continuing with our program.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"    public void run() {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"        ui.showGreeting();","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"        ui.showGoodbye();","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"     * The entry point of application.","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"     * @param args","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"     *            the input arguments","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-16"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"        if (args.length \u003e 0 \u0026\u0026 isValidFilePath(args[0])) {","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"            new Duke(args[0]).run();","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"            new Duke().run();","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"     * The isValidFilePath function checks to see if the string passed in is a valid","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"     * file path.","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"     * @param string","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"     *            Check if the file path is valid","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"     * @return True","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean isValidFilePath(String string) {","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"johnbenedictyan":141,"-":3}},{"path":"src/main/java/duke/DukeCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The enum duke.Duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public enum DukeCommands {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"     * Exit duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     * List duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * Mark duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * Unmark duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * Todo duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * Deadline duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Event duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * Delete duke commands.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    private final String text;","lastModifiedDate":"2022-08-16"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    DukeCommands(String text) {","lastModifiedDate":"2022-08-16"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-16"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        return this.text;","lastModifiedDate":"2022-08-16"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":50}},{"path":"src/main/java/duke/commands/BaseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * Base Command Interface","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public interface BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    CommandResult execute();","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":8}},{"path":"src/main/java/duke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * CommandResult Class","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class CommandResult {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    private final String message;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * The getMessage function returns the message that was passed into the","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * constructor.","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The message variable","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        return message;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":22}},{"path":"src/main/java/duke/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * ErrorCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class ErrorCommand implements BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    private final String message;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    public ErrorCommand(String message) {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(this.message);","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the message","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    public String getMessage() {","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"        return message;","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":24}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * ExitCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class ExitCommand implements BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"        String successMessage \u003d \"Thank you for using aladdin services!\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    public static boolean equals(BaseCommand command) {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":16}},{"path":"src/main/java/duke/commands/tasks/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * AddTaskCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class AddTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    private final Task task;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully added!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * AddTaskCommand Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * (non-Javadoc)","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * @see duke.commands.BaseCommand#execute()","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList.addTask(task);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(\"%s%s%s\", successMessage, \"\\n\", task);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":31}},{"path":"src/main/java/duke/commands/tasks/BaseTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * BaseTaskCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public abstract class BaseTaskCommand implements BaseCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private final String borderMessage \u003d \"______________________\";","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     * The formatOutputString function formats the output string by adding a divider","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * and","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     * returning it.","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the text to be formatted","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string that includes the text","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public String formatOutputString(String text) {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"                \"\\n%s\\n%s\\n%s\\n\",","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"                borderMessage,","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                text,","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                borderMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     * @param taskList","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     *            the taskList to set","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":37}},{"path":"src/main/java/duke/commands/tasks/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * DeleteTaskCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class DeleteTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully deleted!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private String errorMessage \u003d \"An error occurred when deleting this task:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final int taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public DeleteTaskCommand(Integer taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * (non-Javadoc)","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * @see duke.commands.BaseCommand#execute()","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"            Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"            successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", successMessage, deletedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (TaskNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            errorMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", errorMessage, e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(super.formatOutputString(errorMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":41}},{"path":"src/main/java/duke/commands/tasks/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * Find Task Command Class","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class FindTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    private final String searchTerm;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are the matching tasks:\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     * Find Task Command Constructor","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"     * @param searchTerm","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    public FindTaskCommand(String searchTerm) {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * The execute function is the main function of a command. It is called when","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * the user calls a command and returns a CommandResult object that contains","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     * information about whether or not the command was successful, and if it was,","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * what to display to the user. In this case, we are using it to search for","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * tasks in our task list by name. We will be searching for all tasks with names","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * that contain our search term (case insensitive). If there are no matching","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * tasks found then we will return an error message saying so; otherwise we\u0027ll","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * return successMessage which contains all of our matching task names separated","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * by newlines.","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                taskList.searchTasks(this.searchTerm));","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"johnbenedictyan":42}},{"path":"src/main/java/duke/commands/tasks/ListTasksAfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * ListTasksAfterCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTasksAfterCommand extends ListTasksCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public ListTasksAfterCommand(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * The execute function prints out all the tasks that are due after a certain","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     * date.","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result object","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                taskList.outputTasksAfterString(this.dateTime));","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":33}},{"path":"src/main/java/duke/commands/tasks/ListTasksBeforeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * ListTasksBeforeCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTasksBeforeCommand extends ListTasksCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public ListTasksBeforeCommand(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"     * The execute function prints out the tasks that are due before a certain date.","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command result object","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\",","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                successMessage,","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"                taskList.outputTasksBeforeString(this.dateTime));","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":31}},{"path":"src/main/java/duke/commands/tasks/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * ListTasksCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class ListTasksCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"        successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s\", successMessage, taskList.outputTasksString());","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/commands/tasks/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * MarkTaskCommand Class","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class MarkTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully marked!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private String errorMessage \u003d \"An error occurred when marking this task:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final Integer taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public MarkTaskCommand(Integer taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"            Task markedTask \u003d taskList.markTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"            successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", successMessage, markedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (TaskNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"            errorMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", errorMessage, e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(super.formatOutputString(errorMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":37}},{"path":"src/main/java/duke/commands/tasks/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.commands.tasks;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" * UnmarkTaskCommand class","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"public class UnmarkTaskCommand extends BaseTaskCommand {","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private String successMessage \u003d \"This task has been successfully unmarked!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    private String errorMessage \u003d \"An error occurred when unmarking this task:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private final Integer taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    public UnmarkTaskCommand(Integer taskIndex) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"            Task unmarkedTask \u003d taskList.unmarkTask(taskIndex);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"            successMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", successMessage, unmarkedTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (TaskNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"            errorMessage \u003d String.format(","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                    \"%s%s\", errorMessage, e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"            return new CommandResult(super.formatOutputString(errorMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        return new CommandResult(super.formatOutputString(successMessage));","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":37}},{"path":"src/main/java/duke/domain/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * The type Deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private Deadline(String text, LocalDateTime deadline) {","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        super(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"                \"[D] %s (by: %s)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"                super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                this.deadline.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                \"D\",","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                super.exportString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                this.deadline.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * Of deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    public static Deadline of(String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        return new Deadline(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     * Of deadline.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the deadline","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    public static Deadline of(","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"            String done,","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"            String text,","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"            LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        Deadline newDeadline \u003d Deadline.of(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"            newDeadline.setComplete();","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        return newDeadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"        Deadline deadline1 \u003d (Deadline) o;","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"        return deadline.equals(deadline1.deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        return Objects.hash(super.hashCode(), deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        return this.deadline.isBefore(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isAfter(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        return this.deadline.isAfter(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":99}},{"path":"src/main/java/duke/domain/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" * The type Event.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    private Event(String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"        super(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"                \"[E] %s (at: %s)\",","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"                super.toString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"                this.dateTime.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%s%s\",","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"                \"E\",","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"                super.exportString(),","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"                this.dateTime.format(FORMATTER));","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * Of event.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the event","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    public static Event of(String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        return new Event(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"     * Of event.","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the event","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    public static Event of(String done, String text, LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        Event newEvent \u003d Event.of(text, dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"            newEvent.setComplete();","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        return newEvent;","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-08-24"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        return dateTime.equals(event.dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        return Objects.hash(super.hashCode(), dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        return this.dateTime.isBefore(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isAfter(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"        return this.dateTime.isAfter(dateTime);","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":96}},{"path":"src/main/java/duke/domain/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":" * The type Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"public class Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"     * The constant FORMATTER.","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    protected static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"            \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    protected static final String NULL_SYMBOL \u003d \"$_$\";","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    private final String text;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    private Boolean isComplete;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Task.","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    protected Task(String text) {","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the task to be complete.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    public void setComplete() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * Sets the task to be incomplete.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    public void setIncomplete() {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"        return this.isComplete","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"                ? String.format(\"[X] %s\", this.text)","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"                : String.format(\"[ ] %s\", this.text);","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"    private static LocalDateTime interpretLocalDateTime(String input)","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"                \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     * Of task.","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     * @param type","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     *            the type","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     * @param text","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     *            the text","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTimeInput","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time input","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the task","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws InvalidDateTimeException","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     *             the invalid date time exception","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws InvalidTaskSpecificationException","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     *             the invalid task specification exception","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"    public static Task of(","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"            String type,","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"            String done,","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"            String text,","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"            String dateTimeInput)","lastModifiedDate":"2022-08-24"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"            throws InvalidDateTimeException, InvalidTaskSpecificationException {","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isEvent \u003d Objects.equals(type, \"E\");","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isDeadline \u003d Objects.equals(type, \"D\");","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        Boolean isTodo \u003d Objects.equals(type, \"T\");","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        if (isEvent || isDeadline || isTodo) {","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"            if (isEvent || isDeadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"                try {","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"                    LocalDateTime dateTime \u003d interpretLocalDateTime(","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"                            dateTimeInput);","lastModifiedDate":"2022-08-24"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"                    if (isEvent) {","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"                        return Event.of(done, text, dateTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"                    }","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"                    return Deadline.of(done, text, dateTime);","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"                    throw new InvalidDateTimeException(","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"                            \"Must have valid date time!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"                }","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"            return Todo.of(done, text);","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"        } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"            throw new InvalidTaskSpecificationException(","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Impossible for task to be not e d or t\");","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"     * Export the export string.","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the string","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"                \"%s%d%s%s%s\",","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"                \"@@@\",","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"                this.isComplete ? 1 : 0,","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"                \"@@@\",","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"                this.text,","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"                \"@@@\");","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-08-24"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"            return true;","lastModifiedDate":"2022-08-24"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-24"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2022-08-24"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"        return text.equals(task.text) \u0026\u0026 isComplete.equals(task.isComplete);","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"        return Objects.hash(text, isComplete);","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"     * Is before boolean.","lastModifiedDate":"2022-08-24"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the boolean","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"     * Is after boolean.","lastModifiedDate":"2022-08-24"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"     *            the date time","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the boolean","lastModifiedDate":"2022-08-24"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean isAfter(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"     * The textContains function returns true if the text of this Task contains the","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"     * searchTerm.","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"     * @param searchTerm","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"     *            Search for the text in the text field","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A boolean value","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"    public Boolean textContains(String searchTerm) {","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"        return this.text.contains(searchTerm);","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":176}},{"path":"src/main/java/duke/domain/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.domain;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":" * The type Todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"    private Todo(String text) {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"        super(text);","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    public String exportString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"        return String.format(\"%s%s%s\", \"T\", super.exportString(), NULL_SYMBOL);","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * Of todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * @param todoText","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     *            the todo text","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the todo","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    public static Todo of(String todoText) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"        return new Todo(todoText);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * Of todo.","lastModifiedDate":"2022-08-24"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     * @param done","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     *            the done","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * @param todoText","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     *            the todo text","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the todo","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    public static Todo of(String done, String todoText) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        Todo newTodo \u003d Todo.of(todoText);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"        if (Objects.equals(done, \"1\")) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"            newTodo.setComplete();","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return newTodo;","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":51}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type duke.Duke exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new duke.Duke exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public DukeException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/IncorrectArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Incorrect argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class IncorrectArgumentException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Incorrect argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public IncorrectArgumentException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Invalid date time exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Invalid date time exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public InvalidDateTimeException(String errorString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/InvalidTaskSpecificationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Invalid task specification exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class InvalidTaskSpecificationException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Invalid task specification exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public InvalidTaskSpecificationException(String errorString) {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Missing argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Missing argument exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public MissingArgumentException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/exceptions/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * No Command Exception Class","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class NoCommandException extends DukeException {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * No command found exception constructor.","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public NoCommandException(String errorString) {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"johnbenedictyan":14}},{"path":"src/main/java/duke/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Task not found exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Task not found exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"        super(\"Sorry this task does not exist\");","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":14}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.exceptions;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":" * The type Unknown command exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Unknown command exception.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"     * @param errorString","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"     *            the error string","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    public UnknownCommandException(String errorString) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"        super(errorString);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.AddTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.FindTaskCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksAfterCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksBeforeCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.ListTasksCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.MarkTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.tasks.UnmarkTaskCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Todo;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.IncorrectArgumentException;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.MissingArgumentException;","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.NoCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":" * Parser Class in charge of parsing the users\u0027 command.","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"public class Parser {","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String listCommand \u003d \"list\";","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String markCommand \u003d \"mark\";","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String todoCommand \u003d \"todo\";","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String deadlineCommand \u003d \"deadline\";","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String findCommand \u003d \"find\";","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String deadlineSubCommand \u003d \" /by \";","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String eventCommand \u003d \"event\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String eventSubCommand \u003d \" /at \";","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String advancedListSubCommand1 \u003d \"/before \";","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String advancedListSubCommand2 \u003d \"/after \";","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String unmarkCommand \u003d \"unmark\";","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String deleteCommand \u003d \"delete\";","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String exitCommand \u003d \"bye\";","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"            \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    private static LocalDateTime parseInputString(String inputDateTime)","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        return LocalDateTime.parse(inputDateTime, formatter);","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * Returns a boolean corresponding to whether the given string is numeric.","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * @param strNum","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     *            String to be tested","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * @return boolean representing whether the string is numeric","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    private static boolean isNumeric(String strNum) {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"            Integer.parseInt(strNum);","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"            return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse function takes a string as input and parses it into commands.","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse function is responsible for parsing the user\u0027s input into","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     * commands that can be executed by the program. It also handles any errors","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"     * that may occur during parsing, such as missing arguments or invalid date/time","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * formats.","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * @param userInput","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     *            Get the user input","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"    public BaseCommand parse(String userInput)","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"            throws MissingArgumentException, InvalidDateTimeException, InvalidTaskSpecificationException,","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"            IncorrectArgumentException, UnknownCommandException, NoCommandException {","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"            throw new NoCommandException(","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Please enter a command\");","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"        String[] commandArgs \u003d userInput.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"        String[] commandArgsCopy \u003d new String[commandArgs.length - 1];","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"        System.arraycopy(","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"                commandArgs,","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"                1,","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"                commandArgsCopy,","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"                0,","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"                commandArgs.length - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"        switch (commandArgs[0]) {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        case exitCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        case todoCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"            String todoText \u003d String.join(\" \", commandArgsCopy);","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"            if (commandArgsCopy.length \u003e 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"                Task newTodo \u003d Todo.of(todoText);","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"                return new AddTaskCommand(newTodo);","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"                throw new MissingArgumentException(","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"                        \"The description of the todo cannot be empty!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"        case deadlineCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"            String deadlineText \u003d String.join(\" \", commandArgsCopy);","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"            if (deadlineText.contains(deadlineSubCommand)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"                String[] deadlineArgs \u003d deadlineText.split(","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"                        deadlineSubCommand);","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"                String deadlineTitle \u003d deadlineArgs[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"                String deadline \u003d deadlineArgs[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"                Task newDeadline \u003d Task.of(","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"                        \"D\",","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"                        \"0\",","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"                        deadlineTitle,","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"                        deadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"                return new AddTaskCommand(newDeadline);","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"                throw new MissingArgumentException(","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"                        \"Deadlines need a /by command\");","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"        case eventCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"            String eventText \u003d String.join(\" \", commandArgsCopy);","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"            if (eventText.contains(eventSubCommand)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"                String[] eventArgs \u003d eventText.split(eventSubCommand);","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"                String eventTitle \u003d eventArgs[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"                String eventDateTime \u003d eventArgs[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"                Task newEvent \u003d Task.of(","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"                        \"E\",","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"                        \"0\",","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"                        eventTitle,","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"                        eventDateTime);","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"                return new AddTaskCommand(newEvent);","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"                throw new MissingArgumentException(","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"                        \"Events need a /at command\");","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"        case markCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"            if (isNumeric(commandArgs[1])) {","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"                int idx \u003d Integer.parseInt(commandArgs[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"                return new MarkTaskCommand(idx - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"                throw new IncorrectArgumentException(","lastModifiedDate":"2022-08-26"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"                        \"Sorry the second argument is not a number\");","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"        case unmarkCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"            if (isNumeric(commandArgs[1])) {","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"                int idx \u003d Integer.parseInt(commandArgs[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"                return new UnmarkTaskCommand(idx - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"                throw new IncorrectArgumentException(","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"                        \"Sorry the second argument is not a number\");","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"        case deleteCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"            if (isNumeric(commandArgs[1])) {","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"                int idx \u003d Integer.parseInt(commandArgs[1]);","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"                return new DeleteTaskCommand(idx - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"                throw new IncorrectArgumentException(","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"                        \"Sorry the second argument is not a number\");","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"        case findCommand:","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"            return new FindTaskCommand(commandArgs[1]);","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"        case listCommand:","lastModifiedDate":"2022-08-26"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"            String advancedListText \u003d String.join(\" \", commandArgsCopy);","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"johnbenedictyan"},"content":"            if (advancedListText.contains(advancedListSubCommand1)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"                String[] advancedListArgs \u003d advancedListText.split(","lastModifiedDate":"2022-08-26"},{"lineNumber":177,"author":{"gitId":"johnbenedictyan"},"content":"                        advancedListSubCommand1);","lastModifiedDate":"2022-08-26"},{"lineNumber":178,"author":{"gitId":"johnbenedictyan"},"content":"                String advancedListDateTime \u003d advancedListArgs[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"                return new ListTasksBeforeCommand(","lastModifiedDate":"2022-08-26"},{"lineNumber":180,"author":{"gitId":"johnbenedictyan"},"content":"                        parseInputString(advancedListDateTime));","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"johnbenedictyan"},"content":"            } else if (advancedListText.contains(advancedListSubCommand2)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":182,"author":{"gitId":"johnbenedictyan"},"content":"                String[] advancedListArgs \u003d advancedListText.split(","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"johnbenedictyan"},"content":"                        advancedListSubCommand2);","lastModifiedDate":"2022-08-26"},{"lineNumber":184,"author":{"gitId":"johnbenedictyan"},"content":"                String advancedListDateTime \u003d advancedListArgs[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":185,"author":{"gitId":"johnbenedictyan"},"content":"                return new ListTasksAfterCommand(","lastModifiedDate":"2022-08-26"},{"lineNumber":186,"author":{"gitId":"johnbenedictyan"},"content":"                        parseInputString(advancedListDateTime));","lastModifiedDate":"2022-08-26"},{"lineNumber":187,"author":{"gitId":"johnbenedictyan"},"content":"            } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":188,"author":{"gitId":"johnbenedictyan"},"content":"                return new ListTasksCommand();","lastModifiedDate":"2022-08-26"},{"lineNumber":189,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"johnbenedictyan"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"johnbenedictyan"},"content":"            throw new UnknownCommandException(","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"johnbenedictyan"},"content":"                    \"Sorry I don\u0027t understand that command\");","lastModifiedDate":"2022-08-26"},{"lineNumber":193,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":195,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":195}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":" * Storage class in charge of storing the tasks in a text file.","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"public class Storage {","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String delimiter \u003d \"@@@\";","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     * Ensures that the data file exists, then reads the data file and returns a","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"     * list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file where the data is stored.","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    public List\u003cTask\u003e load(String filePath) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            ensureDataFileExist(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            List\u003cTask\u003e initTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"            File dataFile \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"                Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"                    String taskString \u003d sc.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"                    if (!Objects.equals(taskString, \"\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"                        String[] taskArgs \u003d taskString.split(delimiter);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"                        initTask.add(","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"                                Task.of(","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[0],","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[1],","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[2],","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"                                        taskArgs[3]));","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"                sc.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"                return initTask;","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"                throw new RuntimeException(","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"                        \"This cannot happen has the duke/data file is ensured to be there\");","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     * Writes the data to the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file you want to write to.","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"     * @param tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     *            The list of tasks to be written to the file.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"    public void writeDataToFile(String filePath, List\u003cString\u003e tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"        FileWriter writer;","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"            writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"            for (String taskString : tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"                writer.write(String.format(\"%s%s\", taskString, \"\\n\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"                writer.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"                // TODO Auto-generated catch block","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"            // TODO Auto-generated catch block","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"     * Creates the data file if it doesn\u0027t exist","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file that will be created.","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"    private static void ensureDataFileExist(String filePath)","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            throws IOException, SecurityException {","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        Path dataFilePath \u003d Paths.get(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        boolean dataFileExists \u003d Files.exists(dataFilePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"        if (!(dataFileExists)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"            createDataFile(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"        new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"     * It creates a file at the given path","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"     * @param filePath","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"     *            The path to the file you want to create.","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"    private static void createDataFile(String filePath)","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"            throws IOException, SecurityException {","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"        dataFile.getParentFile().mkdirs();","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"        dataFile.createNewFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":120}},{"path":"src/main/java/duke/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.tasklist;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Set;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.domain.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":" * The type Task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"public class TaskList {","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private final Set\u003cTask\u003e taskSet;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Instantiates a new Task list.","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"     * @param initTaskList","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"     *            Initial Task List","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    public TaskList(List\u003cTask\u003e initTaskList) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskList \u003d initTaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"        this.taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"     * Marks a task as complete.","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"     * @param idx","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"     *            Find the task in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A task object","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws TaskNotFoundException","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task in the given index does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"    public Task markTask(int idx) throws TaskNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"            Task curr \u003d taskList.get(idx);","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"            curr.setComplete();","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"            return curr;","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"     * The unmarkTask function marks a task as incomplete.","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"     * @param idx","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     *            Find the task in the list","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The task that was un-marked","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws TaskNotFoundException","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task in the given index does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"    public Task unmarkTask(int idx) throws TaskNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"            Task curr \u003d taskList.get(idx);","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"            curr.setIncomplete();","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"            return curr;","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"     * The addTask function adds a new task to the list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"     * @param newTask","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the task object to be added to the tasklist","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"        boolean addFlag \u003d taskSet.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"        if (addFlag) {","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     * The deleteTask function removes the task at index idx from the list of tasks.","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"     * @param idx","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     *            Find the task to be deleted","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The task that was deleted","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     * @throws TaskNotFoundException","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"     *             When the task in the given index does not exist","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"    public Task deleteTask(int idx) throws TaskNotFoundException {","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"            Task curr \u003d taskList.get(idx);","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"            taskList.remove(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"            taskSet.remove(curr);","lastModifiedDate":"2022-08-26"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"            return curr;","lastModifiedDate":"2022-08-26"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"     * Export task list list.","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"johnbenedictyan"},"content":"     * @return the list","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"johnbenedictyan"},"content":"    public List\u003cString\u003e exportTaskList() {","lastModifiedDate":"2022-08-26"},{"lineNumber":108,"author":{"gitId":"johnbenedictyan"},"content":"        return this.taskList.stream()","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"johnbenedictyan"},"content":"                .map(Task::exportString)","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"johnbenedictyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"johnbenedictyan"},"content":"     * The convertTaskListToString function takes a list of tasks and converts it to","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"johnbenedictyan"},"content":"     * a string.","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"johnbenedictyan"},"content":"     * @param tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"johnbenedictyan"},"content":"     *            List of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string representation of the list of tasks","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"johnbenedictyan"},"content":"    public String convertTaskListToString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"johnbenedictyan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"johnbenedictyan"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"johnbenedictyan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d String.format(\"%s%d%s%s%s\", result, counter, \": \", task, \"\\n\");","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"johnbenedictyan"},"content":"            counter++;","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"johnbenedictyan"},"content":"        return result;","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"johnbenedictyan"},"content":"     * The outputTasksString function returns a string representation of the task","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"johnbenedictyan"},"content":"     * list.","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string representation of the task list","lastModifiedDate":"2022-08-26"},{"lineNumber":136,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":137,"author":{"gitId":"johnbenedictyan"},"content":"    public String outputTasksString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(this.taskList);","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"johnbenedictyan"},"content":"     * The outputTasksBeforeString function takes a LocalDateTime dateTime as an","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"johnbenedictyan"},"content":"     * argument and returns","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"johnbenedictyan"},"content":"     * a String containing the tasks that are due before the given dateTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"johnbenedictyan"},"content":"     *            Filter out tasks that are before the datetime parameter","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string of tasks that are before a given date","lastModifiedDate":"2022-08-26"},{"lineNumber":149,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"johnbenedictyan"},"content":"    public String outputTasksBeforeString(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":151,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"johnbenedictyan"},"content":"                this.taskList.stream()","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"johnbenedictyan"},"content":"                        .filter(task -\u003e task.isBefore(dateTime))","lastModifiedDate":"2022-08-26"},{"lineNumber":154,"author":{"gitId":"johnbenedictyan"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":158,"author":{"gitId":"johnbenedictyan"},"content":"     * The outputTasksAfterString function takes a LocalDateTime dateTime as an","lastModifiedDate":"2022-08-26"},{"lineNumber":159,"author":{"gitId":"johnbenedictyan"},"content":"     * argument and returns","lastModifiedDate":"2022-08-26"},{"lineNumber":160,"author":{"gitId":"johnbenedictyan"},"content":"     * a String containing the tasks that are due after the given dateTime.","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":162,"author":{"gitId":"johnbenedictyan"},"content":"     * @param dateTime","lastModifiedDate":"2022-08-26"},{"lineNumber":163,"author":{"gitId":"johnbenedictyan"},"content":"     *            Filter the tasks that are after a certain date","lastModifiedDate":"2022-08-26"},{"lineNumber":164,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string containing the tasks that are after the datetime","lastModifiedDate":"2022-08-26"},{"lineNumber":165,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":166,"author":{"gitId":"johnbenedictyan"},"content":"    public String outputTasksAfterString(LocalDateTime dateTime) {","lastModifiedDate":"2022-08-26"},{"lineNumber":167,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(","lastModifiedDate":"2022-08-26"},{"lineNumber":168,"author":{"gitId":"johnbenedictyan"},"content":"                this.taskList.stream()","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"johnbenedictyan"},"content":"                        .filter(task -\u003e task.isAfter(dateTime))","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"johnbenedictyan"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":172,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"johnbenedictyan"},"content":"     * The searchTasks function searches the task list for tasks that contain the","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"johnbenedictyan"},"content":"     * search term.","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"johnbenedictyan"},"content":"     * @param searchTerm","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"johnbenedictyan"},"content":"     *            Search for a specific task","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"johnbenedictyan"},"content":"    public String searchTasks(String searchTerm) {","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"johnbenedictyan"},"content":"        return convertTaskListToString(","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"johnbenedictyan"},"content":"                this.taskList.stream()","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"johnbenedictyan"},"content":"                        .filter(task -\u003e task.textContains(searchTerm))","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"johnbenedictyan"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":187}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.ui;","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"/**","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":" * UI Class in charge of al things the users see","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":" */","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String backupLogo \u003d \"********Aladdin********\";","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String greetingMessage \u003d \"Welcome to Aladdin Services\";","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String exitMessage \u003d \"Goodbye and have a nice day!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"    private static final String getCommandMessage \u003d \"Enter Command:\";","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"     * Ui Constructor","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"    public Ui() {","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * The showGreeting function prints the Aladdin Services logo to the console.","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"    public void showGreeting() {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"        File file \u003d new File(\"src/main/assets/logo.txt\");","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"                System.out.println(sc.nextLine());","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"            sc.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"            System.out.println(backupLogo);","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(greetingMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"     * The showGoodbye function prints a message to the user.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * The getUserCommand function prompts the user for a command and returns it.","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A string","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(getCommandMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-26"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     * The showResult function prints the result of a command to the console.","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"     * @param result","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"     *            Return the result of the command execution","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"    public void showResult(CommandResult result) {","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"        System.out.println(result.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"johnbenedictyan":72}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"package duke.parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.BaseCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"import duke.commands.ErrorCommand;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.IncorrectArgumentException;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.InvalidTaskSpecificationException;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.MissingArgumentException;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.NoCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"    @BeforeEach","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"    public void setUp() {","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse_emptyInput_returnsIncorrect function tests that the parse function","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"johnbenedictyan"},"content":"     * returns an ErrorCommand when given empty inputs.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"johnbenedictyan"},"content":"     * @return The following","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"johnbenedictyan"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"johnbenedictyan"},"content":"    public void parse_emptyInput_returnsIncorrect() {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"johnbenedictyan"},"content":"        final String[] emptyInputs \u003d { \"\", \"  \", \"\\n  \\n\" };","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"johnbenedictyan"},"content":"        final String resultMessage \u003d \"Please enter a command\";","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"johnbenedictyan"},"content":"        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"johnbenedictyan"},"content":"     * The parse_unknownCommandWord_returnsError function tests that the parse","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"johnbenedictyan"},"content":"     * function returns an ErrorCommand","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"johnbenedictyan"},"content":"     * when given a string containing an unknown command word.","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"johnbenedictyan"},"content":"     * @return An errorcommand","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"johnbenedictyan"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"johnbenedictyan"},"content":"    public void parse_unknownCommandWord_returnsError() {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"johnbenedictyan"},"content":"        final String input \u003d \"unknown command\";","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"johnbenedictyan"},"content":"        parseAndAssertCommandType(","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"johnbenedictyan"},"content":"                input, ErrorCommand.class);","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"johnbenedictyan"},"content":"     * The parseAndAssertIncorrectWithMessage function is a helper function that","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"johnbenedictyan"},"content":"     * parses the given input and asserts that it is an ErrorCommand with the","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"johnbenedictyan"},"content":"     * expected feedback message. The inputs are passed as varargs, so this function","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"johnbenedictyan"},"content":"     * can be used to test multiple inputs at once. This is useful for testing error","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"johnbenedictyan"},"content":"     * messages.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"johnbenedictyan"},"content":"     * @param feedbackMessage","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"johnbenedictyan"},"content":"     *            Provide feedback to the user","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"johnbenedictyan"},"content":"     * @param String...","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass an array of strings to the function","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"johnbenedictyan"},"content":"     * @return An errorcommand","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"johnbenedictyan"},"content":"    private void parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"johnbenedictyan"},"content":"            String feedbackMessage, String... inputs) {","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"johnbenedictyan"},"content":"        for (String input : inputs) {","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"johnbenedictyan"},"content":"            final ErrorCommand result \u003d parseAndAssertCommandType(","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"johnbenedictyan"},"content":"                    input, ErrorCommand.class);","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"johnbenedictyan"},"content":"            assertEquals(result.getMessage(), feedbackMessage);","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"johnbenedictyan"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"johnbenedictyan"},"content":"     * The parseAndAssertCommandType function takes a string input and an expected","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"johnbenedictyan"},"content":"     * command class.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"johnbenedictyan"},"content":"     * It parses the input using the parser, and asserts that the resulting command","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"johnbenedictyan"},"content":"     * is of type","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"johnbenedictyan"},"content":"     * expectedCommandClass. If it is not, then it throws an AssertionError with a","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"johnbenedictyan"},"content":"     * helpful message.","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"johnbenedictyan"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"johnbenedictyan"},"content":"     * @param input","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"johnbenedictyan"},"content":"     *            Pass the input to the parseandassertcommandtype function","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"johnbenedictyan"},"content":"     * @param Class\u0026lt;T\u0026gt;","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"johnbenedictyan"},"content":"     *            Specify the type of command that is expected to be returned","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"johnbenedictyan"},"content":"     * @return A command of the expected type","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"johnbenedictyan"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"johnbenedictyan"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"johnbenedictyan"},"content":"    private \u003cT extends BaseCommand\u003e T parseAndAssertCommandType(","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"johnbenedictyan"},"content":"            String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"johnbenedictyan"},"content":"        BaseCommand result;","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"johnbenedictyan"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d parser.parse(input);","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"johnbenedictyan"},"content":"        } catch (MissingArgumentException | InvalidDateTimeException | InvalidTaskSpecificationException","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"johnbenedictyan"},"content":"                | IncorrectArgumentException | UnknownCommandException | NoCommandException e) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"johnbenedictyan"},"content":"            result \u003d new ErrorCommand(e.getMessage());","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"johnbenedictyan"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"johnbenedictyan"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"johnbenedictyan"},"content":"        return (T) result;","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"johnbenedictyan"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"johnbenedictyan"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"johnbenedictyan":103}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"johnbenedictyan"},"content":"todo borrow book","lastModifiedDate":"2022-08-16"},{"lineNumber":2,"author":{"gitId":"johnbenedictyan"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":3,"author":{"gitId":"johnbenedictyan"},"content":"deadline return book /by 02-12-2019 18:00","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"johnbenedictyan"},"content":"event project meeting /at 05-12-2019 12:00","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"johnbenedictyan"},"content":"deadline do homework /by 05-02-2020 12:00","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"johnbenedictyan"},"content":"todo","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"johnbenedictyan"},"content":"blah","lastModifiedDate":"2022-08-16"},{"lineNumber":8,"author":{"gitId":"johnbenedictyan"},"content":"todo read book","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"johnbenedictyan"},"content":"deadline return book /by 06-06-2019 00:00","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"todo join sports club","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"johnbenedictyan"},"content":"mark 5","lastModifiedDate":"2022-08-16"},{"lineNumber":12,"author":{"gitId":"johnbenedictyan"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"johnbenedictyan"},"content":"delete 3","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"johnbenedictyan"},"content":"list","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"list /before 21-02-2019 19:00","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"list /after 03-12-2019 19:00","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"find book","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"bye","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"johnbenedictyan":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"johnbenedictyan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"REM make the data directory","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"johnbenedictyan"},"content":"mkdir ..\\bin\\duke\\data\\","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"johnbenedictyan"},"content":"REM copy the existing data file into the test bin folder","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"johnbenedictyan"},"content":"copy ..\\src\\main\\java\\duke\\data\\data.txt ..\\bin\\duke\\data\\data.txt","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":8,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"johnbenedictyan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"johnbenedictyan"},"content":"# make the data directory","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"johnbenedictyan"},"content":"mkdir ../bin/duke/data/","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"johnbenedictyan"},"content":"# copy the existing data file into the test bin folder","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"johnbenedictyan"},"content":"cp ../src/main/java/duke/data/tasks.txt ../bin/duke/data/tasks.txt","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"johnbenedictyan"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"johnbenedictyan"},"content":"java -classpath ../bin duke.Duke ../bin/duke/data/tasks.txt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"johnbenedictyan":8,"-":36}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"# duke.Duke project template","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KSHan29":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"checkstyle {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"    mainClassName \u003d \"duke.javafx.Launcher\"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"javafx {","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"    version \u003d \"18.0.2\"","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"    modules \u003d [ \u0027javafx.controls\u0027]","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KSHan29":27,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":" * duke.Duke Program for tracking Tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"public class Duke {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    private Ui ui;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     * duke.Duke constructor.","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     * @param filePath filePath of file to store Task information.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     * @param tempFilePath filePath of temporary file to store information for rewriting.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    public Duke(String filePath, String tempFilePath) {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"        storage \u003d new Storage(filePath, tempFilePath);","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"            ui.printError(e);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"     * Parse user input to String.","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"     * @param input user input.","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"     * @return String of command output or error.","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"            String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"            return output;","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"            return ui.printError(e);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KSHan29":47,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":" * Handles exceptions in duke.Duke program relating to invalid arguments.","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"     * DukeException constructor.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"     * @param message Message to be displayed.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"        super(message);","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"KSHan29":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import duke.commands.DisplayListCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":" * Handles interpretation of user inputs.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"public class Parser {","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     * Parser constructor.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    public Parser() {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     * Parse user input into commands.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * @param fullCommand user inputs.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     * @return Command of task to execute.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"        assert splitCommand.length \u003c\u003d 2 : \"The full command should be split into at most 2 sections\";","lastModifiedDate":"2022-09-04"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"        String remainingCommand \u003d \"\";","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"        if (splitCommand.length \u003e 1) {","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"            remainingCommand \u003d splitCommand[1];","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"        switch(splitCommand[0]) {","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            return new ToDoCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"            return new DeadlineCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"        case \"event\":","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"            return new EventCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"            return new DeleteCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"            return new MarkCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"            return new UnmarkCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"        case \"list\":","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"            return new DisplayListCommand();","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"        case \"find\":","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"            return new FindCommand(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"KSHan29":60}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.File;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":" * Contains methods that deal with storing and loading Tasks from memory.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"public class Storage {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    private String filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    private String tempFilePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     * Constructor for creating Storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     * @param filePath The filePath to the file that stores Tasks in a .txt file.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * @param tempFilePath The filePath for a temporary file for use when main file has to be rewritten.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    public Storage(String filePath, String tempFilePath) {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"        this.tempFilePath \u003d tempFilePath;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"     * Creates files for storage of Tasks if they do not exist. If they exist, returns list of Tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"     * @return An ArrayList of Tasks added previously.","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        // Ensure file exists","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"        File tasksFile \u003d new File(filePath);","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2022-09-05"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"            tempFile.createNewFile();","lastModifiedDate":"2022-09-05"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"        // hardDiskTasks and tempTasks files should exist here","lastModifiedDate":"2022-09-04"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"        assert new File(filePath).exists() : \"File exists is supposed to return true\";","lastModifiedDate":"2022-09-04"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"        assert new File(tempFilePath).exists() : \"Temp file exists is supposed to return true\";","lastModifiedDate":"2022-09-04"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"        // Add disk info to taskList","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"        ArrayList\u003cTask\u003e pastTasks \u003d readTaskMemoFromDisk(tasksFile);","lastModifiedDate":"2022-09-05"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"        return pastTasks;","lastModifiedDate":"2022-08-25"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"     * Loads Tasks previously added from memory and adds into an ArrayList.","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"     * @param file File which contains Tasks added previously.","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"     * @return ArrayList of Tasks which were added previously.","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"    public ArrayList\u003cTask\u003e readTaskMemoFromDisk(File file) {","lastModifiedDate":"2022-09-05"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"        ArrayList\u003cTask\u003e pastTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"                String memo \u003d s.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":72,"author":{"gitId":"KSHan29"},"content":"                Task currentTask \u003d parseTaskMemo(memo);","lastModifiedDate":"2022-09-05"},{"lineNumber":73,"author":{"gitId":"KSHan29"},"content":"                pastTasks.add(currentTask);","lastModifiedDate":"2022-09-05"},{"lineNumber":74,"author":{"gitId":"KSHan29"},"content":"            }","lastModifiedDate":"2022-09-05"},{"lineNumber":75,"author":{"gitId":"KSHan29"},"content":"            s.close();","lastModifiedDate":"2022-09-05"},{"lineNumber":76,"author":{"gitId":"KSHan29"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":77,"author":{"gitId":"KSHan29"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-05"},{"lineNumber":78,"author":{"gitId":"KSHan29"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-05"},{"lineNumber":79,"author":{"gitId":"KSHan29"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-05"},{"lineNumber":80,"author":{"gitId":"KSHan29"},"content":"            // input file is invalid, just start from empty list;","lastModifiedDate":"2022-09-05"},{"lineNumber":81,"author":{"gitId":"KSHan29"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-05"},{"lineNumber":82,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":83,"author":{"gitId":"KSHan29"},"content":"        return pastTasks;","lastModifiedDate":"2022-09-05"},{"lineNumber":84,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":85,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":86,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-09-05"},{"lineNumber":87,"author":{"gitId":"KSHan29"},"content":"     * Parse TaskMemo to create Task list.","lastModifiedDate":"2022-09-05"},{"lineNumber":88,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-09-05"},{"lineNumber":89,"author":{"gitId":"KSHan29"},"content":"     * @param memo The input read from Task memory file.","lastModifiedDate":"2022-09-05"},{"lineNumber":90,"author":{"gitId":"KSHan29"},"content":"     * @return Task created using info from memory.","lastModifiedDate":"2022-09-05"},{"lineNumber":91,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-09-05"},{"lineNumber":92,"author":{"gitId":"KSHan29"},"content":"    public Task parseTaskMemo(String memo) {","lastModifiedDate":"2022-09-05"},{"lineNumber":93,"author":{"gitId":"KSHan29"},"content":"        // first letter to identify task","lastModifiedDate":"2022-08-25"},{"lineNumber":94,"author":{"gitId":"KSHan29"},"content":"        String task \u003d memo.substring(0, 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":95,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":96,"author":{"gitId":"KSHan29"},"content":"        // Retrieve task status","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"KSHan29"},"content":"        String separator \u003d \"|\";","lastModifiedDate":"2022-09-05"},{"lineNumber":98,"author":{"gitId":"KSHan29"},"content":"        String taskMarked \u003d \"1\";","lastModifiedDate":"2022-09-05"},{"lineNumber":99,"author":{"gitId":"KSHan29"},"content":"        int indexOfFirstBreak \u003d memo.indexOf(separator);","lastModifiedDate":"2022-09-05"},{"lineNumber":100,"author":{"gitId":"KSHan29"},"content":"        String status \u003d memo.substring(indexOfFirstBreak + 2, indexOfFirstBreak + 3);","lastModifiedDate":"2022-08-25"},{"lineNumber":101,"author":{"gitId":"KSHan29"},"content":"        boolean statusIsDone \u003d status.equals(taskMarked);","lastModifiedDate":"2022-09-05"},{"lineNumber":102,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"KSHan29"},"content":"        // skip \"| x | \" to get task description","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"KSHan29"},"content":"        String descriptionAndTime \u003d memo.substring(indexOfFirstBreak + 6);","lastModifiedDate":"2022-08-25"},{"lineNumber":105,"author":{"gitId":"KSHan29"},"content":"        int indexOfThirdBreak \u003d descriptionAndTime.indexOf(\"|\");","lastModifiedDate":"2022-08-25"},{"lineNumber":106,"author":{"gitId":"KSHan29"},"content":"        String description \u003d descriptionAndTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":107,"author":{"gitId":"KSHan29"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":108,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":109,"author":{"gitId":"KSHan29"},"content":"        // if time exists, retrieve time and update task description","lastModifiedDate":"2022-08-25"},{"lineNumber":110,"author":{"gitId":"KSHan29"},"content":"        if (indexOfThirdBreak !\u003d -1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":111,"author":{"gitId":"KSHan29"},"content":"            description \u003d descriptionAndTime.substring(0, indexOfThirdBreak - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":112,"author":{"gitId":"KSHan29"},"content":"            time \u003d descriptionAndTime.substring(indexOfThirdBreak + 2);","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":115,"author":{"gitId":"KSHan29"},"content":"        Task currentTask \u003d createTask(task, description, time, statusIsDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":116,"author":{"gitId":"KSHan29"},"content":"        return currentTask;","lastModifiedDate":"2022-09-05"},{"lineNumber":117,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":120,"author":{"gitId":"KSHan29"},"content":"     * Creates a Task object using information retrieved from memory.","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"KSHan29"},"content":"     * @param task Task identifier.","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"KSHan29"},"content":"     * @param description Task description.","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"KSHan29"},"content":"     * @param time Time associated with Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"KSHan29"},"content":"     * @param isDone Status of Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"KSHan29"},"content":"     * @return Task object.","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"KSHan29"},"content":"    public Task createTask(String task, String description, String time, boolean isDone) {","lastModifiedDate":"2022-08-25"},{"lineNumber":129,"author":{"gitId":"KSHan29"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":130,"author":{"gitId":"KSHan29"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2022-08-25"},{"lineNumber":131,"author":{"gitId":"KSHan29"},"content":"        if (time !\u003d \"\") {","lastModifiedDate":"2022-08-25"},{"lineNumber":132,"author":{"gitId":"KSHan29"},"content":"            date \u003d LocalDate.parse(time);","lastModifiedDate":"2022-08-25"},{"lineNumber":133,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":134,"author":{"gitId":"KSHan29"},"content":"        switch (task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":135,"author":{"gitId":"KSHan29"},"content":"        case \"T\":","lastModifiedDate":"2022-08-25"},{"lineNumber":136,"author":{"gitId":"KSHan29"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2022-08-25"},{"lineNumber":137,"author":{"gitId":"KSHan29"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":138,"author":{"gitId":"KSHan29"},"content":"        case \"D\":","lastModifiedDate":"2022-08-25"},{"lineNumber":139,"author":{"gitId":"KSHan29"},"content":"            newTask \u003d new Deadline(description, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":140,"author":{"gitId":"KSHan29"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":141,"author":{"gitId":"KSHan29"},"content":"        case \"E\":","lastModifiedDate":"2022-08-25"},{"lineNumber":142,"author":{"gitId":"KSHan29"},"content":"            newTask \u003d new Event(description, date);","lastModifiedDate":"2022-08-25"},{"lineNumber":143,"author":{"gitId":"KSHan29"},"content":"            break;","lastModifiedDate":"2022-08-25"},{"lineNumber":144,"author":{"gitId":"KSHan29"},"content":"        default:","lastModifiedDate":"2022-08-25"},{"lineNumber":145,"author":{"gitId":"KSHan29"},"content":"            throw new DukeException(\"OOPS!!! The Disk memory is invalid\");","lastModifiedDate":"2022-08-25"},{"lineNumber":146,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":147,"author":{"gitId":"KSHan29"},"content":"        newTask.setTaskStatus(isDone);","lastModifiedDate":"2022-08-25"},{"lineNumber":148,"author":{"gitId":"KSHan29"},"content":"        return newTask;","lastModifiedDate":"2022-08-25"},{"lineNumber":149,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":150,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":151,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"KSHan29"},"content":"     * Stores Task information onto memory.","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"KSHan29"},"content":"     * @param task Task information.","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"KSHan29"},"content":"     * @throws IOException if unable to write to file.","lastModifiedDate":"2022-08-29"},{"lineNumber":156,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"KSHan29"},"content":"    public void addTaskToDisk(String task) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":158,"author":{"gitId":"KSHan29"},"content":"        appendToFile(filePath, task);","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":160,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":161,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":162,"author":{"gitId":"KSHan29"},"content":"     * Rewrites the .txt file that contains all the tasks added in order to reflect changes in a task status.","lastModifiedDate":"2022-08-28"},{"lineNumber":163,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"KSHan29"},"content":"     * @param taskNumber the row of Task which changed status.","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"KSHan29"},"content":"     * @param isDone the new status of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"KSHan29"},"content":"     * @throws IOException if unable to write to file.","lastModifiedDate":"2022-08-29"},{"lineNumber":167,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"KSHan29"},"content":"    public void setTaskStatusOnDisk(int taskNumber, boolean isDone) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":169,"author":{"gitId":"KSHan29"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":170,"author":{"gitId":"KSHan29"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":171,"author":{"gitId":"KSHan29"},"content":"        Scanner s \u003d new Scanner(inputFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":172,"author":{"gitId":"KSHan29"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":173,"author":{"gitId":"KSHan29"},"content":"            String currentTaskMemo \u003d s.nextLine();","lastModifiedDate":"2022-09-05"},{"lineNumber":174,"author":{"gitId":"KSHan29"},"content":"            String newTaskMemo \u003d changeStatusOfTaskMemo(taskNumber, isDone, currentTaskMemo);","lastModifiedDate":"2022-09-05"},{"lineNumber":175,"author":{"gitId":"KSHan29"},"content":"            appendToFile(tempFilePath, newTaskMemo + System.lineSeparator());","lastModifiedDate":"2022-09-05"},{"lineNumber":176,"author":{"gitId":"KSHan29"},"content":"            taskNumber -\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":177,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":178,"author":{"gitId":"KSHan29"},"content":"        s.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"KSHan29"},"content":"        boolean successful \u003d tempFile.renameTo(inputFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":180,"author":{"gitId":"KSHan29"},"content":"        assert successful : \"Temp file should be successfully renamed as main Memory file keep track of Tasks\";","lastModifiedDate":"2022-09-04"},{"lineNumber":181,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":182,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":183,"author":{"gitId":"KSHan29"},"content":"    private String changeStatusOfTaskMemo(int taskNumber, boolean isDone, String currentTaskMemo) {","lastModifiedDate":"2022-09-05"},{"lineNumber":184,"author":{"gitId":"KSHan29"},"content":"        if (taskNumber !\u003d 1) {","lastModifiedDate":"2022-09-05"},{"lineNumber":185,"author":{"gitId":"KSHan29"},"content":"            return currentTaskMemo;","lastModifiedDate":"2022-09-05"},{"lineNumber":186,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-09-05"},{"lineNumber":187,"author":{"gitId":"KSHan29"},"content":"        // before status \"x | description\"","lastModifiedDate":"2022-09-05"},{"lineNumber":188,"author":{"gitId":"KSHan29"},"content":"        int indexOfFirstBreak \u003d currentTaskMemo.indexOf(\"|\");","lastModifiedDate":"2022-09-05"},{"lineNumber":189,"author":{"gitId":"KSHan29"},"content":"        String beforeStatus \u003d currentTaskMemo.substring(0, indexOfFirstBreak + 2);","lastModifiedDate":"2022-09-05"},{"lineNumber":190,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":191,"author":{"gitId":"KSHan29"},"content":"        // after \" X | x\"","lastModifiedDate":"2022-09-05"},{"lineNumber":192,"author":{"gitId":"KSHan29"},"content":"        String afterStatus \u003d currentTaskMemo.substring(indexOfFirstBreak + 3);","lastModifiedDate":"2022-09-05"},{"lineNumber":193,"author":{"gitId":"KSHan29"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-09-05"},{"lineNumber":194,"author":{"gitId":"KSHan29"},"content":"        currentTaskMemo \u003d beforeStatus + status + afterStatus;","lastModifiedDate":"2022-09-05"},{"lineNumber":195,"author":{"gitId":"KSHan29"},"content":"        return currentTaskMemo;","lastModifiedDate":"2022-09-05"},{"lineNumber":196,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":197,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":198,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":199,"author":{"gitId":"KSHan29"},"content":"     * Removes Task information from memory.","lastModifiedDate":"2022-08-28"},{"lineNumber":200,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":201,"author":{"gitId":"KSHan29"},"content":"     * @param taskNumber Row of Task to delete from memory.","lastModifiedDate":"2022-08-28"},{"lineNumber":202,"author":{"gitId":"KSHan29"},"content":"     * @throws IOException if unable to write to file.","lastModifiedDate":"2022-08-29"},{"lineNumber":203,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":204,"author":{"gitId":"KSHan29"},"content":"    public void deleteTaskFromDisk(int taskNumber) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":205,"author":{"gitId":"KSHan29"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":206,"author":{"gitId":"KSHan29"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2022-08-25"},{"lineNumber":207,"author":{"gitId":"KSHan29"},"content":"        Scanner s \u003d new Scanner(inputFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":208,"author":{"gitId":"KSHan29"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":209,"author":{"gitId":"KSHan29"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":210,"author":{"gitId":"KSHan29"},"content":"            if (taskNumber !\u003d 1) {","lastModifiedDate":"2022-08-25"},{"lineNumber":211,"author":{"gitId":"KSHan29"},"content":"                appendToFile(tempFilePath, currentLine + System.lineSeparator());","lastModifiedDate":"2022-08-25"},{"lineNumber":212,"author":{"gitId":"KSHan29"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":213,"author":{"gitId":"KSHan29"},"content":"            taskNumber -\u003d 1;","lastModifiedDate":"2022-08-25"},{"lineNumber":214,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"KSHan29"},"content":"        s.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":216,"author":{"gitId":"KSHan29"},"content":"        boolean successful \u003d tempFile.renameTo(inputFile);","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"KSHan29"},"content":"        assert successful : \"Temp file should be successfully renamed as main Memory file keep track of Tasks\";","lastModifiedDate":"2022-09-04"},{"lineNumber":218,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":219,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":220,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":221,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":222,"author":{"gitId":"KSHan29"},"content":"     * Appends String to a file.","lastModifiedDate":"2022-08-28"},{"lineNumber":223,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":224,"author":{"gitId":"KSHan29"},"content":"     * @param file The filepath of file to be appended.","lastModifiedDate":"2022-08-28"},{"lineNumber":225,"author":{"gitId":"KSHan29"},"content":"     * @param textToAdd The String to be appended to file.","lastModifiedDate":"2022-08-28"},{"lineNumber":226,"author":{"gitId":"KSHan29"},"content":"     * @throws IOException if unable to write to file.","lastModifiedDate":"2022-08-29"},{"lineNumber":227,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":228,"author":{"gitId":"KSHan29"},"content":"    public void appendToFile(String file, String textToAdd) throws IOException {","lastModifiedDate":"2022-08-29"},{"lineNumber":229,"author":{"gitId":"KSHan29"},"content":"        FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2022-08-25"},{"lineNumber":230,"author":{"gitId":"KSHan29"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-08-25"},{"lineNumber":231,"author":{"gitId":"KSHan29"},"content":"        fw.close();","lastModifiedDate":"2022-08-25"},{"lineNumber":232,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":233,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"KSHan29":233}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":" * Deals with keeping track of Tasks added.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"     * TaskList constructor.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"     * @param taskList ArrayList to store Tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     * Default TaskList constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     * Adds Task on duke.Duke program and ensure Task is added to memory.","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"        boolean successful \u003d taskList.add(task);","lastModifiedDate":"2022-09-04"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"        assert successful : \"Task should be added successfully\";","lastModifiedDate":"2022-09-04"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"     * Returns TaskList size.","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"     * @return TaskList size.","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"        return taskList.size();","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"     * Changes task status.","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"     * @param taskNumber Task to change status.","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"     * @param isDone status to change to.","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"    public void setTaskStatus(int taskNumber, boolean isDone) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"        Task currentTask \u003d taskList.get(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"        currentTask.setTaskStatus(isDone);","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"        assert currentTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"     * Returns the String format of a Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"     * @param taskNumber Task to turn into String.","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"     * @return String of task specified.","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"    public String getTaskToString(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"        Task currentTask \u003d taskList.get(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"        return currentTask.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":71,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"KSHan29"},"content":"     * Deletes task from list.","lastModifiedDate":"2022-08-29"},{"lineNumber":73,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"KSHan29"},"content":"     * @param taskNumber The row of Task to be deleted.","lastModifiedDate":"2022-08-29"},{"lineNumber":75,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"KSHan29"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2022-08-29"},{"lineNumber":77,"author":{"gitId":"KSHan29"},"content":"        Task removedTask \u003d taskList.remove(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":78,"author":{"gitId":"KSHan29"},"content":"        assert removedTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2022-09-04"},{"lineNumber":79,"author":{"gitId":"KSHan29"},"content":"        return removedTask.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":80,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":82,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"KSHan29"},"content":"     * Prints list of Tasks being tracked.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"KSHan29"},"content":"     * @return String of Tasks in list.","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":87,"author":{"gitId":"KSHan29"},"content":"    public String listToString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"KSHan29"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"KSHan29"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"KSHan29"},"content":"            Task currentTask \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-25"},{"lineNumber":91,"author":{"gitId":"KSHan29"},"content":"            assert currentTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"KSHan29"},"content":"            String taskDescription \u003d currentTask.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":93,"author":{"gitId":"KSHan29"},"content":"            message +\u003d (i","lastModifiedDate":"2022-09-04"},{"lineNumber":94,"author":{"gitId":"KSHan29"},"content":"                    + \".\"","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"KSHan29"},"content":"                    + taskDescription);","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"KSHan29"},"content":"            if (i !\u003d taskList.size()) {","lastModifiedDate":"2022-08-25"},{"lineNumber":97,"author":{"gitId":"KSHan29"},"content":"                message +\u003d \"\\n\";","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"KSHan29"},"content":"            }","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"KSHan29"},"content":"        return message;","lastModifiedDate":"2022-08-29"},{"lineNumber":101,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":103,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"KSHan29"},"content":"     * Displays Tasks that matches what user searched for.","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"KSHan29"},"content":"     * @param keyword User input for searching Tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"KSHan29"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2022-08-29"},{"lineNumber":109,"author":{"gitId":"KSHan29"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"KSHan29"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"KSHan29"},"content":"            Task currentTask \u003d taskList.get(i - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"KSHan29"},"content":"            assert currentTask !\u003d null : \"Task should not be null\";","lastModifiedDate":"2022-09-04"},{"lineNumber":113,"author":{"gitId":"KSHan29"},"content":"            String taskDescription \u003d currentTask.toString();","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"KSHan29"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"KSHan29"},"content":"                message +\u003d (i","lastModifiedDate":"2022-09-04"},{"lineNumber":116,"author":{"gitId":"KSHan29"},"content":"                        + \".\"","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"KSHan29"},"content":"                        + taskDescription);","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"KSHan29"},"content":"                if (i !\u003d taskList.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"KSHan29"},"content":"                    message +\u003d \"\\n\";","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"KSHan29"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"KSHan29"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"KSHan29"},"content":"        return message;","lastModifiedDate":"2022-08-29"},{"lineNumber":124,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":125,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"KSHan29":125}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":" * Handles interaction with user.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"public class Ui {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"     * Greets user.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    public static String showWelcome() {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"        String result \u003d (\"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"        return result;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     * Prints Task information when added.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * @param task Task that was added.","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     * @param size Current number of tasks in list.","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    public String printAddTask(Task task, int size) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"                + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     * Prints upon deletion of Task.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"     * @param task Task deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"     * @param size Remaining number of Tasks in list.","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"    public String printDeleteTask(String task, int size) {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"                + task + \"\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"                + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"     * Prints list of Tasks currently.","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"     * @param list The list of Tasks in String.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"    public String printDisplayList(String list) {","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"        String message \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-04"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"        message +\u003d list;","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"        return (message);","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"     * Prints when task is marked.","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"     * @param message The Task that was marked in String.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"    public String printMarkTask(String message) {","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"                + message);","lastModifiedDate":"2022-09-04"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"     * Prints when task is unmarked.","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"     * @param message The Task that was unmarked in String.","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"    public String printUnmarkTask(String message) {","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-09-04"},{"lineNumber":71,"author":{"gitId":"KSHan29"},"content":"                + message);","lastModifiedDate":"2022-09-04"},{"lineNumber":72,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":73,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"KSHan29"},"content":"     * Prints Tasks that matched description given.","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"KSHan29"},"content":"     * @param list Tasks that matched description given.","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"KSHan29"},"content":"    public String printFindTask(String list) {","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"KSHan29"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-04"},{"lineNumber":81,"author":{"gitId":"KSHan29"},"content":"        message +\u003d list;","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"KSHan29"},"content":"        return (message);","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":84,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":85,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":86,"author":{"gitId":"KSHan29"},"content":"     * Prints error message.","lastModifiedDate":"2022-08-29"},{"lineNumber":87,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":88,"author":{"gitId":"KSHan29"},"content":"     * @param e Exception caught.","lastModifiedDate":"2022-08-29"},{"lineNumber":89,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":90,"author":{"gitId":"KSHan29"},"content":"    public String printError(Exception e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"KSHan29"},"content":"        return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":92,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"KSHan29"},"content":"     * Prints when program terminates.","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"KSHan29"},"content":"    public String printExit() {","lastModifiedDate":"2022-08-30"},{"lineNumber":98,"author":{"gitId":"KSHan29"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-04"},{"lineNumber":99,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"KSHan29":100}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":" * Command class for various commands.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"     * Default constructor for Command.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    public Command() {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"     * Executes a command.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     * @return A boolean indicating if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":32}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":" * Command for adding Deadline Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    private String remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * DeadlineCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand Deadline description and by.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    public DeadlineCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"        this.remainingCommand \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     * Executes a Deadline command.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            String[] splitCommand \u003d remainingCommand.split(\" /by \");","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"            if (splitCommand.length !\u003d 2) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"                throw new DukeException(\"OOPS!!! Please enter a valid deadline format \"","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"                        + \"(deadline \u003cdescription\u003e /by yyyy-mm-dd)\");","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"            LocalDate d1 \u003d LocalDate.parse(splitCommand[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"            String description \u003d splitCommand[0];","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"            LocalDate date \u003d d1;","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"            Task task \u003d new Deadline(description, date);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"            tasks.addTask(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"            storage.addTaskToDisk(task.taskMemo() + System.lineSeparator());","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"            return ui.printAddTask(task, tasks.getTaskListSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"            return (\"OOPS!!! Please enter a valid date format (/by yyyy-mm-dd)\");","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":70}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":" * Command for deleting Tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    private String remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"     * DeleteCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand task number to delete.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    public DeleteCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"        this.remainingCommand \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     * Executes a Delete command.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"            int taskNumber \u003d Integer.parseInt(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"            String removedTask \u003d tasks.deleteTask(taskNumber - 1);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"            storage.deleteTaskFromDisk(taskNumber);","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"            return ui.printDeleteTask(removedTask, tasks.getTaskListSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            return (\"OOPS!!! Please enter a valid task number.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"            return (\"OOPS!!! Please enter a valid task number.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":56}},{"path":"src/main/java/duke/commands/DisplayListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":" * Command for displaying list of Tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"public class DisplayListCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"     * DisplayListCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    public DisplayListCommand() {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"     * Executes a DisplayList command.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"        String listToString \u003d tasks.listToString();","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"        return ui.printDisplayList(listToString);","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":39}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-05"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":" * Command for adding Event tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    private String remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * EventCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand Event description and at.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    public EventCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"        this.remainingCommand \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     * Executes a Event command.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            String[] splitCommand \u003d remainingCommand.split(\" /at \");","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"            if (splitCommand.length !\u003d 2) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"                throw new DukeException(\"OOPS!!! Please enter a valid event format \"","lastModifiedDate":"2022-09-05"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"                        + \"(event \u003cdescription\u003e /at yyyy-mm-dd)\");","lastModifiedDate":"2022-09-05"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"            }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"            LocalDate d1 \u003d LocalDate.parse(splitCommand[1]);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"            String description \u003d splitCommand[0];","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"            LocalDate date \u003d d1;","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"            Task task \u003d new Event(description, date);","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"            tasks.addTask(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"            storage.addTaskToDisk(task.taskMemo() + System.lineSeparator());","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"            return ui.printAddTask(task, tasks.getTaskListSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"            return (\"OOPS!!! Please enter a valid date format (/at yyyy-mm-dd)\");","lastModifiedDate":"2022-09-04"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":70}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":" * Command to exit program.","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"     * Executes a Exit command.","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"        return ui.printExit();","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     * @return true as program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"        return true;","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":32}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":" * Command for finding Tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    private String remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"     * FindCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    public FindCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"        this.remainingCommand \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"     * Executes a Find command.","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"        if (remainingCommand.equals(\"\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"            throw new DukeException(\"OOPS!!! Please enter a keyword for Find.\");","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"        String tasksFound \u003d tasks.findTask(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"        return ui.printFindTask(tasksFound);","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":47}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":" * Command for Marking Tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    private String remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"     * MarkCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand task number for task to mark.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    public MarkCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"        this.remainingCommand \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     * Executes a mark command.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"            int taskNumber \u003d Integer.parseInt(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"            tasks.setTaskStatus(taskNumber - 1, true);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"            storage.setTaskStatusOnDisk(taskNumber, true);","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"            return ui.printMarkTask(tasks.getTaskToString(taskNumber - 1));","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            return (\"OOPS!!! Please enter a valid task number.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":54}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":" * Command for adding ToDo Task.","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    private String description;","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     * ToDoCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand ToDo description.","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    public ToDoCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"        description \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     * Executes a ToDo command.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid todo format (todo \u003cdescription\u003e)\");","lastModifiedDate":"2022-08-29"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"            Task task \u003d new ToDo(description);","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            tasks.addTask(task);","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"            storage.addTaskToDisk(task.taskMemo() + System.lineSeparator());","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"            return ui.printAddTask(task, tasks.getTaskListSize());","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":59}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.commands;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-05"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Storage;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import duke.TaskList;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":" * Command for Unmarking Tasks.","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    private String remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"     * UnmarkCommand constructor.","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"     * @param remainingCommand task number.","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    public UnmarkCommand(String remainingCommand) {","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"        this.remainingCommand \u003d remainingCommand;","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"     * Executes a unmark command.","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"     * @param tasks TaskList that stores Tasks objects.","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"     * @param ui Ui that handles user interaction.","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     * @param storage Storage that handles storing information on memory files.","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"            int taskNumber \u003d Integer.parseInt(remainingCommand);","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"            tasks.setTaskStatus(taskNumber - 1, false);","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"            storage.setTaskStatusOnDisk(taskNumber, false);","lastModifiedDate":"2022-08-29"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"            return ui.printUnmarkTask(tasks.getTaskToString(taskNumber - 1));","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            return (\"OOPS!!! Please enter a valid task number.\");","lastModifiedDate":"2022-09-04"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-09-04"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"     * Checks if program should exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"     * @return false as program should not exit.","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-29"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"        return false;","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":54}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.javafx;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"     * duke.javafx.DialogBox constructor.","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"     * @param text Text to display in duke.javafx.DialogBox.","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"     * @param img Image to display in duke.javafx.DialogBox.","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"    private void flip() {","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"     * Creates duke.javafx.DialogBox displaying user inputs.","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"     * @param text User input.","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"     * @param img User image.","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"     * @return duke.javafx.DialogBox of user input.","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"     * Creates duke.javafx.DialogBox displaying duke.Duke outputs.","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"KSHan29"},"content":"     * @param text duke.Duke output for user input.","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"KSHan29"},"content":"     * @param img duke.Duke image.","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"KSHan29"},"content":"     * @return duke.javafx.DialogBox of duke.Duke output.","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":76,"author":{"gitId":"KSHan29"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"KSHan29"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-30"},{"lineNumber":78,"author":{"gitId":"KSHan29"},"content":"        db.flip();","lastModifiedDate":"2022-08-30"},{"lineNumber":79,"author":{"gitId":"KSHan29"},"content":"        return db;","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":81,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"KSHan29":81}},{"path":"src/main/java/duke/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.javafx;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"public class Launcher {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"KSHan29":12}},{"path":"src/main/java/duke/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.javafx;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"public class Main extends Application {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\", \"data/temp.txt\");","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"     * Sets scene and initialises duke.Duke.","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"     * @param stage Stage to display.","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"        try {","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"            stage.show();","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":36}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.javafx;","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import duke.Ui;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":" * Controller for duke.javafx.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"KSHan29"},"content":"    private Button start;","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"KSHan29"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"KSHan29"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"KSHan29"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"KSHan29"},"content":"     * Initialise dialogContainer with welcome message.","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"KSHan29"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"KSHan29"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"KSHan29"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"KSHan29"},"content":"                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"KSHan29"},"content":"        );","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"KSHan29"},"content":"     * Sets duke to input.","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"KSHan29"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"KSHan29"},"content":"     * @param d input of duke.Duke.","lastModifiedDate":"2022-08-30"},{"lineNumber":51,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"KSHan29"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-30"},{"lineNumber":53,"author":{"gitId":"KSHan29"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"KSHan29"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"KSHan29"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then","lastModifiedDate":"2022-09-05"},{"lineNumber":58,"author":{"gitId":"KSHan29"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-05"},{"lineNumber":59,"author":{"gitId":"KSHan29"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"KSHan29"},"content":"    @FXML","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"KSHan29"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"KSHan29"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"KSHan29"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"KSHan29"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-30"},{"lineNumber":65,"author":{"gitId":"KSHan29"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-30"},{"lineNumber":66,"author":{"gitId":"KSHan29"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"KSHan29"},"content":"        );","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"KSHan29"},"content":"        userInput.clear();","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"KSHan29"},"content":"        if (input.split(\" \")[0].equals(\"bye\")) {","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"KSHan29"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"KSHan29"},"content":"            delay.setOnFinished((event) -\u003e Platform.exit());","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"KSHan29"},"content":"            delay.play();","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"KSHan29"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"KSHan29":75}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    public String taskMemo() {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"        return \"D\" + super.taskMemo() + \" | \" + this.by.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"KSHan29":24}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    public String taskMemo() {","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"        return \"E\" + super.taskMemo() + \" | \" + this.at.toString();","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"KSHan29":24}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    public void setTaskStatus(boolean status) {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"    public String taskMemo() {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"KSHan29"},"content":"        int status \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"KSHan29"},"content":"        return String.format(\" | %d | %s\", status, this.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"KSHan29":28}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke.tasks;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    public String taskMemo() {","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"        return \"T\" + super.taskMemo();","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"KSHan29":17}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" \u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-09-04"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"KSHan29":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"KSHan29":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"class DeadlineTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    void testToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"        Deadline d \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-11-30\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"        assertEquals(\"[D][ ] return book (by: Nov 30 2020)\", d.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"    void taskMemo() {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"        Deadline d \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-11-30\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"        assertEquals(\"D | 0 | return book | 2020-11-30\", d.taskMemo());","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"KSHan29":23}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"class EventTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    void testToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"        Event e \u003d new Event(\"concert\", LocalDate.parse(\"2021-01-22\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"        assertEquals(\"[E][ ] concert (at: Jan 22 2021)\", e.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"    void taskMemo() {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"        Event e \u003d new Event(\"concert\", LocalDate.parse(\"2021-01-22\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"        assertEquals(\"E | 0 | concert | 2021-01-22\", e.taskMemo());","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"KSHan29":23}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"class TaskTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"    void getStatusIcon() {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    void testToString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"    void setTaskStatus() {","lastModifiedDate":"2022-08-29"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"    void taskMemo() {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"KSHan29":24}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"package duke;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-08-29"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"class ToDoTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"    void testToString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"        ToDo t \u003d new ToDo(\"homework\");","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"        assertEquals(\"[T][ ] homework\", t.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"    void taskMemo() {","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"        ToDo t \u003d new ToDo(\"homework\");","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"        assertEquals(\"T | 0 | homework\", t.taskMemo());","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"KSHan29":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KSHan29"},"content":"todo read book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"KSHan29"},"content":"deadline return book /by Aug 6th 2pm","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"KSHan29"},"content":"event concert /at Aug 15th 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"KSHan29"},"content":"mark 1","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"KSHan29"},"content":"mark 3","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"KSHan29"},"content":"unmark 1","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"KSHan29"},"content":"todo homework","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"KSHan29"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"KSHan29"},"content":"delete 4","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"KSHan29"},"content":"list","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"KSHan29"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"KSHan29"},"content":"todo","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"KSHan29"},"content":"event","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"KSHan29"},"content":"deadline","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"KSHan29"},"content":"event concert fail","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"KSHan29"},"content":"deadline project fail","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"KSHan29"},"content":"mark","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"unmark","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"KSHan29"},"content":"delete","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"KSHan29"},"content":"mark 5","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"KSHan29"},"content":"delete 5","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"KSHan29"},"content":"bye","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"KSHan29":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KSHan29"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KSHan29":1,"-":20}}]

[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"T|X|borrow book","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"D|X|return book|17th Sept","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"E| |go out with friends|next thursday","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"mlzt2000":3}},{"path":"src/main/java/ip/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"class Constants {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"mlzt2000":5}},{"path":"src/main/java/ip/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"class Deadline extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"    Deadline(String description, String by) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"        this(description, by, false);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"    protected Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"    public String getBy() {","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"EE, dd MMM yyyy, HH:mm\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"        String parStr \u003d super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"        return String.format(\"[D]%s (by: %s)\", parStr, getBy());","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":28}},{"path":"src/main/java/ip/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import java.io.File;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"import java.util.List;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"    // Printables","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"    private static final String TAB \u003d \"    \";","lastModifiedDate":"2022-08-17"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"    private static final String LINE \u003d String","lastModifiedDate":"2022-08-17"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"            .format(\"%s%s\", TAB, \"____________________________________________________________\");","lastModifiedDate":"2022-08-17"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"    private static final String WELCOME_MESSAGE \u003d String","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"            .format(\"Hello! I\u0027m Duke\\n%s What can I do for you?\", TAB);","lastModifiedDate":"2022-08-17"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"    private static final String END_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"    private static final String CREATE_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"    private static final String MARK_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"    private static final String UNMARK_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"    private static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"    private static final String STORAGE_FILE_PATH \u003d \"Duke.txt\";","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"    // Commands","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"    private static final String END_COMMAND \u003d \"bye\";","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"    private static final String PRINT_COMMAND \u003d \"list\";","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"mlzt2000"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"mlzt2000"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"mlzt2000"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"mlzt2000"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"mlzt2000"},"content":"    // Data structures","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"mlzt2000"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"    private static void loadFile() {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"mlzt2000"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"mlzt2000"},"content":"            // Create Duke.txt if it doesn\u0027t exist.","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"mlzt2000"},"content":"            File f \u003d new File(STORAGE_FILE_PATH);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"mlzt2000"},"content":"            if (!f.exists()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"mlzt2000"},"content":"                boolean fileCreated \u003d f.createNewFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"mlzt2000"},"content":"                if (!fileCreated) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"mlzt2000"},"content":"                    throw new IOException();","lastModifiedDate":"2022-08-26"},{"lineNumber":45,"author":{"gitId":"mlzt2000"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"mlzt2000"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"mlzt2000"},"content":"                // Read from Duke.txt and handle it as input.","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"mlzt2000"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"mlzt2000"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"mlzt2000"},"content":"                    loadTask(sc.nextLine());","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"mlzt2000"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"mlzt2000"},"content":"                sc.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"mlzt2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"mlzt2000"},"content":"            prettyPrint(\"Storage file could not be created!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"mlzt2000"},"content":"    private static void loadTask(String taskStr) {","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"mlzt2000"},"content":"        try {","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"mlzt2000"},"content":"            String[] taskArray \u003d taskStr.split(\"\\\\|\");","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"mlzt2000"},"content":"            String taskTypeStr \u003d taskArray[0];","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"mlzt2000"},"content":"            String isDoneStr \u003d taskArray[1];","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"mlzt2000"},"content":"            String description \u003d taskArray[2];","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"mlzt2000"},"content":"            boolean isDone \u003d isDoneStr.equals(\"X\");","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"mlzt2000"},"content":"            Task newTask;","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"mlzt2000"},"content":"            switch (taskTypeStr) {","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"mlzt2000"},"content":"                case \"T\":","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"mlzt2000"},"content":"                    newTask \u003d new ToDo(description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"mlzt2000"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"mlzt2000"},"content":"                case \"D\":","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"mlzt2000"},"content":"                    String by \u003d taskArray[3];","lastModifiedDate":"2022-08-31"},{"lineNumber":76,"author":{"gitId":"mlzt2000"},"content":"                    newTask \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":77,"author":{"gitId":"mlzt2000"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"mlzt2000"},"content":"                case \"E\":","lastModifiedDate":"2022-08-31"},{"lineNumber":79,"author":{"gitId":"mlzt2000"},"content":"                    String at \u003d taskArray[3];","lastModifiedDate":"2022-08-31"},{"lineNumber":80,"author":{"gitId":"mlzt2000"},"content":"                    newTask \u003d new Event(description, at, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":81,"author":{"gitId":"mlzt2000"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"mlzt2000"},"content":"                default:","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"mlzt2000"},"content":"                    throw new DukeException(String.format(\"Could not load task: %s\", description));","lastModifiedDate":"2022-08-31"},{"lineNumber":84,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":85,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":86,"author":{"gitId":"mlzt2000"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-31"},{"lineNumber":87,"author":{"gitId":"mlzt2000"},"content":"        } catch (DukeException de){","lastModifiedDate":"2022-08-31"},{"lineNumber":88,"author":{"gitId":"mlzt2000"},"content":"            prettyPrint(de.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":91,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":92,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":93,"author":{"gitId":"mlzt2000"},"content":"    private static void storeToFile() {","lastModifiedDate":"2022-08-31"},{"lineNumber":94,"author":{"gitId":"mlzt2000"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":95,"author":{"gitId":"mlzt2000"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_FILE_PATH);","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"mlzt2000"},"content":"            fw.write(\"\");","lastModifiedDate":"2022-08-31"},{"lineNumber":97,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":98,"author":{"gitId":"mlzt2000"},"content":"            for (Task t: taskList) {","lastModifiedDate":"2022-08-31"},{"lineNumber":99,"author":{"gitId":"mlzt2000"},"content":"                fw.append(t.getStorageString());","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"mlzt2000"},"content":"                if (!t.equals(taskList.get(taskList.size() - 1))) {","lastModifiedDate":"2022-08-31"},{"lineNumber":101,"author":{"gitId":"mlzt2000"},"content":"                    fw.append(\"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":102,"author":{"gitId":"mlzt2000"},"content":"                }","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"mlzt2000"},"content":"            fw.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"mlzt2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"mlzt2000"},"content":"            prettyPrint(\"Failed to save all data!\");","lastModifiedDate":"2022-08-31"},{"lineNumber":108,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":110,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":111,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":112,"author":{"gitId":"mlzt2000"},"content":"    private static void createTask(String str, TaskType type){","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"mlzt2000"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":114,"author":{"gitId":"mlzt2000"},"content":"            str \u003d str.strip();","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"mlzt2000"},"content":"            Task newTask;","lastModifiedDate":"2022-08-18"},{"lineNumber":116,"author":{"gitId":"mlzt2000"},"content":"            String description \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"mlzt2000"},"content":"            String extraInfo \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"mlzt2000"},"content":"            switch(type) {","lastModifiedDate":"2022-08-18"},{"lineNumber":119,"author":{"gitId":"mlzt2000"},"content":"                case TODO:","lastModifiedDate":"2022-08-18"},{"lineNumber":120,"author":{"gitId":"mlzt2000"},"content":"                    if (str.strip().equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":121,"author":{"gitId":"mlzt2000"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":122,"author":{"gitId":"mlzt2000"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":123,"author":{"gitId":"mlzt2000"},"content":"                    description \u003d str;","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"mlzt2000"},"content":"                    newTask \u003d new ToDo(str);","lastModifiedDate":"2022-08-18"},{"lineNumber":125,"author":{"gitId":"mlzt2000"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":126,"author":{"gitId":"mlzt2000"},"content":"                case DEADLINE:","lastModifiedDate":"2022-08-18"},{"lineNumber":127,"author":{"gitId":"mlzt2000"},"content":"                    if (str.strip().equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":128,"author":{"gitId":"mlzt2000"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":129,"author":{"gitId":"mlzt2000"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"mlzt2000"},"content":"                    String[] strList \u003d str.split(\" /by \");","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"mlzt2000"},"content":"                    description \u003d strList[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"mlzt2000"},"content":"                    extraInfo \u003d strList[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":133,"author":{"gitId":"mlzt2000"},"content":"                    newTask \u003d new Deadline(description, extraInfo);","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"mlzt2000"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":135,"author":{"gitId":"mlzt2000"},"content":"                case EVENT:","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"mlzt2000"},"content":"                    if (str.strip().equals(\"\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"mlzt2000"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-08-18"},{"lineNumber":138,"author":{"gitId":"mlzt2000"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":139,"author":{"gitId":"mlzt2000"},"content":"                    strList \u003d str.split(\" /at \");","lastModifiedDate":"2022-08-18"},{"lineNumber":140,"author":{"gitId":"mlzt2000"},"content":"                    description \u003d strList[0];","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"mlzt2000"},"content":"                    extraInfo \u003d strList[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"mlzt2000"},"content":"                    newTask \u003d new Event(description, extraInfo);","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"mlzt2000"},"content":"                    break;","lastModifiedDate":"2022-08-18"},{"lineNumber":144,"author":{"gitId":"mlzt2000"},"content":"                default:","lastModifiedDate":"2022-08-18"},{"lineNumber":145,"author":{"gitId":"mlzt2000"},"content":"                    throw new DukeException(\"Type of task is not recognised!\");","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":147,"author":{"gitId":"mlzt2000"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-08-26"},{"lineNumber":148,"author":{"gitId":"mlzt2000"},"content":"            String singulStr \u003d \"Now you have 1 task in the list\";","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"mlzt2000"},"content":"            if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":150,"author":{"gitId":"mlzt2000"},"content":"                prettyPrint(String.format(\"%s\\n%s   %s\\n%s %s\",","lastModifiedDate":"2022-08-18"},{"lineNumber":151,"author":{"gitId":"mlzt2000"},"content":"                        CREATE_MESSAGE, TAB, newTask.toString(), TAB, singulStr));","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"mlzt2000"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":153,"author":{"gitId":"mlzt2000"},"content":"                prettyPrint(String.format(\"%s\\n%s   %s\\n%s Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-18"},{"lineNumber":154,"author":{"gitId":"mlzt2000"},"content":"                        CREATE_MESSAGE, TAB, newTask.toString(), TAB, taskList.size()));","lastModifiedDate":"2022-08-26"},{"lineNumber":155,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":156,"author":{"gitId":"mlzt2000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":157,"author":{"gitId":"mlzt2000"},"content":"            prettyPrint(e.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":158,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":159,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":160,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":161,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"mlzt2000"},"content":"     * Marks a task at index as done","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"mlzt2000"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"mlzt2000"},"content":"    private static void markTask(String index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":165,"author":{"gitId":"mlzt2000"},"content":"        index \u003d index.strip();","lastModifiedDate":"2022-08-18"},{"lineNumber":166,"author":{"gitId":"mlzt2000"},"content":"        int i \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":167,"author":{"gitId":"mlzt2000"},"content":"        i--;","lastModifiedDate":"2022-08-18"},{"lineNumber":168,"author":{"gitId":"mlzt2000"},"content":"        Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":169,"author":{"gitId":"mlzt2000"},"content":"        task.markAsDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":170,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(String.format(\"%s\\n%s   %s\", MARK_MESSAGE, TAB, task.toString()));","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":172,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"mlzt2000"},"content":"     * Marks a task at index as not done","lastModifiedDate":"2022-08-18"},{"lineNumber":175,"author":{"gitId":"mlzt2000"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":176,"author":{"gitId":"mlzt2000"},"content":"    private static void unmarkTask(String index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":177,"author":{"gitId":"mlzt2000"},"content":"        index \u003d index.strip();","lastModifiedDate":"2022-08-18"},{"lineNumber":178,"author":{"gitId":"mlzt2000"},"content":"        int i \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"mlzt2000"},"content":"        i--;","lastModifiedDate":"2022-08-18"},{"lineNumber":180,"author":{"gitId":"mlzt2000"},"content":"        Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"mlzt2000"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-08-18"},{"lineNumber":182,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(String.format(\"%s\\n%s   %s\", UNMARK_MESSAGE, TAB, task.toString()));","lastModifiedDate":"2022-08-26"},{"lineNumber":183,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":185,"author":{"gitId":"mlzt2000"},"content":"    private static void deleteTask(String index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":186,"author":{"gitId":"mlzt2000"},"content":"        index \u003d index.strip();","lastModifiedDate":"2022-08-18"},{"lineNumber":187,"author":{"gitId":"mlzt2000"},"content":"        int i \u003d Integer.parseInt(index);","lastModifiedDate":"2022-08-18"},{"lineNumber":188,"author":{"gitId":"mlzt2000"},"content":"        i--;","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"mlzt2000"},"content":"        Task task \u003d taskList.remove(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":190,"author":{"gitId":"mlzt2000"},"content":"        String singulStr \u003d \"Now you have 1 task in the list\";","lastModifiedDate":"2022-08-18"},{"lineNumber":191,"author":{"gitId":"mlzt2000"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":192,"author":{"gitId":"mlzt2000"},"content":"            prettyPrint(String.format(\"%s\\n%s   %s\\n%s %s\",","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"mlzt2000"},"content":"                    DELETE_MESSAGE, TAB, task.toString(), TAB, singulStr));","lastModifiedDate":"2022-08-26"},{"lineNumber":194,"author":{"gitId":"mlzt2000"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":195,"author":{"gitId":"mlzt2000"},"content":"            prettyPrint(String.format(\"%s\\n%s   %s\\n%s Now you have %d tasks in the list.\",","lastModifiedDate":"2022-08-18"},{"lineNumber":196,"author":{"gitId":"mlzt2000"},"content":"                    DELETE_MESSAGE, TAB, task.toString(), TAB, taskList.size()));","lastModifiedDate":"2022-08-26"},{"lineNumber":197,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":198,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":199,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":200,"author":{"gitId":"mlzt2000"},"content":"    /**","lastModifiedDate":"2022-08-18"},{"lineNumber":201,"author":{"gitId":"mlzt2000"},"content":"     * Creates a new Collection that has each entry numbered in ascending order","lastModifiedDate":"2022-08-18"},{"lineNumber":202,"author":{"gitId":"mlzt2000"},"content":"     */","lastModifiedDate":"2022-08-18"},{"lineNumber":203,"author":{"gitId":"mlzt2000"},"content":"    private static void printAll() {","lastModifiedDate":"2022-08-18"},{"lineNumber":204,"author":{"gitId":"mlzt2000"},"content":"        List\u003cString\u003e printables \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-18"},{"lineNumber":205,"author":{"gitId":"mlzt2000"},"content":"        printables.add(LIST_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":206,"author":{"gitId":"mlzt2000"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":207,"author":{"gitId":"mlzt2000"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"mlzt2000"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2022-08-18"},{"lineNumber":209,"author":{"gitId":"mlzt2000"},"content":"            printables.add(String.format(\"%d.%s\", index, task.toString()));","lastModifiedDate":"2022-08-18"},{"lineNumber":210,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":211,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(printables);","lastModifiedDate":"2022-08-18"},{"lineNumber":212,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":213,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":214,"author":{"gitId":"mlzt2000"},"content":"    private static void prettyPrint() {","lastModifiedDate":"2022-08-18"},{"lineNumber":215,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(\"\");","lastModifiedDate":"2022-08-18"},{"lineNumber":216,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":217,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":218,"author":{"gitId":"mlzt2000"},"content":"    private static void prettyPrint(String printable) {","lastModifiedDate":"2022-08-17"},{"lineNumber":219,"author":{"gitId":"mlzt2000"},"content":"        String out \u003d String.format(\"%s\\n%s %s\\n%s\", LINE, TAB, printable, LINE);","lastModifiedDate":"2022-08-17"},{"lineNumber":220,"author":{"gitId":"mlzt2000"},"content":"        System.out.println(out);","lastModifiedDate":"2022-08-17"},{"lineNumber":221,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":222,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":223,"author":{"gitId":"mlzt2000"},"content":"    private static void prettyPrint(List\u003cString\u003e printables) {","lastModifiedDate":"2022-08-18"},{"lineNumber":224,"author":{"gitId":"mlzt2000"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"mlzt2000"},"content":"        for (int i \u003d 0; i \u003c printables.size(); i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"mlzt2000"},"content":"            String s \u003d printables.get(i);","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"mlzt2000"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":228,"author":{"gitId":"mlzt2000"},"content":"                sb.append(s);","lastModifiedDate":"2022-08-18"},{"lineNumber":229,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":230,"author":{"gitId":"mlzt2000"},"content":"            else {","lastModifiedDate":"2022-08-18"},{"lineNumber":231,"author":{"gitId":"mlzt2000"},"content":"                sb.append(String.format(\"\\n%s %s\", TAB, s));","lastModifiedDate":"2022-08-18"},{"lineNumber":232,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":233,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":234,"author":{"gitId":"mlzt2000"},"content":"        String printable \u003d sb.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":235,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(printable);","lastModifiedDate":"2022-08-18"},{"lineNumber":236,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":237,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":238,"author":{"gitId":"mlzt2000"},"content":"    public static boolean handleInput(Scanner sc) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":239,"author":{"gitId":"mlzt2000"},"content":"        String inputCmd \u003d sc.next();","lastModifiedDate":"2022-08-18"},{"lineNumber":240,"author":{"gitId":"mlzt2000"},"content":"        String inputRem \u003d sc.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":241,"author":{"gitId":"mlzt2000"},"content":"        String storageStr \u003d String.format(\"%s %s\", inputCmd, inputRem);","lastModifiedDate":"2022-08-26"},{"lineNumber":242,"author":{"gitId":"mlzt2000"},"content":"        switch (inputCmd) {","lastModifiedDate":"2022-08-18"},{"lineNumber":243,"author":{"gitId":"mlzt2000"},"content":"        case (END_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":244,"author":{"gitId":"mlzt2000"},"content":"            return false;","lastModifiedDate":"2022-08-26"},{"lineNumber":245,"author":{"gitId":"mlzt2000"},"content":"        case (PRINT_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":246,"author":{"gitId":"mlzt2000"},"content":"            printAll();","lastModifiedDate":"2022-08-18"},{"lineNumber":247,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":248,"author":{"gitId":"mlzt2000"},"content":"        case (MARK_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":249,"author":{"gitId":"mlzt2000"},"content":"            markTask(inputRem);","lastModifiedDate":"2022-08-18"},{"lineNumber":250,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":251,"author":{"gitId":"mlzt2000"},"content":"        case (UNMARK_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":252,"author":{"gitId":"mlzt2000"},"content":"            unmarkTask(inputRem);","lastModifiedDate":"2022-08-18"},{"lineNumber":253,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":254,"author":{"gitId":"mlzt2000"},"content":"        case (TODO_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":255,"author":{"gitId":"mlzt2000"},"content":"            createTask(inputRem, TaskType.TODO);","lastModifiedDate":"2022-08-18"},{"lineNumber":256,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":257,"author":{"gitId":"mlzt2000"},"content":"        case (DEADLINE_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":258,"author":{"gitId":"mlzt2000"},"content":"            createTask(inputRem, TaskType.DEADLINE);","lastModifiedDate":"2022-08-18"},{"lineNumber":259,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":260,"author":{"gitId":"mlzt2000"},"content":"        case (EVENT_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":261,"author":{"gitId":"mlzt2000"},"content":"            createTask(inputRem, TaskType.EVENT);","lastModifiedDate":"2022-08-18"},{"lineNumber":262,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":263,"author":{"gitId":"mlzt2000"},"content":"        case (DELETE_COMMAND):","lastModifiedDate":"2022-08-26"},{"lineNumber":264,"author":{"gitId":"mlzt2000"},"content":"            deleteTask(inputRem);","lastModifiedDate":"2022-08-18"},{"lineNumber":265,"author":{"gitId":"mlzt2000"},"content":"            break;","lastModifiedDate":"2022-08-18"},{"lineNumber":266,"author":{"gitId":"mlzt2000"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":267,"author":{"gitId":"mlzt2000"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-08-26"},{"lineNumber":268,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":269,"author":{"gitId":"mlzt2000"},"content":"        return true;","lastModifiedDate":"2022-08-26"},{"lineNumber":270,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":271,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":272,"author":{"gitId":"mlzt2000"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-08-26"},{"lineNumber":273,"author":{"gitId":"mlzt2000"},"content":"        loadFile();","lastModifiedDate":"2022-08-26"},{"lineNumber":274,"author":{"gitId":"mlzt2000"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-26"},{"lineNumber":275,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(WELCOME_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":276,"author":{"gitId":"mlzt2000"},"content":"        boolean canNext \u003d true;","lastModifiedDate":"2022-08-26"},{"lineNumber":277,"author":{"gitId":"mlzt2000"},"content":"        while (canNext) {","lastModifiedDate":"2022-08-26"},{"lineNumber":278,"author":{"gitId":"mlzt2000"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":279,"author":{"gitId":"mlzt2000"},"content":"                canNext \u003d handleInput(sc);","lastModifiedDate":"2022-08-26"},{"lineNumber":280,"author":{"gitId":"mlzt2000"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":281,"author":{"gitId":"mlzt2000"},"content":"                prettyPrint(e.toString());","lastModifiedDate":"2022-08-18"},{"lineNumber":282,"author":{"gitId":"mlzt2000"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":283,"author":{"gitId":"mlzt2000"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":284,"author":{"gitId":"mlzt2000"},"content":"        storeToFile();","lastModifiedDate":"2022-08-31"},{"lineNumber":285,"author":{"gitId":"mlzt2000"},"content":"        prettyPrint(END_MESSAGE);","lastModifiedDate":"2022-08-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mlzt2000":284,"-":3}},{"path":"src/main/java/ip/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"class DukeException extends Exception {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"        return this.getMessage();","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":12}},{"path":"src/main/java/ip/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"class Event extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"    Event(String description, String at) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"        this(description, at, false);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"    protected Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"    public String getAt() {","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"EE, dd MMM yyyy, HH:mm\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"        String parStr \u003d super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"        return String.format(\"[E]%s (at: %s)\", parStr, getAt());","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":30}},{"path":"src/main/java/ip/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"class Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"    Task(String description) {","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"        this(description, false);","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"mlzt2000"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"mlzt2000"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"mlzt2000"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"mlzt2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"mlzt2000"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"mlzt2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"mlzt2000"},"content":"    protected String getStorageString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"mlzt2000"},"content":"        return String.format(\"%s|%s\", getStatusIcon(), getDescription());","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"mlzt2000"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"mlzt2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"mlzt2000"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":40}},{"path":"src/main/java/ip/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"public enum TaskType {","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":5}},{"path":"src/main/java/ip/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"package ip;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"class ToDo extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"    ToDo(String description) {","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"        this(description, false);","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"    protected ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"        super(description, isDone);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"        String parStr \u003d super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"        return String.format(\"[T]%s\", parStr);","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"mlzt2000"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"mlzt2000"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"mlzt2000"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"mlzt2000"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"mlzt2000"},"content":"deadline return book /by 2022-09-01 1800","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"mlzt2000"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"mlzt2000"},"content":"event meeting /at 2022-09-05 2000","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"mlzt2000"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"mlzt2000"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"mlzt2000"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"mlzt2000":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mlzt2000"},"content":"javac  -cp ..\\src\\main\\java\\ip -Xlint:none -d ..\\bin ..\\src\\main\\java\\ip\\*.java","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"mlzt2000":1}}]

[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"3. After that, locate the `src/main/java/duke/Laungher.java` file, right-click it, and choose `Run Launcher.main()`. If the setup is correct, you should see a GUI like the below: ","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"![](docs/Ui.png)","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"RezwanArefin01":2,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.9.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.9.0\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"checkstyle {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":24,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"# Table of Contents","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"- [Getting Started](#getting_started)","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"- [Commands](#commands)","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"  - [Add a todo task: `todo`](#todo)","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"  - [Add a deadline task: `deadline`](#deadline)","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"  - [Add an event task: `event`](#event)","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"  - [List all tasks: `list`](#list)","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"  - [Mark a task as done: `check`](#check)","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"  - [Mark a task as not done: `uncheck`](#uncheck)","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"  - [Delete a task: `delete`](#delete)","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"  - [Find tasks by keyword: `find`](#find)","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"  - [Show help message: `help`](#help) ","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"  - [Exit the program: `exit`](#exit)","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"- [Advanced Features](#advanced_features)","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"  - [Data File](#data_file)","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"  ","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"# Introduction \u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"![](Ui.png)","lastModifiedDate":"2022-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"Duke is a personal chat-bot to help you keep track of your tasks, events, or deadlines.","lastModifiedDate":"2022-09-12"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"It is optimized for keyboard users, but has a GUI for the looks as well.","lastModifiedDate":"2022-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"# Getting Started \u003ca name\u003d\"getting_started\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"- Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-09-12"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"- Download the latest jar from the [release page](https://github.com/RezwanArefin01/ip/releases/).","lastModifiedDate":"2022-09-12"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"- Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2022-09-12"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"- Make sure the directory has read and write permissions.","lastModifiedDate":"2022-09-12"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"- Run `java -jar duke.jar` in a terminal to start Duke. A data directory will be created in the location you execute the command from.","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"  - Do not use double click to start the application. Because your OS can decide to execute the command from a different place.","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"- Enter `help` to get started!","lastModifiedDate":"2022-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"# Features \u003ca name\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"- [x] Add a todo task.","lastModifiedDate":"2022-09-12"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"- [x] Add a task with a deadline.","lastModifiedDate":"2022-09-12"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"- [x] Add an event.","lastModifiedDate":"2022-09-12"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"- [x] Check/uncheck a task.","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"- [x] Find tasks by keyword.","lastModifiedDate":"2022-09-12"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"- [x] Delete a task.","lastModifiedDate":"2022-09-12"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"- [x] List all tasks.","lastModifiedDate":"2022-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"# Commands \u003ca name\u003d\"commands\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"## Add a todo task: `todo DESCRIPTION` \u003ca name\u003d\"todo\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"Adds a task with the given `DESCRIPTION`.","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"todo Return CLRS book to the library.","lastModifiedDate":"2022-09-12"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"\u003e I\u0027ve added the following task:","lastModifiedDate":"2022-09-12"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   [📝][ ] Return CLRS book to the library.","lastModifiedDate":"2022-09-12"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"## Add a deadline task: `deadline DESCRIPTION / DATE TIME` \u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"Adds a task with the given `DESCRIPTION` and a deadline specified by `DATE` and `TIME`.","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"**Date format**","lastModifiedDate":"2022-09-12"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"- Recommended: `dd-mm-yyyy`.","lastModifiedDate":"2022-09-12"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"- `-` may be replaced by `/`.","lastModifiedDate":"2022-09-12"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"- Number of digits in the day and month may be 1 or 2.","lastModifiedDate":"2022-09-12"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"- Year may be 2 or 4 digits.","lastModifiedDate":"2022-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"**Time format:**","lastModifiedDate":"2022-09-12"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"- Recommended: `hhmm`.","lastModifiedDate":"2022-09-12"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"- Alternative: `hh:mm`.","lastModifiedDate":"2022-09-12"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"- Number of digits in the hour and minute must be 2.","lastModifiedDate":"2022-09-12"},{"lineNumber":68,"author":{"gitId":"RezwanArefin01"},"content":"- Hour must be in 24-hour format.","lastModifiedDate":"2022-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":71,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":72,"author":{"gitId":"RezwanArefin01"},"content":"deadline CS2103T iP / 16-09-2022 2359","lastModifiedDate":"2022-09-12"},{"lineNumber":73,"author":{"gitId":"RezwanArefin01"},"content":"\u003e I\u0027ve added the following task:","lastModifiedDate":"2022-09-12"},{"lineNumber":74,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   [⏰][ ] CS2103T iP (by: 16 Sep 2022 11:59 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":75,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"RezwanArefin01"},"content":"## Add an event: `event DESCRIPTION / DATE TIME` \u003ca name\u003d\"event\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"RezwanArefin01"},"content":"Adds an event with the given `DESCRIPTION` and a time specified by `DATE` and `TIME`.","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"RezwanArefin01"},"content":"Date and time format is the same as the deadline command.","lastModifiedDate":"2022-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage**:","lastModifiedDate":"2022-09-12"},{"lineNumber":83,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":84,"author":{"gitId":"RezwanArefin01"},"content":"event CS2103T lecture / 16-09-2022 1600","lastModifiedDate":"2022-09-12"},{"lineNumber":85,"author":{"gitId":"RezwanArefin01"},"content":"\u003e I\u0027ve added the following task:","lastModifiedDate":"2022-09-12"},{"lineNumber":86,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   [📅][ ] CS2103T lecture (at: 16 Sep 2022 4:00 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":87,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"RezwanArefin01"},"content":"## List all tasks: `list` \u003ca name\u003d\"list\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"RezwanArefin01"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2022-09-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"RezwanArefin01"},"content":"list","lastModifiedDate":"2022-09-12"},{"lineNumber":95,"author":{"gitId":"RezwanArefin01"},"content":"\u003e List of tasks:","lastModifiedDate":"2022-09-12"},{"lineNumber":96,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   1. [📝][ ] Return CLRS book to the library.","lastModifiedDate":"2022-09-12"},{"lineNumber":97,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   2. [⏰][ ] CS2103T iP (by: 16 Sep 2022 11:59 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":98,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   3. [📅][ ] CS2103T lecture (at: 16 Sep 2022 4:00 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":101,"author":{"gitId":"RezwanArefin01"},"content":"## Mark a task as done: `check INDEX` \u003ca name\u003d\"check\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"RezwanArefin01"},"content":"Marks the task at the given `INDEX` as done.","lastModifiedDate":"2022-09-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":104,"author":{"gitId":"RezwanArefin01"},"content":"You may want to use the `list` command to find the index of the task you want to mark as done.","lastModifiedDate":"2022-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":106,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":108,"author":{"gitId":"RezwanArefin01"},"content":"check 1","lastModifiedDate":"2022-09-12"},{"lineNumber":109,"author":{"gitId":"RezwanArefin01"},"content":"\u003e I\u0027ve updated the following task:","lastModifiedDate":"2022-09-12"},{"lineNumber":110,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   [📝][✔] Return CLRS book to the library.","lastModifiedDate":"2022-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":112,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":113,"author":{"gitId":"RezwanArefin01"},"content":"## Mark a task as not done: `uncheck INDEX` \u003ca name\u003d\"uncheck\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"RezwanArefin01"},"content":"Marks the task at the given `INDEX` as not done.","lastModifiedDate":"2022-09-14"},{"lineNumber":115,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":116,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":117,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":118,"author":{"gitId":"RezwanArefin01"},"content":"uncheck 1","lastModifiedDate":"2022-09-12"},{"lineNumber":119,"author":{"gitId":"RezwanArefin01"},"content":"\u003e I\u0027ve updated the following task:","lastModifiedDate":"2022-09-12"},{"lineNumber":120,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   [📝][ ] Return CLRS book to the library.","lastModifiedDate":"2022-09-12"},{"lineNumber":121,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":122,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":123,"author":{"gitId":"RezwanArefin01"},"content":"## Delete a task - `delete INDEX` \u003ca name\u003d\"delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"RezwanArefin01"},"content":"Deletes the task at the given `INDEX`.","lastModifiedDate":"2022-09-14"},{"lineNumber":125,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":126,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":127,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":128,"author":{"gitId":"RezwanArefin01"},"content":"delete 1","lastModifiedDate":"2022-09-12"},{"lineNumber":129,"author":{"gitId":"RezwanArefin01"},"content":"\u003e I\u0027ve deleted the following task:","lastModifiedDate":"2022-09-12"},{"lineNumber":130,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   [📝][ ] Return CLRS book to the library.","lastModifiedDate":"2022-09-12"},{"lineNumber":131,"author":{"gitId":"RezwanArefin01"},"content":"list","lastModifiedDate":"2022-09-12"},{"lineNumber":132,"author":{"gitId":"RezwanArefin01"},"content":"\u003e List of tasks:","lastModifiedDate":"2022-09-12"},{"lineNumber":133,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   1. [⏰][ ] CS2103T iP (by: 16 Sep 2022 11:59 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":134,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   2. [📅][ ] CS2103T lecture (at: 16 Sep 2022 4:00 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":135,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":136,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":137,"author":{"gitId":"RezwanArefin01"},"content":"## Find tasks by keyword: `find KEYWORD` \u003ca name\u003d\"find\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":138,"author":{"gitId":"RezwanArefin01"},"content":"Finds all tasks that contain the given `KEYWORD`.","lastModifiedDate":"2022-09-14"},{"lineNumber":139,"author":{"gitId":"RezwanArefin01"},"content":"The search is case-insensitive.","lastModifiedDate":"2022-09-12"},{"lineNumber":140,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":141,"author":{"gitId":"RezwanArefin01"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-12"},{"lineNumber":142,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":143,"author":{"gitId":"RezwanArefin01"},"content":"find cS","lastModifiedDate":"2022-09-12"},{"lineNumber":144,"author":{"gitId":"RezwanArefin01"},"content":"\u003e Task containing the keyword \"cS\":","lastModifiedDate":"2022-09-12"},{"lineNumber":145,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   1. [⏰][ ] CS2103T iP (by: 16 Sep 2022 11:59 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":146,"author":{"gitId":"RezwanArefin01"},"content":"\u003e   2. [📅][ ] CS2103T lecture (at: 16 Sep 2022 4:00 PM)","lastModifiedDate":"2022-09-12"},{"lineNumber":147,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-12"},{"lineNumber":148,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":149,"author":{"gitId":"RezwanArefin01"},"content":"## Show help message: `help` \u003ca name\u003d\"help\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"RezwanArefin01"},"content":"Shows a help message with a list of commands and their usage.","lastModifiedDate":"2022-09-12"},{"lineNumber":151,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":152,"author":{"gitId":"RezwanArefin01"},"content":"## Exit the program: `exit` \u003ca name\u003d\"exit\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":153,"author":{"gitId":"RezwanArefin01"},"content":"Exits the program with a goodbye message.","lastModifiedDate":"2022-09-14"},{"lineNumber":154,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":155,"author":{"gitId":"RezwanArefin01"},"content":"# Advanced Features \u003ca name\u003d\"advanced_features\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":156,"author":{"gitId":"RezwanArefin01"},"content":"## Data File \u003ca name\u003d\"data_file\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-15"},{"lineNumber":157,"author":{"gitId":"RezwanArefin01"},"content":"All the data is saved in the file `./data/data.txt`, relative to the directory you execute the jar from. ","lastModifiedDate":"2022-09-15"},{"lineNumber":158,"author":{"gitId":"RezwanArefin01"},"content":"You can modify task list by directly editing this file. Each line of the file describes one task. ","lastModifiedDate":"2022-09-15"},{"lineNumber":159,"author":{"gitId":"RezwanArefin01"},"content":"The format is the following:","lastModifiedDate":"2022-09-15"},{"lineNumber":160,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":161,"author":{"gitId":"RezwanArefin01"},"content":"TASK SYMBOL | IS DONE? | DESCRIPTION [| ARGS...]","lastModifiedDate":"2022-09-14"},{"lineNumber":162,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":163,"author":{"gitId":"RezwanArefin01"},"content":"- `TASK SYMBOL` is `T` for todo task, `D` for deadline, and `E` for event tasks.","lastModifiedDate":"2022-09-14"},{"lineNumber":164,"author":{"gitId":"RezwanArefin01"},"content":"- `IS DONE?` is 0 or 1 depending whether the task is due or not.","lastModifiedDate":"2022-09-14"},{"lineNumber":165,"author":{"gitId":"RezwanArefin01"},"content":"- `DESCRIPTION` is the description of the task.","lastModifiedDate":"2022-09-14"},{"lineNumber":166,"author":{"gitId":"RezwanArefin01"},"content":"- Currently, the `ARGS...` take in a date time for deadline and events. The date-time must be in the","lastModifiedDate":"2022-09-15"},{"lineNumber":167,"author":{"gitId":"RezwanArefin01"},"content":"format `h-M-yy HHmm`. Specifically, day and month number should not have leading zeros, and year must have","lastModifiedDate":"2022-09-14"},{"lineNumber":168,"author":{"gitId":"RezwanArefin01"},"content":"2 digits.","lastModifiedDate":"2022-09-14"},{"lineNumber":169,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":170,"author":{"gitId":"RezwanArefin01"},"content":"**Example data file:**","lastModifiedDate":"2022-09-15"},{"lineNumber":171,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":172,"author":{"gitId":"RezwanArefin01"},"content":"T | 0 | Return CLRS book to the library.","lastModifiedDate":"2022-09-14"},{"lineNumber":173,"author":{"gitId":"RezwanArefin01"},"content":"D | 0 | CS2103T iP. | 16-9-22 2359","lastModifiedDate":"2022-09-14"},{"lineNumber":174,"author":{"gitId":"RezwanArefin01"},"content":"E | 0 | CS2103T lecture. | 16-9-22 1800","lastModifiedDate":"2022-09-14"},{"lineNumber":175,"author":{"gitId":"RezwanArefin01"},"content":"```","lastModifiedDate":"2022-09-14"},{"lineNumber":176,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":177,"author":{"gitId":"RezwanArefin01"},"content":"However, do note that if the data file is corrupted, Duke will not startup. It will show you a warning","lastModifiedDate":"2022-09-14"},{"lineNumber":178,"author":{"gitId":"RezwanArefin01"},"content":"about the corruption and you can choose to keep the file and investigate, or start with a new file.","lastModifiedDate":"2022-09-14"},{"lineNumber":179,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"RezwanArefin01":157,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.DataFileCorruptedException;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":" * The main class of the Duke chat-bot.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    private final Consumer\u003cString\u003e printer;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code Duke} with a datafile path.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     * @param path    The path to the datafile.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer A {@code Consumer\u003cString\u003e} that prints a message to GUI.","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"    public Duke(Path path, Consumer\u003cString\u003e printer) {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"        this.printer \u003d printer;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (DataFileCorruptedException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"            // If we are here, it means the load did succeed but the data file is corrupted.","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"            Alert alert \u003d new Alert(Alert.AlertType.ERROR, e.getMessage() + \"\\n\"","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"                    + \"Do you want to reset the datafile?\", ButtonType.YES, ButtonType.NO);","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"            alert.showAndWait();","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"            if (alert.getResult() \u003d\u003d ButtonType.YES) {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"            } else {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"                System.exit(0);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"            // If we are here, it means data file could not be created.","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"            Alert alert \u003d new Alert(Alert.AlertType.ERROR, e.getMessage() + \"\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"                    + \"Check if the file permissions are set correctly.\", ButtonType.OK);","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"            alert.showAndWait();","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"            System.exit(0);","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(\"Welcome to Duke!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"     * Executes a command.","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"     * @param command The command to execute.","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(String command) {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"            Command cmd \u003d Parser.parseCommand(command);","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"            cmd.execute(storage, printer, tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"            printer.accept(e.getMessage());","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"RezwanArefin01":66,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":" * Exception thrown from Duke\u0027s code.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-15"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"        super(message);","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"RezwanArefin01":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import duke.ui.Gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"RezwanArefin01":13}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command to add a {@code Task} to a {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- todo \u003cdescription\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Adds a todo task to the task list with the given description.\\n\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"            + \"- deadline \u003cdescription\u003e / \u003cdate-time\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Adds a deadline task to the task list with the given description and date.\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"            + \"The date-time should be in the format dd-mm-yy HHmm.\\n\\n\"","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"            + \"- event \u003cdescription\u003e / \u003cdate-time\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Adds an event task to the task list with the given description and date.\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"            + \"The date-time should be in the format dd-mm-yy HHmm.\";","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String ADD_TASK_RESPONSE_FORMAT \u003d \"I\u0027ve added the following task:\\n\\t%s\";","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    private final Task task;","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     * Creates a new {@code AddTaskCommand} with the given {@code Task}.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     * @param task The {@code Task} to add.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"     * Adds the task to the task list.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-22"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(String.format(ADD_TASK_RESPONSE_FORMAT, task));","lastModifiedDate":"2022-09-11"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code AddTaskCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code AddTaskCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"        if (o instanceof AddTaskCommand) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"            AddTaskCommand other \u003d (AddTaskCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"            return this.task.equals(other.task);","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":63}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"     * Executes the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    public abstract void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks);","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"RezwanArefin01":23}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":" * Supported commands along with their argument counts.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"public enum CommandType {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"    HELP(1),","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"    LIST(1),","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"    CHECK(2),","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    UNCHECK(2),","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"    TODO(2),","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    DEADLINE(3),","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    EVENT(3),","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    FIND(2),","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    DELETE(2),","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"    EXIT(1);","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"    private final int argCount;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    CommandType(int argCount) {","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"        this.argCount \u003d argCount;","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if the provided arguments are compatible with the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     * @param args The arguments to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the arguments are compatible with the command, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean isCompatible(String... args) {","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"        assert args !\u003d null;","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        return this.argCount \u003d\u003d args.length;","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"RezwanArefin01":34}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command to delete a {@code Task} from a {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- delete \u003cindex\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Deletes the task at the given index from the task list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String DELETE_RESPONSE_FORMAT \u003d \"I\u0027ve deleted the following task:\\n\\t%s\";","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code DeleteTaskCommand} with the given {@code index}.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"     * @param index The index of the {@code Task} to delete. Assumed 1-indexed.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"     * Deletes the {@code Task} at the given {@code index} from the {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(String.format(DELETE_RESPONSE_FORMAT, task));","lastModifiedDate":"2022-09-11"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code DeleteTaskCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code DeleteTaskCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"        if (o instanceof DeleteTaskCommand) {","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"            DeleteTaskCommand other \u003d (DeleteTaskCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"            return this.index \u003d\u003d other.index;","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":62}},{"path":"src/main/java/duke/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command that does nothing.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"     * Does nothing for the execution of the command.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"        // Does nothing","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code EmptyCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code EmptyCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"        return o instanceof EmptyCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":35}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Timer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command that ends interaction.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- exit:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Exits the program.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"    private static final int EXIT_DELAY \u003d 1000;","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"     * Calls the {@code UI} to exit interaction.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(BYE_MESSAGE);","lastModifiedDate":"2022-09-11"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"            @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"            public void run() {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"                System.exit(0);","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"        }, EXIT_DELAY);","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code ExitCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code ExitCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"        return o instanceof ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":48}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command to perform keyword saerch.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- find \u003ckeyword\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Searches for tasks with the given keyword.\"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"            + \"The search is case insensitive.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String FIND_RESPONSE_FORMAT \u003d \"Tasks containing the keyword \\\"%s\\\":\\n%s\";","lastModifiedDate":"2022-09-11"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"     * Creates a new {@code FindCommand} with the given keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"     * Searches the {@code TaskList} for the keyword.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"        tasks.stream().filter(t -\u003e t.contains(keyword)).forEach(foundTasks::add);","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(String.format(FIND_RESPONSE_FORMAT, keyword, foundTasks));","lastModifiedDate":"2022-09-11"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code FindCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code FindCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"        if (o instanceof FindCommand) {","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"            FindCommand other \u003d (FindCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"            return this.keyword.equals(other.keyword);","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":56}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command to print the help message.","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- help:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Prints this help message.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String HELP_HEADER \u003d \"Here are the commands you can use:\";","lastModifiedDate":"2022-09-11"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"        String[] helpMessages \u003d {","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"            HelpCommand.HELP_STRING,","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"            AddTaskCommand.HELP_STRING,","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"            DeleteTaskCommand.HELP_STRING,","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"            ListCommand.HELP_STRING,","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"            UpdateStatusCommand.HELP_STRING,","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"            FindCommand.HELP_STRING,","lastModifiedDate":"2022-09-08"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"            ExitCommand.HELP_STRING","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"        };","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"        StringJoiner sj \u003d new StringJoiner(\"\\n--------------------\\n\");","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        Arrays.stream(helpMessages).forEach(sj::add);","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(HELP_HEADER + \"\\n\\n\" + sj);","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"RezwanArefin01":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command to list {@code Task}s in a {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- list:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Lists all the tasks in the task list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String LIST_RESPONSE_FORMAT \u003d \"List of tasks:\\n%s\";","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     * Prints the {@code Task}s in the {@code TaskList} to the {@code UI}.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(String.format(LIST_RESPONSE_FORMAT, tasks));","lastModifiedDate":"2022-09-11"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code ListCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code ListCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"        return o instanceof ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":40}},{"path":"src/main/java/duke/command/UpdateStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.command;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-06"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a command to check or uncheck a {@code Task} from a {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"public class UpdateStatusCommand extends Command {","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    public static final String HELP_STRING \u003d \"- check \u003cindex\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Checks the task at the given index from the task list.\\n\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"            + \"uncheck \u003cindex\u003e:\\n\"","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"            + \"Unchecks the task at the given index from the task list.\";","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    private static final String UPDATE_RESPONSE_FORMAT \u003d \"I\u0027ve updated the task:\\n\\t%s\";","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    private final int index;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code UpdateStatusCommand} with the given {@code index} and {@code isDone}.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     * @param index The index of the {@code Task} to update. Assumed 1-indexed.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     * @param isDone Whether the {@code Task} should be checked or unchecked.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    public UpdateStatusCommand(int index, boolean isDone) {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"     * Updates the {@code Task} at the given {@code index} in the {@code TaskList} according to {@code isDone}.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"     * @param storage The {@code Storage} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"     * @param printer The {@code Consumer\u003cString\u003e} to use for printing.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to use.","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"    public void execute(Storage storage, Consumer\u003cString\u003e printer, TaskList tasks) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2022-09-06"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2022-09-06"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-06"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"        task.setDone(isDone);","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"        printer.accept(String.format(UPDATE_RESPONSE_FORMAT, task));","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code UpdateStatusCommand}.","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code UpdateStatusCommand}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"        if (o instanceof UpdateStatusCommand) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"            UpdateStatusCommand other \u003d (UpdateStatusCommand) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"            return this.index \u003d\u003d other.index \u0026\u0026 this.isDone \u003d\u003d other.isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":67}},{"path":"src/main/java/duke/parser/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.parser;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":" * Exception thrown in case of a parse error.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"public class ParseException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new ParseException.","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"     * @param str The string that could not be parsed.","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    public ParseException(String str) {","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"        super(\"Parsing error: \" + str);","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new ParseException with a help message.","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"     * @param str The string that could not be parsed.","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"     * @param msg The help message.","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    public ParseException(String str, String msg) {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"        super(String.format(\"Parsing error: %s (%s)\", str, msg));","lastModifiedDate":"2022-09-11"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":27}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.parser;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-11"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.CommandType;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.EmptyCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.UpdateStatusCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskSymbolType;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":" * Parser to make sense of user input.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"public class Parser {","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    public static final DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"\"","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"        + \"[d/M/yy HHmm][d/M/yy HH:mm][d-M-yy HHmm][d-M-yy HH:mm][d/M/yyyy HHmm][d/M/yyyy HH:mm]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        + \"[d-M-yyyy HHmm][d-M-yyyy HH:mm][d/MM/yy HHmm][d/MM/yy HH:mm][d-MM-yy HHmm][d-MM-yy HH:mm]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"        + \"[d/MM/yyyy HHmm][d/MM/yyyy HH:mm][d-MM-yyyy HHmm][d-MM-yyyy HH:mm][dd/M/yy HHmm][dd/M/yy HH:mm]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"        + \"[dd-M-yy HHmm][dd-M-yy HH:mm][dd/M/yyyy HHmm][dd/M/yyyy HH:mm][dd-M-yyyy HHmm][dd-M-yyyy HH:mm]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"        + \"[dd/MM/yy HHmm][dd/MM/yy HH:mm][dd-MM-yy HHmm][dd-MM-yy HH:mm][dd/MM/yyyy HHmm][dd/MM/yyyy HH:mm]\"","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"        + \"[dd-MM-yyyy HHmm][dd-MM-yyyy HH:mm]\");","lastModifiedDate":"2022-09-11"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    public static final DateTimeFormatter DATE_TIME_SAVE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d-M-yy HHmm\");","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    public static final DateTimeFormatter DATE_TIME_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");","lastModifiedDate":"2022-09-12"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"     * Parses an integer from a string.","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"     * @param num The string to parse.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The parsed integer.","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"    public static int parseInt(String num) {","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"            return Integer.parseInt(num);","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(\"not an integer: \" + num);","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"     * Parses a {@code LocalDateTime} from a string.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"     * The string must be in the format {@code DATE_TIME_INPUT_FORMAT}.","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"     * @param dateTime The string to parse.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The parsed {@code LocalDateTime}.","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"            return LocalDateTime.parse(dateTime, DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(\"invalid datetime: \" + dateTime);","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"RezwanArefin01"},"content":"     * Parses a {@code Command} from a string.","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"RezwanArefin01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"RezwanArefin01"},"content":"     * The format of the {@code Command} is {@code \u003ccommand\u003e \u003carg1\u003e / \u003carg2\u003e / ...}.","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"RezwanArefin01"},"content":"     * The {@code \u003ccommand\u003e} must be one of the {@code CommandType}s.","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"RezwanArefin01"},"content":"     * The case of the {@code \u003ccommand\u003e} does not matter.","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"RezwanArefin01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"RezwanArefin01"},"content":"     * The arguments are seperated by {@code \" / \"}.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"RezwanArefin01"},"content":"     * There must be at least one space before and after the {@code /}.","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"RezwanArefin01"},"content":"     * @param rawInput The string to parse.","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The parsed {@code Command}.","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"RezwanArefin01"},"content":"    public static Command parseCommand(String rawInput) {","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"RezwanArefin01"},"content":"        String input \u003d rawInput.strip();","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"RezwanArefin01"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"RezwanArefin01"},"content":"            return new EmptyCommand();","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":87,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":88,"author":{"gitId":"RezwanArefin01"},"content":"        String[] args \u003d getTokens(input);","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"RezwanArefin01"},"content":"        CommandType type \u003d getCommandType(args, rawInput);","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"RezwanArefin01"},"content":"        switch (type) {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"RezwanArefin01"},"content":"        case HELP:","lastModifiedDate":"2022-09-08"},{"lineNumber":93,"author":{"gitId":"RezwanArefin01"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"RezwanArefin01"},"content":"        case LIST:","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"RezwanArefin01"},"content":"            return new ListCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"RezwanArefin01"},"content":"        case CHECK: // fall through","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"RezwanArefin01"},"content":"        case UNCHECK:","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"RezwanArefin01"},"content":"            return new UpdateStatusCommand(parseInt(args[1]), type \u003d\u003d CommandType.CHECK);","lastModifiedDate":"2022-09-07"},{"lineNumber":99,"author":{"gitId":"RezwanArefin01"},"content":"        case TODO:","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"RezwanArefin01"},"content":"            return new AddTaskCommand(new TodoTask(args[1]));","lastModifiedDate":"2022-09-07"},{"lineNumber":101,"author":{"gitId":"RezwanArefin01"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"RezwanArefin01"},"content":"            return new AddTaskCommand(new DeadlineTask(args[1], parseDateTime(args[2])));","lastModifiedDate":"2022-09-07"},{"lineNumber":103,"author":{"gitId":"RezwanArefin01"},"content":"        case EVENT:","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"RezwanArefin01"},"content":"            return new AddTaskCommand(new EventTask(args[1], parseDateTime(args[2])));","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"RezwanArefin01"},"content":"        case FIND:","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"RezwanArefin01"},"content":"            return new FindCommand(args[1]);","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"RezwanArefin01"},"content":"        case DELETE:","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"RezwanArefin01"},"content":"            return new DeleteTaskCommand(parseInt(args[1]));","lastModifiedDate":"2022-09-07"},{"lineNumber":109,"author":{"gitId":"RezwanArefin01"},"content":"        case EXIT:","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"RezwanArefin01"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"RezwanArefin01"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"RezwanArefin01"},"content":"            // should not reach here, as command type is verified by getCommandType.","lastModifiedDate":"2022-09-11"},{"lineNumber":113,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Duke could not make sense of this command: \" + rawInput);","lastModifiedDate":"2022-09-11"},{"lineNumber":114,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":115,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":116,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":118,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the {@code CommandType} from an argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":119,"author":{"gitId":"RezwanArefin01"},"content":"     * In case of an exception, the {@code rawInput} is used to provide more information.","lastModifiedDate":"2022-09-07"},{"lineNumber":120,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":121,"author":{"gitId":"RezwanArefin01"},"content":"     * @param args     The argument list. It must contain at least one argument.","lastModifiedDate":"2022-09-11"},{"lineNumber":122,"author":{"gitId":"RezwanArefin01"},"content":"     * @param rawInput The raw input string.","lastModifiedDate":"2022-09-07"},{"lineNumber":123,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The {@code CommandType}.","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"RezwanArefin01"},"content":"    private static CommandType getCommandType(String[] args, String rawInput) {","lastModifiedDate":"2022-09-07"},{"lineNumber":126,"author":{"gitId":"RezwanArefin01"},"content":"        assert args.length \u003e 0 : \"Argument list should not be empty\";","lastModifiedDate":"2022-09-11"},{"lineNumber":127,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":128,"author":{"gitId":"RezwanArefin01"},"content":"        CommandType type;","lastModifiedDate":"2022-09-07"},{"lineNumber":129,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":130,"author":{"gitId":"RezwanArefin01"},"content":"            type \u003d CommandType.valueOf(args[0].toUpperCase());","lastModifiedDate":"2022-09-07"},{"lineNumber":131,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(\"invalid command: \" + args[0] + \" (enter \\\"help\\\" for available commands)\");","lastModifiedDate":"2022-09-11"},{"lineNumber":133,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"RezwanArefin01"},"content":"        if (!type.isCompatible(args)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":135,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(rawInput, \"wrong number of arguments provided\");","lastModifiedDate":"2022-09-07"},{"lineNumber":136,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":137,"author":{"gitId":"RezwanArefin01"},"content":"        return type;","lastModifiedDate":"2022-09-07"},{"lineNumber":138,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":141,"author":{"gitId":"RezwanArefin01"},"content":"     * Splits the input string into tokens.","lastModifiedDate":"2022-09-07"},{"lineNumber":142,"author":{"gitId":"RezwanArefin01"},"content":"     * The first token is seperated from the rest by any amount of whitespace.","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"RezwanArefin01"},"content":"     * The rest of the tokens (if any) are seperated by {@code \" / \"} with","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"RezwanArefin01"},"content":"     * any amount of whitespace on either side.","lastModifiedDate":"2022-09-07"},{"lineNumber":145,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"RezwanArefin01"},"content":"     * @param input The string to split.","lastModifiedDate":"2022-09-07"},{"lineNumber":147,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The tokens.","lastModifiedDate":"2022-09-07"},{"lineNumber":148,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":149,"author":{"gitId":"RezwanArefin01"},"content":"    private static String[] getTokens(String input) {","lastModifiedDate":"2022-09-07"},{"lineNumber":150,"author":{"gitId":"RezwanArefin01"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-09-07"},{"lineNumber":151,"author":{"gitId":"RezwanArefin01"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"RezwanArefin01"},"content":"            return parts;","lastModifiedDate":"2022-09-07"},{"lineNumber":153,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":154,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":155,"author":{"gitId":"RezwanArefin01"},"content":"        // split the rest of the string by \" / \" and strip the tokens","lastModifiedDate":"2022-09-07"},{"lineNumber":156,"author":{"gitId":"RezwanArefin01"},"content":"        String[] args \u003d parts[1].split(\"\\\\s+/\\\\s+\");","lastModifiedDate":"2022-09-07"},{"lineNumber":157,"author":{"gitId":"RezwanArefin01"},"content":"        Arrays.setAll(args, i -\u003e args[i].strip());","lastModifiedDate":"2022-09-07"},{"lineNumber":158,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":159,"author":{"gitId":"RezwanArefin01"},"content":"        // merge the first token with the rest of the tokens","lastModifiedDate":"2022-09-07"},{"lineNumber":160,"author":{"gitId":"RezwanArefin01"},"content":"        String[] result \u003d new String[args.length + 1];","lastModifiedDate":"2022-09-07"},{"lineNumber":161,"author":{"gitId":"RezwanArefin01"},"content":"        result[0] \u003d parts[0];","lastModifiedDate":"2022-09-07"},{"lineNumber":162,"author":{"gitId":"RezwanArefin01"},"content":"        System.arraycopy(args, 0, result, 1, args.length);","lastModifiedDate":"2022-09-07"},{"lineNumber":163,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":164,"author":{"gitId":"RezwanArefin01"},"content":"        return result;","lastModifiedDate":"2022-09-07"},{"lineNumber":165,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"RezwanArefin01"},"content":"     * Parses a {@code Task} from a string.","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"RezwanArefin01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"RezwanArefin01"},"content":"     * The format of the {@code Task} is {@code \u003ctask symbol\u003e | \u003cisDone\u003e | \u003cdescription\u003e | \u003cargs\u003e ...}.","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"RezwanArefin01"},"content":"     * The {@code \u003ctask symbol\u003e} must be one of the {@code TaskType}s.","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"RezwanArefin01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"RezwanArefin01"},"content":"     * The {@code \u003cisDone\u003e} must be either {@code 0} or {@code 1}.","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"RezwanArefin01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"RezwanArefin01"},"content":"     * There should be exactly one space before and after the {@code |}.","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"RezwanArefin01"},"content":"     * @param input The string to parse.","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The parsed {@code Task}.","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"RezwanArefin01"},"content":"    public static Task parseTask(String input) {","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"RezwanArefin01"},"content":"        String[] splits \u003d input.split(\" \\\\| \", -1);","lastModifiedDate":"2022-08-23"},{"lineNumber":182,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":183,"author":{"gitId":"RezwanArefin01"},"content":"        TaskSymbolType type \u003d getTaskSymbolType(splits, input);","lastModifiedDate":"2022-09-07"},{"lineNumber":184,"author":{"gitId":"RezwanArefin01"},"content":"        Task task \u003d getTask(splits, type, input);","lastModifiedDate":"2022-09-07"},{"lineNumber":185,"author":{"gitId":"RezwanArefin01"},"content":"        task.setDone(getIsDone(splits, input));","lastModifiedDate":"2022-09-07"},{"lineNumber":186,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":187,"author":{"gitId":"RezwanArefin01"},"content":"        return task;","lastModifiedDate":"2022-09-07"},{"lineNumber":188,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":189,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":190,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":191,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the {@code TaskSymbolType} from an argument list of a Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":192,"author":{"gitId":"RezwanArefin01"},"content":"     * In case of an exception, the {@code input} is used to provide more information.","lastModifiedDate":"2022-09-07"},{"lineNumber":193,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":194,"author":{"gitId":"RezwanArefin01"},"content":"     * @param splits The argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":195,"author":{"gitId":"RezwanArefin01"},"content":"     * @param input  The input string.","lastModifiedDate":"2022-09-07"},{"lineNumber":196,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The {@code TaskSymbolType}.","lastModifiedDate":"2022-09-07"},{"lineNumber":197,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":198,"author":{"gitId":"RezwanArefin01"},"content":"    private static TaskSymbolType getTaskSymbolType(String[] splits, String input) {","lastModifiedDate":"2022-09-07"},{"lineNumber":199,"author":{"gitId":"RezwanArefin01"},"content":"        TaskSymbolType type;","lastModifiedDate":"2022-09-07"},{"lineNumber":200,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":201,"author":{"gitId":"RezwanArefin01"},"content":"            type \u003d TaskSymbolType.valueOf(splits[0]);","lastModifiedDate":"2022-09-07"},{"lineNumber":202,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":203,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(input, \"unknown task symbol\");","lastModifiedDate":"2022-09-07"},{"lineNumber":204,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":205,"author":{"gitId":"RezwanArefin01"},"content":"        if (!type.isCompatible(splits)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":206,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(input, \"wrong number of arguments provided\");","lastModifiedDate":"2022-09-07"},{"lineNumber":207,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":208,"author":{"gitId":"RezwanArefin01"},"content":"        return type;","lastModifiedDate":"2022-09-07"},{"lineNumber":209,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":210,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":211,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":212,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the {@code Task} from an argument list of a Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":213,"author":{"gitId":"RezwanArefin01"},"content":"     * In case of an exception, the {@code input} is used to provide more information.","lastModifiedDate":"2022-09-07"},{"lineNumber":214,"author":{"gitId":"RezwanArefin01"},"content":"     * Assumes the {@code TaskSymbolType} is compatible with the argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":215,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":216,"author":{"gitId":"RezwanArefin01"},"content":"     * @param splits The argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":217,"author":{"gitId":"RezwanArefin01"},"content":"     * @param type   The {@code TaskSymbolType}.","lastModifiedDate":"2022-09-07"},{"lineNumber":218,"author":{"gitId":"RezwanArefin01"},"content":"     * @param input  The input string.","lastModifiedDate":"2022-09-07"},{"lineNumber":219,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The parsed {@code Task}.","lastModifiedDate":"2022-09-07"},{"lineNumber":220,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":221,"author":{"gitId":"RezwanArefin01"},"content":"    private static Task getTask(String[] splits, TaskSymbolType type, String input) {","lastModifiedDate":"2022-09-07"},{"lineNumber":222,"author":{"gitId":"RezwanArefin01"},"content":"        switch (type) {","lastModifiedDate":"2022-09-07"},{"lineNumber":223,"author":{"gitId":"RezwanArefin01"},"content":"        case T:","lastModifiedDate":"2022-08-23"},{"lineNumber":224,"author":{"gitId":"RezwanArefin01"},"content":"            return new TodoTask(splits[2]);","lastModifiedDate":"2022-09-07"},{"lineNumber":225,"author":{"gitId":"RezwanArefin01"},"content":"        case D:","lastModifiedDate":"2022-08-23"},{"lineNumber":226,"author":{"gitId":"RezwanArefin01"},"content":"            return new DeadlineTask(splits[2], parseDateTime(splits[3]));","lastModifiedDate":"2022-09-07"},{"lineNumber":227,"author":{"gitId":"RezwanArefin01"},"content":"        case E:","lastModifiedDate":"2022-08-23"},{"lineNumber":228,"author":{"gitId":"RezwanArefin01"},"content":"            return new EventTask(splits[2], parseDateTime(splits[3]));","lastModifiedDate":"2022-09-07"},{"lineNumber":229,"author":{"gitId":"RezwanArefin01"},"content":"        default:","lastModifiedDate":"2022-08-23"},{"lineNumber":230,"author":{"gitId":"RezwanArefin01"},"content":"            // should not reach here as we assume type is valid.","lastModifiedDate":"2022-09-07"},{"lineNumber":231,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Duke could not make sense of this task: \" + input);","lastModifiedDate":"2022-09-11"},{"lineNumber":232,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":233,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":234,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":235,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":236,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the {@code isDone} from an argument list of a Task.","lastModifiedDate":"2022-09-07"},{"lineNumber":237,"author":{"gitId":"RezwanArefin01"},"content":"     * In case of an exception, the {@code input} is used to provide more information.","lastModifiedDate":"2022-09-07"},{"lineNumber":238,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":239,"author":{"gitId":"RezwanArefin01"},"content":"     * @param splits The argument list.","lastModifiedDate":"2022-09-07"},{"lineNumber":240,"author":{"gitId":"RezwanArefin01"},"content":"     * @param input  The input string.","lastModifiedDate":"2022-09-07"},{"lineNumber":241,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The {@code isDone}.","lastModifiedDate":"2022-09-07"},{"lineNumber":242,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":243,"author":{"gitId":"RezwanArefin01"},"content":"    private static boolean getIsDone(String[] splits, String input) {","lastModifiedDate":"2022-09-07"},{"lineNumber":244,"author":{"gitId":"RezwanArefin01"},"content":"        int isDone;","lastModifiedDate":"2022-09-07"},{"lineNumber":245,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":246,"author":{"gitId":"RezwanArefin01"},"content":"            isDone \u003d parseInt(splits[1]);","lastModifiedDate":"2022-09-07"},{"lineNumber":247,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":248,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(input, \"invalid isDone value\");","lastModifiedDate":"2022-09-07"},{"lineNumber":249,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":250,"author":{"gitId":"RezwanArefin01"},"content":"        if (isDone !\u003d 0 \u0026\u0026 isDone !\u003d 1) {","lastModifiedDate":"2022-09-07"},{"lineNumber":251,"author":{"gitId":"RezwanArefin01"},"content":"            throw new ParseException(input, \"invalid isDone value\");","lastModifiedDate":"2022-09-07"},{"lineNumber":252,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":253,"author":{"gitId":"RezwanArefin01"},"content":"        return isDone \u003d\u003d 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":254,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":255,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":255}},{"path":"src/main/java/duke/storage/DataFileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":" * Exception thrown when the data file is corrupted.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"public class DataFileCorruptedException extends DukeException {","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new DataFileCorruptedException.","lastModifiedDate":"2022-09-11"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    public DataFileCorruptedException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"        super(\"Data file is corrupted!\");","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":16}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.storage;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.io.File;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import duke.parser.ParseException;","lastModifiedDate":"2022-09-11"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-11"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":" * Storage class for storing and retrieving data from a file.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"public class Storage {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"    private final File dataFile;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new Storage object with a given file path.","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     * @param path The path to the file to store data in.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"    public Storage(Path path) {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"        this.dataFile \u003d new File(path.toUri());","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"     * Ensures that the {@code dataFile} is there and accessible.","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"     * If not then it creates the file.","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"     * If it could not be created then it throws an exception.","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    private void ensureDataFileExists() {","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"        if (dataFile.exists()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"            return;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"        // Ref: https://stackoverflow.com/a/4040667","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"        File parent \u003d dataFile.getParentFile();","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"        if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Could not create directory: \" + parent);","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"            // file does not exist, so create it","lastModifiedDate":"2022-09-11"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"            boolean isCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2022-09-11"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"            assert isCreated : \"File should have been created\";","lastModifiedDate":"2022-09-11"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Could not create file:: \" + dataFile);","lastModifiedDate":"2022-09-11"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns a {@code Scanner} for the {@code dataFile}.","lastModifiedDate":"2022-09-11"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"     * Throws an exception if the {@code dataFile} does not exist or could not be opened.","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The {@code Scanner} for the {@code dataFile}.","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"    private Scanner getScanner() {","lastModifiedDate":"2022-09-11"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"        ensureDataFileExists();","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"        Scanner scanner;","lastModifiedDate":"2022-09-11"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"            scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2022-09-11"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-11"},{"lineNumber":68,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Could not open datafile for reading: \" + dataFile);","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"RezwanArefin01"},"content":"        return scanner;","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"RezwanArefin01"},"content":"     * Loads the {@code Task}s from the {@code dataFile}.","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The {@code Task}s loaded from the {@code dataFile} in an {@code ArrayList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"RezwanArefin01"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"RezwanArefin01"},"content":"        Scanner scanner \u003d getScanner();","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"RezwanArefin01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"RezwanArefin01"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"RezwanArefin01"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"RezwanArefin01"},"content":"            try {","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"RezwanArefin01"},"content":"                tasks.add(Parser.parseTask(line));","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"RezwanArefin01"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":86,"author":{"gitId":"RezwanArefin01"},"content":"                throw new DataFileCorruptedException();","lastModifiedDate":"2022-09-07"},{"lineNumber":87,"author":{"gitId":"RezwanArefin01"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":88,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":89,"author":{"gitId":"RezwanArefin01"},"content":"        return tasks;","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"RezwanArefin01"},"content":"     * Saves the {@code Task}s from a {@code TaskList} to the {@code dataFile}.","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The {@code TaskList} to save.","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"RezwanArefin01"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"RezwanArefin01"},"content":"        ensureDataFileExists();","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"RezwanArefin01"},"content":"            FileWriter fw \u003d new FileWriter(dataFile);","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"RezwanArefin01"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"RezwanArefin01"},"content":"                fw.write(task.toSaveString() + System.lineSeparator());","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"RezwanArefin01"},"content":"            }","lastModifiedDate":"2022-08-23"},{"lineNumber":104,"author":{"gitId":"RezwanArefin01"},"content":"            fw.close();","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"RezwanArefin01"},"content":"            throw new DukeException(\"Could not write to file: \" + dataFile);","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":109}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import static duke.parser.Parser.DATE_TIME_OUTPUT_FORMAT;","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import static duke.parser.Parser.DATE_TIME_SAVE_FORMAT;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a task with a deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code DeadlineTask} with given description and deadline.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"        super(TaskSymbolType.D, description);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the string representation of this {@code DeadlineTask} for display.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The string representation of this {@code DeadlineTask} for display.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.deadline.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"        return String.format(\"%s | %s\", super.toSaveString(), this.deadline.format(DATE_TIME_SAVE_FORMAT));","lastModifiedDate":"2022-09-11"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"        DeadlineTask that \u003d (DeadlineTask) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"        return deadline.equals(that.deadline);","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":48}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import static duke.parser.Parser.DATE_TIME_OUTPUT_FORMAT;","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import static duke.parser.Parser.DATE_TIME_SAVE_FORMAT;","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates an event.","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code EventTask} with given description and time.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     * @param time The time of the event.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    public EventTask(String description, LocalDateTime time) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"        super(TaskSymbolType.E, description);","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the string representation of this {@code EventTask} for display.","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The string representation of this {@code EventTask} for display.","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), this.time.format(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the string representation of the event task for storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The string representation of the event task for storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-22"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"        return String.format(\"%s | %s\", super.toSaveString(), this.time.format(DATE_TIME_SAVE_FORMAT));","lastModifiedDate":"2022-09-11"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code EventTask}.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code EventTask}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"            return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"        EventTask that \u003d (EventTask) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"        return time.equals(that.time);","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a task.","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"    private final TaskSymbolType symbol;","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    private final String description;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code Task} with the given {@code symbol}, {@code description}.","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"     * Initially the new {@code Task} is assumed not done.","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"     * @param symbol The {@code TaskSymbolType} of the new {@code Task}.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     * @param description The description of the new {@code Task}.","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    protected Task(TaskSymbolType symbol, String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-13"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-13"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-13"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the string representation of this {@code Task} for display.","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The string representation of this {@code Task} for display.","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-13"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"        return String.format(\"[%s][%s] %s\", this.symbol.getSymbol(), this.isDone ? \"✔\" : \" \", this.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the string representation of this {@code Task} for saving in storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The string representation of this {@code Task} for saving in storage.","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"        return String.format(\"%s | %d | %s\", this.symbol.name(), this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"     * Changes the status of this {@code Task} to provided {@code isDone}.","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"     * @param isDone Whether this {@code Task} should be marked done or not.","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if an {@code Object} is same as this {@code Task}.","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"     * @param o The {@code Object} to check.","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the {@code Object} is same as this {@code Task}, {@code false} otherwise.","lastModifiedDate":"2022-08-23"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"            Task other \u003d (Task) o;","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"            return this.symbol.equals(other.symbol)","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"                    \u0026\u0026 this.description.equals(other.description)","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"                    \u0026\u0026 this.isDone \u003d\u003d other.isDone;","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"RezwanArefin01"},"content":"        return false;","lastModifiedDate":"2022-08-23"},{"lineNumber":69,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if the description of this {@code Task} contains a given keyword.","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"RezwanArefin01"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2022-09-07"},{"lineNumber":74,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":75,"author":{"gitId":"RezwanArefin01"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the description of this {@code Task} contains the keyword, {@code false} otherwise.","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"RezwanArefin01"},"content":"        // Ref: https://stackoverflow.com/a/86832","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"RezwanArefin01"},"content":"        return Pattern.compile(Pattern.quote(keyword), Pattern.CASE_INSENSITIVE).matcher(this.description).find();","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-13"}],"authorContributionMap":{"RezwanArefin01":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2022-09-06"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a list of tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code TaskList} with no tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code TaskList} with given tasks.","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The tasks to initialize the {@code TaskList} with.","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code TaskList} with given tasks.","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"     * @param tasks The tasks to initialize the {@code TaskList} with.","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    public TaskList(Task... tasks) {","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"        this.tasks.addAll(Arrays.asList(tasks));","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns an iterator over the tasks in this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"     * @return An iterator over the tasks in this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"        return this.tasks.iterator();","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns a {@code Stream\u003cTask\u003e} over the tasks in this {@code TaskList}.","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The {@code Stream\u003cTask\u003e}.","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"        return this.tasks.stream();","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the string representation of this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The string representation of this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"    @Override","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"    public String toString() {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"RezwanArefin01"},"content":"        StringJoiner sj \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2022-09-06"},{"lineNumber":69,"author":{"gitId":"RezwanArefin01"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-09-06"},{"lineNumber":70,"author":{"gitId":"RezwanArefin01"},"content":"            sj.add(String.format(\"\\t%d. %s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2022-09-06"},{"lineNumber":71,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"RezwanArefin01"},"content":"        return sj.toString();","lastModifiedDate":"2022-09-06"},{"lineNumber":73,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the number of tasks in this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The number of tasks in this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":79,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"RezwanArefin01"},"content":"    public int size() {","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"RezwanArefin01"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"RezwanArefin01"},"content":"     * @param index The index of the task to return. Assumed 0-indexed.","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The task at the given index.","lastModifiedDate":"2022-08-23"},{"lineNumber":89,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"RezwanArefin01"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"RezwanArefin01"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-06"},{"lineNumber":92,"author":{"gitId":"RezwanArefin01"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":96,"author":{"gitId":"RezwanArefin01"},"content":"     * Removes the task at the given index.","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"RezwanArefin01"},"content":"     * @param index The index of the task to remove. Assumed 0-indexed.","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"RezwanArefin01"},"content":"    public void remove(int index) {","lastModifiedDate":"2022-08-23"},{"lineNumber":101,"author":{"gitId":"RezwanArefin01"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2022-09-06"},{"lineNumber":102,"author":{"gitId":"RezwanArefin01"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"RezwanArefin01"},"content":"     * Adds a given task to this {@code TaskList}.","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"RezwanArefin01"},"content":"     * @param task The task to add.","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"RezwanArefin01"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"RezwanArefin01"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"RezwanArefin01":113}},{"path":"src/main/java/duke/task/TaskSymbolType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":" * Supported task symbols in display and save formats.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"public enum TaskSymbolType {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"    T(\"📝\", 3),","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"    D(\"⏰\", 4),","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"    E(\"📅\", 4);","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"    private final String symbol;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    private final int argCount;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    TaskSymbolType(String symbol, int argCount) {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"        this.argCount \u003d argCount;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"     * Returns the display symbol for this task symbol type.","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"     * @return The display symbol for this task symbol type.","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"    public String getSymbol() {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"        return this.symbol;","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"     * Checks if the provided arguments are compatible with the task.","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"     * @param args The arguments to check.","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"     * @return {@code true} if the arguments are compatible with the task, {@code false} otherwise.","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"    public boolean isCompatible(String... args) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"        assert args !\u003d null;","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"        return this.argCount \u003d\u003d args.length;","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":38}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"/**","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":" * Encapsulates a to-do task.","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":" */","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"    /**","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"     * Constructs a new {@code TodoTask} with given description.","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"     *","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"     */","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"        super(TaskSymbolType.T, description);","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"RezwanArefin01":15}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"//@@author RezwanArefin01-reused","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"//Adapted from: https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A DialogBox containing an image and a text.","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Background USER_BACKGROUND \u003d new Background(","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        new BackgroundFill(Color.web(\"#e5b4c1\"), new CornerRadii(20), Insets.EMPTY));","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Background DUKE_BACKGROUND \u003d new Background(","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        new BackgroundFill(Color.web(\"#9fd2dd\"), new CornerRadii(20), Insets.EMPTY));","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private TextFlow textFlow;","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Text text;","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Circle image;","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new DialogBox with the given message and image.","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param message The message to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param img The image to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private DialogBox(String message, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        text.setText(message);","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        image.setFill(new ImagePattern(img));","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the {@code Circle} is on the left and text on the right.","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code DialogBox} with the given image in left side, and message in right side.","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param text The text to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param img The image to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return The {@code DialogBox}","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        db.textFlow.setBackground(USER_BACKGROUND);","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns a {@code DialogBox} with the given image in right side, and message in left side.","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param text The text to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param img The image to display.","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return The {@code DialogBox}.","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        db.textFlow.setBackground(DUKE_BACKGROUND);","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"RezwanArefin01":23,"-":76}},{"path":"src/main/java/duke/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-11"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author RezwanArefin01-reused","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//Adapted from https://se-education.org/guides/tutorials/javaFxPart2.html","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//with minor modifications","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A simple graphical user interface for Duke using FXML.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Gui extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Starts the GUI.","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            VBox mainWindow \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            stage.getIcons().add(new Image(getClass().getResourceAsStream(\"/images/bot.png\")));","lastModifiedDate":"2022-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Path path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"data.txt\");","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().initDuke(path);","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"RezwanArefin01":14,"-":35}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.ui;","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import duke.Duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author RezwanArefin01-reused","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//Adapted from: https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.png\"));","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes the MainWindow.","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Performs the following tasks currently:","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * - Adds scrolling support for the {@code ScrollPane}.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * - Moves the scroll bar to the end when a new child is added to the {@code VBox}.","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * - Disables the {@code Button} if the {@code TextField} is empty.","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void initialize() {","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        scrollPane.setOnScroll(event -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            scrollPane.setVvalue(scrollPane.getVvalue() - event.getDeltaX() / dialogContainer.getHeight());","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        dialogContainer.heightProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        sendButton.disableProperty().bind(Bindings.isEmpty(userInput.textProperty()));","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the {@code Duke} used for the core logic.","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param path The path to the data file.","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected void initDuke(Path path) {","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Consumer\u003cString\u003e printer \u003d s -\u003e {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            // JavaFX 11 doesn\u0027t support tab sizes, so we have to replace with spaces instead.","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(s.replaceAll(\"\\t\", \"  \"), dukeImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        duke \u003d new Duke(path, printer);","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText().strip();","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        duke.execute(input);","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"RezwanArefin01":14,"-":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" stylesheets\u003d\"@../css/fontstyle.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"      \u003cTextFlow fx:id\u003d\"textFlow\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"            \u003cText fx:id\u003d\"text\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"text\" text\u003d\"Text\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"      \u003cCircle fx:id\u003d\"image\" fill\u003d\"WHITE\" radius\u003d\"25.0\" stroke\u003d\"WHITE\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"RezwanArefin01":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"\u003cVBox spacing\u003d\"1.0\" stylesheets\u003d\"@../css/fontstyle.css\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefWidth\u003d\"700.0\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"400.0\" spacing\u003d\"1.0\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"                  \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"          \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Enter command here...\" styleClass\u003d\"text-field\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"                  \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"          \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\"\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"                  \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"      \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"RezwanArefin01":42}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.task;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"class TaskListTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"    void size_emptyTaskList_returnsZero() {","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"    void size_nonEmptyTaskList_returnsSize() {","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"        TaskList taskList \u003d new TaskList(new TodoTask(\"Task 1\"), new TodoTask(\"Task 2\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"    void get_indexInBound_returnsTask() {","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"        TaskList list \u003d new TaskList(new TodoTask(\"Task 1\"), new TodoTask(\"Task 2\"), new TodoTask(\"Task 3\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"Task 1\"), list.get(0));","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"Task 2\"), list.get(1));","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"Task 3\"), list.get(2));","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"    void remove_indexInBound_removesTask() {","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"        TaskList list \u003d new TaskList(new TodoTask(\"Task 1\"), new TodoTask(\"Task 2\"), new TodoTask(\"Task 3\"));","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        list.remove(1);","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"Task 1\"), list.get(0));","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"Task 3\"), list.get(1));","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    void add_newTask_addsTask() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"        list.add(new TodoTask(\"task1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"task1\"), list.get(0));","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":43}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanArefin01"},"content":"package duke.util;","lastModifiedDate":"2022-08-23"},{"lineNumber":2,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":3,"author":{"gitId":"RezwanArefin01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-23"},{"lineNumber":4,"author":{"gitId":"RezwanArefin01"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-23"},{"lineNumber":5,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":6,"author":{"gitId":"RezwanArefin01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":8,"author":{"gitId":"RezwanArefin01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-23"},{"lineNumber":9,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":10,"author":{"gitId":"RezwanArefin01"},"content":"import duke.DukeException;","lastModifiedDate":"2022-08-23"},{"lineNumber":11,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":13,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.EmptyCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":14,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":15,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":16,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":17,"author":{"gitId":"RezwanArefin01"},"content":"import duke.command.UpdateStatusCommand;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"RezwanArefin01"},"content":"import duke.parser.ParseException;","lastModifiedDate":"2022-09-11"},{"lineNumber":19,"author":{"gitId":"RezwanArefin01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-11"},{"lineNumber":20,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.EventTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":22,"author":{"gitId":"RezwanArefin01"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2022-08-23"},{"lineNumber":23,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":24,"author":{"gitId":"RezwanArefin01"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-23"},{"lineNumber":25,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":27,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseInt_float_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":30,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseInt(\"1.0\");","lastModifiedDate":"2022-08-23"},{"lineNumber":31,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":32,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: not an integer: 1.0\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":34,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":37,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":38,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseInt_string_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":39,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseInt(\"One\");","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":43,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: not an integer: One\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":45,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":47,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseInt_integer_returnsInteger() {","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(1, Parser.parseInt(\"1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":50,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":51,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":52,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":53,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseDateTime_noTime_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":54,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":55,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseDateTime(\"1-1-1\");","lastModifiedDate":"2022-08-23"},{"lineNumber":56,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":57,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":58,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid datetime: 1-1-1\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":59,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":60,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":61,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":62,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":63,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseDateTime_noDate_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":64,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":65,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseDateTime(\"0100\");","lastModifiedDate":"2022-08-23"},{"lineNumber":66,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":67,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":68,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid datetime: 0100\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":70,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":71,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":72,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":73,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseDateTime_nonDateTime_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":74,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":75,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseDateTime(\"Hello\");","lastModifiedDate":"2022-08-23"},{"lineNumber":76,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":77,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":78,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid datetime: Hello\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":79,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":80,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":81,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":82,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":83,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseDateTime_wrongFormat_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":84,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":85,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseDateTime(\"1-1-1 0100\");","lastModifiedDate":"2022-08-23"},{"lineNumber":86,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":87,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":88,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid datetime: 1-1-1 0100\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":89,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":90,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":91,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":92,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseDateTime(\"01-01-1 0100\");","lastModifiedDate":"2022-08-23"},{"lineNumber":93,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":94,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":95,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid datetime: 01-01-1 0100\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":96,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":97,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":98,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":99,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":100,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseDateTime(\"01-01-2022 100\");","lastModifiedDate":"2022-09-11"},{"lineNumber":101,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":102,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":103,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid datetime: 01-01-2022 100\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":104,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":105,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":106,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":107,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":108,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseDateTime_dateTime_returnsDateTime() {","lastModifiedDate":"2022-08-23"},{"lineNumber":109,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(LocalDateTime.of(2019, 1, 1, 12, 12), Parser.parseDateTime(\"1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":110,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(LocalDateTime.of(2019, 1, 1, 12, 12), Parser.parseDateTime(\"01-01-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":111,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(LocalDateTime.of(2010, 12, 12, 9, 0), Parser.parseDateTime(\"12-12-10 0900\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":112,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(LocalDateTime.of(2099, 12, 12, 9, 0), Parser.parseDateTime(\"12-12-99 0900\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":113,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":114,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":115,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":116,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseCommand_noSpaceAroundSeparator_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":117,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":118,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseCommand(\"deadline Description/ 1-1-19 1212\");","lastModifiedDate":"2022-08-23"},{"lineNumber":119,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":120,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":121,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: deadline Description/ 1-1-19 1212\"","lastModifiedDate":"2022-08-23"},{"lineNumber":122,"author":{"gitId":"RezwanArefin01"},"content":"                    + \" (wrong number of arguments provided)\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":123,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":124,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":125,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":126,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":127,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseCommand_extraSpace_returnsCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":128,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new AddTaskCommand(new DeadlineTask(\"Description\", Parser.parseDateTime(\"1-1-19 1212\"))),","lastModifiedDate":"2022-08-23"},{"lineNumber":129,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseCommand(\"deadline Description /         1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":130,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new AddTaskCommand(new DeadlineTask(\"Description\", Parser.parseDateTime(\"1-1-19 1212\"))),","lastModifiedDate":"2022-08-23"},{"lineNumber":131,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseCommand(\"deadline Description      / 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":132,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new AddTaskCommand(new DeadlineTask(\"Description\", Parser.parseDateTime(\"1-1-19 1212\"))),","lastModifiedDate":"2022-08-23"},{"lineNumber":133,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseCommand(\"deadline         Description      / 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":134,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new ListCommand(), Parser.parseCommand(\"list                 \"));","lastModifiedDate":"2022-08-23"},{"lineNumber":135,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new ExitCommand(), Parser.parseCommand(\"exit                 \"));","lastModifiedDate":"2022-08-23"},{"lineNumber":136,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new DeleteTaskCommand(1), Parser.parseCommand(\"delete     1             \"));","lastModifiedDate":"2022-08-23"},{"lineNumber":137,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new UpdateStatusCommand(1, true), Parser.parseCommand(\"check   1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":138,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new UpdateStatusCommand(1, false), Parser.parseCommand(\"uncheck   1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":139,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new EmptyCommand(), Parser.parseCommand(\"                  \"));","lastModifiedDate":"2022-08-23"},{"lineNumber":140,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new FindCommand(\"Keyword\"), Parser.parseCommand(\"find       Keyword   \"));","lastModifiedDate":"2022-08-23"},{"lineNumber":141,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":142,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":143,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":144,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseCommand_unknownCommand_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":145,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":146,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseCommand(\"add new task\");","lastModifiedDate":"2022-08-23"},{"lineNumber":147,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":148,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":149,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: invalid command: add (enter \\\"help\\\" for available commands)\",","lastModifiedDate":"2022-09-11"},{"lineNumber":150,"author":{"gitId":"RezwanArefin01"},"content":"                    e.getMessage());","lastModifiedDate":"2022-09-08"},{"lineNumber":151,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":152,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":153,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":154,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":155,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseCommand_extraArgument_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":156,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":157,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseCommand(\"list todo\");","lastModifiedDate":"2022-08-23"},{"lineNumber":158,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":159,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":160,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: list todo (wrong number of arguments provided)\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":161,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":162,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":163,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":164,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseCommand(\"exit now\");","lastModifiedDate":"2022-08-23"},{"lineNumber":165,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":166,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":167,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: exit now (wrong number of arguments provided)\", e.getMessage());","lastModifiedDate":"2022-08-23"},{"lineNumber":168,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":169,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":170,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":171,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":172,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseCommand_correctCommand_returnsCommand() {","lastModifiedDate":"2022-08-23"},{"lineNumber":173,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new AddTaskCommand(new TodoTask(\"Description\")), Parser.parseCommand(\"todo Description\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":174,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new AddTaskCommand(new EventTask(\"Description\", Parser.parseDateTime(\"1-1-19 1212\"))),","lastModifiedDate":"2022-08-23"},{"lineNumber":175,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseCommand(\"event Description / 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":176,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new AddTaskCommand(new DeadlineTask(\"Description\", Parser.parseDateTime(\"1-1-19 1212\"))),","lastModifiedDate":"2022-08-23"},{"lineNumber":177,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseCommand(\"deadline Description / 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":178,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new ListCommand(), Parser.parseCommand(\"list\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":179,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new ExitCommand(), Parser.parseCommand(\"exit\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":180,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new DeleteTaskCommand(1), Parser.parseCommand(\"delete 1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":181,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new UpdateStatusCommand(1, true), Parser.parseCommand(\"check 1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":182,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new UpdateStatusCommand(1, false), Parser.parseCommand(\"uncheck 1\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":183,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new EmptyCommand(), Parser.parseCommand(\"\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":184,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new FindCommand(\"Keyword\"), Parser.parseCommand(\"find Keyword\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":185,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":186,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":187,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":188,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_emptyString_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":189,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":190,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"\");","lastModifiedDate":"2022-08-23"},{"lineNumber":191,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":192,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":193,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error:  (unknown task symbol)\", e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":194,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":195,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":196,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":197,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":198,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_wrongSymbol_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":199,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":200,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"# | 0 | Task Description\");","lastModifiedDate":"2022-08-23"},{"lineNumber":201,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":202,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":203,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: # | 0 | Task Description (unknown task symbol)\", e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":204,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":205,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":206,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":207,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":208,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_noSpaceAroundSeperator_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":209,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":210,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"T |0|Task Description\");","lastModifiedDate":"2022-08-23"},{"lineNumber":211,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":212,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":213,"author":{"gitId":"RezwanArefin01"},"content":"            // The whole thing gets treated as task symbol, since no \" | \" found.","lastModifiedDate":"2022-09-07"},{"lineNumber":214,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: T |0|Task Description (unknown task symbol)\", e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":215,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":216,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":217,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":218,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":219,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_extraSpace_throwsException() {","lastModifiedDate":"2022-08-23"},{"lineNumber":220,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-08-23"},{"lineNumber":221,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"T | 0   | Task Description\");","lastModifiedDate":"2022-08-23"},{"lineNumber":222,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-08-23"},{"lineNumber":223,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-08-23"},{"lineNumber":224,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: not an integer: 0  \", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":225,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":226,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":227,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":228,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-09-01"},{"lineNumber":229,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_lessArgument_throwsException() {","lastModifiedDate":"2022-09-01"},{"lineNumber":230,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":231,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"T | 0 description\");","lastModifiedDate":"2022-09-01"},{"lineNumber":232,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-09-01"},{"lineNumber":233,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":234,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: T | 0 description (wrong number of arguments provided)\", e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":235,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":236,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":237,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":238,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-09-07"},{"lineNumber":239,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_invalidIsDone_throwsException() {","lastModifiedDate":"2022-09-07"},{"lineNumber":240,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":241,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"T | 2 | Task Description\");","lastModifiedDate":"2022-09-07"},{"lineNumber":242,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-09-07"},{"lineNumber":243,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":244,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: T | 2 | Task Description (invalid isDone value)\", e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":245,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":246,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":247,"author":{"gitId":"RezwanArefin01"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":248,"author":{"gitId":"RezwanArefin01"},"content":"            Parser.parseTask(\"T | 1.3 | Task Description\");","lastModifiedDate":"2022-09-07"},{"lineNumber":249,"author":{"gitId":"RezwanArefin01"},"content":"            fail();","lastModifiedDate":"2022-09-07"},{"lineNumber":250,"author":{"gitId":"RezwanArefin01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":251,"author":{"gitId":"RezwanArefin01"},"content":"            assertEquals(\"Parsing error: not an integer: 1.3\", e.getMessage());","lastModifiedDate":"2022-09-11"},{"lineNumber":252,"author":{"gitId":"RezwanArefin01"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":253,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":254,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":255,"author":{"gitId":"RezwanArefin01"},"content":"    @Test","lastModifiedDate":"2022-08-23"},{"lineNumber":256,"author":{"gitId":"RezwanArefin01"},"content":"    public void parseTask_correctTask_returnsTask() {","lastModifiedDate":"2022-08-23"},{"lineNumber":257,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new TodoTask(\"Task Description\"), Parser.parseTask(\"T | 0 | Task Description\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":258,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new DeadlineTask(\"Task Description\", LocalDateTime.of(2019, 1, 1, 12, 12)),","lastModifiedDate":"2022-08-23"},{"lineNumber":259,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseTask(\"D | 0 | Task Description | 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":260,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(new EventTask(\"Task Description\", LocalDateTime.of(2019, 1, 1, 12, 12)),","lastModifiedDate":"2022-08-23"},{"lineNumber":261,"author":{"gitId":"RezwanArefin01"},"content":"                Parser.parseTask(\"E | 0 | Task Description | 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":262,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":263,"author":{"gitId":"RezwanArefin01"},"content":"        TodoTask todoTask \u003d new TodoTask(\"Task Description\");","lastModifiedDate":"2022-08-23"},{"lineNumber":264,"author":{"gitId":"RezwanArefin01"},"content":"        todoTask.setDone(true);","lastModifiedDate":"2022-08-23"},{"lineNumber":265,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(todoTask, Parser.parseTask(\"T | 1 | Task Description\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":266,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":267,"author":{"gitId":"RezwanArefin01"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(\"Task Description\", LocalDateTime.of(2019, 1, 1, 12, 12));","lastModifiedDate":"2022-08-23"},{"lineNumber":268,"author":{"gitId":"RezwanArefin01"},"content":"        deadlineTask.setDone(true);","lastModifiedDate":"2022-08-23"},{"lineNumber":269,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(deadlineTask, Parser.parseTask(\"D | 1 | Task Description | 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":270,"author":{"gitId":"RezwanArefin01"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":271,"author":{"gitId":"RezwanArefin01"},"content":"        EventTask eventTask \u003d new EventTask(\"Task Description\", LocalDateTime.of(2019, 1, 1, 12, 12));","lastModifiedDate":"2022-08-23"},{"lineNumber":272,"author":{"gitId":"RezwanArefin01"},"content":"        eventTask.setDone(true);","lastModifiedDate":"2022-08-23"},{"lineNumber":273,"author":{"gitId":"RezwanArefin01"},"content":"        assertEquals(eventTask, Parser.parseTask(\"E | 1 | Task Description | 1-1-19 1212\"));","lastModifiedDate":"2022-08-23"},{"lineNumber":274,"author":{"gitId":"RezwanArefin01"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":275,"author":{"gitId":"RezwanArefin01"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"RezwanArefin01":275}}]

[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"checkstyle {","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rama-pang":19,"-":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * Duke, a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    private final Ui ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     * Constructs an instance of Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"     * @param filePath the file location for saving data","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"            ui.addError(exception.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"     * Returns the response from Duke after executing a user command.","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"     * @param fullCommand the user command","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"     * @return the response from Duke after executing a user command","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"            c.execute(ui, storage, taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"            ui.addError(e.getMessage());","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"        if (isExit) {","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"            System.exit(0);","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-15"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        return ui.getOutput();","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rama-pang":55,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Gui;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"public class Launcher {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rama-pang":13}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Represents a command to add a task to the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private final Task task;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to add task \u003ccode\u003etask\u003c/code\u003e to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     * @param task the task added to the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     * Executes the command by adding \u003ccode\u003etask\u003c/code\u003e to the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if an error occurs when saving the task list to the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        ui.addOutput(\"OK, I\u0027ve added the following task:\\n  \" + task + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        ui.addOutput(\"Now you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @return false","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":51}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" * Represents a command made by the user to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"     * Executes the command made by the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if an error occurs when executing the command","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    public abstract void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     * Returns a boolean denoting whether Duke should exit after executing this command.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     * @return true if and only if this is an exit command","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Represents a command to delete a task in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private final int index;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to delete the task with index","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * \u003ccode\u003eindex\u003c/code\u003e (0-based indexing) in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param index the index of the task deleted","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     * Executes the command by deleting the task at index \u003ccode\u003eindex\u003c/code\u003e in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the index is out of bounds or an error occurs when saving the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        Task task \u003d taskList.deleteTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        ui.addOutput(\"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @return false","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":51}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" * Represents a command to exit Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to exit Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    public ExitCommand() {}","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * Executes the command by exiting Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        ui.addOutput(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * Returns true as this is an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     * @return true","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        return true;","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":39}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" * Represents a command to list all tasks matching a given pattern.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    private final String pattern;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to list all tasks whose description matches the specified pattern.","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * @param pattern the specified pattern","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    public FindCommand(String pattern) {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     * Prints a task list where each tasks\u0027 description includes the specified pattern","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"     * as a substring, ignoring lower and upper case difference.","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        TaskList filteredTaskList \u003d taskList.filter(","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"                x -\u003e x.getDescription().toLowerCase().contains(this.pattern.toLowerCase()));","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        if (filteredTaskList.size() \u003e 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"            ui.addOutput(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"            ui.addOutput(filteredTaskList.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"            ui.addOutput(\"No matching tasks :(\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"     * @return false","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":53}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to list all tasks in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * Executes the command by printing the list of all tasks in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"            ui.addOutput(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"            ui.addOutput(taskList.toString());","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        } else {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"            ui.addOutput(\"Your list is empty :(\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"     * @return false","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":44}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private final int index;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to mark the task with index","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * \u003ccode\u003eindex\u003c/code\u003e as done in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param index the index of the task marked as done in the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     * Executes the command by marking the task at index \u003ccode\u003eindex\u003c/code\u003e as done in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the index is out of bounds or an error occurs when saving the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        Task task \u003d taskList.markTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        ui.addOutput(\"Nice! I\u0027ve marked this task as done:\\n  \" + task + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @return false","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":51}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.command;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private final int index;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Constructs a command to mark the task with index","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * \u003ccode\u003eindex\u003c/code\u003e as not done in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param index the index of the task marked as not done in the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     * Executes the command by marking the task at index \u003ccode\u003eindex\u003c/code\u003e as not done in the task list.","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * @param ui       the user interface","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * @param storage  the storage dealing with loading and saving tasks in the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the index is out of bounds or an error occurs when saving the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        Task task \u003d taskList.unMarkTask(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        ui.addOutput(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        storage.save(taskList);","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns false as this is not an exit command.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @return false","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        return false;","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":51}},{"path":"src/main/java/duke/common/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.common;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":" * A \u003ccode\u003eRuntimeException\u003c/code\u003e thrown by Duke caused by invalid input.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-16"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"     * Constructs a new exception which is thrown by Duke with the specified detail message.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"     * @param message the detail message","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"        super(message);","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"rama-pang":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.parser;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"import duke.task.Event;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":" * Deals with parsing the user input.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"public abstract class Parser {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     * Returns a \u003ccode\u003eCommand\u003c/code\u003e equivalent to the user input.","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     * @param input the user input","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * @return a \u003ccode\u003eCommand\u003c/code\u003e equivalent to the user input","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the input format is invalid","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        String[] args \u003d input.trim().split(\"\\\\s+\");","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"        Command command;","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        switch (args[0]) {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        case \"bye\":","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        case \"list\":","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        case \"find\":","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"            command \u003d new FindCommand(","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"                    Arrays.stream(args).skip(1).reduce(\"\", (x, y) -\u003e x + \" \" + y).trim());","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        case \"mark\":","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"                command \u003d new MarkCommand(Integer.parseInt(args[1]) - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! No task index is specified :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! You didn\u0027t give a valid index :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        case \"unmark\":","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"                command \u003d new UnMarkCommand(Integer.parseInt(args[1]) - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! No task index is specified :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! You didn\u0027t give a valid index :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"        case \"delete\":","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"                command \u003d new DeleteCommand(Integer.parseInt(args[1]) - 1);","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"            } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! No task index is specified :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! You didn\u0027t give a valid index :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"            command \u003d new AddCommand(new ToDo(","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"                    Arrays.stream(args).skip(1).reduce(\"\", (x, y) -\u003e x + \" \" + y).trim(),","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"                    false));","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"        case \"event\":","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"                String description \u003d Arrays.stream(args)","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"                        .takeWhile(x -\u003e !x.equals(\"/at\")).skip(1)","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"                        .reduce(\"\", (x, y) -\u003e x + \" \" + y).trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"                String[] timeArgument \u003d Arrays.stream(args)","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"                        .dropWhile(x -\u003e !x.equals(\"/at\")).toArray(String[]::new);","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"                if (timeArgument.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"                    throw new DukeException(\"OOPS!!! There is no /at argument for event :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"                command \u003d new AddCommand(","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"                        new Event(description, false, LocalDate.parse(timeArgument[1])));","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"            } catch (java.time.format.DateTimeParseException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"                        \"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"                String description \u003d Arrays.stream(args).takeWhile(x -\u003e !x.equals(\"/by\"))","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"                        .skip(1).reduce(\"\", (x, y) -\u003e x + \" \" + y).trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"                String[] timeArgument \u003d Arrays.stream(args).dropWhile(x -\u003e !x.equals(\"/by\"))","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"                        .toArray(String[]::new);","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"rama-pang"},"content":"                if (timeArgument.length \u003c\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"                    throw new DukeException(\"OOPS!!! There is no /by argument for deadline :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"                }","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"                command \u003d new AddCommand(","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"                        new Deadline(description, false, LocalDate.parse(timeArgument[1])));","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"            } catch (java.time.format.DateTimeParseException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"                        \"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"            break;","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"        default:","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"        return command;","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":117}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.storage;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.io.File;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import duke.task.Task;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * Deals with loading tasks from the save file and saving tasks in the save file.","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"public class Storage {","lastModifiedDate":"2022-08-19"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    private final File saveFile;","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * Constructs a helper tool to load and save tasks to the specified file.","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     * @param filePath the path of the specified file.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        this.saveFile \u003d new File(filePath);","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    private void createSaveFile(File saveFile) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-19"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"                saveFile.getParentFile().mkdir();","lastModifiedDate":"2022-08-19"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"            } catch (java.io.IOException exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"I/O error occurs\");","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"            } catch (SecurityException exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"No write access\");","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    private Scanner getInputScanner(File saveFile) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        createSaveFile(saveFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            return scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        } catch (java.io.FileNotFoundException exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"                    \"Save file not found, even after duke.Duke tries to create one :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"    private PrintWriter getOutputWriter(File saveFile) throws DukeException {","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"        createSaveFile(saveFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"            PrintWriter writer \u003d new PrintWriter(saveFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"            return writer;","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"        } catch (java.io.FileNotFoundException exception) {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"                    \"Save file not found, even after duke.Duke tries to create one :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"     * Returns the tasks saved in the specified save file.","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"     * @return tasks saved in the file","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if an IO error occurs","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"        Scanner scanner \u003d getInputScanner(this.saveFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-19"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"            try {","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"                tasks.add(Task.decode(input));","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"                // ignore invalid line in save file","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"        return tasks;","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"     * Saves the tasks in the task list to the save file","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"     * @param taskList the task list","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if an IO error occurs","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"        PrintWriter writer \u003d getOutputWriter(this.saveFile);","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2022-08-19"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"            writer.println(task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"        writer.close();","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"rama-pang":99}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" * Represents a deadline-type task.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     * @param isDone      denotes whether the task is marked done or not","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param localDate   the date of the deadline","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the description of the task is empty","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    public Deadline(String description, boolean isDone, LocalDate localDate) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        super(\"deadline\", description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        return super.toString() + \" (by: \"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"                + this.localDate.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\")) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"     * Returns a string encoding the deadline task for saving the task in the save file.","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * @return the string encoding","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    public String encode() {","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        return super.encode() + Task.ENCODING_SEPARATOR","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"                + this.localDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"rama-pang":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" * Represents an event-type task.","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     * Constructs an event task.","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"     * @param isDone      denotes whether the task is marked done or not","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * @param localDate   the date of the event","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the description of the task is empty","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    public Event(String description, boolean isDone, LocalDate localDate) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"        super(\"event\", description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-16"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-16"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        return super.toString() + \" (at: \"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"                + this.localDate.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\")) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"     * Returns a string encoding the event task for saving the task in the save file.","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * @return the string encoding","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"    public String encode() {","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        return super.encode() + Task.ENCODING_SEPARATOR","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"                + this.localDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"rama-pang":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" * A task specified by the user to Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"    protected static final String ENCODING_SEPARATOR \u003d \" | \";","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    protected static final String DECODING_SEPARATOR \u003d \" \\\\| \";","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    private final String taskType;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    private final String description;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"     * Constructs a task specified by the user. Note that \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"     * is an abstract class, therefore this constructor is only used by","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"     * its subclasses.","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     * @param taskType    the type of the task, specified by its subclass","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     * @param isDone      denotes whether the task is marked done or not","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the description of the task is empty","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"    public Task(String taskType, String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-08-16"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        if (this.description.isBlank()) {","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"                    \"OOPS!!! The description of a \" + this.taskType + \" cannot be empty.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"     * Returns a task represented by a string encoding.","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * @param input the string encoding","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     * @return a task represented by the string encoding","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the string encoding is invalid","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    public static Task decode(String input) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        String[] args \u003d input.trim().split(Task.DECODING_SEPARATOR);","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        Task task;","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"            switch (args[0]) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"            case \"T\":","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"                task \u003d new ToDo(args[2], args[1].equals(\"X\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"            case \"E\":","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"                task \u003d new Event(args[2], args[1].equals(\"X\"), LocalDate.parse(args[3]));","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"            case \"D\":","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"                task \u003d new Deadline(args[2], args[1].equals(\"X\"), LocalDate.parse(args[3]));","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"                break;","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"            default:","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"                throw new DukeException(\"OOPS!!! Invalid encoded format :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"            }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(\"OOPS!!! Invalid encoded format :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"        } catch (java.time.format.DateTimeParseException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"                    \"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\");","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"        return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"        return this.description;","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"     * Returns the status icon of the task, determined by whether the task is marked done or not.","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"     * @return a character \u0027X\u0027 if the task is marked done, and a white space otherwise.","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"        return (isDone ? \u0027X\u0027 : \u0027 \u0027); // mark done task with X","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"     * Returns the task type icon of the task, determined by its subclass.","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"     * @return the task type icon of the task specified by its subclass","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"    public char getTaskTypeIcon() {","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"        return taskType.toUpperCase().charAt(0);","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"     * Marks the task as either done or not done.","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"     * @param isDone true if and only if the task is marked as done","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"        return \"[\" + this.getTaskTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"     * Returns a string encoding the task for saving the task in the save file.","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"     * @return the string encoding","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"    public String encode() {","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"        return this.getTaskTypeIcon() + Task.ENCODING_SEPARATOR","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"                + this.getStatusIcon() + Task.ENCODING_SEPARATOR + this.description;","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"rama-pang":123}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-16"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":" * The list of tasks saved by Duke.","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"public class TaskList {","lastModifiedDate":"2022-08-16"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Constructs the list of tasks which is initially empty.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     * Constructs the list of tasks which is initially equal to \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     * @param tasks the list of initial tasks","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    public int size() {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @return the list of tasks","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        return tasks;","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"     * Returns a list of tasks containing only the tasks in which the specified predicate returns true.","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"     * @param predicate the specified predicate","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"     * @return a \u003ccode\u003eTaskList\u003c/code\u003e containing tasks in which the specified predicate returns true","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"    public TaskList filter(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"        return new TaskList(","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"                tasks.stream().filter(predicate).collect(Collectors.toCollection(ArrayList::new)));","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"     * Adds a task into the list.","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"     * @param task the task added to the list","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"     * @param index the index of the task marked as done","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"     * @return the task marked as done","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the specified index is out of bounds","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"            tasks.get(index).setDone(true);","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"            return tasks.get(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-16"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(\"OOPS!!! No such task exists :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"     * @param index the index of the task marked as not done","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"     * @return the task marked as not done","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the specified index is out of bounds","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"    public Task unMarkTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"            tasks.get(index).setDone(false);","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"            return tasks.get(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-16"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(\"OOPS!!! No such task exists :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":102,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"     * @param index the index of the deleted task","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"     * @return the deleted task","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the specified index is out of bounds","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-16"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"            tasks.remove(index);","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"            return task;","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2022-08-16"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"            throw new DukeException(\"OOPS!!! No such task exists :(\");","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-16"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"     * @return the string representation of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"rama-pang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"rama-pang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"rama-pang"},"content":"            stringBuilder.append((i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-16"},{"lineNumber":131,"author":{"gitId":"rama-pang"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":133,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"rama-pang":133}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":" * Represents a to-do type task.","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-16"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"     * Constructs a to-do task.","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"     * @param description the description of the task","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"     * @param isDone      denotes whether the task is marked done or not","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"     * @throws DukeException if the description of the task is empty","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    public ToDo(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"        super(\"todo\", description, isDone);","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-16"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-16"}],"authorContributionMap":{"rama-pang":21}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    private Label dialog;","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns the dialog box of a user command.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @param text the user command","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     * @param img  the user\u0027s profile picture","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"     * @return the dialog box of the user command","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"     * Returns the dialog box of a response by Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"     * @param text the text response by Duke","lastModifiedDate":"2022-08-31"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"     * @param img  Duke\u0027s profile picture","lastModifiedDate":"2022-08-31"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"     * @return the dialog box of a response by Duke","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"        db.flip();","lastModifiedDate":"2022-08-31"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"        return db;","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-08-31"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"    private void flip() {","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-08-31"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-08-31"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rama-pang":75}},{"path":"src/main/java/duke/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"public class Gui extends Application {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"            stage.show();","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rama-pang":32}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.ui;","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import duke.Duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"    private Duke duke;","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    public void initialize() {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"        duke \u003d d;","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"    @FXML","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"        if (!input.isBlank()) {","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"            );","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"            userInput.clear();","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rama-pang":53}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.ui;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"/**","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":" *","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":" * @author Rama Aryasuta Pangestu","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":" */","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"public class Ui {","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    private StringBuilder currentOutput;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"     * Constructs a helper tool to deal with interactions with the user.","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"    public Ui() {","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        currentOutput \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"     * Adds the error thrown by Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"     * @param error the error message","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"    public void addError(String error) {","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        currentOutput.append(error + \"\\n\");","lastModifiedDate":"2022-08-31"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"     * Adds a reply by Duke to the user\u0027s input.","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"     * @param output the reply message","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"    public void addOutput(String output) {","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        currentOutput.append(output);","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"    /**","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"     * Returns the response by Duke.","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"     *","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"     * @return the response by Duke","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"     */","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"    public String getOutput() {","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        String ret \u003d currentOutput.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"        currentOutput \u003d new StringBuilder();","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"        return ret;","lastModifiedDate":"2022-08-31"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"               style\u003d\"-fx-background-color: #ffffff; -fx-border-radius: 16; -fx-background-radius: 16; -fx-label-padding: 8; \"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"12\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rama-pang":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"rama-pang":24}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.parser;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"import duke.command.Command;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"public class ParserTest {","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"    public void testBye() {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"bye\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"bye 2\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"bye bye\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"bye 2\") instanceof ExitCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"bye bye\") instanceof ExitCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"    public void testList() {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"list\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"list 2\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"list list\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"list 2\") instanceof ListCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"list list\") instanceof ListCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"    public void testFind() {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"find\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"find read\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"find\") instanceof FindCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"find read\") instanceof FindCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"    public void testMark() {","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"mark\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! No task index is specified :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"mark NaN\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! You didn\u0027t give a valid index :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"mark 10\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"mark 10\") instanceof MarkCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"mark -1 Ten\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"mark -1 Ten\") instanceof MarkCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"    public void testUnMark() {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"unmark\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! No task index is specified :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"unmark NaN\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! You didn\u0027t give a valid index :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"unmark 10\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"unmark 10\") instanceof UnMarkCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"unmark -1 Ten\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"unmark -1 Ten\") instanceof UnMarkCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"    public void testDelete() {","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"delete\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! No task index is specified :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"delete NaN\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":140,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! You didn\u0027t give a valid index :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":143,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":144,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":145,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"delete 10\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"delete 10\") instanceof DeleteCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":149,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":151,"author":{"gitId":"rama-pang"},"content":"            assertFalse(Parser.parse(\"delete -1 Ten\").isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":152,"author":{"gitId":"rama-pang"},"content":"            assertTrue(Parser.parse(\"delete -1 Ten\") instanceof DeleteCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":153,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":154,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":155,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":156,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":157,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":158,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":159,"author":{"gitId":"rama-pang"},"content":"    public void testToDo() {","lastModifiedDate":"2022-08-20"},{"lineNumber":160,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":161,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":162,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":163,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":164,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":165,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":166,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":168,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":169,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"todo \\n  \\t \\n\");","lastModifiedDate":"2022-08-20"},{"lineNumber":170,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":171,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":172,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":173,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":174,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":175,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":176,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":177,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"todo one two three\");","lastModifiedDate":"2022-08-20"},{"lineNumber":178,"author":{"gitId":"rama-pang"},"content":"            assertFalse(command.isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":179,"author":{"gitId":"rama-pang"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":180,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":181,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":182,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":183,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":184,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":185,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":186,"author":{"gitId":"rama-pang"},"content":"    public void testEvent() {","lastModifiedDate":"2022-08-20"},{"lineNumber":187,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":188,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event\");","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":190,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":191,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /at argument for event :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":192,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":193,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":194,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":195,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":196,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event one two four\");","lastModifiedDate":"2022-08-20"},{"lineNumber":197,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":198,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":199,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /at argument for event :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":200,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":201,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":202,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":203,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":204,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event /\");","lastModifiedDate":"2022-08-20"},{"lineNumber":205,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":206,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":207,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /at argument for event :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":208,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":209,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":210,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":211,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":212,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event six /by\");","lastModifiedDate":"2022-08-20"},{"lineNumber":213,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":214,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":215,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /at argument for event :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":216,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":217,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":218,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":219,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":220,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event six /by 2020-12-12\");","lastModifiedDate":"2022-08-20"},{"lineNumber":221,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":222,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":223,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /at argument for event :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":224,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":225,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":226,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":227,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":228,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event event /at time\");","lastModifiedDate":"2022-08-20"},{"lineNumber":229,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":230,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":231,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":232,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":233,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":234,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":235,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":236,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":237,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event event /at 10000-01-01\");","lastModifiedDate":"2022-08-20"},{"lineNumber":238,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":239,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":240,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":241,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":242,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":243,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":244,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":245,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":246,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event event /at 1000-00-00\");","lastModifiedDate":"2022-08-20"},{"lineNumber":247,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":248,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":249,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":250,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":251,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":252,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":253,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":254,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":255,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event event /at 2000-12-32\");","lastModifiedDate":"2022-08-20"},{"lineNumber":256,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":257,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":258,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":259,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":260,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":261,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":262,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":263,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":264,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event event /at 2003-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":265,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":266,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":267,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":268,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":269,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":270,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":271,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":272,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":273,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event /at 2004-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":274,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":275,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":276,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! The description of a event cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":277,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":278,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":279,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":280,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":281,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event my_event /at 2004-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":282,"author":{"gitId":"rama-pang"},"content":"            assertFalse(command.isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":283,"author":{"gitId":"rama-pang"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":284,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":285,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":286,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":287,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":288,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"event \\n \\t my/at/event \\t\\t    /at \\n 2004-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":289,"author":{"gitId":"rama-pang"},"content":"            assertFalse(command.isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":290,"author":{"gitId":"rama-pang"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":291,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":292,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":293,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":294,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":295,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":296,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":297,"author":{"gitId":"rama-pang"},"content":"    public void testDeadline() {","lastModifiedDate":"2022-08-20"},{"lineNumber":298,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":299,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline\");","lastModifiedDate":"2022-08-20"},{"lineNumber":300,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":301,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":302,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /by argument for deadline :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":303,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":304,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":305,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":306,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":307,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline one two four\");","lastModifiedDate":"2022-08-20"},{"lineNumber":308,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":309,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":310,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /by argument for deadline :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":311,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":312,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":313,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":314,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":315,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline /\");","lastModifiedDate":"2022-08-20"},{"lineNumber":316,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":317,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":318,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /by argument for deadline :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":319,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":320,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":321,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":322,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":323,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline six /at\");","lastModifiedDate":"2022-08-20"},{"lineNumber":324,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":325,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":326,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /by argument for deadline :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":327,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":328,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":329,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":330,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":331,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline six /at 2020-12-12\");","lastModifiedDate":"2022-08-20"},{"lineNumber":332,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":333,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":334,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! There is no /by argument for deadline :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":335,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":336,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":337,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":338,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":339,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":340,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline event /by time\");","lastModifiedDate":"2022-08-20"},{"lineNumber":341,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":342,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":343,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":344,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":345,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":346,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":347,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":348,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":349,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline event /by 10000-01-01\");","lastModifiedDate":"2022-08-20"},{"lineNumber":350,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":351,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":352,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":353,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":354,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":355,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":356,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":357,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":358,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline event /by 1000-00-00\");","lastModifiedDate":"2022-08-20"},{"lineNumber":359,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":360,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":361,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":362,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":363,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":364,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":365,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":366,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":367,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline event /by 2000-12-32\");","lastModifiedDate":"2022-08-20"},{"lineNumber":368,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":369,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":370,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":371,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":372,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":373,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":374,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":375,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":376,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline event /by 2003-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":377,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":378,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":379,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":380,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":381,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":382,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":383,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":384,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":385,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline /by 2004-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":386,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":387,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":388,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! The description of a deadline cannot be empty.\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":389,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":390,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":391,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":392,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":393,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline my_event /by 2004-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":394,"author":{"gitId":"rama-pang"},"content":"            assertFalse(command.isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":395,"author":{"gitId":"rama-pang"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":396,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":397,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":398,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":399,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":400,"author":{"gitId":"rama-pang"},"content":"            Command command \u003d Parser.parse(\"deadline \\n \\t my/by/event \\t\\t    /by \\n 2004-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":401,"author":{"gitId":"rama-pang"},"content":"            assertFalse(command.isExit());","lastModifiedDate":"2022-08-26"},{"lineNumber":402,"author":{"gitId":"rama-pang"},"content":"            assertTrue(command instanceof AddCommand);","lastModifiedDate":"2022-08-20"},{"lineNumber":403,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":404,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":405,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":406,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":407,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":407}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"    public void test() {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"        assertEquals(arrayList, taskList.getTasks());","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"\", taskList.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d new ToDo(\"todo\", false);","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"            arrayList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"        assertEquals(arrayList, taskList.getTasks());","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][ ] todo\\n\", taskList.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d new Deadline(\"deadline\", true, LocalDate.parse(\"2022-12-12\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"            arrayList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"        assertEquals(arrayList, taskList.getTasks());","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][ ] todo\\n2. [D][X] deadline (by: Dec 12, 2022)\\n\", taskList.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d new Event(\"event\", true, LocalDate.parse(\"2012-12-12\"));","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"            arrayList.add(task);","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        assertEquals(arrayList, taskList.getTasks());","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][ ] todo\\n2. [D][X] deadline (by: Dec 12, 2022)\\n3. [E][X] event (at: Dec 12, 2012)\\n\",","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"                taskList.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"            taskList.markTask(0);","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"        assertEquals(arrayList, taskList.getTasks());","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][X] todo\\n2. [D][X] deadline (by: Dec 12, 2022)\\n3. [E][X] event (at: Dec 12, 2012)\\n\",","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"                taskList.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"            taskList.unMarkTask(2);","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"        assertEquals(arrayList, taskList.getTasks());","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][X] todo\\n2. [D][X] deadline (by: Dec 12, 2022)\\n3. [E][ ] event (at: Dec 12, 2012)\\n\",","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"                taskList.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][X] todo\\n2. [D][X] deadline (by: Dec 12, 2022)\\n\",","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"                taskList.filter(x -\u003e x.getStatusIcon() \u003d\u003d \u0027X\u0027).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [D][X] deadline (by: Dec 12, 2022)\\n2. [E][ ] event (at: Dec 12, 2012)\\n\",","lastModifiedDate":"2022-08-26"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"                taskList.filter(x -\u003e x.getTaskTypeIcon() !\u003d \u0027T\u0027).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][X] todo\\n2. [D][X] deadline (by: Dec 12, 2022)\\n\",","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"                taskList.filter(x -\u003e x.getDescription().contains(\"d\")).toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"            taskList.deleteTask(1);","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][X] todo\\n2. [E][ ] event (at: Dec 12, 2012)\\n\", taskList.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"            taskList.deleteTask(2);","lastModifiedDate":"2022-08-20"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! No such task exists :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"            taskList.markTask(-1);","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! No such task exists :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"            taskList.unMarkTask(1000000000);","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! No such task exists :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"rama-pang"},"content":"        assertEquals(\"1. [T][X] todo\\n2. [E][ ] event (at: Dec 12, 2012)\\n\", taskList.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":128}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"package duke.task;","lastModifiedDate":"2022-08-20"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-20"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-08-20"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"public class TaskTest {","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"    void testDecodeToDo() {","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"T |   | my todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027T\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027 \u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"T |   | my todo\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[T][ ] my todo\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"T | X | my todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027T\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"T | X | my todo\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[T][X] my todo\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"T | X | my todo | extra\");","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027T\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"T | X | my todo\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[T][X] my todo\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"T |\");","lastModifiedDate":"2022-08-20"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"ToDo | X | is todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"ToDo | X |\");","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"    void testDecodeEvent() {","lastModifiedDate":"2022-08-20"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"E |   | my todo | 2012-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027E\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027 \u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"E |   | my todo | 2012-02-29\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[E][ ] my todo (at: Feb 29, 2012)\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"E | X | my todo | 2012-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027E\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"E | X | my todo | 2012-02-29\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[E][X] my todo (at: Feb 29, 2012)\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"E | X | my todo | 2012-02-29 | extra\");","lastModifiedDate":"2022-08-20"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027E\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"E | X | my todo | 2012-02-29\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":91,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[E][X] my todo (at: Feb 29, 2012)\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":92,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":93,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":94,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":95,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":96,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"E | X | my todo | 2012-02-30\");","lastModifiedDate":"2022-08-20"},{"lineNumber":97,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":98,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":99,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":100,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":102,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":103,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":104,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":105,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"E | X | my todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":106,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":107,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":108,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":109,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":110,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":111,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":112,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":113,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"Event | X | my todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":114,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":115,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":116,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":117,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":118,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":119,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":120,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":121,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":122,"author":{"gitId":"rama-pang"},"content":"    @Test","lastModifiedDate":"2022-08-20"},{"lineNumber":123,"author":{"gitId":"rama-pang"},"content":"    void testDecodeDeadline() {","lastModifiedDate":"2022-08-20"},{"lineNumber":124,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":125,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"D |   | my todo | 2012-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":126,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027D\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":127,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027 \u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":128,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"D |   | my todo | 2012-02-29\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":129,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[D][ ] my todo (by: Feb 29, 2012)\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":130,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":131,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":132,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":133,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":134,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"D | X | my todo | 2012-02-29\");","lastModifiedDate":"2022-08-20"},{"lineNumber":135,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027D\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":136,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":137,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"D | X | my todo | 2012-02-29\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":138,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[D][X] my todo (by: Feb 29, 2012)\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":139,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":140,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":141,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":142,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":143,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"D | X | my todo | 2012-02-29 | extra\");","lastModifiedDate":"2022-08-20"},{"lineNumber":144,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027D\u0027, task.getTaskTypeIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":145,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\u0027X\u0027, task.getStatusIcon());","lastModifiedDate":"2022-08-20"},{"lineNumber":146,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"D | X | my todo | 2012-02-29\", task.encode());","lastModifiedDate":"2022-08-20"},{"lineNumber":147,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"[D][X] my todo (by: Feb 29, 2012)\", task.toString());","lastModifiedDate":"2022-08-20"},{"lineNumber":148,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":149,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":150,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":151,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":152,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"D | X | my todo | 2012-02-30\");","lastModifiedDate":"2022-08-20"},{"lineNumber":153,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":154,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":155,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Can\u0027t recognize the date :(. Please input the date in yyyy-mm-dd format.\",","lastModifiedDate":"2022-08-26"},{"lineNumber":156,"author":{"gitId":"rama-pang"},"content":"                    exception.getMessage());","lastModifiedDate":"2022-08-26"},{"lineNumber":157,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":158,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":159,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":160,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":161,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"D | X | my todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":162,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":163,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":164,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":165,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":166,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":167,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":168,"author":{"gitId":"rama-pang"},"content":"        try {","lastModifiedDate":"2022-08-20"},{"lineNumber":169,"author":{"gitId":"rama-pang"},"content":"            Task task \u003d Task.decode(\"Deadline | X | my todo\");","lastModifiedDate":"2022-08-20"},{"lineNumber":170,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":171,"author":{"gitId":"rama-pang"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":172,"author":{"gitId":"rama-pang"},"content":"            assertEquals(\"OOPS!!! Invalid encoded format :(\", exception.getMessage());","lastModifiedDate":"2022-08-20"},{"lineNumber":173,"author":{"gitId":"rama-pang"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-08-20"},{"lineNumber":174,"author":{"gitId":"rama-pang"},"content":"            fail();","lastModifiedDate":"2022-08-20"},{"lineNumber":175,"author":{"gitId":"rama-pang"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":176,"author":{"gitId":"rama-pang"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":177,"author":{"gitId":"rama-pang"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"rama-pang":177}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":2,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":3,"author":{"gitId":"rama-pang"},"content":"todo Add To Do","lastModifiedDate":"2022-08-15"},{"lineNumber":4,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":5,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":6,"author":{"gitId":"rama-pang"},"content":"event Add Event /at Event Time","lastModifiedDate":"2022-08-15"},{"lineNumber":7,"author":{"gitId":"rama-pang"},"content":"event Add Event /at 2022-02-30","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"rama-pang"},"content":"event Add Event /at 2022-02-02","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"deadline Add Deadline /by Deadline Time","lastModifiedDate":"2022-08-15"},{"lineNumber":12,"author":{"gitId":"rama-pang"},"content":"deadline Add Deadline /by 2000-1-2","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"deadline Add Deadline /by 0001-01-01","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"mark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"mark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"unmark 1","lastModifiedDate":"2022-08-15"},{"lineNumber":23,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":24,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":25,"author":{"gitId":"rama-pang"},"content":"mark 2","lastModifiedDate":"2022-08-15"},{"lineNumber":26,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":27,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":28,"author":{"gitId":"rama-pang"},"content":"unmark 3","lastModifiedDate":"2022-08-15"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":30,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":31,"author":{"gitId":"rama-pang"},"content":"mark 10000000000000000","lastModifiedDate":"2022-08-15"},{"lineNumber":32,"author":{"gitId":"rama-pang"},"content":"mark -1","lastModifiedDate":"2022-08-15"},{"lineNumber":33,"author":{"gitId":"rama-pang"},"content":"mark a b c","lastModifiedDate":"2022-08-15"},{"lineNumber":34,"author":{"gitId":"rama-pang"},"content":"mark 1 a b","lastModifiedDate":"2022-08-15"},{"lineNumber":35,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":36,"author":{"gitId":"rama-pang"},"content":"unmark -100","lastModifiedDate":"2022-08-15"},{"lineNumber":37,"author":{"gitId":"rama-pang"},"content":"unmark 998244353","lastModifiedDate":"2022-08-15"},{"lineNumber":38,"author":{"gitId":"rama-pang"},"content":"unmark a b c","lastModifiedDate":"2022-08-15"},{"lineNumber":39,"author":{"gitId":"rama-pang"},"content":"unmark 3 x y","lastModifiedDate":"2022-08-15"},{"lineNumber":40,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":41,"author":{"gitId":"rama-pang"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":42,"author":{"gitId":"rama-pang"},"content":"event /by","lastModifiedDate":"2022-08-15"},{"lineNumber":43,"author":{"gitId":"rama-pang"},"content":"event /at","lastModifiedDate":"2022-08-15"},{"lineNumber":44,"author":{"gitId":"rama-pang"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":45,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":46,"author":{"gitId":"rama-pang"},"content":"deadline","lastModifiedDate":"2022-08-15"},{"lineNumber":47,"author":{"gitId":"rama-pang"},"content":"deadline /at","lastModifiedDate":"2022-08-15"},{"lineNumber":48,"author":{"gitId":"rama-pang"},"content":"deadline /by","lastModifiedDate":"2022-08-15"},{"lineNumber":49,"author":{"gitId":"rama-pang"},"content":"deadline /at 2001-01-01","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"rama-pang"},"content":"deadline /by 2000-12-31","lastModifiedDate":"2022-08-19"},{"lineNumber":51,"author":{"gitId":"rama-pang"},"content":"deadline Is Deadline 0 /at","lastModifiedDate":"2022-08-15"},{"lineNumber":52,"author":{"gitId":"rama-pang"},"content":"deadline Is Deadline 1 /at 2005-01-01","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"rama-pang"},"content":"deadline Is Deadline 2 /by","lastModifiedDate":"2022-08-15"},{"lineNumber":54,"author":{"gitId":"rama-pang"},"content":"deadline Is Deadline 3 /by 2006-01-01","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":56,"author":{"gitId":"rama-pang"},"content":"event","lastModifiedDate":"2022-08-15"},{"lineNumber":57,"author":{"gitId":"rama-pang"},"content":"event /at","lastModifiedDate":"2022-08-15"},{"lineNumber":58,"author":{"gitId":"rama-pang"},"content":"event /by","lastModifiedDate":"2022-08-15"},{"lineNumber":59,"author":{"gitId":"rama-pang"},"content":"event /at Unknown","lastModifiedDate":"2022-08-15"},{"lineNumber":60,"author":{"gitId":"rama-pang"},"content":"event /by Unknown","lastModifiedDate":"2022-08-15"},{"lineNumber":61,"author":{"gitId":"rama-pang"},"content":"event Is Event 0 /at","lastModifiedDate":"2022-08-15"},{"lineNumber":62,"author":{"gitId":"rama-pang"},"content":"event Is Event 1 /at 2003-01-01","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"rama-pang"},"content":"event Is Event 2 /by","lastModifiedDate":"2022-08-15"},{"lineNumber":64,"author":{"gitId":"rama-pang"},"content":"event Is Event 3 /by 2004-01-01","lastModifiedDate":"2022-08-19"},{"lineNumber":65,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":66,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":67,"author":{"gitId":"rama-pang"},"content":"random","lastModifiedDate":"2022-08-15"},{"lineNumber":68,"author":{"gitId":"rama-pang"},"content":"e v e n t","lastModifiedDate":"2022-08-15"},{"lineNumber":69,"author":{"gitId":"rama-pang"},"content":"d e a d line","lastModifiedDate":"2022-08-15"},{"lineNumber":70,"author":{"gitId":"rama-pang"},"content":"dead line","lastModifiedDate":"2022-08-15"},{"lineNumber":71,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":72,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":73,"author":{"gitId":"rama-pang"},"content":"delete 1","lastModifiedDate":"2022-08-15"},{"lineNumber":74,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":75,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":76,"author":{"gitId":"rama-pang"},"content":"find","lastModifiedDate":"2022-08-20"},{"lineNumber":77,"author":{"gitId":"rama-pang"},"content":"find is","lastModifiedDate":"2022-08-20"},{"lineNumber":78,"author":{"gitId":"rama-pang"},"content":"find NaN","lastModifiedDate":"2022-08-20"},{"lineNumber":79,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":80,"author":{"gitId":"rama-pang"},"content":"delete -1","lastModifiedDate":"2022-08-15"},{"lineNumber":81,"author":{"gitId":"rama-pang"},"content":"delete 0","lastModifiedDate":"2022-08-15"},{"lineNumber":82,"author":{"gitId":"rama-pang"},"content":"delete 10000000000","lastModifiedDate":"2022-08-15"},{"lineNumber":83,"author":{"gitId":"rama-pang"},"content":"delete a","lastModifiedDate":"2022-08-15"},{"lineNumber":84,"author":{"gitId":"rama-pang"},"content":"delete a b c","lastModifiedDate":"2022-08-15"},{"lineNumber":85,"author":{"gitId":"rama-pang"},"content":"delete 3 a","lastModifiedDate":"2022-08-15"},{"lineNumber":86,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":87,"author":{"gitId":"rama-pang"},"content":"delete","lastModifiedDate":"2022-08-15"},{"lineNumber":88,"author":{"gitId":"rama-pang"},"content":"list","lastModifiedDate":"2022-08-15"},{"lineNumber":89,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":90,"author":{"gitId":"rama-pang"},"content":"bye","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"rama-pang":90}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"rama-pang"},"content":"REM delete save file from previous run","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"rama-pang"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2022-08-20"},{"lineNumber":11,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"rama-pang"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ^","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\*.java ^","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\command\\*.java ^","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\common\\*.java ^","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\parser\\*.java ^","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\storage\\*.java ^","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\task\\*.java ^","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rama-pang":13,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"rama-pang"},"content":"# delete save file from previous run","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"rama-pang"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"rama-pang"},"content":"then","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"rama-pang"},"content":"    rm data/tasks.txt","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"rama-pang"},"content":"fi","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"rama-pang"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"rama-pang"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/*/*.java","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"rama-pang"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rama-pang":8,"-":36}}]

[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitant-p"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-17"},{"lineNumber":2,"author":{"gitId":"nitant-p"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"nitant-p"},"content":"    protected static final String topWindow \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\t\";","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nitant-p"},"content":"    protected static final String bottomWindow \u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nitant-p"},"content":"    private static final String greeting \u003d \"Hi, I\u0027m Ploopy! Nice to meet you!\\n\\tWhats up?\";","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nitant-p"},"content":"    private static final String farewell \u003d \"Okay then, see ya later :)\";","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nitant-p"},"content":"    private static final String completedTask \u003d \"Nice! You\u0027ve completed this task. I\u0027ll mark it as done.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"nitant-p"},"content":"    private static final String incompleteTask \u003d \"Alright this task has been marked as undone.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"nitant-p"},"content":"    private static final String addedTask \u003d \"I\u0027ve added this task to your list.\\n\\tHere you go: \";","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nitant-p"},"content":"    public static final String textArt \u003d \"\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nitant-p"},"content":"            \"███████████████████████████████████\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nitant-p"},"content":"            \"█▄─▄▄─█▄─▄███─▄▄─█─▄▄─█▄─▄▄─█▄─█─▄█\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nitant-p"},"content":"            \"██─▄▄▄██─██▀█─██─█─██─██─▄▄▄██▄─▄██\\n\" +","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nitant-p"},"content":"            \"▀▄▄▄▀▀▀▄▄▄▄▄▀▄▄▄▄▀▄▄▄▄▀▄▄▄▀▀▀▀▄▄▄▀▀\";","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nitant-p"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"nitant-p"},"content":"    public static void start() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"nitant-p"},"content":"        messageFormatter(textArt);","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"nitant-p"},"content":"        messageFormatter(greeting);","lastModifiedDate":"2022-08-17"},{"lineNumber":23,"author":{"gitId":"nitant-p"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-17"},{"lineNumber":24,"author":{"gitId":"nitant-p"},"content":"        command();","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":26,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":27,"author":{"gitId":"nitant-p"},"content":"    protected static void messageFormatter(String input) {","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"nitant-p"},"content":"        System.out.println(topWindow + input + bottomWindow);","lastModifiedDate":"2022-08-17"},{"lineNumber":29,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":30,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":31,"author":{"gitId":"nitant-p"},"content":"    private static void displayList() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"nitant-p"},"content":"        System.out.println(topWindow);","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"nitant-p"},"content":"        for (Task item : tasks) {","lastModifiedDate":"2022-08-17"},{"lineNumber":34,"author":{"gitId":"nitant-p"},"content":"            System.out.println(\"\\n \\t\" + item);","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":36,"author":{"gitId":"nitant-p"},"content":"        System.out.println(bottomWindow);","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"nitant-p"},"content":"    private static void markTask(int taskIndex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"nitant-p"},"content":"        Task current \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"nitant-p"},"content":"        current.markDone();","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"nitant-p"},"content":"        messageFormatter(completedTask + \"\\n\\t\" + \" \" + current);","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":44,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":45,"author":{"gitId":"nitant-p"},"content":"    private static void unmarkTask(int taskIndex) {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"nitant-p"},"content":"        Task current \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"nitant-p"},"content":"        current.unmark();","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"nitant-p"},"content":"        messageFormatter(incompleteTask + \"\\n\\t\" + \" \" + current);","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"nitant-p"},"content":"    private static void addTaskMessage(Task task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"nitant-p"},"content":"        String message \u003d addedTask + task.toString() + \"\\n\\tYou have \" + tasks.size() + \" tasks in your list.\";","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"nitant-p"},"content":"        messageFormatter(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"nitant-p"},"content":"    private static boolean isEmptyCommand(String command, int size) {","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"nitant-p"},"content":"        // this method removes the whitespace of a command and checks if its length \u003d size","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"nitant-p"},"content":"        // true means empty command","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"nitant-p"},"content":"        return command.trim().length() \u003d\u003d size;","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"nitant-p"},"content":"    private static void command() {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"nitant-p"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"nitant-p"},"content":"        StringBuilder input \u003d new StringBuilder(scanner.nextLine());","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"nitant-p"},"content":"        while(!input.toString().equals(\"bye\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"nitant-p"},"content":"        try {","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"nitant-p"},"content":"            if (input.toString().matches(\"\\\\bmark\\\\s\\\\d+\\\\b\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"nitant-p"},"content":"                markTask(input.charAt(5) - 48);","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"nitant-p"},"content":"            } else if (input.toString().matches(\"\\\\bunmark\\\\s\\\\d+\\\\b\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"nitant-p"},"content":"                unmarkTask(input.charAt(7) - 48);","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"nitant-p"},"content":"            } else if (input.toString().equals(\"list\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"nitant-p"},"content":"                displayList();","lastModifiedDate":"2022-08-17"},{"lineNumber":75,"author":{"gitId":"nitant-p"},"content":"            } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"nitant-p"},"content":"                if (!isEmptyCommand(input.toString(), \"todo\".length())) {","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"nitant-p"},"content":"                    Task newTask \u003d Task.createTask(input.substring(5, input.length()), null, \"todo\");","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"nitant-p"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"nitant-p"},"content":"                    addTaskMessage(newTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"nitant-p"},"content":"                } else throw DukeException.ExceptionCreator(\"BlankCommand\", \"todo\");","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"nitant-p"},"content":"            } else if (input.length() \u003e 7 \u0026\u0026 input.substring(0, 8).equals(\"deadline\"))  {","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"nitant-p"},"content":"                if (!isEmptyCommand(input.toString(), \"deadline\".length())) {","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"nitant-p"},"content":"                    int end \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"nitant-p"},"content":"                    String name \u003d input.substring(8, end);","lastModifiedDate":"2022-08-18"},{"lineNumber":85,"author":{"gitId":"nitant-p"},"content":"                    String date \u003d input.substring(input.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"nitant-p"},"content":"                    Task newTask \u003d Task.createTask(name, date, \"deadline\");","lastModifiedDate":"2022-08-18"},{"lineNumber":87,"author":{"gitId":"nitant-p"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":88,"author":{"gitId":"nitant-p"},"content":"                    addTaskMessage(newTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"nitant-p"},"content":"                } else throw DukeException.ExceptionCreator(\"BlankCommand\", \"deadline\");","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"nitant-p"},"content":"            } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 5).equals(\"event\"))  {","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"nitant-p"},"content":"                if (!isEmptyCommand(input.toString(), \"event\".length())) {","lastModifiedDate":"2022-08-18"},{"lineNumber":92,"author":{"gitId":"nitant-p"},"content":"                    int end \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-08-18"},{"lineNumber":93,"author":{"gitId":"nitant-p"},"content":"                    String name \u003d input.substring(6, end);","lastModifiedDate":"2022-08-18"},{"lineNumber":94,"author":{"gitId":"nitant-p"},"content":"                    String date \u003d input.substring(input.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2022-08-18"},{"lineNumber":95,"author":{"gitId":"nitant-p"},"content":"                    Task newTask \u003d Task.createTask(name, date, \"event\");","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"nitant-p"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"nitant-p"},"content":"                    addTaskMessage(newTask);","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"nitant-p"},"content":"                } else throw DukeException.ExceptionCreator(\"BlankCommand\", \"event\");","lastModifiedDate":"2022-08-18"},{"lineNumber":99,"author":{"gitId":"nitant-p"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"nitant-p"},"content":"                throw DukeException.ExceptionCreator(\"InvalidCommand\", null);","lastModifiedDate":"2022-08-18"},{"lineNumber":101,"author":{"gitId":"nitant-p"},"content":"            }","lastModifiedDate":"2022-08-17"},{"lineNumber":102,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":103,"author":{"gitId":"nitant-p"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":104,"author":{"gitId":"nitant-p"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-08-18"},{"lineNumber":105,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":106,"author":{"gitId":"nitant-p"},"content":"            input.replace(0, input.length(), scanner.nextLine()); //replacing content","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-17"},{"lineNumber":108,"author":{"gitId":"nitant-p"},"content":"        messageFormatter(farewell);","lastModifiedDate":"2022-08-17"},{"lineNumber":109,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":110,"author":{"gitId":"nitant-p"},"content":"    ","lastModifiedDate":"2022-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"nitant-p"},"content":"      start();","lastModifiedDate":"2022-08-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nitant-p":110,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitant-p"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nitant-p"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nitant-p"},"content":"        super(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nitant-p"},"content":"    private static class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"nitant-p"},"content":"        private static final String invalidInputMessage \u003d Duke.topWindow +","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"nitant-p"},"content":"                \"You\u0027re speaking a language i don\u0027t know. Try again?\"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nitant-p"},"content":"                + Duke.bottomWindow;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nitant-p"},"content":"        InvalidCommandException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nitant-p"},"content":"            super(invalidInputMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nitant-p"},"content":"    private static class EmptyCommandException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nitant-p"},"content":"        private static final String emptyCommandMessage \u003d Duke.topWindow + \"You didn\u0027t say what I should do!\"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"nitant-p"},"content":"                + Duke.bottomWindow;","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"nitant-p"},"content":"        EmptyCommandException() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"nitant-p"},"content":"            super(emptyCommandMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"nitant-p"},"content":"    private static class BlankCommandException extends DukeException {","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"nitant-p"},"content":"        private static final String emptyCommandMessage \u003d Duke.topWindow + \"What should I do with the \";","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"nitant-p"},"content":"        BlankCommandException(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"nitant-p"},"content":"            super(emptyCommandMessage + name + \"?\" + Duke.bottomWindow);","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"nitant-p"},"content":"    public static DukeException ExceptionCreator(String exceptionType, String message) {","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"nitant-p"},"content":"        switch (exceptionType) {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"nitant-p"},"content":"            case \"InvalidCommand\":","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"nitant-p"},"content":"                return new InvalidCommandException();","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"nitant-p"},"content":"            case \"BlankCommand\":","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"nitant-p"},"content":"                return new BlankCommandException(message);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"nitant-p"},"content":"            default:","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"nitant-p"},"content":"                return new EmptyCommandException();","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"nitant-p"},"content":"}","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nitant-p":47}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitant-p"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"nitant-p"},"content":"    protected String name;","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nitant-p"},"content":"    protected boolean done;","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nitant-p"},"content":"    protected static int taskCounter \u003d 0;","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nitant-p"},"content":"    protected String type;","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nitant-p"},"content":"    protected int taskNumber;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nitant-p"},"content":"    private Task(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"nitant-p"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-17"},{"lineNumber":10,"author":{"gitId":"nitant-p"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nitant-p"},"content":"        taskCounter++;","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nitant-p"},"content":"        this.taskNumber \u003d taskCounter;","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nitant-p"},"content":"    private static class ToDo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"nitant-p"},"content":"        private ToDo(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"nitant-p"},"content":"            super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"nitant-p"},"content":"            this.type \u003d \"[T]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"nitant-p"},"content":"    private static class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"nitant-p"},"content":"        private final String dueDate;","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"nitant-p"},"content":"        private Deadline(String name, String dueDate) {","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"nitant-p"},"content":"            super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"nitant-p"},"content":"            this.dueDate \u003d \"(\" + dueDate + \")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"nitant-p"},"content":"            this.type \u003d \"[D]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"nitant-p"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"nitant-p"},"content":"        public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"nitant-p"},"content":"            return super.toString() + this.dueDate;","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":35,"author":{"gitId":"nitant-p"},"content":"    private static class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"nitant-p"},"content":"        private final String date;","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"nitant-p"},"content":"        private Event(String name, String date) {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"nitant-p"},"content":"            super(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"nitant-p"},"content":"            this.date \u003d \"(\" + date +\")\";","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"nitant-p"},"content":"            this.type \u003d \"[E]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"nitant-p"},"content":"        @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"nitant-p"},"content":"        public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"nitant-p"},"content":"            return super.toString() + this.date;","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":48,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-17"},{"lineNumber":49,"author":{"gitId":"nitant-p"},"content":"    @Override","lastModifiedDate":"2022-08-17"},{"lineNumber":50,"author":{"gitId":"nitant-p"},"content":"    public String toString() {","lastModifiedDate":"2022-08-17"},{"lineNumber":51,"author":{"gitId":"nitant-p"},"content":"        return taskNumber + \". \" + type + getStatus() + \" \" + name;","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":54,"author":{"gitId":"nitant-p"},"content":"    public static Task createTask(String name, String date, String task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"nitant-p"},"content":"        switch (task) {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"nitant-p"},"content":"            case \"todo\":","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"nitant-p"},"content":"                return new ToDo(name);","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"nitant-p"},"content":"            case \"deadline\":","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"nitant-p"},"content":"                return new Deadline(name, date);","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"nitant-p"},"content":"            default:","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"nitant-p"},"content":"                return new Event(name, date);","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"nitant-p"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-17"},{"lineNumber":64,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"nitant-p"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":66,"author":{"gitId":"nitant-p"},"content":"        done \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":67,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":68,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":69,"author":{"gitId":"nitant-p"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"nitant-p"},"content":"        done \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"nitant-p"},"content":"    public String getStatus() {","lastModifiedDate":"2022-08-18"},{"lineNumber":74,"author":{"gitId":"nitant-p"},"content":"        return done ? \"[✓]\" : \"[ ]\";","lastModifiedDate":"2022-08-18"},{"lineNumber":75,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":76,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":77,"author":{"gitId":"nitant-p"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2022-08-18"},{"lineNumber":78,"author":{"gitId":"nitant-p"},"content":"        return taskNumber;","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"nitant-p"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"nitant-p"},"content":"}","lastModifiedDate":"2022-08-17"}],"authorContributionMap":{"nitant-p":81}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nitant-p"},"content":"todo read book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"nitant-p"},"content":"event study /at tomorrow","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"nitant-p"},"content":"deadline assignment /by sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"nitant-p"},"content":"todo watch movie","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"nitant-p"},"content":"event movie night /saturday","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"nitant-p"},"content":"deadline finish code /today :(","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"nitant-p"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"nitant-p"},"content":"mark 3","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"nitant-p"},"content":"unmark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"nitant-p"},"content":"mark 4","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"nitant-p"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"nitant-p"},"content":"mark 5","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"nitant-p"},"content":"unmark 5","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"nitant-p"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"nitant-p"},"content":"bye","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"nitant-p":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"nitant-p"},"content":"del ACTUAL.TXT","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"nitant-p"},"content":"cmd /k","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"-":20,"nitant-p":2}}]

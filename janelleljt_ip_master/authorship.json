[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"    mainClassName \u003d \"bob.BobTheBot\";","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"checkstyle {","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"janelleljt":7,"-":39}},{"path":"src/main/java/bobthebot/bob/BobTheBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.bob;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"import bobthebot.exceptions.BobException;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.ToDoList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Parser;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":" * BobTheBot is a friendly CLI Bot that can help with managing tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"public class BobTheBot {","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"    private ToDoList list;","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"    private Parser parser;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"     * Constructor for instance of BobTheBot","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"     * @param filePath of data.txt file where tasks are stored.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"    public BobTheBot(String filePath) throws IOException {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"        this.list \u003d new ToDoList(this.storage.load(), storage);","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"     * Command to run BobTheBot.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"    public void run() throws BobException {","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"        Ui.welcome();","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"            if (command.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"                Ui.goodbye(list);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"            parser.parseCommand(command, list);","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"        scanner.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"     * Main class where constructor is called and BobTheBot is run.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"    public static void main(String[] args) throws IOException, BobException {","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"        new BobTheBot(\"./../../data/data.txt\").run();","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"janelleljt":55}},{"path":"src/main/java/bobthebot/exceptions/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.exceptions;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":" * Custom exception class for handling exceptions specific to BobTheBot","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"public class BobException extends Exception {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"    public BobException(String errorMessage) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"janelleljt":10}},{"path":"src/main/java/bobthebot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":" * A class representing deadlines, a type of task.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"    private String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"     * Constructor for deadlines.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"     * @param description of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"     * A method which changes the format of the date from YYYY-MM-DD to MMM D YYYY","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"     * Eg. Method will change 2022-12-12 to Dec 12 2022.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"     * @param by Date to be changed.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"     * @return String in format MMM D YYYY.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"    public String changeByFormat(String by) {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"        // split the date and the time","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"        String[] splitDeadline \u003d by.split(\" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"        String givenDate \u003d splitDeadline[0].trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"        LocalDate outputDate \u003d LocalDate.parse(givenDate);","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"        String time \u003d splitDeadline[1].trim();","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"        String date \u003d outputDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"        return date + \", \" + time;","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"     * Returns a String representation of a deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + changeByFormat(this.by) + \")\";","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"     * Method which converts a deadline to a format for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of a deadline for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"        int done \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"        String res \u003d String.format(\"D | %d | %s | %s\", done, taskName, by);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"        return res;","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"janelleljt":59}},{"path":"src/main/java/bobthebot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":" * A class representing events, a type of task.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"    private String at;","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"     * Constructor for deadlines.","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"     * @param description of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"     * @param at the date and time of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"        super(description);","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"        this.at \u003d at.trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"     * A method which changes the format of the date from YYYY-MM-DD to MMM D YYYY","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"     * Eg. Method will change 2022-12-12 to Dec 12 2022.","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"     * @param at Date to be changed.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"     * @return String in format MMM D YYYY.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"    public String changeAtFormat(String at) {","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"        // split the date and the time","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"        String[] splitDeadline \u003d at.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"        String givenDate \u003d splitDeadline[0].trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"        LocalDate outputDate \u003d LocalDate.parse(givenDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"        String time \u003d splitDeadline[1].trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"        String date \u003d outputDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"        return date + \", \" + time;","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"     * Returns a String representation of an event.","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of the event.","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.changeAtFormat(at) + \")\";","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"     * Method which converts an event to a format for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of a event for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"        int done \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"        String res \u003d String.format(\"D | %d | %s | %s\", done, taskName, at);","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"        return res;","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"janelleljt":59}},{"path":"src/main/java/bobthebot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":" * Class representing tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"    protected String taskName;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"     * Constructor for tasks.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"     * @param name of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"        this.taskName \u003d name.trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"     * Method to mark a task as undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-18"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"     * Method to get the status icon of a task representing whether a task is done or not.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"     * @return String representing the status icon","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"        return (isDone ? \"✔\" : \" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"     * Method to put the task in a format for storage","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"     * @return String representing the storage format of the task","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"        int done \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"        String res \u003d String.format(\"error | %d | %s\", done, taskName);","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"        return res;","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"     * Method to return a string representation of a task.","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"        String res \u003d \"[\" + getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2022-08-18"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"        return res;","lastModifiedDate":"2022-08-18"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"janelleljt":60}},{"path":"src/main/java/bobthebot/tasks/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Ui;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":" * Class which represents a ToDoList.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"public class ToDoList {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-08-24"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"    private Storage storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"     * Constructs instance of ToDoList.","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"     * @param list of tasks. List of tasks can be empty or contains elements taken from storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"     * @param storage Storage from which","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"    public ToDoList(ArrayList\u003cTask\u003e list, Storage storage) {","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"        this.list \u003d list;","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"     * Method for adding items to the list. Method also handles the logic for the type of task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"     * @param command A String which contains the command about the task to be added.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"    public void addTask(String command) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"            command \u003d command.replace(\"todo\", \"\").trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"            if (command.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"                String errorString \u003d \"\\tInvalid formatting for deadline entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\tWrite your deadlines in the following format: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\t\u003d\u003e deadline \u003cdeadline-name\u003e by \u003cdate\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"                Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"            } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"                Task todo \u003d new Todo(command);","lastModifiedDate":"2022-08-18"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"                list.add(todo);","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"                storage.store(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"                Ui.taskAddedMessage(todo, this);","lastModifiedDate":"2022-08-26"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"                command \u003d command.replace(\"deadline \", \"\").trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"                if (command.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"                    String errorString \u003d \"\\tInvalid formatting for deadline entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"                    errorString +\u003d \"\\tWrite your deadlines in the following format: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"                    errorString +\u003d \"\\t\u003d\u003e deadline \u003cdeadline-name\u003e by \u003cdate\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"                    Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"                    String[] deadline \u003d command.split(\" /by \");","lastModifiedDate":"2022-08-18"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"                    String by \u003d deadline[1];","lastModifiedDate":"2022-08-25"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":60,"author":{"gitId":"janelleljt"},"content":"                    // generate boolean indicating if the deadline is before or after current date","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"janelleljt"},"content":"                    // and time","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"janelleljt"},"content":"                    LocalDateTime currDate \u003d LocalDateTime.now();","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"janelleljt"},"content":"                    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd kkmm\");","lastModifiedDate":"2022-08-25"},{"lineNumber":64,"author":{"gitId":"janelleljt"},"content":"                    LocalDateTime deadlineDate \u003d LocalDateTime.parse(by, format);","lastModifiedDate":"2022-08-25"},{"lineNumber":65,"author":{"gitId":"janelleljt"},"content":"                    Boolean isAfter \u003d deadlineDate.isAfter(currDate);","lastModifiedDate":"2022-08-25"},{"lineNumber":66,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":67,"author":{"gitId":"janelleljt"},"content":"                    String regex \u003d \"(\\\\d{4})-(\\\\d{2})-(\\\\d{2}) (\\\\d{2})(\\\\d{2})\";","lastModifiedDate":"2022-08-25"},{"lineNumber":68,"author":{"gitId":"janelleljt"},"content":"                    // invalid deadline format","lastModifiedDate":"2022-08-25"},{"lineNumber":69,"author":{"gitId":"janelleljt"},"content":"                    if (!by.trim().matches(regex)) {","lastModifiedDate":"2022-08-25"},{"lineNumber":70,"author":{"gitId":"janelleljt"},"content":"                        String errorString \u003d \"\\tInvalid formatting for deadline entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"janelleljt"},"content":"                        errorString +\u003d \"\\tWrite your deadlines in the following format: YYYY-MM-DD HHHH\";","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"janelleljt"},"content":"                        Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"janelleljt"},"content":"                    } else if (by.trim().matches(regex) \u0026\u0026 !isAfter) {","lastModifiedDate":"2022-08-25"},{"lineNumber":74,"author":{"gitId":"janelleljt"},"content":"                        String errorString \u003d \"\\tI might be a non-sentient robot but you seem to be a time traveller!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"janelleljt"},"content":"                        errorString +\u003d \"\\tPlease input deadlines BEFORE the current date and time.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":76,"author":{"gitId":"janelleljt"},"content":"                        Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"janelleljt"},"content":"                    } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":78,"author":{"gitId":"janelleljt"},"content":"                        Task task \u003d new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"janelleljt"},"content":"                        list.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"janelleljt"},"content":"                        storage.store(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":81,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"janelleljt"},"content":"                        Ui.taskAddedMessage(task, this);","lastModifiedDate":"2022-08-26"},{"lineNumber":83,"author":{"gitId":"janelleljt"},"content":"                    }","lastModifiedDate":"2022-08-18"},{"lineNumber":84,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":85,"author":{"gitId":"janelleljt"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":86,"author":{"gitId":"janelleljt"},"content":"                String errorString \u003d \"\\tInvalid formatting for deadline entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\tWrite your deadlines in the following format: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\t\u003d\u003e deadline \u003cdeadline-name\u003e by \u003cdate\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":89,"author":{"gitId":"janelleljt"},"content":"                Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":90,"author":{"gitId":"janelleljt"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":91,"author":{"gitId":"janelleljt"},"content":"                String errorString \u003d \"\\tInvalid formatting for deadline entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\tWrite your dates in the following format: YYYY-MM-DD HHHH\";","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"janelleljt"},"content":"                Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":95,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":96,"author":{"gitId":"janelleljt"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-08-18"},{"lineNumber":97,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-18"},{"lineNumber":98,"author":{"gitId":"janelleljt"},"content":"                command \u003d command.replace(\"event \", \"\").trim();","lastModifiedDate":"2022-08-26"},{"lineNumber":99,"author":{"gitId":"janelleljt"},"content":"                if (command.length() \u003d\u003d 0) {","lastModifiedDate":"2022-08-18"},{"lineNumber":100,"author":{"gitId":"janelleljt"},"content":"                    String errorString \u003d \"\\tThe description of event cannot be empty!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"janelleljt"},"content":"                    errorString +\u003d \"\\tIt\u0027s impossible to go for something that does not exist...\\n\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"janelleljt"},"content":"                    errorString +\u003d \"\\tWrite your events in the following format: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":103,"author":{"gitId":"janelleljt"},"content":"                    errorString +\u003d \"\\t\u003d\u003e event \u003cevent-name\u003e by \u003cdate\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":104,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"janelleljt"},"content":"                    Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"janelleljt"},"content":"                } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":107,"author":{"gitId":"janelleljt"},"content":"                    String[] event \u003d command.split(\" /at \");","lastModifiedDate":"2022-08-18"},{"lineNumber":108,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":109,"author":{"gitId":"janelleljt"},"content":"                    String at \u003d event[1];","lastModifiedDate":"2022-08-26"},{"lineNumber":110,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":111,"author":{"gitId":"janelleljt"},"content":"                    // generate boolean indicating if the deadline is before or after current date","lastModifiedDate":"2022-08-26"},{"lineNumber":112,"author":{"gitId":"janelleljt"},"content":"                    // and time","lastModifiedDate":"2022-08-26"},{"lineNumber":113,"author":{"gitId":"janelleljt"},"content":"                    LocalDateTime currDate \u003d LocalDateTime.now();","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"janelleljt"},"content":"                    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd kkmm\");","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"janelleljt"},"content":"                    LocalDateTime deadlineDate \u003d LocalDateTime.parse(at, format);","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"janelleljt"},"content":"                    Boolean isAfter \u003d deadlineDate.isAfter(currDate);","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"janelleljt"},"content":"                    String regex \u003d \"(\\\\d{4})-(\\\\d{2})-(\\\\d{2}) (\\\\d{2})(\\\\d{2})\";","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"janelleljt"},"content":"                    // invalid deadline format","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"janelleljt"},"content":"                    if (!at.trim().matches(regex)) {","lastModifiedDate":"2022-08-26"},{"lineNumber":121,"author":{"gitId":"janelleljt"},"content":"                        String errorString \u003d \"\\tInvalid formatting for date entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":122,"author":{"gitId":"janelleljt"},"content":"                        errorString +\u003d \"\\tWrite your date in the following format: YYYY-MM-DD HHHH\";","lastModifiedDate":"2022-08-26"},{"lineNumber":123,"author":{"gitId":"janelleljt"},"content":"                        Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":124,"author":{"gitId":"janelleljt"},"content":"                    } else if (at.trim().matches(regex) \u0026\u0026 !isAfter) {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"janelleljt"},"content":"                        String errorString \u003d \"\\tI might be a non-sentient robot but you seem to be a time traveller!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"janelleljt"},"content":"                        errorString +\u003d \"\\tPlease input events BEFORE the current date and time.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"janelleljt"},"content":"                        Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"janelleljt"},"content":"                    } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"janelleljt"},"content":"                        Task task \u003d new Event(event[0], event[1]);","lastModifiedDate":"2022-08-18"},{"lineNumber":130,"author":{"gitId":"janelleljt"},"content":"                        list.add(task);","lastModifiedDate":"2022-08-18"},{"lineNumber":131,"author":{"gitId":"janelleljt"},"content":"                        storage.store(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":132,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":133,"author":{"gitId":"janelleljt"},"content":"                        Ui.taskAddedMessage(task, this);","lastModifiedDate":"2022-08-26"},{"lineNumber":134,"author":{"gitId":"janelleljt"},"content":"                    }","lastModifiedDate":"2022-08-26"},{"lineNumber":135,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-18"},{"lineNumber":136,"author":{"gitId":"janelleljt"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-08-18"},{"lineNumber":137,"author":{"gitId":"janelleljt"},"content":"                String errorString \u003d \"\\tThe description of event cannot be empty!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":138,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\tIt\u0027s impossible to go for something that does not exist...\\n\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":139,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\tWrite your events in the following format: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":140,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\t\u003d\u003e event \u003cevent-name\u003e by \u003cdate\u003e\";","lastModifiedDate":"2022-08-26"},{"lineNumber":141,"author":{"gitId":"janelleljt"},"content":"                Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":142,"author":{"gitId":"janelleljt"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":143,"author":{"gitId":"janelleljt"},"content":"                String errorString \u003d \"\\tInvalid formatting for deadline entered!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":144,"author":{"gitId":"janelleljt"},"content":"                errorString +\u003d \"\\tWrite your dates in the following format: YYYY-MM-DD HHHH\";","lastModifiedDate":"2022-08-26"},{"lineNumber":145,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":146,"author":{"gitId":"janelleljt"},"content":"                Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":147,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-18"},{"lineNumber":148,"author":{"gitId":"janelleljt"},"content":"        } else {","lastModifiedDate":"2022-08-18"},{"lineNumber":149,"author":{"gitId":"janelleljt"},"content":"            String errorString \u003d \"\\tDeepest apologies, I am a mere automated bot.\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"janelleljt"},"content":"                    + \"\\tPlease stick to input that start with \\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t1. todo - for items that you have to do\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":152,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t2. deadline - for items which have an upcoming deadline\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t3. event - for events with a date and time\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":154,"author":{"gitId":"janelleljt"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t4. mark - to mark an event as done\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t5. unmark - to mark an event as undone\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t6. delete - to delete an event\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":158,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t7. list - to view all the events on your todo list\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"janelleljt"},"content":"                    + \"\\t8. bye - to wish me a (temporary) farewell\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"janelleljt"},"content":"            Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-26"},{"lineNumber":161,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":162,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":163,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":164,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":165,"author":{"gitId":"janelleljt"},"content":"     * Method for deleting a specific event from the list, and updating the storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"janelleljt"},"content":"     * @param index Specifies 0 index of task to be deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":167,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"janelleljt"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":169,"author":{"gitId":"janelleljt"},"content":"        Ui.taskDeletedMessage(index, this);","lastModifiedDate":"2022-08-26"},{"lineNumber":170,"author":{"gitId":"janelleljt"},"content":"        this.list.remove(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":171,"author":{"gitId":"janelleljt"},"content":"        storage.store(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":172,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":173,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":174,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":175,"author":{"gitId":"janelleljt"},"content":"     * Method for marking a specific event from the list as done, and updating the storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":176,"author":{"gitId":"janelleljt"},"content":"     * @param index Specifies 1 index of task to be marked as done.","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":178,"author":{"gitId":"janelleljt"},"content":"    public void markItemDone(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":179,"author":{"gitId":"janelleljt"},"content":"        this.list.get(index - 1).markDone();","lastModifiedDate":"2022-08-22"},{"lineNumber":180,"author":{"gitId":"janelleljt"},"content":"        Ui.markItemDoneMessage(this, index - 1); // takes in 0 index","lastModifiedDate":"2022-08-26"},{"lineNumber":181,"author":{"gitId":"janelleljt"},"content":"        storage.store(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":182,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":183,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":184,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":185,"author":{"gitId":"janelleljt"},"content":"     * Method for marking a specific event from the list as undone, and updating the storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":186,"author":{"gitId":"janelleljt"},"content":"     * @param index Specifies 1 index of task to be marked as undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":187,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":188,"author":{"gitId":"janelleljt"},"content":"    public void markItemUndone(int index) {","lastModifiedDate":"2022-08-18"},{"lineNumber":189,"author":{"gitId":"janelleljt"},"content":"        this.list.get(index - 1).markUndone();","lastModifiedDate":"2022-08-22"},{"lineNumber":190,"author":{"gitId":"janelleljt"},"content":"        Ui.markItemUndoneMessage(this, index - 1); // takes in 0 index","lastModifiedDate":"2022-08-26"},{"lineNumber":191,"author":{"gitId":"janelleljt"},"content":"        storage.store(list);","lastModifiedDate":"2022-08-24"},{"lineNumber":192,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":193,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":194,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":195,"author":{"gitId":"janelleljt"},"content":"     * Method that returns the number of items in the ToDo List.","lastModifiedDate":"2022-08-28"},{"lineNumber":196,"author":{"gitId":"janelleljt"},"content":"     * @return An int representing the number of items in the ToDo List.","lastModifiedDate":"2022-08-28"},{"lineNumber":197,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":198,"author":{"gitId":"janelleljt"},"content":"    public int getLength() {","lastModifiedDate":"2022-08-26"},{"lineNumber":199,"author":{"gitId":"janelleljt"},"content":"        return this.list.size();","lastModifiedDate":"2022-08-26"},{"lineNumber":200,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":201,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":202,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":203,"author":{"gitId":"janelleljt"},"content":"     * Method that returns the specified task.","lastModifiedDate":"2022-08-28"},{"lineNumber":204,"author":{"gitId":"janelleljt"},"content":"     * @param index 0 index of the task specified.","lastModifiedDate":"2022-08-28"},{"lineNumber":205,"author":{"gitId":"janelleljt"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2022-08-28"},{"lineNumber":206,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":207,"author":{"gitId":"janelleljt"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":208,"author":{"gitId":"janelleljt"},"content":"        return this.list.get(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":209,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":210,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":211,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":212,"author":{"gitId":"janelleljt"},"content":"     * Returns a String containing all the elements in the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":213,"author":{"gitId":"janelleljt"},"content":"     * @return String containing all the elements in the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":214,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":215,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":216,"author":{"gitId":"janelleljt"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":217,"author":{"gitId":"janelleljt"},"content":"        int numOfElements \u003d this.list.size();","lastModifiedDate":"2022-08-18"},{"lineNumber":218,"author":{"gitId":"janelleljt"},"content":"        String res \u003d \"\\tHere are your tasks:\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":219,"author":{"gitId":"janelleljt"},"content":"        for (int i \u003d 1; i \u003c\u003d numOfElements; i++) {","lastModifiedDate":"2022-08-18"},{"lineNumber":220,"author":{"gitId":"janelleljt"},"content":"            String curr \u003d \"\\t\" + i + \". \" + this.list.get(i - 1).toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":221,"author":{"gitId":"janelleljt"},"content":"            if (i !\u003d numOfElements) {","lastModifiedDate":"2022-08-26"},{"lineNumber":222,"author":{"gitId":"janelleljt"},"content":"                curr +\u003d \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":223,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":224,"author":{"gitId":"janelleljt"},"content":"            res +\u003d curr;","lastModifiedDate":"2022-08-18"},{"lineNumber":225,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":226,"author":{"gitId":"janelleljt"},"content":"        return res;","lastModifiedDate":"2022-08-18"},{"lineNumber":227,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":228,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"janelleljt":228}},{"path":"src/main/java/bobthebot/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":" * A class representing todo, a type of task.","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"     * Constructor for todo.","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"     * @param description of the deadline.","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"        super(description.trim());","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"     * Returns a String representation of a todo.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of todo.","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-18"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"     * Method which converts an todo to a format for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"     * @return String representation of a todo for storage.","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"    @Override","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"        int done \u003d isDone ? 1 : 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"        String res \u003d String.format(\"T | %d | %s\", done, taskName);","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"        return res;","lastModifiedDate":"2022-08-24"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"janelleljt":34}},{"path":"src/main/java/bobthebot/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.utils;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.ToDoList;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":" * Parser class which primarily handles the logic of how the handle the input.","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"public class Parser {","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"     * Function which takes in the user\u0027s command and handles the logic of the output.","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"     * @param command A String containing the user\u0027s input.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"     * @param list The Todo List which the command will act on.","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"     *","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"    public void parseCommand(String command, ToDoList list) {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"        if (command.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"            Ui.listMessage(list);","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"                if (list.getLength() \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"                    String errorString \u003d \"\\tPlease add items to your list before wanting to mark them as done!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"                    Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"                    int index \u003d Integer.parseInt(command.replace(\"mark \", \"\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"                    list.markItemDone(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"                list.addTask(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"                if (list.getLength() \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"                    String errorString \u003d \"\\tPlease add items to your list before wanting to mark them as undone!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"                    Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"                    int index \u003d Integer.parseInt(command.replace(\"unmark \", \"\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"                    list.markItemUndone(index);","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"                list.addTask(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"                if (list.getLength() \u003d\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"                    String errorString \u003d \"\\tPlease add items to your list before deleting them!\";","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"                    Ui.printErrorMessage(errorString);","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"                } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"                    int index \u003d Integer.parseInt(command.replace(\"delete \", \"\"));","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"                    list.deleteTask(index - 1);","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"                String result \u003d e.toString() + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"                result +\u003d \"\\tPlease enter the index of the item you would like to delete!\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"                result +\u003d \"\\tEg. delete 2 (where 2 is the index of the item you would like to delete)\";","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"                Ui.printErrorMessage(result);","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"            command \u003d command.replace(\"find\", \"\").trim();","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"            String result \u003d \"\\tHere are the matching items on your list: \\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"janelleljt"},"content":"            int index \u003d 1;","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"janelleljt"},"content":"            for (int i \u003d 0; i \u003c list.getLength(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"janelleljt"},"content":"                if (list.getTask(i).toString().contains(command)) {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"janelleljt"},"content":"                    result +\u003d \"\\t\" + index + \". \" + list.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"janelleljt"},"content":"                    index++;","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"janelleljt"},"content":"            Ui.formatMessage(result);","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"janelleljt"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"janelleljt"},"content":"            list.addTask(command);","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"janelleljt":72}},{"path":"src/main/java/bobthebot/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.utils;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import java.io.File;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Event;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Todo;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":" * A class which handles the interaction of the BobTheBot with the file storing the ToDo List items.","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"public class Storage {","lastModifiedDate":"2022-08-24"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"    private String filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"    private String dirPath;","lastModifiedDate":"2022-08-24"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"     * Constructs a storage object.","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"        this.dirPath \u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"     * Method which loads data from the specified file into an ArrayList, which can be used for the ToDo List object.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"     * If the file is not found, an empty ArrayList is returned.","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"     * @return An ArrayList containing the tasks in the specified file, or an empty ArrayList if there is no","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"     *     file or the file is empty.","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"        File dir \u003d new File(this.dirPath);","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"            dir.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"        if (dir.exists() \u0026\u0026 !file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"                System.err.println(\"Not sure what an IOException is but it has occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-08-24"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"                System.out.println(input);","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"                String[] parsedInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"                Task task;","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":61,"author":{"gitId":"janelleljt"},"content":"                switch (parsedInput[0]) {","lastModifiedDate":"2022-08-24"},{"lineNumber":62,"author":{"gitId":"janelleljt"},"content":"                case \"T\":","lastModifiedDate":"2022-08-24"},{"lineNumber":63,"author":{"gitId":"janelleljt"},"content":"                    task \u003d new Todo(parsedInput[2]);","lastModifiedDate":"2022-08-24"},{"lineNumber":64,"author":{"gitId":"janelleljt"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":65,"author":{"gitId":"janelleljt"},"content":"                case \"D\":","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"janelleljt"},"content":"                    task \u003d new Deadline(parsedInput[2], parsedInput[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":67,"author":{"gitId":"janelleljt"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"janelleljt"},"content":"                case \"E\":","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"janelleljt"},"content":"                    task \u003d new Event(parsedInput[2], parsedInput[3]);","lastModifiedDate":"2022-08-24"},{"lineNumber":70,"author":{"gitId":"janelleljt"},"content":"                    break;","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"janelleljt"},"content":"                default:","lastModifiedDate":"2022-08-24"},{"lineNumber":72,"author":{"gitId":"janelleljt"},"content":"                    task \u003d null;","lastModifiedDate":"2022-08-24"},{"lineNumber":73,"author":{"gitId":"janelleljt"},"content":"                    System.err.println(\"Error occurred during file loading. I do not process this task type.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":74,"author":{"gitId":"janelleljt"},"content":"                    break;","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":76,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":77,"author":{"gitId":"janelleljt"},"content":"                // checking if the task is done","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"janelleljt"},"content":"                if (Integer.parseInt(parsedInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"janelleljt"},"content":"                    task.markDone();","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"janelleljt"},"content":"                }","lastModifiedDate":"2022-08-26"},{"lineNumber":81,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":82,"author":{"gitId":"janelleljt"},"content":"                list.add(task);","lastModifiedDate":"2022-08-24"},{"lineNumber":83,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":84,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":85,"author":{"gitId":"janelleljt"},"content":"            sc.close();","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"janelleljt"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"janelleljt"},"content":"            System.err.println(e);","lastModifiedDate":"2022-08-24"},{"lineNumber":89,"author":{"gitId":"janelleljt"},"content":"            return list;","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":91,"author":{"gitId":"janelleljt"},"content":"        return list;","lastModifiedDate":"2022-08-24"},{"lineNumber":92,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":93,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":94,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"janelleljt"},"content":"     * Method which takes in an ArrayList of tasks and stores it into the specified file.","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"janelleljt"},"content":"     * @param list An ArrayList containing the Tasks in the ToDo list object.","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"janelleljt"},"content":"    public void store(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-08-24"},{"lineNumber":99,"author":{"gitId":"janelleljt"},"content":"        File dir \u003d new File(this.dirPath);","lastModifiedDate":"2022-08-24"},{"lineNumber":100,"author":{"gitId":"janelleljt"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":101,"author":{"gitId":"janelleljt"},"content":"            dir.mkdir();","lastModifiedDate":"2022-08-24"},{"lineNumber":102,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":103,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":104,"author":{"gitId":"janelleljt"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2022-08-24"},{"lineNumber":105,"author":{"gitId":"janelleljt"},"content":"        if (dir.exists() \u0026\u0026 !file.exists()) {","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"janelleljt"},"content":"            try {","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"janelleljt"},"content":"                file.createNewFile();","lastModifiedDate":"2022-08-24"},{"lineNumber":108,"author":{"gitId":"janelleljt"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":109,"author":{"gitId":"janelleljt"},"content":"                System.err.println(\"Not sure what an IOException is but it has occurred.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":110,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":111,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":112,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":113,"author":{"gitId":"janelleljt"},"content":"        try {","lastModifiedDate":"2022-08-24"},{"lineNumber":114,"author":{"gitId":"janelleljt"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2022-08-24"},{"lineNumber":115,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"janelleljt"},"content":"            for (Task t : list) {","lastModifiedDate":"2022-08-24"},{"lineNumber":117,"author":{"gitId":"janelleljt"},"content":"                fw.append(t.toStorageFormat() + \"\\n\");","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"janelleljt"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"janelleljt"},"content":"            fw.close();","lastModifiedDate":"2022-08-24"},{"lineNumber":120,"author":{"gitId":"janelleljt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-24"},{"lineNumber":121,"author":{"gitId":"janelleljt"},"content":"            System.err.println(\"Error occurred during file storage. I do not process this task type.\");","lastModifiedDate":"2022-08-24"},{"lineNumber":122,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":123,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":124,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-24"}],"authorContributionMap":{"janelleljt":124}},{"path":"src/main/java/bobthebot/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package bobthebot.utils;","lastModifiedDate":"2022-08-28"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.ToDoList;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"/**","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":" * Class which handles the interaction of BobTheBot and the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":" * */","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"public class Ui {","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"     * Method which welcomes the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"    public static void welcome() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"        String result \u003d \"\\tHello! I am Bob the Bot, your friendly task manager! \\uD83D\\uDE0A\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"        result +\u003d \"\\tWhen using me, please stick to the following commands:\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t1. todo - for items that you have to do\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t2. deadline - for items which have an upcoming deadline\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t3. event - for events with a date and time\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"                + \"\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t4. mark - to mark an event as done\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t5. unmark - to mark an event as undone\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t6. delete - to delete an event\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t7. list - to view all the events on your todo list\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"                + \"\\t\\t8. bye - to wish me a (temporary) farewell\";","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"        formatMessage(result);","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"     * Method which says goodbye to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"     * @param list ToDoList of the items the user still has to accomplish.","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"    public static void goodbye(ToDoList list) {","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"        String result \u003d \"\\tBye! Hope to see you again soon! \";","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"janelleljt"},"content":"        String haveMoreTasks \u003d \"You still have \" + list.getLength()","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"janelleljt"},"content":"                + (list.getLength() \u003d\u003d 1 ? \" task\" : \"bobthebot/tasks\")","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"janelleljt"},"content":"                + \" to do! \\uD83D\\uDE0A\";","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"janelleljt"},"content":"        String completedAllTasks \u003d \"I\u0027m so happy that you\u0027ve completed all your tasks! \\n\\tCome back soon \"","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"janelleljt"},"content":"                + \"if you want to accomplish more things! \\uD83D\\uDE0A\";","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":41,"author":{"gitId":"janelleljt"},"content":"        formatMessage(list.getLength() \u003d\u003d 0 ? result + completedAllTasks : result + haveMoreTasks);","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":43,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":44,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"janelleljt"},"content":"     * Method which formats and prints the message to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"janelleljt"},"content":"     * @param s The String to be formatted.","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"janelleljt"},"content":"    public static void formatMessage(String s) {","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"janelleljt"},"content":"        String result \u003d \"  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"janelleljt"},"content":"                + s + \"\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"janelleljt"},"content":"                + \"  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"janelleljt"},"content":"        System.out.println(result);","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":54,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"janelleljt"},"content":"     * Method which formats and prints an error message to the user.","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"janelleljt"},"content":"     * @param s The error message to be formatted.","lastModifiedDate":"2022-08-28"},{"lineNumber":58,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"janelleljt"},"content":"    public static void printErrorMessage(String s) {","lastModifiedDate":"2022-08-26"},{"lineNumber":60,"author":{"gitId":"janelleljt"},"content":"        String result \u003d \"  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\n\"","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"janelleljt"},"content":"                +","lastModifiedDate":"2022-08-26"},{"lineNumber":62,"author":{"gitId":"janelleljt"},"content":"                s + \"\\n\"","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"janelleljt"},"content":"                + \"  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\n\";","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"janelleljt"},"content":"        System.err.println(result);","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"janelleljt"},"content":"     * Method which informs the user that the specified task was successfully added.","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"janelleljt"},"content":"     * @param t The task that was added.","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"janelleljt"},"content":"     * @param list The ToDo List the task was added to.","lastModifiedDate":"2022-08-28"},{"lineNumber":71,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":72,"author":{"gitId":"janelleljt"},"content":"    public static void taskAddedMessage(Task t, ToDoList list) {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"janelleljt"},"content":"        String toPrint \u003d \"\\tGot it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":74,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\t\" + t.toString() + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":75,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\tYou now have \" + list.getLength() + (list.getLength() \u003d\u003d 1 ? \" task\" : \"bobthebot/tasks\")","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"janelleljt"},"content":"                + \" in the list.\";","lastModifiedDate":"2022-08-26"},{"lineNumber":77,"author":{"gitId":"janelleljt"},"content":"        formatMessage(toPrint);","lastModifiedDate":"2022-08-26"},{"lineNumber":78,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":81,"author":{"gitId":"janelleljt"},"content":"     * Method which informs the user that the specified task was successfully deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"janelleljt"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"janelleljt"},"content":"     * @param list The ToDo list which the task is to be deleted from.","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"janelleljt"},"content":"     */","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"janelleljt"},"content":"    public static void taskDeletedMessage(int index, ToDoList list) {","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"janelleljt"},"content":"        String toPrint \u003d \"\\tGot it. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\t\\t\" + list.getTask(index).toString() + \"\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":88,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\tYou now have \"","lastModifiedDate":"2022-08-28"},{"lineNumber":89,"author":{"gitId":"janelleljt"},"content":"                + (list.getLength() - 1)","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"janelleljt"},"content":"                + (list.getLength() - 1 \u003d\u003d 1 ? \" task\" : \"bobthebot/tasks\");","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"janelleljt"},"content":"        formatMessage(toPrint);","lastModifiedDate":"2022-08-26"},{"lineNumber":92,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":93,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":94,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"janelleljt"},"content":"     * Takes in the 0 index of the item done and prints a message informing the user that their item is","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"janelleljt"},"content":"     *      successfully marked done.","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"janelleljt"},"content":"     * @param list ToDo List the item is in.","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"janelleljt"},"content":"     * @param index The index of the item to be marked as done.","lastModifiedDate":"2022-08-28"},{"lineNumber":99,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":100,"author":{"gitId":"janelleljt"},"content":"    public static void markItemDoneMessage(ToDoList list, int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":101,"author":{"gitId":"janelleljt"},"content":"        String toPrint \u003d \"\\tGOOD JOB! I\u0027m marking this task as done: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":102,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\t\"","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"janelleljt"},"content":"                + list.getTask(index).toString();","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"janelleljt"},"content":"        formatMessage(toPrint);","lastModifiedDate":"2022-08-26"},{"lineNumber":105,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":106,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":107,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"janelleljt"},"content":"     * Takes in the 0 index of the item done and prints a message informing the user that their item is","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"janelleljt"},"content":"     *      successfully marked undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"janelleljt"},"content":"     * @param list ToDo List the item is in.","lastModifiedDate":"2022-08-28"},{"lineNumber":111,"author":{"gitId":"janelleljt"},"content":"     * @param index The index of the item to be marked as undone.","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":113,"author":{"gitId":"janelleljt"},"content":"    public static void markItemUndoneMessage(ToDoList list, int index) {","lastModifiedDate":"2022-08-26"},{"lineNumber":114,"author":{"gitId":"janelleljt"},"content":"        String toPrint \u003d \"\\tIt\u0027s sad that you thought you finished your work but didnt.\\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":115,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\t\" + \"But alright, marking this task as undone: \\n\";","lastModifiedDate":"2022-08-26"},{"lineNumber":116,"author":{"gitId":"janelleljt"},"content":"        toPrint +\u003d \"\\t\" + list.getTask(index).toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":117,"author":{"gitId":"janelleljt"},"content":"        formatMessage(toPrint);","lastModifiedDate":"2022-08-26"},{"lineNumber":118,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":119,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":120,"author":{"gitId":"janelleljt"},"content":"    /**","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"janelleljt"},"content":"     * Returns items in the list.","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"janelleljt"},"content":"     * @param list Tasks to be printed from this TODO list.","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"janelleljt"},"content":"     * */","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"janelleljt"},"content":"    public static void listMessage(ToDoList list) {","lastModifiedDate":"2022-08-26"},{"lineNumber":125,"author":{"gitId":"janelleljt"},"content":"        if (list.getLength() \u003d\u003d 0) {","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"janelleljt"},"content":"            String toPrint \u003d \"\\tYAY! There are no items in your list!\";","lastModifiedDate":"2022-08-26"},{"lineNumber":127,"author":{"gitId":"janelleljt"},"content":"            formatMessage(toPrint);","lastModifiedDate":"2022-08-26"},{"lineNumber":128,"author":{"gitId":"janelleljt"},"content":"        } else {","lastModifiedDate":"2022-08-26"},{"lineNumber":129,"author":{"gitId":"janelleljt"},"content":"            formatMessage(list.toString());","lastModifiedDate":"2022-08-26"},{"lineNumber":130,"author":{"gitId":"janelleljt"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":131,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":132,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"janelleljt":132}},{"path":"src/test/java/tasks/ToDoListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Todo;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.ToDoList;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"public class ToDoListTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"    public void markDoneTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"        Storage storage \u003d new Storage(\"./../../data/data.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"        Task todo \u003d new Todo(\"task1\");","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"        ToDoList taskList \u003d new ToDoList(tasks, storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"        todo.markDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"        assertEquals(todo.getStatusIcon(), \"✔\");","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"janelleljt"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"janelleljt"},"content":"    public void markUndoneTest() {","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"janelleljt"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"janelleljt"},"content":"        Storage storage \u003d new Storage(\"./../../data/data.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"janelleljt"},"content":"        Task todo \u003d new Todo(\"task2\");","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"janelleljt"},"content":"        ToDoList taskList \u003d new ToDoList(tasks, storage);","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"janelleljt"},"content":"        todo.markDone();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"janelleljt"},"content":"        todo.markUndone();","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"janelleljt"},"content":"        assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"janelleljt":34}},{"path":"src/test/java/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"package utils;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Deadline;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"import bobthebot.tasks.Task;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"import bobthebot.utils.Storage;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"public class StorageTest {","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"    @Test","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"janelleljt"},"content":"    public void loadTest1() {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"janelleljt"},"content":"        Storage storage \u003d new Storage(\"./../../data/data.txt\");","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"janelleljt"},"content":"        ArrayList\u003cTask\u003e expected \u003d storage.load();","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"janelleljt"},"content":"        ArrayList\u003cTask\u003e actual \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"janelleljt"},"content":"        actual.add(new Deadline(\"task 3\", \"2022-12-12 2222\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"janelleljt"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"janelleljt"},"content":"        assertEquals(expected.toString(), actual.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"janelleljt"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"janelleljt":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"janelleljt"},"content":"todo read book","lastModifiedDate":"2022-08-19"},{"lineNumber":2,"author":{"gitId":"janelleljt"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"janelleljt"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"janelleljt"},"content":"todo join sports club","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"janelleljt"},"content":"todo borrow book","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"janelleljt"},"content":"mark 1","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"janelleljt"},"content":"mark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"janelleljt"},"content":"mark 4","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"janelleljt"},"content":"unmark 2","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"janelleljt"},"content":"unmark 4","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"janelleljt"},"content":"delete 3","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"janelleljt"},"content":"delete 4","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"janelleljt"},"content":"bye","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"janelleljt":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"janelleljt"},"content":"java -classpath ../bin BobTheBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janelleljt":1,"-":37}}]

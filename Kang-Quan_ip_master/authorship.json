[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"# User Guide","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"Duke is a **desktop chatbot** that will help you **remember your tasks** so that you can leave the remembering to us and relax with a good cup of coffee. Duke is optimised for use via a **Command Line Interface** (CLI) while still having a benefits of a Graphical User Interface (GUI). If you possess a fast typing speed, Duke will remember you tasks **faster** than traditional GUI apps.","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"2. [Features](#features)","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"3. [Usage](#usage)","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"5. [Product Screenshot](#product-screenshot)","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"## Quick start","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"1. Ensure that you have Java `11` installed in your computer.","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/Kang-Quan/ip/releases/download/A-Release2/duke.jar).","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"3. Copy the jar file to an empty folder you want to use as the home folder for Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"4. Open a command window in that folder.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"5. Run the command `java -jar duke.jar`.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"6. The GUI will be similar to the image shown below which should appear within a few seconds.","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"   ![QuickStartImg](docs/QuickStartImg.png)","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"6. Type the command in the command box and press `Enter` or click on `Send` button to execute it. Eg, typing help then press Enter will open the help window where it will show all the commands you can use.","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"   Here are some examples of command you can try:","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"   - `todo finish math assignment`: Adds a Todo tasks with a description finish math assignment to Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"   - `list`: List all tasks you currently have.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"   - `mark 1`: Mark task that is index 1 as shown after executing `list` command to be done.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"   - `unmark 1`: Unmark task that is index 1 as shown after executing `list` command to be not done.","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"   - `delete 1`: Delete task that is index 1 as shown after executing `list` command.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"   - `bye`: Exits the app.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"7. Refers to Usage below for details for each command.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"## Features","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"### Manage Your Tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"- Add/Delete Tasks to Duke.","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"- Support different type of tasks such as todo and tasks with date and time such as event and deadline.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"- Able to mark/unmark tasks as done or not done","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"- Find tasks that description contains the keyword you have input.","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"- Prevent you from having duplicate task","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"## Usage","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"### `help` - list all commands Duke has","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"Display a list of all command Duke has","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"Format: `help`","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"### `todo` - Adds a todo task","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"Adds a todo task to Duke task list","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `todo finish computer science assignment`","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"### `deadline` - Adds a deadline task","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"Adds deadline task to Duke task list. A deadline task is a task that has to be completed by a specific time.","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HH:MM\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"Note: yyyy-mm-dd HH:MM represents, year, month, day, hour and minute respectively.","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `deadline submit homework /by 2022-08-10 20:00`","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"### `event` - Adds an event task","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"Adds event task to Duke task list. An event task is a task that occur at that specific time.","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"Format: `event \u003cdescription\u003e /at \u003cyyyy-mm-dd HH:MM\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"Note: yyyy-mm-dd HH:MM represents, year, month, day, hour and minute respectively.","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `event watch math lecture /at 2022-08-10 10:00`","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"### `list` - list all tasks in Duke task list","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"Display a list of all tasks in Duke task list","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"Format: `list`","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"### `mark` - Mark a task as done in Duke task list","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"Mark a task as done in Duke task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"Note: index of task to be mark can be found after performing the list command","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"### `unmark` - Unmark a task as not done in Duke task list","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"Unmark a task as not done in Duke task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"Note: index of task to be mark can be found after performing the list command","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"### `delete` - Delete a specified task in Duke task list","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"Delete a specified task in Duke task list.","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"Note: index of task to be mark can be found after performing the list command","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"Kang-Quan"},"content":"### `find` - Find all tasks in Duke that matches description of the task.","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Kang-Quan"},"content":"Find all tasks in Duke that matches description of the task.","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Kang-Quan"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Kang-Quan"},"content":"Note: any task that contains keyword will be displayed to user.","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `find lecture`, `find homework`","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Kang-Quan"},"content":"### `bye` - Exits Duke program","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"Kang-Quan"},"content":"Exits Duke program.","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"Kang-Quan"},"content":"Format: `bye`","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"Kang-Quan"},"content":"## Command Summary","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Kang-Quan"},"content":"| Action      | Format, Examples |","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"Kang-Quan"},"content":"| ----------- | ----------- |","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Kang-Quan"},"content":"| help      | `help` |","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Kang-Quan"},"content":"| todo   | `todo \u003cdescription\u003e` eg. `todo run 2.4km` |","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"Kang-Quan"},"content":"| deadline      | `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HH:MM\u003e` eg. `deadline submit homework /by 2022-08-10 20:00` |","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"Kang-Quan"},"content":"| event   | `event \u003cdescription\u003e /at \u003cyyyy-mm-dd HH:MM\u003e` eg. `event watch math lecture /at 2022-08-10 10:00` |","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"Kang-Quan"},"content":"| list      | `list` |","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"Kang-Quan"},"content":"| mark   | `mark \u003cindex\u003e` eg. `mark 1` |","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"Kang-Quan"},"content":"| unmark      | `unmark \u003cindex\u003e` eg. `unmark 1` |","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"Kang-Quan"},"content":"| delete | `delete \u003cindex\u003e` eg. `delete 1` |","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"Kang-Quan"},"content":"| find      | `find \u003ckeyword\u003e` eg. `find homework` |","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"Kang-Quan"},"content":"| bye | `bye`        |","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"Kang-Quan"},"content":"## Product Screenshot","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"Kang-Quan"},"content":"![Ui](docs/Ui.png)","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Kang-Quan":137}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"checkstyle {","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"dependencies {","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":25,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"Duke is a **desktop chatbot** that will help you **remember your tasks** so that you can leave the remembering to us and relax with a good cup of coffee. Duke is optimised for use via a **Command Line Interface** (CLI) while still having a benefits of a Graphical User Interface (GUI). If you possess a fast typing speed, Duke will remember you tasks **faster** than traditional GUI apps.","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"2. [Features](#features)","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"3. [Usage](#usage)","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"5. [Product Screenshot](#product-screenshot)","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"## Quick start","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"1. Ensure that you have Java `11` installed in your computer.","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/Kang-Quan/ip/releases/download/A-Release2/duke.jar).","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"3. Copy the jar file to an empty folder you want to use as the home folder for Duke.","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"4. Open a command window in that folder.","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"5. Run the command `java -jar duke.jar`.","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"6. The GUI will be similar to the image shown below which should appear within a few seconds.","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"![QuickStartImg](QuickStartImg.png)","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"6. Type the command in the command box and press `Enter` or click on `Send` button to execute it. Eg, typing help then press Enter will open the help window where it will show all the commands you can use. ","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"Here are some examples of command you can try:","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    - `todo finish math assignment`: Adds a Todo tasks with a description finish math assignment to Duke","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    - `list`: List all tasks you currently have.","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    - `mark 1`: Mark task that is index 1 as shown after executing `list` command to be done.","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"    - `unmark 1`: Unmark task that is index 1 as shown after executing `list` command to be not done.","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    - `delete 1`: Delete task that is index 1 as shown after executing `list` command.","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    - `bye`: Exits the app.","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"7. Refers to Usage below for details for each command.","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"## Features","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"### Manage Your Tasks","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"- Add/Delete Tasks to Duke.","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"- Support different type of tasks such as todo and tasks with date and time such as event and deadline.","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"- Able to mark/unmark tasks as done or not done","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"- Find tasks that description contains the keyword you have input.","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"- Prevent you from having duplicate task","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"### `help` - list all commands Duke has","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"Display a list of all command Duke has","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"Format: `help`","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"### `todo` - Adds a todo task","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"Adds a todo task to Duke task list","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `todo finish computer science assignment`","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"### `deadline` - Adds a deadline task","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"Adds deadline task to Duke task list. A deadline task is a task that has to be completed by a specific time.","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HH:MM\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"Note: yyyy-mm-dd HH:MM represents, year, month, day, hour and minute respectively.","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `deadline submit homework /by 2022-08-10 20:00`","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"### `event` - Adds an event task","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"Adds event task to Duke task list. An event task is a task that occur at that specific time.","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"Format: `event \u003cdescription\u003e /at \u003cyyyy-mm-dd HH:MM\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"Note: yyyy-mm-dd HH:MM represents, year, month, day, hour and minute respectively.","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `event watch math lecture /at 2022-08-10 10:00`","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"### `list` - list all tasks in Duke task list","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"Display a list of all tasks in Duke task list","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"Format: `list`","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"### `mark` - Mark a task as done in Duke task list","lastModifiedDate":"2022-09-18"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"Mark a task as done in Duke task list. ","lastModifiedDate":"2022-09-18"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"Note: index of task to be mark can be found after performing the list command","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2022-09-18"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"### `unmark` - Unmark a task as not done in Duke task list","lastModifiedDate":"2022-09-18"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"Unmark a task as not done in Duke task list. ","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"Note: index of task to be mark can be found after performing the list command","lastModifiedDate":"2022-09-18"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2022-09-18"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"### `delete` - Delete a specified task in Duke task list","lastModifiedDate":"2022-09-18"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"Delete a specified task in Duke task list. ","lastModifiedDate":"2022-09-18"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"Note: index of task to be mark can be found after performing the list command","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2022-09-18"},{"lineNumber":103,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":104,"author":{"gitId":"Kang-Quan"},"content":"### `find` - Find all tasks in Duke that matches description of the task.","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"Kang-Quan"},"content":"Find all tasks in Duke that matches description of the task. ","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"Kang-Quan"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"Kang-Quan"},"content":"Note: any task that contains keyword will be displayed to user.","lastModifiedDate":"2022-09-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"Kang-Quan"},"content":"Example of usage: `find lecture`, `find homework`","lastModifiedDate":"2022-09-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"Kang-Quan"},"content":"### `bye` - Exits Duke program","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"Kang-Quan"},"content":"Exits Duke program. ","lastModifiedDate":"2022-09-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"Kang-Quan"},"content":"Format: `bye`","lastModifiedDate":"2022-09-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"Kang-Quan"},"content":"## Command Summary","lastModifiedDate":"2022-09-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":122,"author":{"gitId":"Kang-Quan"},"content":"| Action      | Format, Examples |","lastModifiedDate":"2022-09-18"},{"lineNumber":123,"author":{"gitId":"Kang-Quan"},"content":"| ----------- | ----------- |","lastModifiedDate":"2022-09-18"},{"lineNumber":124,"author":{"gitId":"Kang-Quan"},"content":"| help      | `help` |","lastModifiedDate":"2022-09-18"},{"lineNumber":125,"author":{"gitId":"Kang-Quan"},"content":"| todo   | `todo \u003cdescription\u003e` eg. `todo run 2.4km` |","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"Kang-Quan"},"content":"| deadline      | `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HH:MM\u003e` eg. `deadline submit homework /by 2022-08-10 20:00` |","lastModifiedDate":"2022-09-18"},{"lineNumber":127,"author":{"gitId":"Kang-Quan"},"content":"| event   | `event \u003cdescription\u003e /at \u003cyyyy-mm-dd HH:MM\u003e` eg. `event watch math lecture /at 2022-08-10 10:00` |","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"Kang-Quan"},"content":"| list      | `list` |","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"Kang-Quan"},"content":"| mark   | `mark \u003cindex\u003e` eg. `mark 1` |","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"Kang-Quan"},"content":"| unmark      | `unmark \u003cindex\u003e` eg. `unmark 1` |","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"Kang-Quan"},"content":"| delete | `delete \u003cindex\u003e` eg. `delete 1` |","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"Kang-Quan"},"content":"| find      | `find \u003ckeyword\u003e` eg. `find homework` |","lastModifiedDate":"2022-09-18"},{"lineNumber":133,"author":{"gitId":"Kang-Quan"},"content":"| bye | `bye`        |","lastModifiedDate":"2022-09-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":136,"author":{"gitId":"Kang-Quan"},"content":"## Product Screenshot","lastModifiedDate":"2022-09-18"},{"lineNumber":137,"author":{"gitId":"Kang-Quan"},"content":"![Ui](Ui.png)","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Kang-Quan":118,"-":19}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    private Label dialog;","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"        final Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"    private void flip() {","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"     * Gets a dialog box object for Duke","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"     * @param text response from Duke to user.","lastModifiedDate":"2022-09-13"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"     * @param img image for Duke","lastModifiedDate":"2022-09-13"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"     * @return new dialog box object for Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"     * Gets a dialog box object for user","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"     * @param text input from user to Duke.","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"     * @param img image for user.","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"     * @return new dialog box object for user.","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-09-07"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"        db.flip();","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"        return db;","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":80}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Parser;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":" * Contains the logic for the Duke program","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"public class Duke  {","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new duke object that load previous saved task from","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     * SavedTask.txt","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    public Duke() {","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"        storage \u003d new Storage(\"SavedTask.txt\");","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"     * Gets a response from a given input","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"     * @param input input given by user","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"     * @return String response","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"        assert input !\u003d null : \"user input cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"        if (!isExit) {","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"            try {","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"                String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"                if (isExit) {","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"                    Platform.exit();","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"                    return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"                }","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"                return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"                String output \u003d ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"                return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"        return \"\";","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":62}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"public class Launcher {","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"     * Launches the application","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"public class Main extends Application {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"            stage.setTitle(\"CaffeineBot\");","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetings();","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"            stage.show();","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    private TextField userInput;","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"    private Button sendButton;","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    private Duke duke;","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/snooze.png\"));","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/coffee.png\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-07"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"        duke \u003d d;","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"    @FXML","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"        );","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"        userInput.clear();","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"    public void greetings() {","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"                DialogBox.getDukeDialog(\"Hello user, I am CaffeineBot!!! Type help for a quick guide\\n\", dukeImage)","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"        );","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":59}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for bye keyword to end duke","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new ByeCommand","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    public ByeCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"        super(\"bye\");","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the bye command to end duke and stop gui","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains bye message to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"        return ui.bye();","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     * Returns true if bye command is executed to","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     * end the program","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns true if byeCommand is executed","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"        return true;","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":41}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":" * Represents all different types of command","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"public abstract class Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    private String input;","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new command","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    public Command(String input) {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"        assert input !\u003d null : \"input for command cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * Returns input of the command","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String input of the command","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"    public String getInput() {","lastModifiedDate":"2022-08-28"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"        return input;","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the command","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains message to be printed by gui","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"     * Returns true if bye command is executed to","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"     * end the program","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns true if bye command is executed","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"        return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for delete keyword which removes a task","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" * at a specified index","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    private int index;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new delete command","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"        super(\"delete\");","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the delete command which removes a task","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * at a specified index","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains message to be printed by gui","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"            String message \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.delete(tasks.numOfTasks(), message);","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"            storage.update(tasks.getTasks());","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"    ","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for find keyword","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" * which will find a task based on the","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" * string input given by the user","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    private String keyword;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new find command","lastModifiedDate":"2022-09-13"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"        super(\"find\");","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the find command which find a task","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * based on the input String given","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String of all tasks to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"        String listOfTasks \u003d tasks.find(keyword);","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"        return ui.find(listOfTasks);","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":36}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for help keyword to tell user","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" * what commands are available","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new HelpCommand","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    public HelpCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"        super(\"help\");","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the help command to tell user","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * what commands are available","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains all commands to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"        return ui.help();","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"Kang-Quan":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for list keyword for enumerating task list","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new list command","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    public ListCommand() {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"        super(\"list\");","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the list command for enumerating task list","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains all tasks in the task list to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"        String listOfTasks \u003d tasks.listTask();","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"        return ui.list(listOfTasks);","lastModifiedDate":"2022-09-07"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for mark keyword that will","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":" * mark a task as completed at a specified index","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    private int index;","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new mark command","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"        super(\"mark\");","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the mark command will","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     * mark a task as completed at a specified index","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains task that is marked to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"            String message \u003d tasks.mark(index - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.mark(message);","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"            storage.update(tasks.getTasks());","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"    ","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":46}},{"path":"src/main/java/duke/command/TimeTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for TimeTask keyword which will","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":" * create a new task that has time element such as","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":" * an Event or a Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"public class TimeTaskCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new TimeTask command","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    private final String keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    public TimeTaskCommand(String input, String keyword, LocalDateTime time) {","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"        super(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        assert keyword !\u003d null : \"keyword for a TimeTask cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"        assert time !\u003d null : \"time for a TimeTask cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the TimeTask command which will","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * create a new task that has time element in it such as","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     * an Event or a Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns a String format that contains a new TimeTask object created to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"            Task newTask;","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"            if (keyword.equals(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"                newTask \u003d new Event(super.getInput(), time);","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"            } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"                newTask \u003d new Deadline(super.getInput(), time);","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"            String message \u003d tasks.addTask(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.add(tasks.numOfTasks(), message);","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"            storage.save(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"            return ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":59}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for Todo keyword which creates","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":" * a Todo task","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new Todo command","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"        super(input);","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the Todo command which creates","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * a Todo task","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns a String format of the Todo object created to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"            //create new task here","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"            Task newTask \u003d new Todo(super.getInput());","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"            String message \u003d tasks.addTask(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.add(tasks.numOfTasks(), message);","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"            storage.save(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"            return ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":46}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.command;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Storage;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.utility.Ui;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" * Represents command for Unmark keyword that will","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" * unmark a task to not completed at a specified index","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    private int index;","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new Unmark command","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"        super(\"unmark\");","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * Executes the Unmark command that will","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * unmark a task to not completed at a specified index","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks The list containing all the tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"     * @param ui User interface for printing the message","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"     * @param storage To write and read from a text file","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String that contains task that is deleted to be printed by gui","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-07"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"            String message \u003d tasks.unmark(index - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.unmark(message);","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"            storage.update(tasks.getTasks());","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"            String output \u003d ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"            return output;","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.exception;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":" * Represents exceptions for Duke program","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates new DukeException","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"        super(errorMessage);","lastModifiedDate":"2022-08-18"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Kang-Quan":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.task;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":" * Represents a deadline task it is a task that has","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":" * deadline","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"public class Deadline extends TimeTask {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"    private final static String ICON \u003d \"D\";","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new deadline task","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    public Deadline(String description, LocalDateTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"        super(description, ICON, time);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format of a Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format of a Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"[D]\" + \"[%s] \" + super.toString()","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"                + \" (by: \" + super.getDate() + \")\", super.getStatusIcon());","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format of a Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     * that is used for saving into a file","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format of a Deadline task","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     * used for saving into a file","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"[D]\" + \"[%s] \" + super.toString()","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"                + \" (by: \" + super.getDateSave() + \")\", super.getStatusIcon());","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Kang-Quan":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.task;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":" * Represents an Event task it is a task that shows","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":" * when the event starts","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"public class Event extends TimeTask {","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"    private final static String ICON \u003d \"E\";","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new Event task","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    public Event(String description, LocalDateTime time) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"        super(description, ICON, time);","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format of an Event task","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format of an Event task","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"[E]\" + \"[%s] \" + super.toString()","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"                + \" (at: \" + super.getDate() + \")\", super.getStatusIcon());","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format of an event task","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     * when saving into a file","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format of an event task","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     * when saving into a file","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"[E]\" + \"[%s] \" + super.toString()","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"                + \" (at: \" + super.getDateSave() + \")\", super.getStatusIcon());","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Kang-Quan":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.task;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":" * Represents a task","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"public class Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"    protected String description;","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"    protected String icon;","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new task","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"    public Task(String description, String icon) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the status icon for the task","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format for the status icon for the task","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the description for the task","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     * @return description for the task","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-18"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"     * Sets task to done","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    public void mark() {","lastModifiedDate":"2022-08-18"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-18"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"     * Sets task to not done","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"    public void unmark() {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-18"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"     * Returns a boolean whether two task are equal","lastModifiedDate":"2022-09-13"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns true if tasks are equal","lastModifiedDate":"2022-09-13"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"     * else returns False","lastModifiedDate":"2022-09-13"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-08-18"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"        // If the object is compared with itself then return true","lastModifiedDate":"2022-08-18"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-08-18"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"            return true;","lastModifiedDate":"2022-08-18"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"            Task c \u003d (Task) o;","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"            return c.getIcon().equals(icon) \u0026\u0026 c.getDescription().equals(description);","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"            return false;","lastModifiedDate":"2022-08-18"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format of a task","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format of a task","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"        return this.description;","lastModifiedDate":"2022-08-18"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"     * Returns icon of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"     * @return String format of the icon of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"    public String getIcon() {","lastModifiedDate":"2022-08-18"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"        return this.icon;","lastModifiedDate":"2022-08-18"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format for saving into a file","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"     * @return String format for saving into a file","lastModifiedDate":"2022-08-30"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"        return this.description;","lastModifiedDate":"2022-08-25"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Kang-Quan":100}},{"path":"src/main/java/duke/task/TimeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.task;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":" * Represents a TimeTask which is a task that has an","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":" * element of time","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"public class TimeTask extends Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    public LocalDateTime date;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new TimeTask","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    public TimeTask(String description, String icon, LocalDateTime date) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"        super(description, icon);","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"        assert date !\u003d null : \"date for a TimeTask cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     * Converts String format of the date from the","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * LocalDateTime class","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     * @return String format of date","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    public String getDate() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     * Converts String format of the date from the","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * LocalDateTime class for saving","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     * @return String format of date for saving","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"    public String getDateSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"     * Returns LocalTimeDate object of a TimeTask instance","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"     * @return LocalTimeDate object of a TimeTask instance","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"    public LocalDateTime getLocalTimeDate() {","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"        return date;","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"     * Returns a boolean whether two task are equal","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns true if tasks are equal","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"     * else returns False","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"        // If the object is compared with itself then return true","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"            return true;","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"        if (o instanceof TimeTask) {","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"            TimeTask c \u003d (TimeTask) o;","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"            return c.getIcon().equals(icon) \u0026\u0026 c.getDescription().equals(description)","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"                    \u0026\u0026 c.getLocalTimeDate().isEqual(date);","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"            return false;","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"Kang-Quan":72}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.task;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":" * Represents a Todo Task","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"    protected String by;","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"    private final static String ICON \u003d \"T\";","lastModifiedDate":"2022-08-18"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new Todo task","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-18"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"        super(description, ICON);","lastModifiedDate":"2022-08-18"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format of a Todo task","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns String format of a Todo task","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    @Override","lastModifiedDate":"2022-08-18"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    public String toString() {","lastModifiedDate":"2022-08-18"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"[T]\" + \"[%s] \" + super.toString(), super.getStatusIcon());","lastModifiedDate":"2022-08-18"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the string format for saving into a file","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     * @return String format for saving into a file","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"    public String toSave() {","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"[T]\" + \"[%s] \" + super.toString(), super.getStatusIcon());","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Kang-Quan":37}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.tasklist;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":" * Represents a lists of Tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"public class TaskList {","lastModifiedDate":"2022-08-28"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    private static final String DUPLICATE_MESSAGE \u003d \"This task is a duplicate\";","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new TaskList with empty list","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new TaskList with given","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     * List of tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"        assert tasks !\u003d null : \"tasks given cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the list of tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"     * @return the list of tasks of this TaskList object","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"        return this.tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the list of tasks in string format","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"     * @return the list of tasks of this TaskList object","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"     * in String format","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"    public String listTask() {","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"            output +\u003d String.format(\"%d.%s\\n\", i + 1, currTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-08-28"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"     * Returns the number of task in the TaskList","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"     * @return the number of task in the TaskList","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"    public int numOfTasks() {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"        return tasks.size();","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"     * Adds task to list tasks and return a String representation","lastModifiedDate":"2022-08-30"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"     * of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"     * @param task the task that we want to add to the list","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"     * @return string output of what task is added to the list","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"    public String addTask(Task task) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"        assert task !\u003d null : \"task to add to task list cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"        //check for duplicates","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"            if (task.equals(tasks.get(i))) {","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(DUPLICATE_MESSAGE);","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"        tasks.add(task);","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d String.format(\"%s\\n\", task);","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"     * Deletes task from list tasks and return a String representation","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"     * of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"     * @param index position of task in which we want to remove","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"     * @return string output of what task is deleted from the list","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException  If tasks.size() \u003d\u003d 0.","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-08-28"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(\"Tasklist is empty\");","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"        assert index \u003e\u003d0 \u0026\u0026 index \u003c tasks.size(): \"index of element to be removed must be non-negative \" +","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"                \"and smaller than size of list\";","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"delete\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":103,"author":{"gitId":"Kang-Quan"},"content":"        Task currTask \u003d tasks.remove(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d String.format(\"%s\\n\", currTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":105,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":109,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":110,"author":{"gitId":"Kang-Quan"},"content":"     * Marks task from list tasks and return a String representation","lastModifiedDate":"2022-08-30"},{"lineNumber":111,"author":{"gitId":"Kang-Quan"},"content":"     * of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":112,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":113,"author":{"gitId":"Kang-Quan"},"content":"     * @param index position of task in which we want to mark","lastModifiedDate":"2022-08-30"},{"lineNumber":114,"author":{"gitId":"Kang-Quan"},"content":"     * @return string output of what task is marked in the list","lastModifiedDate":"2022-08-30"},{"lineNumber":115,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException  If index \u003c 0 || index \u003e\u003d tasks.size().","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":117,"author":{"gitId":"Kang-Quan"},"content":"    public String mark(int index) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"Kang-Quan"},"content":"        assert index \u003e\u003d0 \u0026\u0026 index \u003c tasks.size(): \"index of element to be marked must be non-negative \" +","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"Kang-Quan"},"content":"                \"and smaller than size of list\";","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"Kang-Quan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"mark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"Kang-Quan"},"content":"        Task currTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"Kang-Quan"},"content":"        currTask.mark();","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"Kang-Quan"},"content":"        String message \u003d String.format(\"%s\\n\", currTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":126,"author":{"gitId":"Kang-Quan"},"content":"        return message;","lastModifiedDate":"2022-08-28"},{"lineNumber":127,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"Kang-Quan"},"content":"     * Unmarks task from list tasks and return a String representation","lastModifiedDate":"2022-08-30"},{"lineNumber":131,"author":{"gitId":"Kang-Quan"},"content":"     * of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":132,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":133,"author":{"gitId":"Kang-Quan"},"content":"     * @param index position of task in which we want to unmark","lastModifiedDate":"2022-08-30"},{"lineNumber":134,"author":{"gitId":"Kang-Quan"},"content":"     * @return string output of what task is unmarked in the list","lastModifiedDate":"2022-08-30"},{"lineNumber":135,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException  If index \u003c 0 || index \u003e\u003d tasks.size().","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":137,"author":{"gitId":"Kang-Quan"},"content":"    public String unmark(int index) throws DukeException {","lastModifiedDate":"2022-09-13"},{"lineNumber":138,"author":{"gitId":"Kang-Quan"},"content":"        assert index \u003e\u003d0 \u0026\u0026 index \u003c tasks.size(): \"index of element to be unmarked must be non-negative \" +","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"Kang-Quan"},"content":"                \"and smaller than size of list\";","lastModifiedDate":"2022-09-13"},{"lineNumber":140,"author":{"gitId":"Kang-Quan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-09-13"},{"lineNumber":141,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"unmark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":142,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":143,"author":{"gitId":"Kang-Quan"},"content":"        Task currTask \u003d tasks.get(index);","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"Kang-Quan"},"content":"        currTask.unmark();","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"Kang-Quan"},"content":"        String message \u003d String.format(\"%s\\n\", currTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"Kang-Quan"},"content":"        return message;","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":149,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-31"},{"lineNumber":150,"author":{"gitId":"Kang-Quan"},"content":"     * Finds all task in the list that match with the keyword","lastModifiedDate":"2022-08-31"},{"lineNumber":151,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-31"},{"lineNumber":152,"author":{"gitId":"Kang-Quan"},"content":"     * @param keyword keyword input by user","lastModifiedDate":"2022-08-31"},{"lineNumber":153,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation of all the tasks that","lastModifiedDate":"2022-08-31"},{"lineNumber":154,"author":{"gitId":"Kang-Quan"},"content":"     * contain they keyword","lastModifiedDate":"2022-08-31"},{"lineNumber":155,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-31"},{"lineNumber":156,"author":{"gitId":"Kang-Quan"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-08-31"},{"lineNumber":157,"author":{"gitId":"Kang-Quan"},"content":"        assert keyword !\u003d null: \"keyword used for searching cannot be null\";","lastModifiedDate":"2022-09-13"},{"lineNumber":158,"author":{"gitId":"Kang-Quan"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-08-31"},{"lineNumber":159,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-08-31"},{"lineNumber":160,"author":{"gitId":"Kang-Quan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-31"},{"lineNumber":161,"author":{"gitId":"Kang-Quan"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2022-08-31"},{"lineNumber":162,"author":{"gitId":"Kang-Quan"},"content":"            if (currTask.getDescription().contains(keyword)) {","lastModifiedDate":"2022-08-31"},{"lineNumber":163,"author":{"gitId":"Kang-Quan"},"content":"                output +\u003d String.format(\"%d.%s\\n\", index, currTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":164,"author":{"gitId":"Kang-Quan"},"content":"                index++;","lastModifiedDate":"2022-08-31"},{"lineNumber":165,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":166,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":167,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-08-31"},{"lineNumber":168,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":169,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":170,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":171,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":172,"author":{"gitId":"Kang-Quan"},"content":"     * Returns a String representation of error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":173,"author":{"gitId":"Kang-Quan"},"content":"     * for different message given in the input.","lastModifiedDate":"2022-09-18"},{"lineNumber":174,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":175,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation of keywords such as mark, unmark and delete","lastModifiedDate":"2022-09-18"},{"lineNumber":176,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":177,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":178,"author":{"gitId":"Kang-Quan"},"content":"    public static String invalidAction(String message) {","lastModifiedDate":"2022-09-15"},{"lineNumber":179,"author":{"gitId":"Kang-Quan"},"content":"        if (message.equals(\"\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":180,"author":{"gitId":"Kang-Quan"},"content":"            return \"Invalid command, I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-09-15"},{"lineNumber":181,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":182,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"It must be in the format of: %s \u003cposition in list\u003e\", message);","lastModifiedDate":"2022-09-15"},{"lineNumber":183,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":184,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":184}},{"path":"src/main/java/duke/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.utility;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":" * Represents parser for duke","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"public class Parser {","lastModifiedDate":"2022-08-28"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"     * Parses the string command and returns the","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"     * correct command for it","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"     * @param fullCommand full command given by user","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"     * @return the correct Command for the given keyword","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException  If fullCommand is empty or invalid full command","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"        if (fullCommand \u003d\u003d null || fullCommand.equals(\"\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"        String[] split \u003d  fullCommand.split(\" \", 2);","lastModifiedDate":"2022-08-28"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        String keyword \u003d checkEmptyString(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"            return parseBye(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"        case \"list\":","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"            return parseList(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"            return parseMark(split, fullCommand);","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"            return parseUnmark(split, fullCommand);","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"            return parseDelete(split, fullCommand);","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"            return parseTodo(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"            return parseDeadline(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"        case \"event\":","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"            return parseEvent(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"        case \"find\":","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"            return parseFind(split);","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"        case \"help\":","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"            return parseHelp(split);","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"        default:","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"     * Returns a String representation of error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"     * for empty descriptions.","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation of command that its description is empty","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"    public static String emptyMessage(String message) {","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"        if (message.equals(\"\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"            return \"The description cannot be empty\";","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"The description of %s cannot be empty\", message);","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"     * Returns a String representation of error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"     * that is an invalid command.","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation of command that is given by user and has invalid format","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"    public static String invalidAction(String message) {","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"        if (message.equals(\"\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"            return \"Invalid command, I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"It must be in the format of: %s \u003cposition in list\u003e\", message);","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"     * Returns a String representation of error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"     * that is an invalid command for tasks that has time element.","lastModifiedDate":"2022-09-18"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation of a command with time element","lastModifiedDate":"2022-09-18"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"     * that is given by user and has invalid format","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"     * @param type String format of whether it is at or by","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation error message to be thrown for DukeException","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"    public static String invalidTaskAction(String message, String type) {","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"        return String.format(\"It must be in the format of: %s \u003cdescription\u003e /%s \u003cyyyy-mm-dd HH:MM\u003e\", message, type);","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"     * Checks for empty command and return the keyword of the full command.","lastModifiedDate":"2022-09-18"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns the keyword of the full command.","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split[0] is empty string.","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"Kang-Quan"},"content":"    public static String checkEmptyString(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"Kang-Quan"},"content":"        String keyword \u003d split[0];","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"Kang-Quan"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"Kang-Quan"},"content":"        return keyword;","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":110,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":111,"author":{"gitId":"Kang-Quan"},"content":"     * Return a ByeCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":112,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":113,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns ByeCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":115,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003e 1.","lastModifiedDate":"2022-09-18"},{"lineNumber":116,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":117,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseBye(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":119,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":121,"author":{"gitId":"Kang-Quan"},"content":"        return new ByeCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":125,"author":{"gitId":"Kang-Quan"},"content":"     * Return a HelpCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":127,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns HelpCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003e 1.","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseHelp(String[] split) throws DukeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"Kang-Quan"},"content":"        return new HelpCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":139,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":140,"author":{"gitId":"Kang-Quan"},"content":"     * Return a ListCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":141,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":142,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":143,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns ListCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":144,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003e 1.","lastModifiedDate":"2022-09-18"},{"lineNumber":145,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":146,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseList(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":147,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":148,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":149,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":150,"author":{"gitId":"Kang-Quan"},"content":"        return new ListCommand();","lastModifiedDate":"2022-08-28"},{"lineNumber":151,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":152,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":153,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":154,"author":{"gitId":"Kang-Quan"},"content":"     * Return a MarkCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":155,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":156,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":157,"author":{"gitId":"Kang-Quan"},"content":"     * @param fullCommand full command input by user","lastModifiedDate":"2022-09-18"},{"lineNumber":158,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns MarkCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":159,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1. If fullCommand has more than 1 word and 1 index","lastModifiedDate":"2022-09-18"},{"lineNumber":160,"author":{"gitId":"Kang-Quan"},"content":"     * or index is not a number","lastModifiedDate":"2022-09-18"},{"lineNumber":161,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":162,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseMark(String[] split, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":163,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":164,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"mark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":165,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":166,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":167,"author":{"gitId":"Kang-Quan"},"content":"        split \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-08-28"},{"lineNumber":168,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003e 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":169,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"mark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":170,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":171,"author":{"gitId":"Kang-Quan"},"content":"            boolean isNumeric \u003d split[1].chars().allMatch(Character::isDigit);","lastModifiedDate":"2022-08-28"},{"lineNumber":172,"author":{"gitId":"Kang-Quan"},"content":"            if (!isNumeric) {","lastModifiedDate":"2022-08-28"},{"lineNumber":173,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidAction(\"mark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":174,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":175,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":176,"author":{"gitId":"Kang-Quan"},"content":"        return new MarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2022-08-28"},{"lineNumber":177,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":178,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":179,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":180,"author":{"gitId":"Kang-Quan"},"content":"     * Return a UnmarkCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":181,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":182,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":183,"author":{"gitId":"Kang-Quan"},"content":"     * @param fullCommand full command input by user","lastModifiedDate":"2022-09-18"},{"lineNumber":184,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns UnmarkCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":185,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1. If fullCommand has more than 1 word and 1 index","lastModifiedDate":"2022-09-18"},{"lineNumber":186,"author":{"gitId":"Kang-Quan"},"content":"     * or index is not a number","lastModifiedDate":"2022-09-18"},{"lineNumber":187,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":188,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseUnmark(String[] split, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":189,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":190,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"unmark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":191,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":192,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":193,"author":{"gitId":"Kang-Quan"},"content":"        split \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-08-28"},{"lineNumber":194,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003e 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":195,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"unmark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":196,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":197,"author":{"gitId":"Kang-Quan"},"content":"            boolean isNumeric \u003d split[1].chars().allMatch(Character::isDigit);","lastModifiedDate":"2022-08-28"},{"lineNumber":198,"author":{"gitId":"Kang-Quan"},"content":"            if (!isNumeric) {","lastModifiedDate":"2022-08-28"},{"lineNumber":199,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidAction(\"unmark\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":200,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":201,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":202,"author":{"gitId":"Kang-Quan"},"content":"        return new UnmarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2022-08-28"},{"lineNumber":203,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":204,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":205,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":206,"author":{"gitId":"Kang-Quan"},"content":"     * Return a DeleteCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":207,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":208,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":209,"author":{"gitId":"Kang-Quan"},"content":"     * @param fullCommand full command input by user","lastModifiedDate":"2022-09-18"},{"lineNumber":210,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns DeleteCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":211,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1. If fullCommand has more than 1 word and 1 index","lastModifiedDate":"2022-09-18"},{"lineNumber":212,"author":{"gitId":"Kang-Quan"},"content":"     * or index is not a number","lastModifiedDate":"2022-09-18"},{"lineNumber":213,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":214,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseDelete(String[] split, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":215,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":216,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"delete\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":217,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":218,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":219,"author":{"gitId":"Kang-Quan"},"content":"        split \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-08-28"},{"lineNumber":220,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003e 2) {","lastModifiedDate":"2022-08-28"},{"lineNumber":221,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidAction(\"delete\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":222,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":223,"author":{"gitId":"Kang-Quan"},"content":"            boolean isNumeric \u003d split[1].chars().allMatch(Character::isDigit);","lastModifiedDate":"2022-08-28"},{"lineNumber":224,"author":{"gitId":"Kang-Quan"},"content":"            if (!isNumeric) {","lastModifiedDate":"2022-08-28"},{"lineNumber":225,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidAction(\"delete\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":226,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":227,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":228,"author":{"gitId":"Kang-Quan"},"content":"        return new DeleteCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2022-08-28"},{"lineNumber":229,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":230,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":231,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":232,"author":{"gitId":"Kang-Quan"},"content":"     * Return a TodoCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":233,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":234,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":235,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns TodoCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":236,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1. If split[1].isBlank() \u003d\u003d true.","lastModifiedDate":"2022-09-18"},{"lineNumber":237,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":238,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseTodo(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":239,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":240,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"todo\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":241,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":242,"author":{"gitId":"Kang-Quan"},"content":"        if (split[1].isBlank()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":243,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"todo\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":244,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":245,"author":{"gitId":"Kang-Quan"},"content":"        return new TodoCommand(split[1]);","lastModifiedDate":"2022-08-28"},{"lineNumber":246,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":247,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":248,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":249,"author":{"gitId":"Kang-Quan"},"content":"     * Return a TimeTaskCommand with deadline keyword","lastModifiedDate":"2022-09-18"},{"lineNumber":250,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":251,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":252,"author":{"gitId":"Kang-Quan"},"content":"     * @return Return a TimeTaskCommand with deadline keyword","lastModifiedDate":"2022-09-18"},{"lineNumber":253,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1. Or","lastModifiedDate":"2022-09-18"},{"lineNumber":254,"author":{"gitId":"Kang-Quan"},"content":"     * If format of user input is not deadline \u003cdescription\u003e /by yyyy-MM-dd HH:mm","lastModifiedDate":"2022-09-18"},{"lineNumber":255,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":256,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseDeadline(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":257,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":258,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"deadline\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":259,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":260,"author":{"gitId":"Kang-Quan"},"content":"        String input \u003d split[1];","lastModifiedDate":"2022-08-28"},{"lineNumber":261,"author":{"gitId":"Kang-Quan"},"content":"        int index \u003d input.lastIndexOf(\"/by\");","lastModifiedDate":"2022-08-28"},{"lineNumber":262,"author":{"gitId":"Kang-Quan"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":263,"author":{"gitId":"Kang-Quan"},"content":"            String by \u003d input.substring(index + 4);","lastModifiedDate":"2022-09-16"},{"lineNumber":264,"author":{"gitId":"Kang-Quan"},"content":"            if (index - 1 \u003c\u003d 0) {","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidTaskAction(\"deadline\", \"by\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":266,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":267,"author":{"gitId":"Kang-Quan"},"content":"            if (input.charAt(index - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2022-09-16"},{"lineNumber":268,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidTaskAction(\"deadline\", \"by\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":269,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":270,"author":{"gitId":"Kang-Quan"},"content":"            String check \u003d input.substring(0, index);","lastModifiedDate":"2022-09-16"},{"lineNumber":271,"author":{"gitId":"Kang-Quan"},"content":"            if (check.isBlank()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":272,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(emptyMessage(\"deadline\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":273,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":274,"author":{"gitId":"Kang-Quan"},"content":"            input \u003d input.substring(0, index - 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":275,"author":{"gitId":"Kang-Quan"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":276,"author":{"gitId":"Kang-Quan"},"content":"            boolean validTime \u003d isValid(by, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":277,"author":{"gitId":"Kang-Quan"},"content":"            if (!validTime) {","lastModifiedDate":"2022-08-28"},{"lineNumber":278,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidTaskAction(\"deadline\", \"by\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":279,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":280,"author":{"gitId":"Kang-Quan"},"content":"            return new TimeTaskCommand(input, \"deadline\", LocalDateTime.parse(by, formatter));","lastModifiedDate":"2022-08-28"},{"lineNumber":281,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":282,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidTaskAction(\"deadline\", \"by\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":283,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":284,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":285,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":286,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":287,"author":{"gitId":"Kang-Quan"},"content":"     * Return a TimeTaskCommand with event keyword","lastModifiedDate":"2022-09-18"},{"lineNumber":288,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":289,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":290,"author":{"gitId":"Kang-Quan"},"content":"     * @return Return a TimeTaskCommand with event keyword","lastModifiedDate":"2022-09-18"},{"lineNumber":291,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1. Or","lastModifiedDate":"2022-09-18"},{"lineNumber":292,"author":{"gitId":"Kang-Quan"},"content":"     * If format of user input is not event \u003cdescription\u003e /at yyyy-MM-dd HH:mm","lastModifiedDate":"2022-09-18"},{"lineNumber":293,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":294,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseEvent(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":295,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":296,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"event\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":297,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":298,"author":{"gitId":"Kang-Quan"},"content":"        String input \u003d split[1];","lastModifiedDate":"2022-09-15"},{"lineNumber":299,"author":{"gitId":"Kang-Quan"},"content":"        int index \u003d input.lastIndexOf(\"/at\");","lastModifiedDate":"2022-09-15"},{"lineNumber":300,"author":{"gitId":"Kang-Quan"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2022-08-28"},{"lineNumber":301,"author":{"gitId":"Kang-Quan"},"content":"            String at \u003d input.substring(index + 4);","lastModifiedDate":"2022-09-16"},{"lineNumber":302,"author":{"gitId":"Kang-Quan"},"content":"            if (index - 1 \u003c\u003d 0) {","lastModifiedDate":"2022-09-16"},{"lineNumber":303,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidTaskAction(\"event\", \"at\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":304,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":305,"author":{"gitId":"Kang-Quan"},"content":"            if (input.charAt(index - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2022-09-16"},{"lineNumber":306,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidTaskAction(\"event\", \"at\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":307,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":308,"author":{"gitId":"Kang-Quan"},"content":"            String check \u003d input.substring(0, index);","lastModifiedDate":"2022-09-16"},{"lineNumber":309,"author":{"gitId":"Kang-Quan"},"content":"            if (check.isBlank()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":310,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(emptyMessage(\"event\"));","lastModifiedDate":"2022-09-16"},{"lineNumber":311,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":312,"author":{"gitId":"Kang-Quan"},"content":"            input \u003d input.substring(0, index - 1);","lastModifiedDate":"2022-09-16"},{"lineNumber":313,"author":{"gitId":"Kang-Quan"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":314,"author":{"gitId":"Kang-Quan"},"content":"            boolean validTime \u003d isValid(at, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":315,"author":{"gitId":"Kang-Quan"},"content":"            if (!validTime) {","lastModifiedDate":"2022-08-28"},{"lineNumber":316,"author":{"gitId":"Kang-Quan"},"content":"                throw new DukeException(invalidTaskAction(\"event\", \"at\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":317,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":318,"author":{"gitId":"Kang-Quan"},"content":"            return new TimeTaskCommand(input, \"event\", LocalDateTime.parse(at, formatter));","lastModifiedDate":"2022-08-28"},{"lineNumber":319,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":320,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(invalidTaskAction(\"event\", \"at\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":321,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":322,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":323,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":324,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":325,"author":{"gitId":"Kang-Quan"},"content":"     * Return a FindCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":326,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-18"},{"lineNumber":327,"author":{"gitId":"Kang-Quan"},"content":"     * @param split fullCommand given by user that is split by spaces","lastModifiedDate":"2022-09-18"},{"lineNumber":328,"author":{"gitId":"Kang-Quan"},"content":"     * @return Returns FindCommand","lastModifiedDate":"2022-09-18"},{"lineNumber":329,"author":{"gitId":"Kang-Quan"},"content":"     * @throws DukeException If split.length \u003d\u003d 1.","lastModifiedDate":"2022-09-18"},{"lineNumber":330,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":331,"author":{"gitId":"Kang-Quan"},"content":"    public static Command parseFind(String[] split) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":332,"author":{"gitId":"Kang-Quan"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2022-08-31"},{"lineNumber":333,"author":{"gitId":"Kang-Quan"},"content":"            throw new DukeException(emptyMessage(\"find\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":334,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":335,"author":{"gitId":"Kang-Quan"},"content":"        return new FindCommand(split[1]);","lastModifiedDate":"2022-08-31"},{"lineNumber":336,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":337,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":338,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":339,"author":{"gitId":"Kang-Quan"},"content":"     * Checks if the string representation of time is","lastModifiedDate":"2022-08-30"},{"lineNumber":340,"author":{"gitId":"Kang-Quan"},"content":"     * in the correct format","lastModifiedDate":"2022-08-30"},{"lineNumber":341,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":342,"author":{"gitId":"Kang-Quan"},"content":"     * @param str Time we want to check","lastModifiedDate":"2022-08-30"},{"lineNumber":343,"author":{"gitId":"Kang-Quan"},"content":"     * @param formatter format we require","lastModifiedDate":"2022-08-30"},{"lineNumber":344,"author":{"gitId":"Kang-Quan"},"content":"     * @return boolean where the string is valid","lastModifiedDate":"2022-08-30"},{"lineNumber":345,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":346,"author":{"gitId":"Kang-Quan"},"content":"    public static boolean isValid(String str, DateTimeFormatter formatter) {","lastModifiedDate":"2022-08-28"},{"lineNumber":347,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":348,"author":{"gitId":"Kang-Quan"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(str, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":349,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":350,"author":{"gitId":"Kang-Quan"},"content":"            return false;","lastModifiedDate":"2022-08-28"},{"lineNumber":351,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":352,"author":{"gitId":"Kang-Quan"},"content":"        return true;","lastModifiedDate":"2022-08-28"},{"lineNumber":353,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":354,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":355,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":355}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.utility;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.io.File;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import java.util.List;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-13"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":" * Represents class for storing","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":" * and reading to and from txt file","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"public class Storage {","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"    private final String filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new Storage object","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"    private void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"        fw.close();","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"    private void emptyFile(String filePath) throws IOException {","lastModifiedDate":"2022-08-28"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        new FileWriter(filePath, false).close();","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"     * Adds task to text file to be saved","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"     * @param task tasks we want to add to text file to be saved","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"    public void save(Task task) {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"            appendToFile(this.filePath, task.toSave() + System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"     * updates and add all task to text file","lastModifiedDate":"2022-08-30"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"     * @param taskList the list we add into the text file","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"    public void update(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-08-28"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"            emptyFile(this.filePath);","lastModifiedDate":"2022-08-28"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-08-28"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"                appendToFile(this.filePath, taskList.get(i).toSave() + System.lineSeparator());","lastModifiedDate":"2022-08-28"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"     * Loads task from text file into List","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"     * @return List of tasks given in text file","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2022-08-28"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-08-28"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"            List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-09-18"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"            File myObj \u003d new File(filePath);","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"            if (!myObj.exists()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"                myObj.createNewFile();","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"                String input \u003d myReader.nextLine();","lastModifiedDate":"2022-08-28"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"                readSingleLine(input, tasksList);","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"            myReader.close();","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"            return tasksList;","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"        } ","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"        return new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"     * Adds a single task to the task list","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"     * @param input the String input of a single line in the text file","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasksList A list where we store all the Tasks by user or in the","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"     * text file.","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Kang-Quan"},"content":"    public void readSingleLine(String input, List\u003cTask\u003e tasksList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Kang-Quan"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-08-28"},{"lineNumber":104,"author":{"gitId":"Kang-Quan"},"content":"            return;","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":106,"author":{"gitId":"Kang-Quan"},"content":"        char keyword \u003d input.charAt(1);","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"Kang-Quan"},"content":"        switch (keyword) {","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"Kang-Quan"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-08-28"},{"lineNumber":109,"author":{"gitId":"Kang-Quan"},"content":"            loadEvent(input, tasksList);","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"Kang-Quan"},"content":"            break;","lastModifiedDate":"2022-09-15"},{"lineNumber":111,"author":{"gitId":"Kang-Quan"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-09-15"},{"lineNumber":112,"author":{"gitId":"Kang-Quan"},"content":"            loadTodo(input, tasksList);","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"Kang-Quan"},"content":"            break;","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"Kang-Quan"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-09-15"},{"lineNumber":115,"author":{"gitId":"Kang-Quan"},"content":"            loadDeadline(input, tasksList);","lastModifiedDate":"2022-09-15"},{"lineNumber":116,"author":{"gitId":"Kang-Quan"},"content":"            break;","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":119,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"Kang-Quan"},"content":"    public void loadEvent(String input, List\u003cTask\u003e tasksList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":121,"author":{"gitId":"Kang-Quan"},"content":"        char icon \u003d input.charAt(4);","lastModifiedDate":"2022-08-28"},{"lineNumber":122,"author":{"gitId":"Kang-Quan"},"content":"        String at \u003d input.substring(input.lastIndexOf(\": \") + 2, input.length() - 1);","lastModifiedDate":"2022-08-28"},{"lineNumber":123,"author":{"gitId":"Kang-Quan"},"content":"        String description \u003d input.substring(7, input.lastIndexOf(\": \") - 4);","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"Kang-Quan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-08-28"},{"lineNumber":125,"author":{"gitId":"Kang-Quan"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(at, formatter);","lastModifiedDate":"2022-08-28"},{"lineNumber":126,"author":{"gitId":"Kang-Quan"},"content":"        Task newTask \u003d new Event(description, date);","lastModifiedDate":"2022-09-15"},{"lineNumber":127,"author":{"gitId":"Kang-Quan"},"content":"        if (icon \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-28"},{"lineNumber":128,"author":{"gitId":"Kang-Quan"},"content":"            tasksList.add(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":129,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":130,"author":{"gitId":"Kang-Quan"},"content":"            newTask.mark();","lastModifiedDate":"2022-08-28"},{"lineNumber":131,"author":{"gitId":"Kang-Quan"},"content":"            tasksList.add(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":132,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":134,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":135,"author":{"gitId":"Kang-Quan"},"content":"    public void loadTodo(String input, List\u003cTask\u003e tasksList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":136,"author":{"gitId":"Kang-Quan"},"content":"        char icon \u003d input.charAt(4);","lastModifiedDate":"2022-09-15"},{"lineNumber":137,"author":{"gitId":"Kang-Quan"},"content":"        String description \u003d input.substring(7);","lastModifiedDate":"2022-09-15"},{"lineNumber":138,"author":{"gitId":"Kang-Quan"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2022-09-15"},{"lineNumber":139,"author":{"gitId":"Kang-Quan"},"content":"        if (icon \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"Kang-Quan"},"content":"            tasksList.add(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"Kang-Quan"},"content":"            newTask.mark();","lastModifiedDate":"2022-08-28"},{"lineNumber":143,"author":{"gitId":"Kang-Quan"},"content":"            tasksList.add(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":144,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":145,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":146,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":147,"author":{"gitId":"Kang-Quan"},"content":"    public void loadDeadline(String input, List\u003cTask\u003e tasksList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":148,"author":{"gitId":"Kang-Quan"},"content":"        char icon \u003d input.charAt(4);","lastModifiedDate":"2022-09-15"},{"lineNumber":149,"author":{"gitId":"Kang-Quan"},"content":"        String at \u003d input.substring(input.lastIndexOf(\": \") + 2, input.length() - 1);","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"Kang-Quan"},"content":"        String description \u003d input.substring(7, input.lastIndexOf(\": \") - 4);","lastModifiedDate":"2022-09-15"},{"lineNumber":151,"author":{"gitId":"Kang-Quan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-09-15"},{"lineNumber":152,"author":{"gitId":"Kang-Quan"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(at, formatter);","lastModifiedDate":"2022-09-15"},{"lineNumber":153,"author":{"gitId":"Kang-Quan"},"content":"        Task newTask \u003d new Deadline(description, date);","lastModifiedDate":"2022-09-15"},{"lineNumber":154,"author":{"gitId":"Kang-Quan"},"content":"        if (icon \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-08-28"},{"lineNumber":155,"author":{"gitId":"Kang-Quan"},"content":"            tasksList.add(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":156,"author":{"gitId":"Kang-Quan"},"content":"        } else {","lastModifiedDate":"2022-08-28"},{"lineNumber":157,"author":{"gitId":"Kang-Quan"},"content":"            newTask.mark();","lastModifiedDate":"2022-08-28"},{"lineNumber":158,"author":{"gitId":"Kang-Quan"},"content":"            tasksList.add(newTask);","lastModifiedDate":"2022-08-28"},{"lineNumber":159,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":160,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":161,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":161}},{"path":"src/main/java/duke/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package duke.utility;","lastModifiedDate":"2022-09-13"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-28"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"/**","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":" * Represents class for user interface","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":" */","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"public class Ui {","lastModifiedDate":"2022-08-28"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-08-28"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"     * Instantiates a new user interface","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    public Ui() {","lastModifiedDate":"2022-08-28"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the bye text in String format","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation of the bye text","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    public String bye() {","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"         return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"     * Represents list of tasks in String format that will be printed","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"     * to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks String representation of tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation of the lists of tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"    public String list(String tasks) {","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d tasks;","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the text for adding tasks in String format that will be printed","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"     * to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation on the task added","lastModifiedDate":"2022-08-30"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"     * @param numOfTasks number of tasks in the TaskList","lastModifiedDate":"2022-08-30"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation for the adding of tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"    public String add(int numOfTasks, String message) {","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d message;","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d String.format(\"Now you have %d tasks in the list.\\n\", numOfTasks);","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the item that is marked in String format that","lastModifiedDate":"2022-09-13"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"     * will be printed to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation of the item marked","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation for the marking of tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"    public String mark(String message) {","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d message;","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the item that is unmark in String format that","lastModifiedDate":"2022-09-13"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"     * will be printed to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation of the item unmarked","lastModifiedDate":"2022-08-30"},{"lineNumber":75,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation for the unmarking of tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":77,"author":{"gitId":"Kang-Quan"},"content":"    public String unmark(String message) {","lastModifiedDate":"2022-09-07"},{"lineNumber":78,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d message;","lastModifiedDate":"2022-08-28"},{"lineNumber":80,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":82,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":83,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":84,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the item that is deleted in String format that","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"Kang-Quan"},"content":"     * will be printed to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":87,"author":{"gitId":"Kang-Quan"},"content":"     * @param message String representation on the task deleted","lastModifiedDate":"2022-08-30"},{"lineNumber":88,"author":{"gitId":"Kang-Quan"},"content":"     * @param numOfTask number of tasks in the TaskList","lastModifiedDate":"2022-08-31"},{"lineNumber":89,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation for the deleting of tasks","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":91,"author":{"gitId":"Kang-Quan"},"content":"    public String delete(int numOfTask, String message) {","lastModifiedDate":"2022-09-07"},{"lineNumber":92,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":93,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d message;","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d String.format(\"Now you have %d tasks in the list.\\n\", numOfTask);","lastModifiedDate":"2022-09-07"},{"lineNumber":95,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":96,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":97,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-28"},{"lineNumber":98,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":99,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the item that is found using the keyword in String format that","lastModifiedDate":"2022-09-13"},{"lineNumber":100,"author":{"gitId":"Kang-Quan"},"content":"     * will be printed to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":101,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":102,"author":{"gitId":"Kang-Quan"},"content":"     * @param tasks tasks that is found using the keyword in String format","lastModifiedDate":"2022-09-13"},{"lineNumber":103,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation for the tasks found using the keyword","lastModifiedDate":"2022-09-13"},{"lineNumber":104,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":105,"author":{"gitId":"Kang-Quan"},"content":"    public String find(String tasks) {","lastModifiedDate":"2022-09-07"},{"lineNumber":106,"author":{"gitId":"Kang-Quan"},"content":"        if (tasks.equals(\"\")) {","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"Kang-Quan"},"content":"            return \"There are no matching task with the given keyword\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":110,"author":{"gitId":"Kang-Quan"},"content":"        output +\u003d tasks;","lastModifiedDate":"2022-08-31"},{"lineNumber":111,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-07"},{"lineNumber":112,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"Kang-Quan"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"Kang-Quan"},"content":"     * Represents the error message String format that","lastModifiedDate":"2022-09-13"},{"lineNumber":116,"author":{"gitId":"Kang-Quan"},"content":"     * will be printed to the user","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"Kang-Quan"},"content":"     *","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"Kang-Quan"},"content":"     * @param message error messages","lastModifiedDate":"2022-09-13"},{"lineNumber":119,"author":{"gitId":"Kang-Quan"},"content":"     * @return String representation for the error message to be printed to user","lastModifiedDate":"2022-09-13"},{"lineNumber":120,"author":{"gitId":"Kang-Quan"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"Kang-Quan"},"content":"    public String showLoadingError(String message) {","lastModifiedDate":"2022-09-07"},{"lineNumber":122,"author":{"gitId":"Kang-Quan"},"content":"        return \"OOPS!!! \" + message + \".\\n\";","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"Kang-Quan"},"content":"    public String help() {","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"Kang-Quan"},"content":"        String output \u003d \"Here are the commands\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"Kang-Quan"},"content":"        String tasks \u003d \"To add tasks:\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"Kang-Quan"},"content":"        String todo_message \u003d \"1.todo \u003cdescription\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"Kang-Quan"},"content":"        String deadline_message \u003d \"2.deadline \u003cdescription\u003e /by yyyy-mm-dd HH:MM\\n\";","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"Kang-Quan"},"content":"        String event_message \u003d \"3.event \u003cdescription\u003e /at yyyy-mm-dd HH:MM\\n\";","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"Kang-Quan"},"content":"        String actions \u003d \"List of actions:\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"Kang-Quan"},"content":"        String mark \u003d \"4.mark \u003cindex\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"Kang-Quan"},"content":"        String delete \u003d \"5.delete \u003cindex\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"Kang-Quan"},"content":"        String unmark \u003d \"6.unmark \u003cindex\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"Kang-Quan"},"content":"        String find \u003d \"7.find \u003ckeyword\u003e\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"Kang-Quan"},"content":"        String list \u003d \"8.list\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"Kang-Quan"},"content":"        output \u003d output + tasks + todo_message + deadline_message","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"Kang-Quan"},"content":"                + event_message + actions + mark + delete + unmark","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"Kang-Quan"},"content":"                + find + list;","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"Kang-Quan"},"content":"        return output;","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"Kang-Quan":142}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"301\" text\u003d\"Label\"","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"               style\u003d\"-fx-label-padding: 5 10; -fx-font-weight: bold;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"               -fx-border-color:black; -fx-border-width: 1; -fx-border-style: solid;","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"               -fx-border-radius: 16; -fx-background-color: #64d9d3; -fx-background-radius: 16;\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"                \u003cFont size\u003d\"14\"/\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"                    style\u003d\"-fx-background-color: #3797a6;\"\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #3797a6;\"/\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"Kang-Quan":20}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package task;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"public class TodoTest {","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    public void toStringTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"        assertEquals(\"[T][ ] testing\", new Todo(\"testing\").toString());","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Kang-Quan":14}},{"path":"src/test/java/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"package tasklist;","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-13"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-09-13"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-13"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-08-29"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"public class TaskListTest {","lastModifiedDate":"2022-08-29"},{"lineNumber":11,"author":{"gitId":"Kang-Quan"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"Kang-Quan"},"content":"    public void markTest(){","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"Kang-Quan"},"content":"            TaskList currTask \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d currTask.mark(0);","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"[T][X] Testing\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d e.getMessage();","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"[T][X] Testing\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"Kang-Quan"},"content":"    @Test","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"Kang-Quan"},"content":"    public void unmarkTest(){","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"Kang-Quan"},"content":"            TaskList currTask \u003d new TaskList();","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing\"));","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"Kang-Quan"},"content":"            currTask.mark(0);","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d currTask.unmark(0);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"[T][ ] Testing\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d e.getMessage();","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"[T][ ] Testing\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"Kang-Quan"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"Kang-Quan"},"content":"    public void listTaskTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"Kang-Quan"},"content":"            TaskList currTask \u003d new TaskList();","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing2\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing3\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d currTask.listTask();","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"1.[T][ ] Testing\\n2.[T][ ] Testing2\\n3.[T][ ] Testing3\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d e.getMessage();","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"1.[T][ ] Testing\\n2.[T][ ] Testing2\\n3.[T][ ] Testing3\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":52,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":53,"author":{"gitId":"Kang-Quan"},"content":"    @Test","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"Kang-Quan"},"content":"    public void DeleteTest(){","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"Kang-Quan"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"Kang-Quan"},"content":"            TaskList currTask \u003d new TaskList();","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing2\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"Kang-Quan"},"content":"            currTask.addTask(new Todo(\"Testing3\"));","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d currTask.deleteTask(0);","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"[T][ ] Testing\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"Kang-Quan"},"content":"            actual \u003d currTask.listTask();","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"1.[T][ ] Testing2\\n2.[T][ ] Testing3\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"Kang-Quan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"Kang-Quan"},"content":"            String actual \u003d e.getMessage();","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"Kang-Quan"},"content":"            assertEquals(\"1.[T][ ] Testing2\\n2.[T][ ] Testing3\\n\", actual);","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"Kang-Quan"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"Kang-Quan"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":70,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":71,"author":{"gitId":"Kang-Quan"},"content":"}","lastModifiedDate":"2022-08-29"},{"lineNumber":72,"author":{"gitId":"Kang-Quan"},"content":"","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"Kang-Quan":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kang-Quan"},"content":"todo borrow book","lastModifiedDate":"2022-08-18"},{"lineNumber":2,"author":{"gitId":"Kang-Quan"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":3,"author":{"gitId":"Kang-Quan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-18"},{"lineNumber":4,"author":{"gitId":"Kang-Quan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-18"},{"lineNumber":5,"author":{"gitId":"Kang-Quan"},"content":"mark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":6,"author":{"gitId":"Kang-Quan"},"content":"mark 2","lastModifiedDate":"2022-08-18"},{"lineNumber":7,"author":{"gitId":"Kang-Quan"},"content":"list","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"Kang-Quan"},"content":"unmark 1","lastModifiedDate":"2022-08-18"},{"lineNumber":9,"author":{"gitId":"Kang-Quan"},"content":"list","lastModifiedDate":"2022-08-18"}],"authorContributionMap":{"Kang-Quan":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Kang-Quan"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Kang-Quan"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kang-Quan":2,"-":19}}]
